{
	"info": {
		"_postman_id": "a0e42448-4429-4ef9-9f0c-abd022c7e435",
		"name": "VCPR.ORG Protocol Editor API",
		"description": "API serving the Veterinary Protocol Manager&trade; application. &copy; DairySight LLC, Argyle NY 2020\n\nContact Support:\n Name: Jim Ehrlich, DVM\n Email: jehrlich@vcpr.org",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "api",
			"item": [
				{
					"name": "users",
					"item": [
						{
							"name": "logins",
							"item": [
								{
									"name": "user login",
									"id": "f75ae2bd-e3ee-427c-9d3b-72a9b01231ee",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"apikey\": \"t0CGzpQ4cgu1OBy44sBt\",\n  \"identifier\": \"someUser\",\n  \"password\": \"somePassword\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/users/logins",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"users",
												"logins"
											]
										},
										"description": "Authenticate a User and the app requesting a token, returning a token for use in future secured requests."
									},
									"response": [
										{
											"id": "174979b6-3335-462b-aeca-b35db815961c",
											"name": "Successful login",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "X-Auth-Token",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"apikey\": \"t0CGzpQ4cgu1OBy44sBt\",\n  \"identifier\": \"someUser\",\n  \"password\": \"somePassword\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/api/users/logins",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"users",
														"logins"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n  \"user\": {\n    \"id\": 1,\n    \"uname\": \"exampleUser\",\n    \"userType\": \"VOR\",\n    \"firstname\": \"Example\",\n    \"lastname\": \"User\",\n    \"email\": \"exampleUser@email.com\",\n    \"suffix\": \"DVM\"\n  },\n  \"token\": \"eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJleUp3Y205MmFXUmxja2xFSWpvaVkzSmxaR1Z1ZEdsaGJITWlMQ0p3Y205MmFXUmxja3RsZVNJNkluUmxjM1JXVDFJaWZRPT0iLCJpc3MiOiJwbGF5LXNpbGhvdWV0dGUiLCJle***...\",\n  \"filePolicy\": \"3da8c83495cb00d216369a355322078106ebc2e5eac78333eb90d00de5611d9a\",\n  \"fileSignature\": \"eyJleHBpcnkiOjE1Nzg3NTY2MDIsIm1heFNpemUiOjEwMDAwMDAwfQ==\"\n}"
										},
										{
											"id": "cb2c80de-9e7b-409f-aead-8db7ba08faa7",
											"name": "The server can not understand the request due to invalid syntax.",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "X-Auth-Token",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"apikey\": \"t0CGzpQ4cgu1OBy44sBt\",\n  \"identifier\": \"someUser\",\n  \"password\": \"somePassword\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/api/users/logins",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"users",
														"logins"
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n  \"title\": \"incorrect username or password\",\n  \"status\": 404,\n  \"errorType\": \"/errors/incorrect-user-pass\",\n  \"detail\": \"Authentication failed due to incorrect username or password.\",\n  \"instance\": \"/login/log/abc123\"\n}"
										}
									]
								},
								{
									"name": "renew token",
									"id": "42c77bc4-8feb-47c3-8dcb-9a283088b439",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/users/logins",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"users",
												"logins"
											]
										},
										"description": "Renews the User's access token for use in future secured requests."
									},
									"response": [
										{
											"id": "1032c25a-0903-4108-889a-474634fdd89f",
											"name": "Success â€“ token refreshed",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "X-Auth-Token",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/users/logins",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"users",
														"logins"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n  \"user\": {\n    \"id\": 1,\n    \"uname\": \"exampleUser\",\n    \"userType\": \"VOR\",\n    \"firstname\": \"Example\",\n    \"lastname\": \"User\",\n    \"email\": \"exampleUser@email.com\",\n    \"suffix\": \"DVM\"\n  },\n  \"token\": \"eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJleUp3Y205MmFXUmxja2xFSWpvaVkzSmxaR1Z1ZEdsaGJITWlMQ0p3Y205MmFXUmxja3RsZVNJNkluUmxjM1JXVDFJaWZRPT0iLCJpc3MiOiJwbGF5LXNpbGhvdWV0dGUiLCJle***...\",\n  \"filePolicy\": \"3da8c83495cb00d216369a355322078106ebc2e5eac78333eb90d00de5611d9a\",\n  \"fileSignature\": \"eyJleHBpcnkiOjE1Nzg3NTY2MDIsIm1heFNpemUiOjEwMDAwMDAwfQ==\"\n}"
										},
										{
											"id": "7759396e-2f60-4b9b-867b-11bee3b2b4de",
											"name": "Authorization required",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "X-Auth-Token",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/users/logins",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"users",
														"logins"
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": ""
										}
									]
								}
							],
							"id": "96a57263-2c65-48fe-b941-851feb121f6c"
						},
						{
							"name": "{id}",
							"item": [
								{
									"name": "get user data",
									"id": "d08a18fc-26ff-4871-85f9-3d761fe4a75c",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/users/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"users",
												":id"
											],
											"variable": [
												{
													"id": "77a92e00-98e3-4bca-81c1-07324efc59d8",
													"key": "id",
													"value": "2",
													"description": "(Required) User ID key"
												}
											]
										},
										"description": "Returns User data as specified by User `id`. Any User may get their own data. A VOR may get User data of Users in a `CLIENT` relationship with that VOR. A SAOR may get data of any User."
									},
									"response": [
										{
											"id": "ded6425a-f2d9-45d6-ab80-e5af053da533",
											"name": "User",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "X-Auth-Token",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/users/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"users",
														":id"
													],
													"variable": [
														{
															"key": "id",
															"value": "2",
															"description": "(Required) User ID key"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n  \"user\": {\n    \"id\": 1,\n    \"uname\": \"exampleUser\",\n    \"userType\": \"VOR\",\n    \"firstname\": \"Example\",\n    \"lastname\": \"User\",\n    \"email\": \"exampleUser@email.com\",\n    \"suffix\": \"DVM\"\n  }\n}"
										},
										{
											"id": "73f9cd39-b026-41cf-b1e4-a13877b45a35",
											"name": "The server can not understand the request due to invalid syntax.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "X-Auth-Token",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/users/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"users",
														":id"
													],
													"variable": [
														{
															"key": "id",
															"value": "2",
															"description": "(Required) User ID key"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n  \"title\": \"incorrect username or password\",\n  \"status\": 404,\n  \"errorType\": \"/errors/incorrect-user-pass\",\n  \"detail\": \"Authentication failed due to incorrect username or password.\",\n  \"instance\": \"/login/log/abc123\"\n}"
										},
										{
											"id": "b4107b60-bb4f-4a26-9a55-2c1e69839a4d",
											"name": "Authorization required",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "X-Auth-Token",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/users/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"users",
														":id"
													],
													"variable": [
														{
															"key": "id",
															"value": "2",
															"description": "(Required) User ID key"
														}
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": ""
										}
									]
								},
								{
									"name": "delete user",
									"id": "9f9a345b-78f8-44b5-a6aa-a073ed8e1d3b",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "DELETE",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/users/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"users",
												":id"
											],
											"variable": [
												{
													"id": "f7f4e757-00c0-4cd1-90e3-ebac85a35c64",
													"key": "id",
													"value": "5",
													"description": "(Required) User ID key"
												}
											]
										},
										"description": "This endpoint supports the (reversible) \"delete\" of a User by setting user.status to `REMOVED`. Removed Users are not visible in normal queries."
									},
									"response": [
										{
											"id": "c396ff83-3523-44bb-a84c-4e9bc0570e1c",
											"name": "User deleted",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "X-Auth-Token",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/users/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"users",
														":id"
													],
													"variable": [
														{
															"key": "id",
															"value": "5",
															"description": "(Required) User ID key"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n  \"deleted\": -23461130\n}"
										},
										{
											"id": "f57e5a00-929c-4c68-8ea0-01ce478a3b12",
											"name": "Authorization required",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "X-Auth-Token",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/users/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"users",
														":id"
													],
													"variable": [
														{
															"key": "id",
															"value": "5",
															"description": "(Required) User ID key"
														}
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": ""
										},
										{
											"id": "84f19a7c-f7d5-48fc-a584-4a9b22d8077b",
											"name": "The user does not have access rights to the content.",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "X-Auth-Token",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/users/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"users",
														":id"
													],
													"variable": [
														{
															"key": "id",
															"value": "5",
															"description": "(Required) User ID key"
														}
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": ""
										}
									]
								}
							],
							"id": "51e15f0d-ebae-4b66-a70f-0594aa0ca2c8"
						},
						{
							"name": "sandbox Client",
							"item": [
								{
									"name": "create a sandbox user",
									"id": "6e5c4145-284c-430a-b6f7-660c23331e6b",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "\"sit aute\"",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/users/sandboxClient",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"users",
												"sandboxClient"
											]
										},
										"description": "Create a sandbox user of MOR `UserType` who is a `CLIENT` of logged-in VOR. This allows the VOR to prescribe to the sandbox client, then view prescriptions from the client's point of view using the Farm App."
									},
									"response": [
										{
											"id": "71e36398-c715-4406-9682-91a93d7e6f50",
											"name": "Sandbox user created",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "X-Auth-Token",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "\"sit aute\"",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/api/users/sandboxClient",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"users",
														"sandboxClient"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n  \"sandboxClient\": \"amet ut eiusmod pariatur ea\"\n}"
										},
										{
											"id": "96204e59-7484-4269-9790-af1954f992ed",
											"name": "The server can not understand the request due to invalid syntax.",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "X-Auth-Token",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "\"sit aute\"",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/api/users/sandboxClient",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"users",
														"sandboxClient"
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n  \"title\": \"incorrect username or password\",\n  \"status\": 404,\n  \"errorType\": \"/errors/incorrect-user-pass\",\n  \"detail\": \"Authentication failed due to incorrect username or password.\",\n  \"instance\": \"/login/log/abc123\"\n}"
										},
										{
											"id": "ad09df18-3117-45df-80c7-54c9ad545595",
											"name": "Authorization required",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "X-Auth-Token",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "\"sit aute\"",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/api/users/sandboxClient",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"users",
														"sandboxClient"
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": ""
										}
									]
								},
								{
									"name": "delete sandboxClient",
									"id": "ede87c20-e6c8-4769-9acb-d6f388d96152",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "DELETE",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/users/sandboxClient",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"users",
												"sandboxClient"
											]
										},
										"description": "Delete the User and CLIENT Relation records from the database,  irreversibly removing the sandbocx client, but not any existing Prescriptions."
									},
									"response": [
										{
											"id": "f1e40175-0600-41b4-8553-3fe4fa305dcd",
											"name": "Sandbox user deleted",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "X-Auth-Token",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/users/sandboxClient",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"users",
														"sandboxClient"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n  \"deleted\": -23461130\n}"
										},
										{
											"id": "a6c77627-a4ef-482a-bb12-1ca9f0463e59",
											"name": "The server can not understand the request due to invalid syntax.",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "X-Auth-Token",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/users/sandboxClient",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"users",
														"sandboxClient"
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n  \"title\": \"incorrect username or password\",\n  \"status\": 404,\n  \"errorType\": \"/errors/incorrect-user-pass\",\n  \"detail\": \"Authentication failed due to incorrect username or password.\",\n  \"instance\": \"/login/log/abc123\"\n}"
										},
										{
											"id": "ac41404a-7ee7-4305-bf49-0443f71deefb",
											"name": "Authorization required",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "X-Auth-Token",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/users/sandboxClient",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"users",
														"sandboxClient"
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": ""
										}
									]
								}
							],
							"id": "8220e1ce-de74-4781-8c2d-97378c7764a4"
						},
						{
							"name": "addresses",
							"item": [
								{
									"name": "update address",
									"id": "054ce536-7fee-4543-af95-a76a637c6112",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"user\": {\n    \"id\": 1,\n    \"uname\": \"exampleUser\",\n    \"userType\": \"VOR\",\n    \"firstname\": \"Example\",\n    \"lastname\": \"User\",\n    \"email\": \"exampleUser@email.com\",\n    \"suffix\": \"DVM\"\n  }\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/users/addresses",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"users",
												"addresses"
											]
										},
										"description": "A User may update their own address."
									},
									"response": [
										{
											"id": "c35c6707-6868-4b3b-be3b-9f244e603764",
											"name": "User updated",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "X-Auth-Token",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"user\": {\n    \"id\": 1,\n    \"uname\": \"exampleUser\",\n    \"userType\": \"VOR\",\n    \"firstname\": \"Example\",\n    \"lastname\": \"User\",\n    \"email\": \"exampleUser@email.com\",\n    \"suffix\": \"DVM\"\n  }\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/api/users/addresses",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"users",
														"addresses"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n  \"updated-records\": 58723522\n}"
										},
										{
											"id": "cef7e11b-bf45-44b5-9d51-48ff6ce70c36",
											"name": "Authorization required",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "X-Auth-Token",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"user\": {\n    \"id\": 1,\n    \"uname\": \"exampleUser\",\n    \"userType\": \"VOR\",\n    \"firstname\": \"Example\",\n    \"lastname\": \"User\",\n    \"email\": \"exampleUser@email.com\",\n    \"suffix\": \"DVM\"\n  }\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/api/users/addresses",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"users",
														"addresses"
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": ""
										}
									]
								},
								{
									"name": "address of user",
									"id": "090650d0-9211-48d8-a796-06005d98ec32",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/users/addresses/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"users",
												"addresses",
												":id"
											],
											"variable": [
												{
													"id": "8a351dc3-d8f0-411c-b927-9a72b4157556",
													"key": "id",
													"value": "2",
													"description": "(Required) User ID key"
												}
											]
										},
										"description": "Address of user specified by `id`."
									},
									"response": [
										{
											"id": "b3a4b9d1-caf0-4dc2-b763-de0c1fded991",
											"name": "User",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "X-Auth-Token",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/users/addresses/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"users",
														"addresses",
														":id"
													],
													"variable": [
														{
															"key": "id",
															"value": "2",
															"description": "(Required) User ID key"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n  \"user\": {\n    \"userId\": 9541886,\n    \"address1\": \"123 Main St.\",\n    \"address2\": \"123 Main St.\",\n    \"town\": \"Anytown\",\n    \"state\": \"Any State\",\n    \"zip\": \"12345-abcd\",\n    \"busName\": \"testVOR Clinic\",\n    \"country\": \"USA\"\n  }\n}"
										},
										{
											"id": "2d4ec313-c734-4a9e-b502-c8d8d945eff1",
											"name": "Authorization required",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "X-Auth-Token",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/users/addresses/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"users",
														"addresses",
														":id"
													],
													"variable": [
														{
															"key": "id",
															"value": "2",
															"description": "(Required) User ID key"
														}
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": ""
										}
									]
								}
							],
							"id": "5ecb7ce6-66d6-43d0-a118-9fee2679caaf"
						},
						{
							"name": "profiles",
							"item": [
								{
									"name": "update profile",
									"id": "7a2971c6-4059-4368-84ae-e812a7d7a6cb",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"user\": {\n    \"address1\": \"123 Main St.\",\n    \"address2\": \"123 Main St.\",\n    \"emailNews\": false,\n    \"emailTips\": false,\n    \"firstname\": \"Example\",\n    \"id\": 1,\n    \"lastname\": \"User\",\n    \"rxHeader\": \"nostrud culpa laborum\",\n    \"sandboxName\": \"proident esse\",\n    \"state\": \"Any State\",\n    \"town\": \"Anytown\",\n    \"uname\": \"exampleUser\",\n    \"userId\": 97162874,\n    \"userType\": \"VOR\",\n    \"zip\": \"12345-abcd\",\n    \"email\": \"exampleUser@email.com\",\n    \"suffix\": \"DVM\",\n    \"busName\": \"testVOR Clinic\",\n    \"country\": \"USA\"\n  }\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/users/profiles",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"users",
												"profiles"
											]
										},
										"description": "A User may update their own profile."
									},
									"response": [
										{
											"id": "e098d81b-f965-4f3d-8683-9bb3d7727823",
											"name": "User updated",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "X-Auth-Token",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"user\": {\n    \"address1\": \"123 Main St.\",\n    \"address2\": \"123 Main St.\",\n    \"emailNews\": false,\n    \"emailTips\": false,\n    \"firstname\": \"Example\",\n    \"id\": 1,\n    \"lastname\": \"User\",\n    \"rxHeader\": \"nostrud culpa laborum\",\n    \"sandboxName\": \"proident esse\",\n    \"state\": \"Any State\",\n    \"town\": \"Anytown\",\n    \"uname\": \"exampleUser\",\n    \"userId\": 97162874,\n    \"userType\": \"VOR\",\n    \"zip\": \"12345-abcd\",\n    \"email\": \"exampleUser@email.com\",\n    \"suffix\": \"DVM\",\n    \"busName\": \"testVOR Clinic\",\n    \"country\": \"USA\"\n  }\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/api/users/profiles",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"users",
														"profiles"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n  \"updated-records\": 58723522\n}"
										},
										{
											"id": "5f34154a-2e6e-4dcd-b969-f28c42af9586",
											"name": "Authorization required",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "X-Auth-Token",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"user\": {\n    \"address1\": \"123 Main St.\",\n    \"address2\": \"123 Main St.\",\n    \"emailNews\": false,\n    \"emailTips\": false,\n    \"firstname\": \"Example\",\n    \"id\": 1,\n    \"lastname\": \"User\",\n    \"rxHeader\": \"nostrud culpa laborum\",\n    \"sandboxName\": \"proident esse\",\n    \"state\": \"Any State\",\n    \"town\": \"Anytown\",\n    \"uname\": \"exampleUser\",\n    \"userId\": 97162874,\n    \"userType\": \"VOR\",\n    \"zip\": \"12345-abcd\",\n    \"email\": \"exampleUser@email.com\",\n    \"suffix\": \"DVM\",\n    \"busName\": \"testVOR Clinic\",\n    \"country\": \"USA\"\n  }\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/api/users/profiles",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"users",
														"profiles"
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": ""
										}
									]
								},
								{
									"name": "create profile",
									"id": "0045b586-1964-4968-997f-e291984790e7",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"user\": {\n    \"address1\": \"123 Main St.\",\n    \"address2\": \"123 Main St.\",\n    \"emailNews\": false,\n    \"emailTips\": false,\n    \"firstname\": \"Example\",\n    \"id\": 1,\n    \"lastname\": \"User\",\n    \"rxHeader\": \"nostrud culpa laborum\",\n    \"sandboxName\": \"proident esse\",\n    \"state\": \"Any State\",\n    \"town\": \"Anytown\",\n    \"uname\": \"exampleUser\",\n    \"userId\": 97162874,\n    \"userType\": \"VOR\",\n    \"zip\": \"12345-abcd\",\n    \"email\": \"exampleUser@email.com\",\n    \"suffix\": \"DVM\",\n    \"busName\": \"testVOR Clinic\",\n    \"country\": \"USA\"\n  }\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/users/profiles",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"users",
												"profiles"
											]
										},
										"description": "Create a User with Address, and UserPrefs."
									},
									"response": [
										{
											"id": "166e96b5-b80a-418d-bd49-1d229933e8ba",
											"name": "the created Profile",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "X-Auth-Token",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"user\": {\n    \"address1\": \"123 Main St.\",\n    \"address2\": \"123 Main St.\",\n    \"emailNews\": false,\n    \"emailTips\": false,\n    \"firstname\": \"Example\",\n    \"id\": 1,\n    \"lastname\": \"User\",\n    \"rxHeader\": \"nostrud culpa laborum\",\n    \"sandboxName\": \"proident esse\",\n    \"state\": \"Any State\",\n    \"town\": \"Anytown\",\n    \"uname\": \"exampleUser\",\n    \"userId\": 97162874,\n    \"userType\": \"VOR\",\n    \"zip\": \"12345-abcd\",\n    \"email\": \"exampleUser@email.com\",\n    \"suffix\": \"DVM\",\n    \"busName\": \"testVOR Clinic\",\n    \"country\": \"USA\"\n  }\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/api/users/profiles",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"users",
														"profiles"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n  \"address1\": \"123 Main St.\",\n  \"address2\": \"123 Main St.\",\n  \"emailNews\": false,\n  \"emailTips\": false,\n  \"firstname\": \"Example\",\n  \"id\": 1,\n  \"lastname\": \"User\",\n  \"rxHeader\": \"sunt eu Excepteur Ut\",\n  \"sandboxName\": \"in mollit tempor veniam cillum\",\n  \"state\": \"Any State\",\n  \"town\": \"Anytown\",\n  \"uname\": \"exampleUser\",\n  \"userId\": 97303085,\n  \"userType\": \"VOR\",\n  \"zip\": \"12345-abcd\",\n  \"email\": \"exampleUser@email.com\",\n  \"suffix\": \"DVM\",\n  \"busName\": \"testVOR Clinic\",\n  \"country\": \"USA\"\n}"
										},
										{
											"id": "0a5160b3-1738-4cb3-bcc1-9ff93dd475e0",
											"name": "Authorization required",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "X-Auth-Token",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"user\": {\n    \"address1\": \"123 Main St.\",\n    \"address2\": \"123 Main St.\",\n    \"emailNews\": false,\n    \"emailTips\": false,\n    \"firstname\": \"Example\",\n    \"id\": 1,\n    \"lastname\": \"User\",\n    \"rxHeader\": \"nostrud culpa laborum\",\n    \"sandboxName\": \"proident esse\",\n    \"state\": \"Any State\",\n    \"town\": \"Anytown\",\n    \"uname\": \"exampleUser\",\n    \"userId\": 97162874,\n    \"userType\": \"VOR\",\n    \"zip\": \"12345-abcd\",\n    \"email\": \"exampleUser@email.com\",\n    \"suffix\": \"DVM\",\n    \"busName\": \"testVOR Clinic\",\n    \"country\": \"USA\"\n  }\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/api/users/profiles",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"users",
														"profiles"
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": ""
										}
									]
								},
								{
									"name": "Profile of user",
									"id": "f03fdef7-b8c9-4275-8d7c-00dc34553de2",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/users/profiles/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"users",
												"profiles",
												":id"
											],
											"variable": [
												{
													"id": "0dc41539-929f-4056-b10f-d7f9b8dfb195",
													"key": "id",
													"value": "2",
													"description": "(Required) User ID key"
												}
											]
										},
										"description": "Profile of user specified by `id`."
									},
									"response": [
										{
											"id": "ae43188a-ed16-458a-884c-95053cab2122",
											"name": "User",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "X-Auth-Token",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/users/profiles/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"users",
														"profiles",
														":id"
													],
													"variable": [
														{
															"key": "id",
															"value": "2",
															"description": "(Required) User ID key"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n  \"user\": {\n    \"userId\": 9541886,\n    \"address1\": \"123 Main St.\",\n    \"address2\": \"123 Main St.\",\n    \"town\": \"Anytown\",\n    \"state\": \"Any State\",\n    \"zip\": \"12345-abcd\",\n    \"busName\": \"testVOR Clinic\",\n    \"country\": \"USA\"\n  }\n}"
										},
										{
											"id": "9d91ebfe-b838-45cc-81ed-882083e1bf05",
											"name": "Authorization required",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "X-Auth-Token",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/users/profiles/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"users",
														"profiles",
														":id"
													],
													"variable": [
														{
															"key": "id",
															"value": "2",
															"description": "(Required) User ID key"
														}
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": ""
										}
									]
								}
							],
							"id": "fac82561-2667-4e66-9b89-75c8045f19f6"
						},
						{
							"name": "my-right-relations",
							"item": [
								{
									"name": "get my right-related users",
									"id": "6c91f27e-3ab2-4c4f-aa23-70fd2c717f52",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/users/my-right-relations?relationship=CLIENT&withAddress=false",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"users",
												"my-right-relations"
											],
											"query": [
												{
													"key": "relationship",
													"value": "CLIENT"
												},
												{
													"key": "withAddress",
													"value": "false",
													"description": "whether to return user's addresses too"
												}
											]
										},
										"description": "get my right-related users"
									},
									"response": [
										{
											"id": "52c0972d-534b-40a4-96a3-da709615a453",
											"name": "OK",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "X-Auth-Token",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/users/my-right-relations?relationship=CLIENT&withAddress=false",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"users",
														"my-right-relations"
													],
													"query": [
														{
															"key": "relationship",
															"value": "CLIENT"
														},
														{
															"key": "withAddress",
															"value": "false"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n  \"prescriptions\": [\n    {\n      \"id\": 1,\n      \"uname\": \"exampleUser\",\n      \"userType\": \"VOR\",\n      \"firstname\": \"Example\",\n      \"lastname\": \"User\",\n      \"email\": \"exampleUser@email.com\",\n      \"suffix\": \"DVM\"\n    },\n    {\n      \"id\": 1,\n      \"uname\": \"exampleUser\",\n      \"userType\": \"VOR\",\n      \"firstname\": \"Example\",\n      \"lastname\": \"User\",\n      \"email\": \"exampleUser@email.com\",\n      \"suffix\": \"DVM\"\n    }\n  ]\n}"
										},
										{
											"id": "f96a45e6-a930-47c1-82d2-5a0a78633848",
											"name": "The server can not understand the request due to invalid syntax.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "X-Auth-Token",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/users/my-right-relations?relationship=CLIENT&withAddress=false",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"users",
														"my-right-relations"
													],
													"query": [
														{
															"key": "relationship",
															"value": "CLIENT"
														},
														{
															"key": "withAddress",
															"value": "false"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n  \"title\": \"incorrect username or password\",\n  \"status\": 404,\n  \"errorType\": \"/errors/incorrect-user-pass\",\n  \"detail\": \"Authentication failed due to incorrect username or password.\",\n  \"instance\": \"/login/log/abc123\"\n}"
										},
										{
											"id": "f52c6095-d4e1-496e-9f35-0577cd19be39",
											"name": "Authorization required",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "X-Auth-Token",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/users/my-right-relations?relationship=CLIENT&withAddress=false",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"users",
														"my-right-relations"
													],
													"query": [
														{
															"key": "relationship",
															"value": "CLIENT"
														},
														{
															"key": "withAddress",
															"value": "false"
														}
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": ""
										}
									]
								},
								{
									"name": "add a User with relationship",
									"id": "ece8d5b3-910d-41b3-8b2f-3b9ecdd67cb6",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"id\": 1,\n  \"uname\": \"exampleUser\",\n  \"userType\": \"VOR\",\n  \"firstname\": \"Example\",\n  \"lastname\": \"User\",\n  \"email\": \"exampleUser@email.com\",\n  \"suffix\": \"DVM\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/users/my-right-relations?relationship=CLIENT&usertype=VOR",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"users",
												"my-right-relations"
											],
											"query": [
												{
													"key": "relationship",
													"value": "CLIENT",
													"description": "(Required) "
												},
												{
													"key": "usertype",
													"value": "VOR",
													"description": "(Required) "
												}
											]
										},
										"description": "This endpoint adds a User and a relationship of the type specified by `name` to the current User, who must be a VOR. Defaults to CLIENT relationship."
									},
									"response": [
										{
											"id": "5e5b3b02-97a9-40ac-a26c-f20ef1619655",
											"name": "related User",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "X-Auth-Token",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"id\": 1,\n  \"uname\": \"exampleUser\",\n  \"userType\": \"VOR\",\n  \"firstname\": \"Example\",\n  \"lastname\": \"User\",\n  \"email\": \"exampleUser@email.com\",\n  \"suffix\": \"DVM\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/api/users/my-right-relations?relationship=CLIENT&usertype=VOR",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"users",
														"my-right-relations"
													],
													"query": [
														{
															"key": "relationship",
															"value": "CLIENT"
														},
														{
															"key": "usertype",
															"value": "VOR"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n  \"user\": {\n    \"id\": 1,\n    \"uname\": \"exampleUser\",\n    \"userType\": \"VOR\",\n    \"firstname\": \"Example\",\n    \"lastname\": \"User\",\n    \"email\": \"exampleUser@email.com\",\n    \"suffix\": \"DVM\"\n  }\n}"
										},
										{
											"id": "df759d34-99d4-4f21-84fc-c010c6946548",
											"name": "The server can not understand the request due to invalid syntax.",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "X-Auth-Token",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"id\": 1,\n  \"uname\": \"exampleUser\",\n  \"userType\": \"VOR\",\n  \"firstname\": \"Example\",\n  \"lastname\": \"User\",\n  \"email\": \"exampleUser@email.com\",\n  \"suffix\": \"DVM\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/api/users/my-right-relations?relationship=CLIENT&usertype=VOR",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"users",
														"my-right-relations"
													],
													"query": [
														{
															"key": "relationship",
															"value": "CLIENT"
														},
														{
															"key": "usertype",
															"value": "VOR"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n  \"title\": \"incorrect username or password\",\n  \"status\": 404,\n  \"errorType\": \"/errors/incorrect-user-pass\",\n  \"detail\": \"Authentication failed due to incorrect username or password.\",\n  \"instance\": \"/login/log/abc123\"\n}"
										},
										{
											"id": "bb41b264-2b64-488f-ba3d-70de8843f06c",
											"name": "Authorization required",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "X-Auth-Token",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"id\": 1,\n  \"uname\": \"exampleUser\",\n  \"userType\": \"VOR\",\n  \"firstname\": \"Example\",\n  \"lastname\": \"User\",\n  \"email\": \"exampleUser@email.com\",\n  \"suffix\": \"DVM\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/api/users/my-right-relations?relationship=CLIENT&usertype=VOR",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"users",
														"my-right-relations"
													],
													"query": [
														{
															"key": "relationship",
															"value": "CLIENT"
														},
														{
															"key": "usertype",
															"value": "VOR"
														}
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": ""
										}
									]
								}
							],
							"id": "536be64e-f649-4d45-8c6b-381dcd1213f9"
						},
						{
							"name": "tasks",
							"item": [
								{
									"name": "execute task",
									"id": "02fecbb0-62bf-432d-9e4d-bbf6e3ffe07c",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"_type\": \"incididunt dolor\",\n  \"animalId\": \"this\",\n  \"caseId\": 123,\n  \"detail\": \"Ut ea\",\n  \"doAt\": \"2020-01-10T10:30:37Z\",\n  \"id\": 123,\n  \"morId\": 123,\n  \"status\": \"REQUIRED\",\n  \"vorId\": 123,\n  \"executor\": 123\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/users/tasks",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"users",
												"tasks"
											]
										},
										"description": "Mark task status as completed"
									},
									"response": [
										{
											"id": "7389498c-55fa-4167-b374-928ca4b8f266",
											"name": "Success, Protocol recorded",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "X-Auth-Token",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"_type\": \"incididunt dolor\",\n  \"animalId\": \"this\",\n  \"caseId\": 123,\n  \"detail\": \"Ut ea\",\n  \"doAt\": \"2020-01-10T10:30:37Z\",\n  \"id\": 123,\n  \"morId\": 123,\n  \"status\": \"REQUIRED\",\n  \"vorId\": 123,\n  \"executor\": 123\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/api/users/tasks",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"users",
														"tasks"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n  \"case\": {\n    \"id\": 123,\n    \"rxId\": \"gG3pBCR1GCMKm89c\",\n    \"caseData\": {\n      \"id\": 0,\n      \"rxId\": \"gG3pBCR1GCMKm89c\",\n      \"caseData\": {\n        \"_type\": \"models.IdData\",\n        \"animalId\": \"Bossie\",\n        \"initiationTime\": \"2020-01-10T10:30:37Z\"\n      }\n    },\n    \"promiseData\": [\n      {\n        \"_type\": \"models.IdPromise\",\n        \"name\": \"ID promise\",\n        \"descrip\": \"You must give ID for each case enrolled\",\n        \"query\": \"What is the animal's name or number?\",\n        \"when\": \"PT24H\",\n        \"id\": 2345\n      },\n      {\n        \"_type\": \"models.IdPromise\",\n        \"name\": \"ID promise\",\n        \"descrip\": \"You must give ID for each case enrolled\",\n        \"query\": \"What is the animal's name or number?\",\n        \"when\": \"PT24H\",\n        \"id\": 2345\n      }\n    ]\n  }\n}"
										},
										{
											"id": "36a6f5ad-cba4-4f37-8e19-e390e04c17e8",
											"name": "The server can not understand the request due to invalid syntax.",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "X-Auth-Token",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"_type\": \"incididunt dolor\",\n  \"animalId\": \"this\",\n  \"caseId\": 123,\n  \"detail\": \"Ut ea\",\n  \"doAt\": \"2020-01-10T10:30:37Z\",\n  \"id\": 123,\n  \"morId\": 123,\n  \"status\": \"REQUIRED\",\n  \"vorId\": 123,\n  \"executor\": 123\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/api/users/tasks",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"users",
														"tasks"
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n  \"title\": \"incorrect username or password\",\n  \"status\": 404,\n  \"errorType\": \"/errors/incorrect-user-pass\",\n  \"detail\": \"Authentication failed due to incorrect username or password.\",\n  \"instance\": \"/login/log/abc123\"\n}"
										}
									]
								},
								{
									"name": "list of cases by Rx",
									"id": "23befe06-396b-4da7-b26c-d257a9412135",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/users/tasks",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"users",
												"tasks"
											]
										},
										"description": "Get all current cases for this Rx"
									},
									"response": [
										{
											"id": "714d9e48-3e16-4edb-ba2a-9af3def2a22d",
											"name": "Success â€“ token refreshed",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "X-Auth-Token",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/users/tasks",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"users",
														"tasks"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n  \"cases\": [\n    {\n      \"id\": 123,\n      \"rxId\": \"gG3pBCR1GCMKm89c\",\n      \"caseData\": {\n        \"id\": 0,\n        \"rxId\": \"gG3pBCR1GCMKm89c\",\n        \"caseData\": {\n          \"_type\": \"models.IdData\",\n          \"animalId\": \"Bossie\",\n          \"initiationTime\": \"2020-01-10T10:30:37Z\"\n        }\n      },\n      \"promiseData\": [\n        {\n          \"_type\": \"models.IdPromise\",\n          \"name\": \"ID promise\",\n          \"descrip\": \"You must give ID for each case enrolled\",\n          \"query\": \"What is the animal's name or number?\",\n          \"when\": \"PT24H\",\n          \"id\": 2345\n        },\n        {\n          \"_type\": \"models.IdPromise\",\n          \"name\": \"ID promise\",\n          \"descrip\": \"You must give ID for each case enrolled\",\n          \"query\": \"What is the animal's name or number?\",\n          \"when\": \"PT24H\",\n          \"id\": 2345\n        }\n      ]\n    },\n    {\n      \"id\": 123,\n      \"rxId\": \"gG3pBCR1GCMKm89c\",\n      \"caseData\": {\n        \"id\": 0,\n        \"rxId\": \"gG3pBCR1GCMKm89c\",\n        \"caseData\": {\n          \"_type\": \"models.IdData\",\n          \"animalId\": \"Bossie\",\n          \"initiationTime\": \"2020-01-10T10:30:37Z\"\n        }\n      },\n      \"promiseData\": [\n        {\n          \"_type\": \"models.IdPromise\",\n          \"name\": \"ID promise\",\n          \"descrip\": \"You must give ID for each case enrolled\",\n          \"query\": \"What is the animal's name or number?\",\n          \"when\": \"PT24H\",\n          \"id\": 2345\n        },\n        {\n          \"_type\": \"models.IdPromise\",\n          \"name\": \"ID promise\",\n          \"descrip\": \"You must give ID for each case enrolled\",\n          \"query\": \"What is the animal's name or number?\",\n          \"when\": \"PT24H\",\n          \"id\": 2345\n        }\n      ]\n    }\n  ]\n}"
										},
										{
											"id": "d152aae4-5883-4fff-bb85-6c97a4421487",
											"name": "Authorization required",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "X-Auth-Token",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/users/tasks",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"users",
														"tasks"
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": ""
										}
									]
								}
							],
							"id": "a9eb85ee-d1d5-4ebe-a3aa-d1f0c3848790"
						},
						{
							"name": "list of Users IDs",
							"id": "c2c9429e-6e6f-4601-9591-dbfc9f78710a",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/users",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"users"
									],
									"variable": [
										{
											"id": "c5a05590-a54f-44ac-91ec-e165141f04b7",
											"key": "usertypes",
											"value": "VOR",
											"description": "(Required) User types to include"
										}
									]
								},
								"description": "Returns the ID and names of all active Users of the type(s) specified."
							},
							"response": [
								{
									"id": "118fcf9d-291d-42b6-bd17-22f90b13130e",
									"name": "OK",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "X-Auth-Token",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/users",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"users"
											],
											"variable": [
												{
													"key": "usertypes",
													"value": "VOR",
													"description": "(Required) User types to include"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"vors\": [\n    {\n      \"users\": -25411303\n    },\n    {\n      \"users\": 15923167\n    }\n  ]\n}"
								},
								{
									"id": "dd71e9e7-a460-4a0b-9b3d-600a7b6bd1c2",
									"name": "Authorization required",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "X-Auth-Token",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/users",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"users"
											],
											"variable": [
												{
													"key": "usertypes",
													"value": "VOR",
													"description": "(Required) User types to include"
												}
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": ""
								},
								{
									"id": "85581da6-50a0-49e7-ace0-91c2146ff6f8",
									"name": "The user does not have access rights to the content.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "X-Auth-Token",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/users",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"users"
											],
											"variable": [
												{
													"key": "usertypes",
													"value": "VOR",
													"description": "(Required) User types to include"
												}
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": ""
								}
							]
						},
						{
							"name": "update user data",
							"id": "2577e9d5-528f-45e6-8837-790c6bd9978e",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"user\": {\n    \"id\": 1,\n    \"uname\": \"exampleUser\",\n    \"userType\": \"VOR\",\n    \"firstname\": \"Example\",\n    \"lastname\": \"User\",\n    \"email\": \"exampleUser@email.com\",\n    \"suffix\": \"DVM\"\n  }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/users",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"users"
									]
								},
								"description": "Users may update their own data. A VOR may also update User data of a User in a `CLIENT` relationship with that VOR. A SAOR may update data of any User."
							},
							"response": [
								{
									"id": "8350cf38-1dc6-4926-803c-58bd6de5f25c",
									"name": "User updated",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "X-Auth-Token",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"user\": {\n    \"id\": 1,\n    \"uname\": \"exampleUser\",\n    \"userType\": \"VOR\",\n    \"firstname\": \"Example\",\n    \"lastname\": \"User\",\n    \"email\": \"exampleUser@email.com\",\n    \"suffix\": \"DVM\"\n  }\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/users",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"users"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"updated-records\": 58723522\n}"
								},
								{
									"id": "0e44cd57-3246-445e-bb96-6fa6c1b8a464",
									"name": "The server can not understand the request due to invalid syntax.",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "X-Auth-Token",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"user\": {\n    \"id\": 1,\n    \"uname\": \"exampleUser\",\n    \"userType\": \"VOR\",\n    \"firstname\": \"Example\",\n    \"lastname\": \"User\",\n    \"email\": \"exampleUser@email.com\",\n    \"suffix\": \"DVM\"\n  }\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/users",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"users"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"title\": \"incorrect username or password\",\n  \"status\": 404,\n  \"errorType\": \"/errors/incorrect-user-pass\",\n  \"detail\": \"Authentication failed due to incorrect username or password.\",\n  \"instance\": \"/login/log/abc123\"\n}"
								}
							]
						},
						{
							"name": "list of VORs",
							"id": "b60362d2-47de-4170-9796-5ea6bcddfd29",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/users/vors",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"users",
										"vors"
									]
								},
								"description": "list of VOR users."
							},
							"response": [
								{
									"id": "b0fed347-49f2-4d3e-b539-20a8479bf3ea",
									"name": "OK",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "X-Auth-Token",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/users/vors",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"users",
												"vors"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"vors\": [\n    {\n      \"id\": 20325443,\n      \"name\": \"eiusmod\"\n    },\n    {\n      \"id\": 20185895,\n      \"name\": \"pariatur nisi\"\n    }\n  ]\n}"
								},
								{
									"id": "6a5a91d1-70c0-4d2f-8e8b-880c226f306c",
									"name": "Authorization required",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "X-Auth-Token",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/users/vors",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"users",
												"vors"
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": ""
								},
								{
									"id": "aa9639be-8fec-48c6-8ae5-187b364badf1",
									"name": "The user does not have access rights to the content.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "X-Auth-Token",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/users/vors",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"users",
												"vors"
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": ""
								}
							]
						},
						{
							"name": "confirm Token",
							"id": "9a9d96b1-1dea-4040-bcec-fb8848c48bfe",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/users/token/:token",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"users",
										"token",
										":token"
									],
									"variable": [
										{
											"key": "token"
										}
									]
								},
								"description": "used for clickable link to confirm a token sent in email."
							},
							"response": [
								{
									"id": "b3cd36ee-fc29-4d3b-87f1-4c5f5c9367b8",
									"name": "Authorization required",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "X-Auth-Token",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/users/token/:token",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"users",
												"token",
												":token"
											],
											"variable": [
												{
													"key": "token"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": ""
								}
							]
						},
						{
							"name": "withholds",
							"id": "9e7b4c77-7858-40d6-92d1-8a40c112b0d8",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/users/withholds",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"users",
										"withholds"
									]
								},
								"description": "get withholds that include present or future time."
							},
							"response": [
								{
									"id": "7bc6917d-0585-4736-9df0-20d87893c9e2",
									"name": "OK",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "X-Auth-Token",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/users/withholds",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"users",
												"withholds"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"labels\": [\n    {\n      \"id\": -33066309,\n      \"caseId\": -66285130,\n      \"animalId\": \"Bossie\",\n      \"initiated\": \"1956-10-16T10:30:23.754Z\",\n      \"wtMeatUntil\": \"1943-04-23T15:31:46.963Z\",\n      \"wtMilkUntil\": \"2020-03-03T21:24:55.241Z\",\n      \"note\": \"labori\"\n    },\n    {\n      \"id\": 72671015,\n      \"caseId\": 34206812,\n      \"animalId\": \"Bossie\",\n      \"initiated\": \"2009-09-06T12:06:07.303Z\",\n      \"wtMeatUntil\": \"1975-02-07T17:25:31.927Z\",\n      \"wtMilkUntil\": \"1992-08-22T04:58:35.424Z\",\n      \"note\": \"amet anim\"\n    }\n  ]\n}"
								}
							]
						},
						{
							"name": "record a User comment",
							"id": "c8a52873-a370-4aea-8fc9-c87159d77736",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"comment\": \"some comment\",\n  \"userId\": 1,\n  \"public\": false\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/users/comments",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"users",
										"comments"
									]
								},
								"description": "Records a User comment to the database and emails admin. It supports privacy controls."
							},
							"response": [
								{
									"id": "f0c219e1-e6ab-4750-986f-421d631cee3e",
									"name": "Success â€“ comment recorded",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "X-Auth-Token",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"comment\": \"some comment\",\n  \"userId\": 1,\n  \"public\": false\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/users/comments",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"users",
												"comments"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"recorded\": -91720669\n}"
								},
								{
									"id": "e446fc2e-cc10-4bdb-a7bb-f85650aa5194",
									"name": "The server can not understand the request due to invalid syntax.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "X-Auth-Token",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"comment\": \"some comment\",\n  \"userId\": 1,\n  \"public\": false\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/users/comments",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"users",
												"comments"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"title\": \"incorrect username or password\",\n  \"status\": 404,\n  \"errorType\": \"/errors/incorrect-user-pass\",\n  \"detail\": \"Authentication failed due to incorrect username or password.\",\n  \"instance\": \"/login/log/abc123\"\n}"
								}
							]
						},
						{
							"name": "add a relationship",
							"id": "16d7663f-3521-415e-94c5-af97d6eb986c",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "\"CLIENT\"",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/users/relations",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"users",
										"relations"
									]
								},
								"description": "adds a relationship of the type specified by `name` to the current User, who must be a VOR. Defaults to CLIENT relationship."
							},
							"response": [
								{
									"id": "6bcd868c-a2f6-4901-9dba-a870fa5472e2",
									"name": "related User",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "X-Auth-Token",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "\"CLIENT\"",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/users/relations",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"users",
												"relations"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "\"ut ad\""
								},
								{
									"id": "b9d4e857-eb92-487a-9fa9-05019c2dc2dd",
									"name": "The server can not understand the request due to invalid syntax.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "X-Auth-Token",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "\"CLIENT\"",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/users/relations",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"users",
												"relations"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"title\": \"incorrect username or password\",\n  \"status\": 404,\n  \"errorType\": \"/errors/incorrect-user-pass\",\n  \"detail\": \"Authentication failed due to incorrect username or password.\",\n  \"instance\": \"/login/log/abc123\"\n}"
								},
								{
									"id": "3210fb7b-37be-4fa9-a9e0-b2428b99bb98",
									"name": "Authorization required",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "X-Auth-Token",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "\"CLIENT\"",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/users/relations",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"users",
												"relations"
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": ""
								}
							]
						}
					],
					"id": "8052d8ed-bb6c-4e2b-9ce1-40f350d8c6fe"
				},
				{
					"name": "protocols",
					"item": [
						{
							"name": "prescriptions",
							"item": [
								{
									"name": "list of all diagnoses",
									"id": "a44d3565-4223-467c-8b17-d508eb241acd",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/protocols/prescriptions",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"protocols",
												"prescriptions"
											]
										},
										"description": "This"
									},
									"response": [
										{
											"id": "b7faffeb-9e97-421a-9bbf-4cfaf478a71a",
											"name": "OK",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "X-Auth-Token",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/protocols/prescriptions",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"protocols",
														"prescriptions"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n  \"diagnoses\": [\n    {\n      \"vorId\": 1,\n      \"morId\": 2,\n      \"protocol\": {\n        \"ownerId\": 1,\n        \"name\": \"wip\",\n        \"status\": \"PRESCRIBED\",\n        \"instructions\": {\n          \"considerations\": \"<p>This is just an example, not a real protocol.</p>\",\n          \"restrictions\": \"<p>Not for use on real animals.</p>\",\n          \"dothis\": \"<h3>Examinations to perform</h3>\",\n          \"recordthis\": \"<p>record every step in your notebook.</p>\",\n          \"success\": \"<p>All problems are gone</p>\",\n          \"failure\": \"<p>One or more problems remain</p>\",\n          \"references\": \"<a href=\\\"https://en.wikipedia.org/wiki/Rickrolling\\\">Wikipedia</a>\"\n        },\n        \"id\": 12345,\n        \"shortname\": \"wip\",\n        \"created\": \"2020-01-10T10:30:37Z\",\n        \"edited\": \"2020-02-10T10:30:37Z\",\n        \"vetNote\": \"consider prescribing protocol x instead\",\n        \"wtMeatHrs\": 22,\n        \"wtMilkHrs\": 5,\n        \"shareAll\": true,\n        \"shareClonable\": true,\n        \"caseDefinition\": {\n          \"requireId\": false,\n          \"requireMor\": false,\n          \"contraindications\": \"<p>prohibited in animals older than than 24 months</p>\",\n          \"medical\": \"if fever is present, consider Protocol 12345 instead.\",\n          \"economic\": \"culling should be considered as an alternative, as milk production is unlikely to return to normal after treatment\",\n          \"note\": \"<p>overcrowding may be contributing to issues</p>\"\n        },\n        \"treatments\": [\n          {\n            \"product\": \"MiracleMed\",\n            \"route\": \"wip\",\n            \"dosage\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"sequenceFunction\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"sizeFunction\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"id\": \"B-123\",\n            \"ownerId\": 0,\n            \"description\": \"3.0 ml per kg repeat\",\n            \"eligibilities\": [\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              }\n            ],\n            \"_dose\": \"3.0 ml per kg repeat in 6 hours and again in 24 hours\",\n            \"wtMeatHrs\": -11331960,\n            \"wtMilkHrs\": -84600473,\n            \"nada\": \"wip\",\n            \"tags\": [\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              }\n            ],\n            \"note\": \"<p>a free-form note</p>\",\n            \"amduca\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          },\n          {\n            \"product\": \"MiracleMed\",\n            \"route\": \"wip\",\n            \"dosage\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"sequenceFunction\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"sizeFunction\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"id\": \"B-123\",\n            \"ownerId\": 0,\n            \"description\": \"3.0 ml per kg repeat\",\n            \"eligibilities\": [\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              }\n            ],\n            \"_dose\": \"3.0 ml per kg repeat in 6 hours and again in 24 hours\",\n            \"wtMeatHrs\": 27422943,\n            \"wtMilkHrs\": -74591753,\n            \"nada\": \"wip\",\n            \"tags\": [\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              }\n            ],\n            \"note\": \"<p>a free-form note</p>\",\n            \"amduca\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          }\n        ],\n        \"tags\": [\n          {\n            \"id\": 8,\n            \"color\": \"#516cc6\",\n            \"name\": \"nulla anim\",\n            \"fixes\": [\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              }\n            ]\n          },\n          {\n            \"id\": 8,\n            \"color\": \"#516cc6\",\n            \"name\": \"in\",\n            \"fixes\": [\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              }\n            ]\n          }\n        ],\n        \"diagnoses\": [\n          {\n            \"id\": 8,\n            \"name\": \"Pain/inflammation (musculoskeletal), treatment\"\n          },\n          {\n            \"id\": 8,\n            \"name\": \"Pain/inflammation (musculoskeletal), treatment\"\n          }\n        ],\n        \"eligibilities\": [\n          {\n            \"id\": 1,\n            \"name\": \"Beef Cattle\",\n            \"fdaSpecies\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          },\n          {\n            \"id\": 1,\n            \"name\": \"Beef Cattle\",\n            \"fdaSpecies\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          }\n        ],\n        \"promises\": [\n          {\n            \"_type\": \"models.IdPromise\",\n            \"name\": \"ID promise\",\n            \"descrip\": \"You must give ID for each case enrolled\",\n            \"query\": \"What is the animal's name or number?\",\n            \"when\": \"PT24H\",\n            \"id\": 2345\n          },\n          {\n            \"_type\": \"models.IdPromise\",\n            \"name\": \"ID promise\",\n            \"descrip\": \"You must give ID for each case enrolled\",\n            \"query\": \"What is the animal's name or number?\",\n            \"when\": \"PT24H\",\n            \"id\": 2345\n          }\n        ],\n        \"metadata\": [\n          {\n            \"key\": \"popularity\",\n            \"value\": \"good 1.2\"\n          },\n          {\n            \"key\": \"popularity\",\n            \"value\": \"good 1.2\"\n          }\n        ]\n      },\n      \"status\": \"PRESCRIBED\",\n      \"rxId\": \"gG3pBCR1GCMKm89c\",\n      \"refills\": 0,\n      \"expiration\": \"2021-01-10T10:30:37Z\",\n      \"created\": \"2021-08-10T10:30:37Z\",\n      \"metadata\": [\n        {\n          \"key\": \"popularity\",\n          \"value\": \"good 1.2\"\n        },\n        {\n          \"key\": \"popularity\",\n          \"value\": \"good 1.2\"\n        }\n      ]\n    },\n    {\n      \"vorId\": 1,\n      \"morId\": 2,\n      \"protocol\": {\n        \"ownerId\": 1,\n        \"name\": \"wip\",\n        \"status\": \"PRESCRIBED\",\n        \"instructions\": {\n          \"considerations\": \"<p>This is just an example, not a real protocol.</p>\",\n          \"restrictions\": \"<p>Not for use on real animals.</p>\",\n          \"dothis\": \"<h3>Examinations to perform</h3>\",\n          \"recordthis\": \"<p>record every step in your notebook.</p>\",\n          \"success\": \"<p>All problems are gone</p>\",\n          \"failure\": \"<p>One or more problems remain</p>\",\n          \"references\": \"<a href=\\\"https://en.wikipedia.org/wiki/Rickrolling\\\">Wikipedia</a>\"\n        },\n        \"id\": 12345,\n        \"shortname\": \"wip\",\n        \"created\": \"2020-01-10T10:30:37Z\",\n        \"edited\": \"2020-02-10T10:30:37Z\",\n        \"vetNote\": \"consider prescribing protocol x instead\",\n        \"wtMeatHrs\": 22,\n        \"wtMilkHrs\": 5,\n        \"shareAll\": true,\n        \"shareClonable\": true,\n        \"caseDefinition\": {\n          \"requireId\": false,\n          \"requireMor\": false,\n          \"contraindications\": \"<p>prohibited in animals older than than 24 months</p>\",\n          \"medical\": \"if fever is present, consider Protocol 12345 instead.\",\n          \"economic\": \"culling should be considered as an alternative, as milk production is unlikely to return to normal after treatment\",\n          \"note\": \"<p>overcrowding may be contributing to issues</p>\"\n        },\n        \"treatments\": [\n          {\n            \"product\": \"MiracleMed\",\n            \"route\": \"wip\",\n            \"dosage\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"sequenceFunction\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"sizeFunction\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"id\": \"B-123\",\n            \"ownerId\": 0,\n            \"description\": \"3.0 ml per kg repeat\",\n            \"eligibilities\": [\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              }\n            ],\n            \"_dose\": \"3.0 ml per kg repeat in 6 hours and again in 24 hours\",\n            \"wtMeatHrs\": -61772783,\n            \"wtMilkHrs\": 40550183,\n            \"nada\": \"wip\",\n            \"tags\": [\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              }\n            ],\n            \"note\": \"<p>a free-form note</p>\",\n            \"amduca\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          },\n          {\n            \"product\": \"MiracleMed\",\n            \"route\": \"wip\",\n            \"dosage\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"sequenceFunction\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"sizeFunction\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"id\": \"B-123\",\n            \"ownerId\": 0,\n            \"description\": \"3.0 ml per kg repeat\",\n            \"eligibilities\": [\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              }\n            ],\n            \"_dose\": \"3.0 ml per kg repeat in 6 hours and again in 24 hours\",\n            \"wtMeatHrs\": -92961460,\n            \"wtMilkHrs\": -42929647,\n            \"nada\": \"wip\",\n            \"tags\": [\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              }\n            ],\n            \"note\": \"<p>a free-form note</p>\",\n            \"amduca\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          }\n        ],\n        \"tags\": [\n          {\n            \"id\": 8,\n            \"color\": \"#516cc6\",\n            \"name\": \"adipisic\",\n            \"fixes\": [\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              }\n            ]\n          },\n          {\n            \"id\": 8,\n            \"color\": \"#516cc6\",\n            \"name\": \"labore culp\",\n            \"fixes\": [\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              }\n            ]\n          }\n        ],\n        \"diagnoses\": [\n          {\n            \"id\": 8,\n            \"name\": \"Pain/inflammation (musculoskeletal), treatment\"\n          },\n          {\n            \"id\": 8,\n            \"name\": \"Pain/inflammation (musculoskeletal), treatment\"\n          }\n        ],\n        \"eligibilities\": [\n          {\n            \"id\": 1,\n            \"name\": \"Beef Cattle\",\n            \"fdaSpecies\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          },\n          {\n            \"id\": 1,\n            \"name\": \"Beef Cattle\",\n            \"fdaSpecies\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          }\n        ],\n        \"promises\": [\n          {\n            \"_type\": \"models.IdPromise\",\n            \"name\": \"ID promise\",\n            \"descrip\": \"You must give ID for each case enrolled\",\n            \"query\": \"What is the animal's name or number?\",\n            \"when\": \"PT24H\",\n            \"id\": 2345\n          },\n          {\n            \"_type\": \"models.IdPromise\",\n            \"name\": \"ID promise\",\n            \"descrip\": \"You must give ID for each case enrolled\",\n            \"query\": \"What is the animal's name or number?\",\n            \"when\": \"PT24H\",\n            \"id\": 2345\n          }\n        ],\n        \"metadata\": [\n          {\n            \"key\": \"popularity\",\n            \"value\": \"good 1.2\"\n          },\n          {\n            \"key\": \"popularity\",\n            \"value\": \"good 1.2\"\n          }\n        ]\n      },\n      \"status\": \"PRESCRIBED\",\n      \"rxId\": \"gG3pBCR1GCMKm89c\",\n      \"refills\": 0,\n      \"expiration\": \"2021-01-10T10:30:37Z\",\n      \"created\": \"2021-08-10T10:30:37Z\",\n      \"metadata\": [\n        {\n          \"key\": \"popularity\",\n          \"value\": \"good 1.2\"\n        },\n        {\n          \"key\": \"popularity\",\n          \"value\": \"good 1.2\"\n        }\n      ]\n    }\n  ]\n}"
										},
										{
											"id": "8e61b918-6439-4ac3-8c05-92b95f8d6e05",
											"name": "The server can not understand the request due to invalid syntax.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "X-Auth-Token",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/protocols/prescriptions",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"protocols",
														"prescriptions"
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n  \"title\": \"incorrect username or password\",\n  \"status\": 404,\n  \"errorType\": \"/errors/incorrect-user-pass\",\n  \"detail\": \"Authentication failed due to incorrect username or password.\",\n  \"instance\": \"/login/log/abc123\"\n}"
										},
										{
											"id": "d66ed9b8-a7dc-4777-9390-e58a24968d5a",
											"name": "Authorization required",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "X-Auth-Token",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/protocols/prescriptions",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"protocols",
														"prescriptions"
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": ""
										}
									]
								},
								{
									"name": "get my prescriptions",
									"id": "648240b8-c840-4268-a9ed-9e424767e596",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/protocols/prescriptions/by",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"protocols",
												"prescriptions",
												"by"
											]
										},
										"description": "get prescriptions prescribed by the current User."
									},
									"response": [
										{
											"id": "a7256b6d-35c4-4625-89ec-80bcb4fae892",
											"name": "OK",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "X-Auth-Token",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/protocols/prescriptions/by",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"protocols",
														"prescriptions",
														"by"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n  \"prescriptions\": [\n    {\n      \"vorId\": 1,\n      \"morId\": 2,\n      \"protocol\": {\n        \"ownerId\": 1,\n        \"name\": \"wip\",\n        \"status\": \"PRESCRIBED\",\n        \"instructions\": {\n          \"considerations\": \"<p>This is just an example, not a real protocol.</p>\",\n          \"restrictions\": \"<p>Not for use on real animals.</p>\",\n          \"dothis\": \"<h3>Examinations to perform</h3>\",\n          \"recordthis\": \"<p>record every step in your notebook.</p>\",\n          \"success\": \"<p>All problems are gone</p>\",\n          \"failure\": \"<p>One or more problems remain</p>\",\n          \"references\": \"<a href=\\\"https://en.wikipedia.org/wiki/Rickrolling\\\">Wikipedia</a>\"\n        },\n        \"id\": 12345,\n        \"shortname\": \"wip\",\n        \"created\": \"2020-01-10T10:30:37Z\",\n        \"edited\": \"2020-02-10T10:30:37Z\",\n        \"vetNote\": \"consider prescribing protocol x instead\",\n        \"wtMeatHrs\": 22,\n        \"wtMilkHrs\": 5,\n        \"shareAll\": true,\n        \"shareClonable\": true,\n        \"caseDefinition\": {\n          \"requireId\": false,\n          \"requireMor\": false,\n          \"contraindications\": \"<p>prohibited in animals older than than 24 months</p>\",\n          \"medical\": \"if fever is present, consider Protocol 12345 instead.\",\n          \"economic\": \"culling should be considered as an alternative, as milk production is unlikely to return to normal after treatment\",\n          \"note\": \"<p>overcrowding may be contributing to issues</p>\"\n        },\n        \"treatments\": [\n          {\n            \"product\": \"MiracleMed\",\n            \"route\": \"wip\",\n            \"dosage\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"sequenceFunction\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"sizeFunction\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"id\": \"B-123\",\n            \"ownerId\": 0,\n            \"description\": \"3.0 ml per kg repeat\",\n            \"eligibilities\": [\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              }\n            ],\n            \"_dose\": \"3.0 ml per kg repeat in 6 hours and again in 24 hours\",\n            \"wtMeatHrs\": -66447915,\n            \"wtMilkHrs\": 83114488,\n            \"nada\": \"wip\",\n            \"tags\": [\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              }\n            ],\n            \"note\": \"<p>a free-form note</p>\",\n            \"amduca\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          },\n          {\n            \"product\": \"MiracleMed\",\n            \"route\": \"wip\",\n            \"dosage\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"sequenceFunction\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"sizeFunction\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"id\": \"B-123\",\n            \"ownerId\": 0,\n            \"description\": \"3.0 ml per kg repeat\",\n            \"eligibilities\": [\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              }\n            ],\n            \"_dose\": \"3.0 ml per kg repeat in 6 hours and again in 24 hours\",\n            \"wtMeatHrs\": 47529911,\n            \"wtMilkHrs\": 72287114,\n            \"nada\": \"wip\",\n            \"tags\": [\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              }\n            ],\n            \"note\": \"<p>a free-form note</p>\",\n            \"amduca\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          }\n        ],\n        \"tags\": [\n          {\n            \"id\": 8,\n            \"color\": \"#516cc6\",\n            \"name\": \"in dolor\",\n            \"fixes\": [\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              }\n            ]\n          },\n          {\n            \"id\": 8,\n            \"color\": \"#516cc6\",\n            \"name\": \"sit mollit labo\",\n            \"fixes\": [\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              }\n            ]\n          }\n        ],\n        \"diagnoses\": [\n          {\n            \"id\": 8,\n            \"name\": \"Pain/inflammation (musculoskeletal), treatment\"\n          },\n          {\n            \"id\": 8,\n            \"name\": \"Pain/inflammation (musculoskeletal), treatment\"\n          }\n        ],\n        \"eligibilities\": [\n          {\n            \"id\": 1,\n            \"name\": \"Beef Cattle\",\n            \"fdaSpecies\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          },\n          {\n            \"id\": 1,\n            \"name\": \"Beef Cattle\",\n            \"fdaSpecies\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          }\n        ],\n        \"promises\": [\n          {\n            \"_type\": \"models.IdPromise\",\n            \"name\": \"ID promise\",\n            \"descrip\": \"You must give ID for each case enrolled\",\n            \"query\": \"What is the animal's name or number?\",\n            \"when\": \"PT24H\",\n            \"id\": 2345\n          },\n          {\n            \"_type\": \"models.IdPromise\",\n            \"name\": \"ID promise\",\n            \"descrip\": \"You must give ID for each case enrolled\",\n            \"query\": \"What is the animal's name or number?\",\n            \"when\": \"PT24H\",\n            \"id\": 2345\n          }\n        ],\n        \"metadata\": [\n          {\n            \"key\": \"popularity\",\n            \"value\": \"good 1.2\"\n          },\n          {\n            \"key\": \"popularity\",\n            \"value\": \"good 1.2\"\n          }\n        ]\n      },\n      \"status\": \"PRESCRIBED\",\n      \"rxId\": \"gG3pBCR1GCMKm89c\",\n      \"refills\": 0,\n      \"expiration\": \"2021-01-10T10:30:37Z\",\n      \"created\": \"2021-08-10T10:30:37Z\",\n      \"metadata\": [\n        {\n          \"key\": \"popularity\",\n          \"value\": \"good 1.2\"\n        },\n        {\n          \"key\": \"popularity\",\n          \"value\": \"good 1.2\"\n        }\n      ]\n    },\n    {\n      \"vorId\": 1,\n      \"morId\": 2,\n      \"protocol\": {\n        \"ownerId\": 1,\n        \"name\": \"wip\",\n        \"status\": \"PRESCRIBED\",\n        \"instructions\": {\n          \"considerations\": \"<p>This is just an example, not a real protocol.</p>\",\n          \"restrictions\": \"<p>Not for use on real animals.</p>\",\n          \"dothis\": \"<h3>Examinations to perform</h3>\",\n          \"recordthis\": \"<p>record every step in your notebook.</p>\",\n          \"success\": \"<p>All problems are gone</p>\",\n          \"failure\": \"<p>One or more problems remain</p>\",\n          \"references\": \"<a href=\\\"https://en.wikipedia.org/wiki/Rickrolling\\\">Wikipedia</a>\"\n        },\n        \"id\": 12345,\n        \"shortname\": \"wip\",\n        \"created\": \"2020-01-10T10:30:37Z\",\n        \"edited\": \"2020-02-10T10:30:37Z\",\n        \"vetNote\": \"consider prescribing protocol x instead\",\n        \"wtMeatHrs\": 22,\n        \"wtMilkHrs\": 5,\n        \"shareAll\": true,\n        \"shareClonable\": true,\n        \"caseDefinition\": {\n          \"requireId\": false,\n          \"requireMor\": false,\n          \"contraindications\": \"<p>prohibited in animals older than than 24 months</p>\",\n          \"medical\": \"if fever is present, consider Protocol 12345 instead.\",\n          \"economic\": \"culling should be considered as an alternative, as milk production is unlikely to return to normal after treatment\",\n          \"note\": \"<p>overcrowding may be contributing to issues</p>\"\n        },\n        \"treatments\": [\n          {\n            \"product\": \"MiracleMed\",\n            \"route\": \"wip\",\n            \"dosage\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"sequenceFunction\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"sizeFunction\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"id\": \"B-123\",\n            \"ownerId\": 0,\n            \"description\": \"3.0 ml per kg repeat\",\n            \"eligibilities\": [\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              }\n            ],\n            \"_dose\": \"3.0 ml per kg repeat in 6 hours and again in 24 hours\",\n            \"wtMeatHrs\": 1638729,\n            \"wtMilkHrs\": 91154987,\n            \"nada\": \"wip\",\n            \"tags\": [\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              }\n            ],\n            \"note\": \"<p>a free-form note</p>\",\n            \"amduca\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          },\n          {\n            \"product\": \"MiracleMed\",\n            \"route\": \"wip\",\n            \"dosage\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"sequenceFunction\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"sizeFunction\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"id\": \"B-123\",\n            \"ownerId\": 0,\n            \"description\": \"3.0 ml per kg repeat\",\n            \"eligibilities\": [\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              }\n            ],\n            \"_dose\": \"3.0 ml per kg repeat in 6 hours and again in 24 hours\",\n            \"wtMeatHrs\": 93517686,\n            \"wtMilkHrs\": -25455266,\n            \"nada\": \"wip\",\n            \"tags\": [\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              }\n            ],\n            \"note\": \"<p>a free-form note</p>\",\n            \"amduca\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          }\n        ],\n        \"tags\": [\n          {\n            \"id\": 8,\n            \"color\": \"#516cc6\",\n            \"name\": \"Duis e\",\n            \"fixes\": [\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              }\n            ]\n          },\n          {\n            \"id\": 8,\n            \"color\": \"#516cc6\",\n            \"name\": \"dolor\",\n            \"fixes\": [\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              }\n            ]\n          }\n        ],\n        \"diagnoses\": [\n          {\n            \"id\": 8,\n            \"name\": \"Pain/inflammation (musculoskeletal), treatment\"\n          },\n          {\n            \"id\": 8,\n            \"name\": \"Pain/inflammation (musculoskeletal), treatment\"\n          }\n        ],\n        \"eligibilities\": [\n          {\n            \"id\": 1,\n            \"name\": \"Beef Cattle\",\n            \"fdaSpecies\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          },\n          {\n            \"id\": 1,\n            \"name\": \"Beef Cattle\",\n            \"fdaSpecies\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          }\n        ],\n        \"promises\": [\n          {\n            \"_type\": \"models.IdPromise\",\n            \"name\": \"ID promise\",\n            \"descrip\": \"You must give ID for each case enrolled\",\n            \"query\": \"What is the animal's name or number?\",\n            \"when\": \"PT24H\",\n            \"id\": 2345\n          },\n          {\n            \"_type\": \"models.IdPromise\",\n            \"name\": \"ID promise\",\n            \"descrip\": \"You must give ID for each case enrolled\",\n            \"query\": \"What is the animal's name or number?\",\n            \"when\": \"PT24H\",\n            \"id\": 2345\n          }\n        ],\n        \"metadata\": [\n          {\n            \"key\": \"popularity\",\n            \"value\": \"good 1.2\"\n          },\n          {\n            \"key\": \"popularity\",\n            \"value\": \"good 1.2\"\n          }\n        ]\n      },\n      \"status\": \"PRESCRIBED\",\n      \"rxId\": \"gG3pBCR1GCMKm89c\",\n      \"refills\": 0,\n      \"expiration\": \"2021-01-10T10:30:37Z\",\n      \"created\": \"2021-08-10T10:30:37Z\",\n      \"metadata\": [\n        {\n          \"key\": \"popularity\",\n          \"value\": \"good 1.2\"\n        },\n        {\n          \"key\": \"popularity\",\n          \"value\": \"good 1.2\"\n        }\n      ]\n    }\n  ]\n}"
										},
										{
											"id": "ecb00d5d-ee27-490b-9f03-cd0671f027d1",
											"name": "The server can not understand the request due to invalid syntax.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "X-Auth-Token",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/protocols/prescriptions/by",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"protocols",
														"prescriptions",
														"by"
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n  \"title\": \"incorrect username or password\",\n  \"status\": 404,\n  \"errorType\": \"/errors/incorrect-user-pass\",\n  \"detail\": \"Authentication failed due to incorrect username or password.\",\n  \"instance\": \"/login/log/abc123\"\n}"
										},
										{
											"id": "cfa7ba38-2a3f-4ebb-8952-2ce0baa7c4bf",
											"name": "Authorization required",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "X-Auth-Token",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/protocols/prescriptions/by",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"protocols",
														"prescriptions",
														"by"
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": ""
										}
									]
								},
								{
									"name": "get my prescriptions",
									"id": "e596360c-86ad-441a-b0fb-b567e608e048",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/protocols/prescriptions/to",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"protocols",
												"prescriptions",
												"to"
											]
										},
										"description": "get prescriptions prescribed to the current User."
									},
									"response": [
										{
											"id": "d86162af-50db-476a-8876-b6198612e012",
											"name": "OK",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "X-Auth-Token",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/protocols/prescriptions/to",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"protocols",
														"prescriptions",
														"to"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n  \"prescriptions\": [\n    {\n      \"vorId\": 1,\n      \"morId\": 2,\n      \"protocol\": {\n        \"ownerId\": 1,\n        \"name\": \"wip\",\n        \"status\": \"PRESCRIBED\",\n        \"instructions\": {\n          \"considerations\": \"<p>This is just an example, not a real protocol.</p>\",\n          \"restrictions\": \"<p>Not for use on real animals.</p>\",\n          \"dothis\": \"<h3>Examinations to perform</h3>\",\n          \"recordthis\": \"<p>record every step in your notebook.</p>\",\n          \"success\": \"<p>All problems are gone</p>\",\n          \"failure\": \"<p>One or more problems remain</p>\",\n          \"references\": \"<a href=\\\"https://en.wikipedia.org/wiki/Rickrolling\\\">Wikipedia</a>\"\n        },\n        \"id\": 12345,\n        \"shortname\": \"wip\",\n        \"created\": \"2020-01-10T10:30:37Z\",\n        \"edited\": \"2020-02-10T10:30:37Z\",\n        \"vetNote\": \"consider prescribing protocol x instead\",\n        \"wtMeatHrs\": 22,\n        \"wtMilkHrs\": 5,\n        \"shareAll\": true,\n        \"shareClonable\": true,\n        \"caseDefinition\": {\n          \"requireId\": false,\n          \"requireMor\": false,\n          \"contraindications\": \"<p>prohibited in animals older than than 24 months</p>\",\n          \"medical\": \"if fever is present, consider Protocol 12345 instead.\",\n          \"economic\": \"culling should be considered as an alternative, as milk production is unlikely to return to normal after treatment\",\n          \"note\": \"<p>overcrowding may be contributing to issues</p>\"\n        },\n        \"treatments\": [\n          {\n            \"product\": \"MiracleMed\",\n            \"route\": \"wip\",\n            \"dosage\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"sequenceFunction\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"sizeFunction\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"id\": \"B-123\",\n            \"ownerId\": 0,\n            \"description\": \"3.0 ml per kg repeat\",\n            \"eligibilities\": [\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              }\n            ],\n            \"_dose\": \"3.0 ml per kg repeat in 6 hours and again in 24 hours\",\n            \"wtMeatHrs\": -66447915,\n            \"wtMilkHrs\": 83114488,\n            \"nada\": \"wip\",\n            \"tags\": [\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              }\n            ],\n            \"note\": \"<p>a free-form note</p>\",\n            \"amduca\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          },\n          {\n            \"product\": \"MiracleMed\",\n            \"route\": \"wip\",\n            \"dosage\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"sequenceFunction\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"sizeFunction\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"id\": \"B-123\",\n            \"ownerId\": 0,\n            \"description\": \"3.0 ml per kg repeat\",\n            \"eligibilities\": [\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              }\n            ],\n            \"_dose\": \"3.0 ml per kg repeat in 6 hours and again in 24 hours\",\n            \"wtMeatHrs\": 47529911,\n            \"wtMilkHrs\": 72287114,\n            \"nada\": \"wip\",\n            \"tags\": [\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              }\n            ],\n            \"note\": \"<p>a free-form note</p>\",\n            \"amduca\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          }\n        ],\n        \"tags\": [\n          {\n            \"id\": 8,\n            \"color\": \"#516cc6\",\n            \"name\": \"in dolor\",\n            \"fixes\": [\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              }\n            ]\n          },\n          {\n            \"id\": 8,\n            \"color\": \"#516cc6\",\n            \"name\": \"sit mollit labo\",\n            \"fixes\": [\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              }\n            ]\n          }\n        ],\n        \"diagnoses\": [\n          {\n            \"id\": 8,\n            \"name\": \"Pain/inflammation (musculoskeletal), treatment\"\n          },\n          {\n            \"id\": 8,\n            \"name\": \"Pain/inflammation (musculoskeletal), treatment\"\n          }\n        ],\n        \"eligibilities\": [\n          {\n            \"id\": 1,\n            \"name\": \"Beef Cattle\",\n            \"fdaSpecies\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          },\n          {\n            \"id\": 1,\n            \"name\": \"Beef Cattle\",\n            \"fdaSpecies\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          }\n        ],\n        \"promises\": [\n          {\n            \"_type\": \"models.IdPromise\",\n            \"name\": \"ID promise\",\n            \"descrip\": \"You must give ID for each case enrolled\",\n            \"query\": \"What is the animal's name or number?\",\n            \"when\": \"PT24H\",\n            \"id\": 2345\n          },\n          {\n            \"_type\": \"models.IdPromise\",\n            \"name\": \"ID promise\",\n            \"descrip\": \"You must give ID for each case enrolled\",\n            \"query\": \"What is the animal's name or number?\",\n            \"when\": \"PT24H\",\n            \"id\": 2345\n          }\n        ],\n        \"metadata\": [\n          {\n            \"key\": \"popularity\",\n            \"value\": \"good 1.2\"\n          },\n          {\n            \"key\": \"popularity\",\n            \"value\": \"good 1.2\"\n          }\n        ]\n      },\n      \"status\": \"PRESCRIBED\",\n      \"rxId\": \"gG3pBCR1GCMKm89c\",\n      \"refills\": 0,\n      \"expiration\": \"2021-01-10T10:30:37Z\",\n      \"created\": \"2021-08-10T10:30:37Z\",\n      \"metadata\": [\n        {\n          \"key\": \"popularity\",\n          \"value\": \"good 1.2\"\n        },\n        {\n          \"key\": \"popularity\",\n          \"value\": \"good 1.2\"\n        }\n      ]\n    },\n    {\n      \"vorId\": 1,\n      \"morId\": 2,\n      \"protocol\": {\n        \"ownerId\": 1,\n        \"name\": \"wip\",\n        \"status\": \"PRESCRIBED\",\n        \"instructions\": {\n          \"considerations\": \"<p>This is just an example, not a real protocol.</p>\",\n          \"restrictions\": \"<p>Not for use on real animals.</p>\",\n          \"dothis\": \"<h3>Examinations to perform</h3>\",\n          \"recordthis\": \"<p>record every step in your notebook.</p>\",\n          \"success\": \"<p>All problems are gone</p>\",\n          \"failure\": \"<p>One or more problems remain</p>\",\n          \"references\": \"<a href=\\\"https://en.wikipedia.org/wiki/Rickrolling\\\">Wikipedia</a>\"\n        },\n        \"id\": 12345,\n        \"shortname\": \"wip\",\n        \"created\": \"2020-01-10T10:30:37Z\",\n        \"edited\": \"2020-02-10T10:30:37Z\",\n        \"vetNote\": \"consider prescribing protocol x instead\",\n        \"wtMeatHrs\": 22,\n        \"wtMilkHrs\": 5,\n        \"shareAll\": true,\n        \"shareClonable\": true,\n        \"caseDefinition\": {\n          \"requireId\": false,\n          \"requireMor\": false,\n          \"contraindications\": \"<p>prohibited in animals older than than 24 months</p>\",\n          \"medical\": \"if fever is present, consider Protocol 12345 instead.\",\n          \"economic\": \"culling should be considered as an alternative, as milk production is unlikely to return to normal after treatment\",\n          \"note\": \"<p>overcrowding may be contributing to issues</p>\"\n        },\n        \"treatments\": [\n          {\n            \"product\": \"MiracleMed\",\n            \"route\": \"wip\",\n            \"dosage\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"sequenceFunction\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"sizeFunction\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"id\": \"B-123\",\n            \"ownerId\": 0,\n            \"description\": \"3.0 ml per kg repeat\",\n            \"eligibilities\": [\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              }\n            ],\n            \"_dose\": \"3.0 ml per kg repeat in 6 hours and again in 24 hours\",\n            \"wtMeatHrs\": 1638729,\n            \"wtMilkHrs\": 91154987,\n            \"nada\": \"wip\",\n            \"tags\": [\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              }\n            ],\n            \"note\": \"<p>a free-form note</p>\",\n            \"amduca\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          },\n          {\n            \"product\": \"MiracleMed\",\n            \"route\": \"wip\",\n            \"dosage\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"sequenceFunction\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"sizeFunction\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"id\": \"B-123\",\n            \"ownerId\": 0,\n            \"description\": \"3.0 ml per kg repeat\",\n            \"eligibilities\": [\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              }\n            ],\n            \"_dose\": \"3.0 ml per kg repeat in 6 hours and again in 24 hours\",\n            \"wtMeatHrs\": 93517686,\n            \"wtMilkHrs\": -25455266,\n            \"nada\": \"wip\",\n            \"tags\": [\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              }\n            ],\n            \"note\": \"<p>a free-form note</p>\",\n            \"amduca\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          }\n        ],\n        \"tags\": [\n          {\n            \"id\": 8,\n            \"color\": \"#516cc6\",\n            \"name\": \"Duis e\",\n            \"fixes\": [\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              }\n            ]\n          },\n          {\n            \"id\": 8,\n            \"color\": \"#516cc6\",\n            \"name\": \"dolor\",\n            \"fixes\": [\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              }\n            ]\n          }\n        ],\n        \"diagnoses\": [\n          {\n            \"id\": 8,\n            \"name\": \"Pain/inflammation (musculoskeletal), treatment\"\n          },\n          {\n            \"id\": 8,\n            \"name\": \"Pain/inflammation (musculoskeletal), treatment\"\n          }\n        ],\n        \"eligibilities\": [\n          {\n            \"id\": 1,\n            \"name\": \"Beef Cattle\",\n            \"fdaSpecies\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          },\n          {\n            \"id\": 1,\n            \"name\": \"Beef Cattle\",\n            \"fdaSpecies\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          }\n        ],\n        \"promises\": [\n          {\n            \"_type\": \"models.IdPromise\",\n            \"name\": \"ID promise\",\n            \"descrip\": \"You must give ID for each case enrolled\",\n            \"query\": \"What is the animal's name or number?\",\n            \"when\": \"PT24H\",\n            \"id\": 2345\n          },\n          {\n            \"_type\": \"models.IdPromise\",\n            \"name\": \"ID promise\",\n            \"descrip\": \"You must give ID for each case enrolled\",\n            \"query\": \"What is the animal's name or number?\",\n            \"when\": \"PT24H\",\n            \"id\": 2345\n          }\n        ],\n        \"metadata\": [\n          {\n            \"key\": \"popularity\",\n            \"value\": \"good 1.2\"\n          },\n          {\n            \"key\": \"popularity\",\n            \"value\": \"good 1.2\"\n          }\n        ]\n      },\n      \"status\": \"PRESCRIBED\",\n      \"rxId\": \"gG3pBCR1GCMKm89c\",\n      \"refills\": 0,\n      \"expiration\": \"2021-01-10T10:30:37Z\",\n      \"created\": \"2021-08-10T10:30:37Z\",\n      \"metadata\": [\n        {\n          \"key\": \"popularity\",\n          \"value\": \"good 1.2\"\n        },\n        {\n          \"key\": \"popularity\",\n          \"value\": \"good 1.2\"\n        }\n      ]\n    }\n  ]\n}"
										}
									]
								},
								{
									"name": "retrieve prescription by ID",
									"id": "f5990a21-704b-4764-b969-96924ab8e011",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/protocols/prescriptions/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"protocols",
												"prescriptions",
												":id"
											],
											"variable": [
												{
													"id": "72a37433-a3c6-4722-89d4-7f452783c984",
													"key": "id",
													"value": "Vi1y9kbpEj7Upqy7",
													"description": "(Required) Prescription ID key"
												}
											]
										},
										"description": "Retrieve a Prescription by `prescription.id`."
									},
									"response": [
										{
											"id": "2cef71ba-e757-4976-b75a-92d2c1c37d9f",
											"name": "OK",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "X-Auth-Token",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/protocols/prescriptions/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"protocols",
														"prescriptions",
														":id"
													],
													"variable": [
														{
															"key": "id",
															"value": "Vi1y9kbpEj7Upqy7",
															"description": "(Required) Prescription ID key"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n  \"prescription\": {\n    \"vorId\": 1,\n    \"morId\": 2,\n    \"protocol\": {\n      \"ownerId\": 1,\n      \"name\": \"wip\",\n      \"status\": \"PRESCRIBED\",\n      \"instructions\": {\n        \"considerations\": \"<p>This is just an example, not a real protocol.</p>\",\n        \"restrictions\": \"<p>Not for use on real animals.</p>\",\n        \"dothis\": \"<h3>Examinations to perform</h3>\",\n        \"recordthis\": \"<p>record every step in your notebook.</p>\",\n        \"success\": \"<p>All problems are gone</p>\",\n        \"failure\": \"<p>One or more problems remain</p>\",\n        \"references\": \"<a href=\\\"https://en.wikipedia.org/wiki/Rickrolling\\\">Wikipedia</a>\"\n      },\n      \"id\": 12345,\n      \"shortname\": \"wip\",\n      \"created\": \"2020-01-10T10:30:37Z\",\n      \"edited\": \"2020-02-10T10:30:37Z\",\n      \"vetNote\": \"consider prescribing protocol x instead\",\n      \"wtMeatHrs\": 22,\n      \"wtMilkHrs\": 5,\n      \"shareAll\": true,\n      \"shareClonable\": true,\n      \"caseDefinition\": {\n        \"requireId\": false,\n        \"requireMor\": false,\n        \"contraindications\": \"<p>prohibited in animals older than than 24 months</p>\",\n        \"medical\": \"if fever is present, consider Protocol 12345 instead.\",\n        \"economic\": \"culling should be considered as an alternative, as milk production is unlikely to return to normal after treatment\",\n        \"note\": \"<p>overcrowding may be contributing to issues</p>\"\n      },\n      \"treatments\": [\n        {\n          \"product\": \"MiracleMed\",\n          \"route\": \"wip\",\n          \"dosage\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n          },\n          \"sequenceFunction\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n          },\n          \"sizeFunction\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n          },\n          \"id\": \"B-123\",\n          \"ownerId\": 0,\n          \"description\": \"3.0 ml per kg repeat\",\n          \"eligibilities\": [\n            {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          ],\n          \"_dose\": \"3.0 ml per kg repeat in 6 hours and again in 24 hours\",\n          \"wtMeatHrs\": 1589641,\n          \"wtMilkHrs\": 38827891,\n          \"nada\": \"wip\",\n          \"tags\": [\n            {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          ],\n          \"note\": \"<p>a free-form note</p>\",\n          \"amduca\": \"ONLABEL\"\n        },\n        {\n          \"product\": \"MiracleMed\",\n          \"route\": \"wip\",\n          \"dosage\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n          },\n          \"sequenceFunction\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n          },\n          \"sizeFunction\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n          },\n          \"id\": \"B-123\",\n          \"ownerId\": 0,\n          \"description\": \"3.0 ml per kg repeat\",\n          \"eligibilities\": [\n            {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          ],\n          \"_dose\": \"3.0 ml per kg repeat in 6 hours and again in 24 hours\",\n          \"wtMeatHrs\": 82076656,\n          \"wtMilkHrs\": 9683577,\n          \"nada\": \"wip\",\n          \"tags\": [\n            {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          ],\n          \"note\": \"<p>a free-form note</p>\",\n          \"amduca\": \"UNIDENTIFIED\"\n        }\n      ],\n      \"tags\": [\n        {\n          \"id\": 8,\n          \"color\": \"#516cc6\",\n          \"name\": \"est cupidata\",\n          \"fixes\": [\n            {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          ]\n        },\n        {\n          \"id\": 8,\n          \"color\": \"#516cc6\",\n          \"name\": \"sit anim repreh\",\n          \"fixes\": [\n            {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          ]\n        }\n      ],\n      \"diagnoses\": [\n        {\n          \"id\": 8,\n          \"name\": \"Pain/inflammation (musculoskeletal), treatment\"\n        },\n        {\n          \"id\": 8,\n          \"name\": \"Pain/inflammation (musculoskeletal), treatment\"\n        }\n      ],\n      \"eligibilities\": [\n        {\n          \"id\": 1,\n          \"name\": \"Beef Cattle\",\n          \"fdaSpecies\": [\n            {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          ]\n        },\n        {\n          \"id\": 1,\n          \"name\": \"Beef Cattle\",\n          \"fdaSpecies\": [\n            {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          ]\n        }\n      ],\n      \"promises\": [\n        {\n          \"_type\": \"models.IdPromise\",\n          \"name\": \"ID promise\",\n          \"descrip\": \"You must give ID for each case enrolled\",\n          \"query\": \"What is the animal's name or number?\",\n          \"when\": \"PT24H\",\n          \"id\": 2345\n        },\n        {\n          \"_type\": \"models.IdPromise\",\n          \"name\": \"ID promise\",\n          \"descrip\": \"You must give ID for each case enrolled\",\n          \"query\": \"What is the animal's name or number?\",\n          \"when\": \"PT24H\",\n          \"id\": 2345\n        }\n      ],\n      \"metadata\": [\n        {\n          \"key\": \"popularity\",\n          \"value\": \"good 1.2\"\n        },\n        {\n          \"key\": \"popularity\",\n          \"value\": \"good 1.2\"\n        }\n      ]\n    },\n    \"status\": \"PRESCRIBED\",\n    \"rxId\": \"gG3pBCR1GCMKm89c\",\n    \"refills\": 0,\n    \"expiration\": \"2021-01-10T10:30:37Z\",\n    \"created\": \"2021-08-10T10:30:37Z\",\n    \"metadata\": [\n      {\n        \"key\": \"popularity\",\n        \"value\": \"good 1.2\"\n      },\n      {\n        \"key\": \"popularity\",\n        \"value\": \"good 1.2\"\n      }\n    ]\n  }\n}"
										},
										{
											"id": "32bd509a-860e-449b-aab7-83ae292514c2",
											"name": "The server can not understand the request due to invalid syntax.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "X-Auth-Token",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/protocols/prescriptions/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"protocols",
														"prescriptions",
														":id"
													],
													"variable": [
														{
															"key": "id",
															"value": "Vi1y9kbpEj7Upqy7",
															"description": "(Required) Prescription ID key"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n  \"title\": \"incorrect username or password\",\n  \"status\": 404,\n  \"errorType\": \"/errors/incorrect-user-pass\",\n  \"detail\": \"Authentication failed due to incorrect username or password.\",\n  \"instance\": \"/login/log/abc123\"\n}"
										},
										{
											"id": "618ffeb7-c509-4324-b92d-8c8f3390b58c",
											"name": "Authorization required",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "X-Auth-Token",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/protocols/prescriptions/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"protocols",
														"prescriptions",
														":id"
													],
													"variable": [
														{
															"key": "id",
															"value": "Vi1y9kbpEj7Upqy7",
															"description": "(Required) Prescription ID key"
														}
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": ""
										}
									]
								}
							],
							"id": "b788e744-60bd-4f0e-8a8b-c8862109c030"
						},
						{
							"name": "shares",
							"item": [
								{
									"name": "get my protocol shares",
									"id": "86d61187-c8f9-4b36-9699-4c018387197e",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/protocols/shares?pxFilter=29077371&toFilter=29077371",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"protocols",
												"shares"
											],
											"query": [
												{
													"key": "pxFilter",
													"value": "29077371",
													"description": "select only shares of this Protocol ID"
												},
												{
													"key": "toFilter",
													"value": "29077371",
													"description": "select only shares to this VOR User"
												}
											]
										},
										"description": "This endpoint retrieves a User's Protocol shares, optionally filtered by Protocol and recipient."
									},
									"response": [
										{
											"id": "568fedd8-1bec-4515-ab54-51a244ac085d",
											"name": "OK",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "X-Auth-Token",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/protocols/shares?pxFilter=29077371&toFilter=29077371",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"protocols",
														"shares"
													],
													"query": [
														{
															"key": "pxFilter",
															"value": "29077371"
														},
														{
															"key": "toFilter",
															"value": "29077371"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n  \"shares\": [\n    {\n      \"px-id\": 1,\n      \"share-to\": 2,\n      \"clonable\": true\n    },\n    {\n      \"px-id\": 1,\n      \"share-to\": 2,\n      \"clonable\": true\n    }\n  ]\n}"
										},
										{
											"id": "8953e0b0-aad2-4a39-9c32-e29c8d7a7774",
											"name": "The server can not understand the request due to invalid syntax.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "X-Auth-Token",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/protocols/shares?pxFilter=29077371&toFilter=29077371",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"protocols",
														"shares"
													],
													"query": [
														{
															"key": "pxFilter",
															"value": "29077371"
														},
														{
															"key": "toFilter",
															"value": "29077371"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n  \"title\": \"incorrect username or password\",\n  \"status\": 404,\n  \"errorType\": \"/errors/incorrect-user-pass\",\n  \"detail\": \"Authentication failed due to incorrect username or password.\",\n  \"instance\": \"/login/log/abc123\"\n}"
										},
										{
											"id": "5b418988-fcc4-4e2d-ab05-e68f2e8c6876",
											"name": "Authorization required",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "X-Auth-Token",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/protocols/shares?pxFilter=29077371&toFilter=29077371",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"protocols",
														"shares"
													],
													"query": [
														{
															"key": "pxFilter",
															"value": "29077371"
														},
														{
															"key": "toFilter",
															"value": "29077371"
														}
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": ""
										}
									]
								},
								{
									"name": "create protocol share",
									"id": "c08e3633-46ec-43cf-805a-1cc83323e80b",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"px-id\": 1,\n  \"share-to\": 2,\n  \"clonable\": true\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/protocols/shares",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"protocols",
												"shares"
											]
										},
										"description": "This endpoint shares a protocol with another VOR User."
									},
									"response": [
										{
											"id": "75a24797-59b3-485b-9f13-18a6b1273be8",
											"name": "protocol shared",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "X-Auth-Token",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"px-id\": 1,\n  \"share-to\": 2,\n  \"clonable\": true\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/api/protocols/shares",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"protocols",
														"shares"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n  \"shared\": 1\n}"
										},
										{
											"id": "02d0e2f5-77cd-422d-8350-37dcea6aaa22",
											"name": "The server can not understand the request due to invalid syntax.",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "X-Auth-Token",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"px-id\": 1,\n  \"share-to\": 2,\n  \"clonable\": true\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/api/protocols/shares",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"protocols",
														"shares"
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n  \"title\": \"incorrect username or password\",\n  \"status\": 404,\n  \"errorType\": \"/errors/incorrect-user-pass\",\n  \"detail\": \"Authentication failed due to incorrect username or password.\",\n  \"instance\": \"/login/log/abc123\"\n}"
										},
										{
											"id": "1b65e96e-16f1-44b7-baba-621933031172",
											"name": "Authorization required",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "X-Auth-Token",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"px-id\": 1,\n  \"share-to\": 2,\n  \"clonable\": true\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/api/protocols/shares",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"protocols",
														"shares"
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": ""
										}
									]
								},
								{
									"name": "delete protocol share",
									"id": "ec52ff71-4566-4ac4-8e17-c372f008d45c",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "DELETE",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/protocols/shares?pxId=29077371&toVor=29077371",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"protocols",
												"shares"
											],
											"query": [
												{
													"key": "pxId",
													"value": "29077371",
													"description": "(Required) Protocol ID"
												},
												{
													"key": "toVor",
													"value": "29077371",
													"description": "(Required) ID of VOR to whom Protocol was shared"
												}
											]
										},
										"description": "This endpoint retracts a Protocol share with another VOR User."
									},
									"response": [
										{
											"id": "91a416cc-aab1-4cb5-9448-2b520df8ca19",
											"name": "Success â€“ Protocol share deleted",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "X-Auth-Token",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/protocols/shares?pxId=29077371&toVor=29077371",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"protocols",
														"shares"
													],
													"query": [
														{
															"key": "pxId",
															"value": "29077371"
														},
														{
															"key": "toVor",
															"value": "29077371"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n  \"un-shared\": -96271734\n}"
										},
										{
											"id": "50fdebb4-e163-4b5b-b6e8-1889ae5eeec5",
											"name": "The server can not understand the request due to invalid syntax.",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "X-Auth-Token",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/protocols/shares?pxId=29077371&toVor=29077371",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"protocols",
														"shares"
													],
													"query": [
														{
															"key": "pxId",
															"value": "29077371"
														},
														{
															"key": "toVor",
															"value": "29077371"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n  \"title\": \"incorrect username or password\",\n  \"status\": 404,\n  \"errorType\": \"/errors/incorrect-user-pass\",\n  \"detail\": \"Authentication failed due to incorrect username or password.\",\n  \"instance\": \"/login/log/abc123\"\n}"
										},
										{
											"id": "7d422a9d-c4d0-4101-9934-cb2330b78762",
											"name": "Authorization required",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "X-Auth-Token",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/protocols/shares?pxId=29077371&toVor=29077371",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"protocols",
														"shares"
													],
													"query": [
														{
															"key": "pxId",
															"value": "29077371"
														},
														{
															"key": "toVor",
															"value": "29077371"
														}
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": ""
										}
									]
								}
							],
							"id": "2edd3933-a4e8-42a7-9213-f67579cac67d"
						},
						{
							"name": "shares To All",
							"item": [
								{
									"name": "{px Id}",
									"item": [
										{
											"name": "share Protocol with all VOR Users",
											"id": "526abc79-4e84-41e8-80ad-95e4b449113f",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/protocols/sharesToAll/:pxId?clonable=true",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"protocols",
														"sharesToAll",
														":pxId"
													],
													"query": [
														{
															"key": "clonable",
															"value": "true"
														}
													],
													"variable": [
														{
															"id": "cf7abbba-8e34-4ae6-b240-6f4dceb76c15",
															"key": "pxId",
															"value": "29077371",
															"description": "(Required) ID of Protocol to be shared"
														}
													]
												},
												"description": "This endpoint shares a User's protocol with all VOR Users."
											},
											"response": [
												{
													"id": "2c482963-6fd9-401a-9656-58676f64d19d",
													"name": "There is no content to send for this request.",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "X-Auth-Token",
																"value": "<API Key>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/protocols/sharesToAll/:pxId?clonable=true",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"protocols",
																"sharesToAll",
																":pxId"
															],
															"query": [
																{
																	"key": "clonable",
																	"value": "true"
																}
															],
															"variable": [
																{
																	"key": "pxId",
																	"value": "29077371",
																	"description": "(Required) ID of Protocol to be shared"
																}
															]
														}
													},
													"status": "No Content",
													"code": 204,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"responseTime": null,
													"body": ""
												},
												{
													"id": "d685ada7-6d12-42bb-84a2-bb501e0f1af5",
													"name": "The server can not understand the request due to invalid syntax.",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "X-Auth-Token",
																"value": "<API Key>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/protocols/sharesToAll/:pxId?clonable=true",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"protocols",
																"sharesToAll",
																":pxId"
															],
															"query": [
																{
																	"key": "clonable",
																	"value": "true"
																}
															],
															"variable": [
																{
																	"key": "pxId",
																	"value": "29077371",
																	"description": "(Required) ID of Protocol to be shared"
																}
															]
														}
													},
													"status": "Bad Request",
													"code": 400,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"responseTime": null,
													"body": "{\n  \"title\": \"incorrect username or password\",\n  \"status\": 404,\n  \"errorType\": \"/errors/incorrect-user-pass\",\n  \"detail\": \"Authentication failed due to incorrect username or password.\",\n  \"instance\": \"/login/log/abc123\"\n}"
												}
											]
										},
										{
											"name": "cancel sharing",
											"id": "b555cc25-28c6-47f7-bb87-ac6b7669d03e",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"method": "DELETE",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/api/protocols/sharesToAll/:pxId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"protocols",
														"sharesToAll",
														":pxId"
													],
													"variable": [
														{
															"id": "e6abdf76-b353-48c6-91a5-e00de189ba82",
															"key": "pxId",
															"value": "1",
															"description": "(Required) ID of Protocol"
														}
													]
												},
												"description": "wip -- This endpoint probably unshares protocols to all."
											},
											"response": [
												{
													"id": "e974cc6c-d3e4-46ea-bdfc-e70288a59f2c",
													"name": "no content",
													"originalRequest": {
														"method": "DELETE",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "X-Auth-Token",
																"value": "<API Key>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/protocols/sharesToAll/:pxId",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"protocols",
																"sharesToAll",
																":pxId"
															],
															"variable": [
																{
																	"key": "pxId",
																	"value": "1",
																	"description": "(Required) ID of Protocol"
																}
															]
														}
													},
													"status": "No Content",
													"code": 204,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"responseTime": null,
													"body": ""
												}
											]
										}
									],
									"id": "4377546c-6cd8-40a7-9d52-5e19357da704"
								},
								{
									"name": "list of User's shared protocols",
									"id": "75f1ba34-c373-46b2-a63f-2aace2d3cf5b",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/protocols/sharesToAll/",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"protocols",
												"sharesToAll",
												""
											]
										},
										"description": "This endpoint retrieves a list of User's protocols shared to all VORs."
									},
									"response": [
										{
											"id": "275d6a7e-9afe-44de-838f-eafbd93522f5",
											"name": "OK",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "X-Auth-Token",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/protocols/sharesToAll/",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"protocols",
														"sharesToAll",
														""
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n  \"shares\": [\n    {\n      \"pxId\": 1,\n      \"name\": \"example protocol\",\n      \"clonable\": false\n    }\n  ]\n}"
										},
										{
											"id": "5579e1ec-236f-4b16-a126-a1c5a4a4bd90",
											"name": "The server can not understand the request due to invalid syntax.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "X-Auth-Token",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/protocols/sharesToAll/",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"protocols",
														"sharesToAll",
														""
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n  \"title\": \"incorrect username or password\",\n  \"status\": 404,\n  \"errorType\": \"/errors/incorrect-user-pass\",\n  \"detail\": \"Authentication failed due to incorrect username or password.\",\n  \"instance\": \"/login/log/abc123\"\n}"
										},
										{
											"id": "e694bdb7-3e92-4e86-a1de-f089cfa91713",
											"name": "Authorization required",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "X-Auth-Token",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/protocols/sharesToAll/",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"protocols",
														"sharesToAll",
														""
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": ""
										}
									]
								}
							],
							"id": "542e419f-d85c-4ac2-8b6c-f679caa557c6"
						},
						{
							"name": "tags",
							"item": [
								{
									"name": "list of all Tags",
									"id": "f481924e-331f-47be-9ae8-a51ceec7d932",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/protocols/tags",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"protocols",
												"tags"
											]
										},
										"description": "Returns the full array of tags for protocols and treatments."
									},
									"response": [
										{
											"id": "ad9e5820-877d-4edd-b67a-bbd2102f9cca",
											"name": "OK",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "X-Auth-Token",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/protocols/tags",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"protocols",
														"tags"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n  \"tags\": [\n    {\n      \"id\": 8,\n      \"color\": \"#516cc6\",\n      \"name\": \"laboris \",\n      \"fixes\": [\n        {\n          \"detail\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n          }\n        },\n        {\n          \"detail\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n          }\n        }\n      ]\n    },\n    {\n      \"id\": 8,\n      \"color\": \"#516cc6\",\n      \"name\": \"sunt sed \",\n      \"fixes\": [\n        {\n          \"detail\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n          }\n        },\n        {\n          \"detail\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n          }\n        }\n      ]\n    }\n  ]\n}"
										}
									]
								},
								{
									"name": "create Tag",
									"id": "00373313-1040-4faa-92bd-28fa4191e732",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"id\": 8,\n  \"color\": \"#516cc6\",\n  \"name\": \"dolor p\",\n  \"fixes\": [\n    {\n      \"_type\": \"commodo consequat\",\n      \"detail\": \"qui\",\n      \"message\": \"dolore occaecat\",\n      \"title\": \"incididunt minim\"\n    },\n    {\n      \"_type\": \"fugiat in in sint\",\n      \"detail\": \"ad qui esse tempor irure\",\n      \"message\": \"ex quis consequat deserunt\",\n      \"title\": \"consequat labore nulla culpa in\"\n    }\n  ]\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/protocols/tags",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"protocols",
												"tags"
											]
										},
										"description": "Create a Tag."
									},
									"response": [
										{
											"id": "cfa3b557-431a-45ad-a652-9ab2a8638446",
											"name": "Success â€“  Tag recorded",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "X-Auth-Token",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"id\": 8,\n  \"color\": \"#516cc6\",\n  \"name\": \"dolor p\",\n  \"fixes\": [\n    {\n      \"_type\": \"commodo consequat\",\n      \"detail\": \"qui\",\n      \"message\": \"dolore occaecat\",\n      \"title\": \"incididunt minim\"\n    },\n    {\n      \"_type\": \"fugiat in in sint\",\n      \"detail\": \"ad qui esse tempor irure\",\n      \"message\": \"ex quis consequat deserunt\",\n      \"title\": \"consequat labore nulla culpa in\"\n    }\n  ]\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/api/protocols/tags",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"protocols",
														"tags"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n  \"tag\": {\n    \"id\": 8,\n    \"color\": \"#516cc6\",\n    \"name\": \"Lorem\",\n    \"fixes\": [\n      {\n        \"_type\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"detail\": \"eiusmod Duis\",\n        \"message\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"title\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      },\n      {\n        \"_type\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"detail\": \"veniam do\",\n        \"message\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"title\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      }\n    ]\n  }\n}"
										},
										{
											"id": "c91a107b-d2f2-45d2-9425-7c7fb7ea1d48",
											"name": "The server can not understand the request due to invalid syntax.",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "X-Auth-Token",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"id\": 8,\n  \"color\": \"#516cc6\",\n  \"name\": \"dolor p\",\n  \"fixes\": [\n    {\n      \"_type\": \"commodo consequat\",\n      \"detail\": \"qui\",\n      \"message\": \"dolore occaecat\",\n      \"title\": \"incididunt minim\"\n    },\n    {\n      \"_type\": \"fugiat in in sint\",\n      \"detail\": \"ad qui esse tempor irure\",\n      \"message\": \"ex quis consequat deserunt\",\n      \"title\": \"consequat labore nulla culpa in\"\n    }\n  ]\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/api/protocols/tags",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"protocols",
														"tags"
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n  \"title\": \"incorrect username or password\",\n  \"status\": 404,\n  \"errorType\": \"/errors/incorrect-user-pass\",\n  \"detail\": \"Authentication failed due to incorrect username or password.\",\n  \"instance\": \"/login/log/abc123\"\n}"
										},
										{
											"id": "9d1c647e-7d1e-46d2-8be8-250faed9a4a1",
											"name": "Authorization required",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "X-Auth-Token",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"id\": 8,\n  \"color\": \"#516cc6\",\n  \"name\": \"dolor p\",\n  \"fixes\": [\n    {\n      \"_type\": \"commodo consequat\",\n      \"detail\": \"qui\",\n      \"message\": \"dolore occaecat\",\n      \"title\": \"incididunt minim\"\n    },\n    {\n      \"_type\": \"fugiat in in sint\",\n      \"detail\": \"ad qui esse tempor irure\",\n      \"message\": \"ex quis consequat deserunt\",\n      \"title\": \"consequat labore nulla culpa in\"\n    }\n  ]\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/api/protocols/tags",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"protocols",
														"tags"
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": ""
										}
									]
								},
								{
									"name": "Tag",
									"id": "94692352-a405-4623-80c7-9206a83b7ad0",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "DELETE",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/protocols/tags/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"protocols",
												"tags",
												":id"
											],
											"variable": [
												{
													"id": "e70b5559-c61e-40ac-94d6-63c52de4ef03",
													"key": "id",
													"value": "29077371",
													"description": "(Required) "
												}
											]
										},
										"description": "Delete Tag."
									},
									"response": [
										{
											"id": "e4dbfdec-2851-4d07-8a4e-a4e60a6776c7",
											"name": "deleted",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "X-Auth-Token",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/protocols/tags/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"protocols",
														"tags",
														":id"
													],
													"variable": [
														{
															"key": "id",
															"value": "29077371",
															"description": "(Required) "
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n  \"deleted\": 74301612\n}"
										},
										{
											"id": "b9a45e35-22ae-4e82-a56b-2c3dc89ebfaf",
											"name": "The server can not understand the request due to invalid syntax.",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "X-Auth-Token",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/protocols/tags/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"protocols",
														"tags",
														":id"
													],
													"variable": [
														{
															"key": "id",
															"value": "29077371",
															"description": "(Required) "
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n  \"title\": \"incorrect username or password\",\n  \"status\": 404,\n  \"errorType\": \"/errors/incorrect-user-pass\",\n  \"detail\": \"Authentication failed due to incorrect username or password.\",\n  \"instance\": \"/login/log/abc123\"\n}"
										},
										{
											"id": "02c25e43-bd19-47d3-ab74-1262c381f594",
											"name": "Authorization required",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "X-Auth-Token",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/protocols/tags/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"protocols",
														"tags",
														":id"
													],
													"variable": [
														{
															"key": "id",
															"value": "29077371",
															"description": "(Required) "
														}
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": ""
										}
									]
								},
								{
									"name": "execute Remedy",
									"id": "df175d46-babc-4ca0-ad73-8bc559e23497",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"protocol\": {\n    \"ownerId\": 1,\n    \"name\": \"wip\",\n    \"status\": \"PRESCRIBED\",\n    \"instructions\": {\n      \"considerations\": \"<p>This is just an example, not a real protocol.</p>\",\n      \"restrictions\": \"<p>Not for use on real animals.</p>\",\n      \"dothis\": \"<h3>Examinations to perform</h3>\",\n      \"recordthis\": \"<p>record every step in your notebook.</p>\",\n      \"success\": \"<p>All problems are gone</p>\",\n      \"failure\": \"<p>One or more problems remain</p>\",\n      \"references\": \"<a href=\\\"https://en.wikipedia.org/wiki/Rickrolling\\\">Wikipedia</a>\"\n    },\n    \"id\": 12345,\n    \"shortname\": \"wip\",\n    \"created\": \"2020-01-10T10:30:37Z\",\n    \"edited\": \"2020-02-10T10:30:37Z\",\n    \"vetNote\": \"consider prescribing protocol x instead\",\n    \"wtMeatHrs\": 22,\n    \"wtMilkHrs\": 5,\n    \"shareAll\": true,\n    \"shareClonable\": true,\n    \"caseDefinition\": {\n      \"requireId\": false,\n      \"requireMor\": false,\n      \"contraindications\": \"<p>prohibited in animals older than than 24 months</p>\",\n      \"medical\": \"if fever is present, consider Protocol 12345 instead.\",\n      \"economic\": \"culling should be considered as an alternative, as milk production is unlikely to return to normal after treatment\",\n      \"note\": \"<p>overcrowding may be contributing to issues</p>\"\n    },\n    \"treatments\": [\n      {\n        \"product\": \"MiracleMed\",\n        \"route\": \"wip\",\n        \"dosage\": {\n          \"doseId\": -34480078\n        },\n        \"sequenceFunction\": {\n          \"_type\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n          }\n        },\n        \"sizeFunction\": {\n          \"dose\": {\n            \"quantity\": {\n              \"dimension\": \"Volume\",\n              \"value\": 3,\n              \"symbol\": \"ml\"\n            }\n          },\n          \"_type\": \"models.FixedDoseFunction\"\n        },\n        \"id\": \"B-123\",\n        \"ownerId\": 0,\n        \"description\": \"3.0 ml per kg repeat\",\n        \"eligibilities\": [\n          {\n            \"id\": 1,\n            \"name\": \"Beef Cattle\",\n            \"fdaSpecies\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          },\n          {\n            \"id\": 1,\n            \"name\": \"Beef Cattle\",\n            \"fdaSpecies\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          }\n        ],\n        \"_dose\": \"3.0 ml per kg repeat in 6 hours and again in 24 hours\",\n        \"wtMeatHrs\": -74077650,\n        \"wtMilkHrs\": 72784942,\n        \"nada\": \"wip\",\n        \"tags\": [\n          {\n            \"id\": 8,\n            \"color\": \"#516cc6\",\n            \"name\": \"v\",\n            \"fixes\": [\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              }\n            ]\n          },\n          {\n            \"id\": 8,\n            \"color\": \"#516cc6\",\n            \"name\": \"ni\",\n            \"fixes\": [\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              }\n            ]\n          }\n        ],\n        \"note\": \"<p>a free-form note</p>\",\n        \"amduca\": \"ONLABEL\"\n      },\n      {\n        \"product\": \"MiracleMed\",\n        \"route\": \"wip\",\n        \"dosage\": {\n          \"doseId\": -77455458\n        },\n        \"sequenceFunction\": {\n          \"_type\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n          }\n        },\n        \"sizeFunction\": {\n          \"dose\": {\n            \"quantity\": {\n              \"dimension\": \"Volume\",\n              \"value\": 3,\n              \"symbol\": \"ml\"\n            }\n          },\n          \"_type\": \"models.FixedDoseFunction\"\n        },\n        \"id\": \"B-123\",\n        \"ownerId\": 0,\n        \"description\": \"3.0 ml per kg repeat\",\n        \"eligibilities\": [\n          {\n            \"id\": 1,\n            \"name\": \"Beef Cattle\",\n            \"fdaSpecies\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          },\n          {\n            \"id\": 1,\n            \"name\": \"Beef Cattle\",\n            \"fdaSpecies\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          }\n        ],\n        \"_dose\": \"3.0 ml per kg repeat in 6 hours and again in 24 hours\",\n        \"wtMeatHrs\": -87513747,\n        \"wtMilkHrs\": -19588203,\n        \"nada\": \"wip\",\n        \"tags\": [\n          {\n            \"id\": 8,\n            \"color\": \"#516cc6\",\n            \"name\": \"anim offici\",\n            \"fixes\": [\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              }\n            ]\n          },\n          {\n            \"id\": 8,\n            \"color\": \"#516cc6\",\n            \"name\": \"Duis c\",\n            \"fixes\": [\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              }\n            ]\n          }\n        ],\n        \"note\": \"<p>a free-form note</p>\",\n        \"amduca\": \"ONLABEL\"\n      }\n    ],\n    \"tags\": [\n      {\n        \"id\": 8,\n        \"color\": \"#516cc6\",\n        \"name\": \"in aliqua id \",\n        \"fixes\": [\n          {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n          },\n          {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n          }\n        ]\n      },\n      {\n        \"id\": 8,\n        \"color\": \"#516cc6\",\n        \"name\": \"sin\",\n        \"fixes\": [\n          {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n          },\n          {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n          }\n        ]\n      }\n    ],\n    \"diagnoses\": [\n      {\n        \"id\": 8,\n        \"name\": \"Pain/inflammation (musculoskeletal), treatment\"\n      },\n      {\n        \"id\": 8,\n        \"name\": \"Pain/inflammation (musculoskeletal), treatment\"\n      }\n    ],\n    \"eligibilities\": [\n      {\n        \"id\": 1,\n        \"name\": \"Beef Cattle\",\n        \"fdaSpecies\": [\n          \"bison\",\n          \"bison\"\n        ]\n      },\n      {\n        \"id\": 1,\n        \"name\": \"Beef Cattle\",\n        \"fdaSpecies\": [\n          \"dogs\",\n          \"horses\"\n        ]\n      }\n    ],\n    \"promises\": [\n      {\n        \"_type\": \"models.IdPromise\",\n        \"name\": \"ID promise\",\n        \"descrip\": \"You must give ID for each case enrolled\",\n        \"query\": \"What is the animal's name or number?\",\n        \"when\": \"PT24H\",\n        \"id\": 2345\n      },\n      {\n        \"_type\": \"models.IdPromise\",\n        \"name\": \"ID promise\",\n        \"descrip\": \"You must give ID for each case enrolled\",\n        \"query\": \"What is the animal's name or number?\",\n        \"when\": \"PT24H\",\n        \"id\": 2345\n      }\n    ],\n    \"metadata\": [\n      {\n        \"key\": \"popularity\",\n        \"value\": \"good 1.2\"\n      },\n      {\n        \"key\": \"popularity\",\n        \"value\": \"good 1.2\"\n      }\n    ]\n  },\n  \"remedy\": {\n    \"_type\": \"non consectetur\",\n    \"detail\": \"sunt culpa eu occaecat\",\n    \"message\": \"sint laborum\",\n    \"title\": \"dolor ut\"\n  }\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/protocols/tags/remedies",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"protocols",
												"tags",
												"remedies"
											]
										},
										"description": "Apply a Remedy to a Protocol, returning the fixed Protocol."
									},
									"response": [
										{
											"id": "e9f8e0ad-a66b-4433-954b-019a33634be6",
											"name": "OK",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "X-Auth-Token",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"protocol\": {\n    \"ownerId\": 1,\n    \"name\": \"wip\",\n    \"status\": \"PRESCRIBED\",\n    \"instructions\": {\n      \"considerations\": \"<p>This is just an example, not a real protocol.</p>\",\n      \"restrictions\": \"<p>Not for use on real animals.</p>\",\n      \"dothis\": \"<h3>Examinations to perform</h3>\",\n      \"recordthis\": \"<p>record every step in your notebook.</p>\",\n      \"success\": \"<p>All problems are gone</p>\",\n      \"failure\": \"<p>One or more problems remain</p>\",\n      \"references\": \"<a href=\\\"https://en.wikipedia.org/wiki/Rickrolling\\\">Wikipedia</a>\"\n    },\n    \"id\": 12345,\n    \"shortname\": \"wip\",\n    \"created\": \"2020-01-10T10:30:37Z\",\n    \"edited\": \"2020-02-10T10:30:37Z\",\n    \"vetNote\": \"consider prescribing protocol x instead\",\n    \"wtMeatHrs\": 22,\n    \"wtMilkHrs\": 5,\n    \"shareAll\": true,\n    \"shareClonable\": true,\n    \"caseDefinition\": {\n      \"requireId\": false,\n      \"requireMor\": false,\n      \"contraindications\": \"<p>prohibited in animals older than than 24 months</p>\",\n      \"medical\": \"if fever is present, consider Protocol 12345 instead.\",\n      \"economic\": \"culling should be considered as an alternative, as milk production is unlikely to return to normal after treatment\",\n      \"note\": \"<p>overcrowding may be contributing to issues</p>\"\n    },\n    \"treatments\": [\n      {\n        \"product\": \"MiracleMed\",\n        \"route\": \"wip\",\n        \"dosage\": {\n          \"doseId\": -34480078\n        },\n        \"sequenceFunction\": {\n          \"_type\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n          }\n        },\n        \"sizeFunction\": {\n          \"dose\": {\n            \"quantity\": {\n              \"dimension\": \"Volume\",\n              \"value\": 3,\n              \"symbol\": \"ml\"\n            }\n          },\n          \"_type\": \"models.FixedDoseFunction\"\n        },\n        \"id\": \"B-123\",\n        \"ownerId\": 0,\n        \"description\": \"3.0 ml per kg repeat\",\n        \"eligibilities\": [\n          {\n            \"id\": 1,\n            \"name\": \"Beef Cattle\",\n            \"fdaSpecies\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          },\n          {\n            \"id\": 1,\n            \"name\": \"Beef Cattle\",\n            \"fdaSpecies\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          }\n        ],\n        \"_dose\": \"3.0 ml per kg repeat in 6 hours and again in 24 hours\",\n        \"wtMeatHrs\": -74077650,\n        \"wtMilkHrs\": 72784942,\n        \"nada\": \"wip\",\n        \"tags\": [\n          {\n            \"id\": 8,\n            \"color\": \"#516cc6\",\n            \"name\": \"v\",\n            \"fixes\": [\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              }\n            ]\n          },\n          {\n            \"id\": 8,\n            \"color\": \"#516cc6\",\n            \"name\": \"ni\",\n            \"fixes\": [\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              }\n            ]\n          }\n        ],\n        \"note\": \"<p>a free-form note</p>\",\n        \"amduca\": \"ONLABEL\"\n      },\n      {\n        \"product\": \"MiracleMed\",\n        \"route\": \"wip\",\n        \"dosage\": {\n          \"doseId\": -77455458\n        },\n        \"sequenceFunction\": {\n          \"_type\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n          }\n        },\n        \"sizeFunction\": {\n          \"dose\": {\n            \"quantity\": {\n              \"dimension\": \"Volume\",\n              \"value\": 3,\n              \"symbol\": \"ml\"\n            }\n          },\n          \"_type\": \"models.FixedDoseFunction\"\n        },\n        \"id\": \"B-123\",\n        \"ownerId\": 0,\n        \"description\": \"3.0 ml per kg repeat\",\n        \"eligibilities\": [\n          {\n            \"id\": 1,\n            \"name\": \"Beef Cattle\",\n            \"fdaSpecies\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          },\n          {\n            \"id\": 1,\n            \"name\": \"Beef Cattle\",\n            \"fdaSpecies\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          }\n        ],\n        \"_dose\": \"3.0 ml per kg repeat in 6 hours and again in 24 hours\",\n        \"wtMeatHrs\": -87513747,\n        \"wtMilkHrs\": -19588203,\n        \"nada\": \"wip\",\n        \"tags\": [\n          {\n            \"id\": 8,\n            \"color\": \"#516cc6\",\n            \"name\": \"anim offici\",\n            \"fixes\": [\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              }\n            ]\n          },\n          {\n            \"id\": 8,\n            \"color\": \"#516cc6\",\n            \"name\": \"Duis c\",\n            \"fixes\": [\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              }\n            ]\n          }\n        ],\n        \"note\": \"<p>a free-form note</p>\",\n        \"amduca\": \"ONLABEL\"\n      }\n    ],\n    \"tags\": [\n      {\n        \"id\": 8,\n        \"color\": \"#516cc6\",\n        \"name\": \"in aliqua id \",\n        \"fixes\": [\n          {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n          },\n          {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n          }\n        ]\n      },\n      {\n        \"id\": 8,\n        \"color\": \"#516cc6\",\n        \"name\": \"sin\",\n        \"fixes\": [\n          {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n          },\n          {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n          }\n        ]\n      }\n    ],\n    \"diagnoses\": [\n      {\n        \"id\": 8,\n        \"name\": \"Pain/inflammation (musculoskeletal), treatment\"\n      },\n      {\n        \"id\": 8,\n        \"name\": \"Pain/inflammation (musculoskeletal), treatment\"\n      }\n    ],\n    \"eligibilities\": [\n      {\n        \"id\": 1,\n        \"name\": \"Beef Cattle\",\n        \"fdaSpecies\": [\n          \"bison\",\n          \"bison\"\n        ]\n      },\n      {\n        \"id\": 1,\n        \"name\": \"Beef Cattle\",\n        \"fdaSpecies\": [\n          \"dogs\",\n          \"horses\"\n        ]\n      }\n    ],\n    \"promises\": [\n      {\n        \"_type\": \"models.IdPromise\",\n        \"name\": \"ID promise\",\n        \"descrip\": \"You must give ID for each case enrolled\",\n        \"query\": \"What is the animal's name or number?\",\n        \"when\": \"PT24H\",\n        \"id\": 2345\n      },\n      {\n        \"_type\": \"models.IdPromise\",\n        \"name\": \"ID promise\",\n        \"descrip\": \"You must give ID for each case enrolled\",\n        \"query\": \"What is the animal's name or number?\",\n        \"when\": \"PT24H\",\n        \"id\": 2345\n      }\n    ],\n    \"metadata\": [\n      {\n        \"key\": \"popularity\",\n        \"value\": \"good 1.2\"\n      },\n      {\n        \"key\": \"popularity\",\n        \"value\": \"good 1.2\"\n      }\n    ]\n  },\n  \"remedy\": {\n    \"_type\": \"non consectetur\",\n    \"detail\": \"sunt culpa eu occaecat\",\n    \"message\": \"sint laborum\",\n    \"title\": \"dolor ut\"\n  }\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/api/protocols/tags/remedies",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"protocols",
														"tags",
														"remedies"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n  \"ownerId\": 1,\n  \"name\": \"wip\",\n  \"status\": \"PRESCRIBED\",\n  \"instructions\": {\n    \"considerations\": \"<p>This is just an example, not a real protocol.</p>\",\n    \"restrictions\": \"<p>Not for use on real animals.</p>\",\n    \"dothis\": \"<h3>Examinations to perform</h3>\",\n    \"recordthis\": \"<p>record every step in your notebook.</p>\",\n    \"success\": \"<p>All problems are gone</p>\",\n    \"failure\": \"<p>One or more problems remain</p>\",\n    \"references\": \"<a href=\\\"https://en.wikipedia.org/wiki/Rickrolling\\\">Wikipedia</a>\"\n  },\n  \"id\": 12345,\n  \"shortname\": \"wip\",\n  \"created\": \"2020-01-10T10:30:37Z\",\n  \"edited\": \"2020-02-10T10:30:37Z\",\n  \"vetNote\": \"consider prescribing protocol x instead\",\n  \"wtMeatHrs\": 22,\n  \"wtMilkHrs\": 5,\n  \"shareAll\": true,\n  \"shareClonable\": true,\n  \"caseDefinition\": {\n    \"requireId\": false,\n    \"requireMor\": false,\n    \"contraindications\": \"<p>prohibited in animals older than than 24 months</p>\",\n    \"medical\": \"if fever is present, consider Protocol 12345 instead.\",\n    \"economic\": \"culling should be considered as an alternative, as milk production is unlikely to return to normal after treatment\",\n    \"note\": \"<p>overcrowding may be contributing to issues</p>\"\n  },\n  \"treatments\": [\n    {\n      \"product\": \"MiracleMed\",\n      \"route\": \"wip\",\n      \"dosage\": {\n        \"doseId\": 97395836\n      },\n      \"sequenceFunction\": {\n        \"_type\": \"models.SeqSingleDose\"\n      },\n      \"sizeFunction\": {\n        \"dose\": {\n          \"quantity\": {\n            \"dimension\": \"Volume\",\n            \"value\": 3,\n            \"symbol\": \"ml\"\n          }\n        },\n        \"_type\": \"models.FixedDoseFunction\"\n      },\n      \"id\": \"B-123\",\n      \"ownerId\": 0,\n      \"description\": \"3.0 ml per kg repeat\",\n      \"eligibilities\": [\n        {\n          \"id\": 1,\n          \"name\": \"Beef Cattle\",\n          \"fdaSpecies\": [\n            {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          ]\n        },\n        {\n          \"id\": 1,\n          \"name\": \"Beef Cattle\",\n          \"fdaSpecies\": [\n            {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          ]\n        }\n      ],\n      \"_dose\": \"3.0 ml per kg repeat in 6 hours and again in 24 hours\",\n      \"wtMeatHrs\": -96639015,\n      \"wtMilkHrs\": 79533997,\n      \"nada\": \"wip\",\n      \"tags\": [\n        {\n          \"id\": 8,\n          \"color\": \"#516cc6\",\n          \"name\": \"ut \",\n          \"fixes\": [\n            {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          ]\n        },\n        {\n          \"id\": 8,\n          \"color\": \"#516cc6\",\n          \"name\": \"dolore eius\",\n          \"fixes\": [\n            {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          ]\n        }\n      ],\n      \"note\": \"<p>a free-form note</p>\",\n      \"amduca\": \"ONLABEL\"\n    },\n    {\n      \"product\": \"MiracleMed\",\n      \"route\": \"wip\",\n      \"dosage\": {\n        \"doseId\": 55708793\n      },\n      \"sequenceFunction\": {\n        \"_type\": \"models.SeqSingleDose\"\n      },\n      \"sizeFunction\": {\n        \"dose\": {\n          \"quantity\": {\n            \"dimension\": \"Volume\",\n            \"value\": 3,\n            \"symbol\": \"ml\"\n          }\n        },\n        \"_type\": \"models.FixedDoseFunction\"\n      },\n      \"id\": \"B-123\",\n      \"ownerId\": 0,\n      \"description\": \"3.0 ml per kg repeat\",\n      \"eligibilities\": [\n        {\n          \"id\": 1,\n          \"name\": \"Beef Cattle\",\n          \"fdaSpecies\": [\n            {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          ]\n        },\n        {\n          \"id\": 1,\n          \"name\": \"Beef Cattle\",\n          \"fdaSpecies\": [\n            {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          ]\n        }\n      ],\n      \"_dose\": \"3.0 ml per kg repeat in 6 hours and again in 24 hours\",\n      \"wtMeatHrs\": -94773703,\n      \"wtMilkHrs\": -86875119,\n      \"nada\": \"wip\",\n      \"tags\": [\n        {\n          \"id\": 8,\n          \"color\": \"#516cc6\",\n          \"name\": \"culpa\",\n          \"fixes\": [\n            {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          ]\n        },\n        {\n          \"id\": 8,\n          \"color\": \"#516cc6\",\n          \"name\": \"id enim amet\",\n          \"fixes\": [\n            {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          ]\n        }\n      ],\n      \"note\": \"<p>a free-form note</p>\",\n      \"amduca\": \"ONLABEL\"\n    }\n  ],\n  \"tags\": [\n    {\n      \"id\": 8,\n      \"color\": \"#516cc6\",\n      \"name\": \"ad\",\n      \"fixes\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"id\": 8,\n      \"color\": \"#516cc6\",\n      \"name\": \"sit \",\n      \"fixes\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    }\n  ],\n  \"diagnoses\": [\n    {\n      \"id\": 8,\n      \"name\": \"Pain/inflammation (musculoskeletal), treatment\"\n    },\n    {\n      \"id\": 8,\n      \"name\": \"Pain/inflammation (musculoskeletal), treatment\"\n    }\n  ],\n  \"eligibilities\": [\n    {\n      \"id\": 1,\n      \"name\": \"Beef Cattle\",\n      \"fdaSpecies\": [\n        \"horses\",\n        \"unidentified\"\n      ]\n    },\n    {\n      \"id\": 1,\n      \"name\": \"Beef Cattle\",\n      \"fdaSpecies\": [\n        \"veal\",\n        \"sheep\"\n      ]\n    }\n  ],\n  \"promises\": [\n    {\n      \"_type\": \"models.IdPromise\",\n      \"name\": \"ID promise\",\n      \"descrip\": \"You must give ID for each case enrolled\",\n      \"query\": \"What is the animal's name or number?\",\n      \"when\": \"PT24H\",\n      \"id\": 2345\n    },\n    {\n      \"_type\": \"models.IdPromise\",\n      \"name\": \"ID promise\",\n      \"descrip\": \"You must give ID for each case enrolled\",\n      \"query\": \"What is the animal's name or number?\",\n      \"when\": \"PT24H\",\n      \"id\": 2345\n    }\n  ],\n  \"metadata\": [\n    {\n      \"key\": \"popularity\",\n      \"value\": \"good 1.2\"\n    },\n    {\n      \"key\": \"popularity\",\n      \"value\": \"good 1.2\"\n    }\n  ]\n}"
										},
										{
											"id": "1d084717-d65d-4128-9e15-daf7eda7a73b",
											"name": "The server can not understand the request due to invalid syntax.",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "X-Auth-Token",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"protocol\": {\n    \"ownerId\": 1,\n    \"name\": \"wip\",\n    \"status\": \"PRESCRIBED\",\n    \"instructions\": {\n      \"considerations\": \"<p>This is just an example, not a real protocol.</p>\",\n      \"restrictions\": \"<p>Not for use on real animals.</p>\",\n      \"dothis\": \"<h3>Examinations to perform</h3>\",\n      \"recordthis\": \"<p>record every step in your notebook.</p>\",\n      \"success\": \"<p>All problems are gone</p>\",\n      \"failure\": \"<p>One or more problems remain</p>\",\n      \"references\": \"<a href=\\\"https://en.wikipedia.org/wiki/Rickrolling\\\">Wikipedia</a>\"\n    },\n    \"id\": 12345,\n    \"shortname\": \"wip\",\n    \"created\": \"2020-01-10T10:30:37Z\",\n    \"edited\": \"2020-02-10T10:30:37Z\",\n    \"vetNote\": \"consider prescribing protocol x instead\",\n    \"wtMeatHrs\": 22,\n    \"wtMilkHrs\": 5,\n    \"shareAll\": true,\n    \"shareClonable\": true,\n    \"caseDefinition\": {\n      \"requireId\": false,\n      \"requireMor\": false,\n      \"contraindications\": \"<p>prohibited in animals older than than 24 months</p>\",\n      \"medical\": \"if fever is present, consider Protocol 12345 instead.\",\n      \"economic\": \"culling should be considered as an alternative, as milk production is unlikely to return to normal after treatment\",\n      \"note\": \"<p>overcrowding may be contributing to issues</p>\"\n    },\n    \"treatments\": [\n      {\n        \"product\": \"MiracleMed\",\n        \"route\": \"wip\",\n        \"dosage\": {\n          \"doseId\": -34480078\n        },\n        \"sequenceFunction\": {\n          \"_type\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n          }\n        },\n        \"sizeFunction\": {\n          \"dose\": {\n            \"quantity\": {\n              \"dimension\": \"Volume\",\n              \"value\": 3,\n              \"symbol\": \"ml\"\n            }\n          },\n          \"_type\": \"models.FixedDoseFunction\"\n        },\n        \"id\": \"B-123\",\n        \"ownerId\": 0,\n        \"description\": \"3.0 ml per kg repeat\",\n        \"eligibilities\": [\n          {\n            \"id\": 1,\n            \"name\": \"Beef Cattle\",\n            \"fdaSpecies\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          },\n          {\n            \"id\": 1,\n            \"name\": \"Beef Cattle\",\n            \"fdaSpecies\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          }\n        ],\n        \"_dose\": \"3.0 ml per kg repeat in 6 hours and again in 24 hours\",\n        \"wtMeatHrs\": -74077650,\n        \"wtMilkHrs\": 72784942,\n        \"nada\": \"wip\",\n        \"tags\": [\n          {\n            \"id\": 8,\n            \"color\": \"#516cc6\",\n            \"name\": \"v\",\n            \"fixes\": [\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              }\n            ]\n          },\n          {\n            \"id\": 8,\n            \"color\": \"#516cc6\",\n            \"name\": \"ni\",\n            \"fixes\": [\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              }\n            ]\n          }\n        ],\n        \"note\": \"<p>a free-form note</p>\",\n        \"amduca\": \"ONLABEL\"\n      },\n      {\n        \"product\": \"MiracleMed\",\n        \"route\": \"wip\",\n        \"dosage\": {\n          \"doseId\": -77455458\n        },\n        \"sequenceFunction\": {\n          \"_type\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n          }\n        },\n        \"sizeFunction\": {\n          \"dose\": {\n            \"quantity\": {\n              \"dimension\": \"Volume\",\n              \"value\": 3,\n              \"symbol\": \"ml\"\n            }\n          },\n          \"_type\": \"models.FixedDoseFunction\"\n        },\n        \"id\": \"B-123\",\n        \"ownerId\": 0,\n        \"description\": \"3.0 ml per kg repeat\",\n        \"eligibilities\": [\n          {\n            \"id\": 1,\n            \"name\": \"Beef Cattle\",\n            \"fdaSpecies\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          },\n          {\n            \"id\": 1,\n            \"name\": \"Beef Cattle\",\n            \"fdaSpecies\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          }\n        ],\n        \"_dose\": \"3.0 ml per kg repeat in 6 hours and again in 24 hours\",\n        \"wtMeatHrs\": -87513747,\n        \"wtMilkHrs\": -19588203,\n        \"nada\": \"wip\",\n        \"tags\": [\n          {\n            \"id\": 8,\n            \"color\": \"#516cc6\",\n            \"name\": \"anim offici\",\n            \"fixes\": [\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              }\n            ]\n          },\n          {\n            \"id\": 8,\n            \"color\": \"#516cc6\",\n            \"name\": \"Duis c\",\n            \"fixes\": [\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              }\n            ]\n          }\n        ],\n        \"note\": \"<p>a free-form note</p>\",\n        \"amduca\": \"ONLABEL\"\n      }\n    ],\n    \"tags\": [\n      {\n        \"id\": 8,\n        \"color\": \"#516cc6\",\n        \"name\": \"in aliqua id \",\n        \"fixes\": [\n          {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n          },\n          {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n          }\n        ]\n      },\n      {\n        \"id\": 8,\n        \"color\": \"#516cc6\",\n        \"name\": \"sin\",\n        \"fixes\": [\n          {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n          },\n          {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n          }\n        ]\n      }\n    ],\n    \"diagnoses\": [\n      {\n        \"id\": 8,\n        \"name\": \"Pain/inflammation (musculoskeletal), treatment\"\n      },\n      {\n        \"id\": 8,\n        \"name\": \"Pain/inflammation (musculoskeletal), treatment\"\n      }\n    ],\n    \"eligibilities\": [\n      {\n        \"id\": 1,\n        \"name\": \"Beef Cattle\",\n        \"fdaSpecies\": [\n          \"bison\",\n          \"bison\"\n        ]\n      },\n      {\n        \"id\": 1,\n        \"name\": \"Beef Cattle\",\n        \"fdaSpecies\": [\n          \"dogs\",\n          \"horses\"\n        ]\n      }\n    ],\n    \"promises\": [\n      {\n        \"_type\": \"models.IdPromise\",\n        \"name\": \"ID promise\",\n        \"descrip\": \"You must give ID for each case enrolled\",\n        \"query\": \"What is the animal's name or number?\",\n        \"when\": \"PT24H\",\n        \"id\": 2345\n      },\n      {\n        \"_type\": \"models.IdPromise\",\n        \"name\": \"ID promise\",\n        \"descrip\": \"You must give ID for each case enrolled\",\n        \"query\": \"What is the animal's name or number?\",\n        \"when\": \"PT24H\",\n        \"id\": 2345\n      }\n    ],\n    \"metadata\": [\n      {\n        \"key\": \"popularity\",\n        \"value\": \"good 1.2\"\n      },\n      {\n        \"key\": \"popularity\",\n        \"value\": \"good 1.2\"\n      }\n    ]\n  },\n  \"remedy\": {\n    \"_type\": \"non consectetur\",\n    \"detail\": \"sunt culpa eu occaecat\",\n    \"message\": \"sint laborum\",\n    \"title\": \"dolor ut\"\n  }\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/api/protocols/tags/remedies",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"protocols",
														"tags",
														"remedies"
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n  \"title\": \"incorrect username or password\",\n  \"status\": 404,\n  \"errorType\": \"/errors/incorrect-user-pass\",\n  \"detail\": \"Authentication failed due to incorrect username or password.\",\n  \"instance\": \"/login/log/abc123\"\n}"
										},
										{
											"id": "861e22bb-a771-4db1-880e-0c595499272f",
											"name": "Authorization required",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "X-Auth-Token",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"protocol\": {\n    \"ownerId\": 1,\n    \"name\": \"wip\",\n    \"status\": \"PRESCRIBED\",\n    \"instructions\": {\n      \"considerations\": \"<p>This is just an example, not a real protocol.</p>\",\n      \"restrictions\": \"<p>Not for use on real animals.</p>\",\n      \"dothis\": \"<h3>Examinations to perform</h3>\",\n      \"recordthis\": \"<p>record every step in your notebook.</p>\",\n      \"success\": \"<p>All problems are gone</p>\",\n      \"failure\": \"<p>One or more problems remain</p>\",\n      \"references\": \"<a href=\\\"https://en.wikipedia.org/wiki/Rickrolling\\\">Wikipedia</a>\"\n    },\n    \"id\": 12345,\n    \"shortname\": \"wip\",\n    \"created\": \"2020-01-10T10:30:37Z\",\n    \"edited\": \"2020-02-10T10:30:37Z\",\n    \"vetNote\": \"consider prescribing protocol x instead\",\n    \"wtMeatHrs\": 22,\n    \"wtMilkHrs\": 5,\n    \"shareAll\": true,\n    \"shareClonable\": true,\n    \"caseDefinition\": {\n      \"requireId\": false,\n      \"requireMor\": false,\n      \"contraindications\": \"<p>prohibited in animals older than than 24 months</p>\",\n      \"medical\": \"if fever is present, consider Protocol 12345 instead.\",\n      \"economic\": \"culling should be considered as an alternative, as milk production is unlikely to return to normal after treatment\",\n      \"note\": \"<p>overcrowding may be contributing to issues</p>\"\n    },\n    \"treatments\": [\n      {\n        \"product\": \"MiracleMed\",\n        \"route\": \"wip\",\n        \"dosage\": {\n          \"doseId\": -34480078\n        },\n        \"sequenceFunction\": {\n          \"_type\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n          }\n        },\n        \"sizeFunction\": {\n          \"dose\": {\n            \"quantity\": {\n              \"dimension\": \"Volume\",\n              \"value\": 3,\n              \"symbol\": \"ml\"\n            }\n          },\n          \"_type\": \"models.FixedDoseFunction\"\n        },\n        \"id\": \"B-123\",\n        \"ownerId\": 0,\n        \"description\": \"3.0 ml per kg repeat\",\n        \"eligibilities\": [\n          {\n            \"id\": 1,\n            \"name\": \"Beef Cattle\",\n            \"fdaSpecies\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          },\n          {\n            \"id\": 1,\n            \"name\": \"Beef Cattle\",\n            \"fdaSpecies\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          }\n        ],\n        \"_dose\": \"3.0 ml per kg repeat in 6 hours and again in 24 hours\",\n        \"wtMeatHrs\": -74077650,\n        \"wtMilkHrs\": 72784942,\n        \"nada\": \"wip\",\n        \"tags\": [\n          {\n            \"id\": 8,\n            \"color\": \"#516cc6\",\n            \"name\": \"v\",\n            \"fixes\": [\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              }\n            ]\n          },\n          {\n            \"id\": 8,\n            \"color\": \"#516cc6\",\n            \"name\": \"ni\",\n            \"fixes\": [\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              }\n            ]\n          }\n        ],\n        \"note\": \"<p>a free-form note</p>\",\n        \"amduca\": \"ONLABEL\"\n      },\n      {\n        \"product\": \"MiracleMed\",\n        \"route\": \"wip\",\n        \"dosage\": {\n          \"doseId\": -77455458\n        },\n        \"sequenceFunction\": {\n          \"_type\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n          }\n        },\n        \"sizeFunction\": {\n          \"dose\": {\n            \"quantity\": {\n              \"dimension\": \"Volume\",\n              \"value\": 3,\n              \"symbol\": \"ml\"\n            }\n          },\n          \"_type\": \"models.FixedDoseFunction\"\n        },\n        \"id\": \"B-123\",\n        \"ownerId\": 0,\n        \"description\": \"3.0 ml per kg repeat\",\n        \"eligibilities\": [\n          {\n            \"id\": 1,\n            \"name\": \"Beef Cattle\",\n            \"fdaSpecies\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          },\n          {\n            \"id\": 1,\n            \"name\": \"Beef Cattle\",\n            \"fdaSpecies\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          }\n        ],\n        \"_dose\": \"3.0 ml per kg repeat in 6 hours and again in 24 hours\",\n        \"wtMeatHrs\": -87513747,\n        \"wtMilkHrs\": -19588203,\n        \"nada\": \"wip\",\n        \"tags\": [\n          {\n            \"id\": 8,\n            \"color\": \"#516cc6\",\n            \"name\": \"anim offici\",\n            \"fixes\": [\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              }\n            ]\n          },\n          {\n            \"id\": 8,\n            \"color\": \"#516cc6\",\n            \"name\": \"Duis c\",\n            \"fixes\": [\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              }\n            ]\n          }\n        ],\n        \"note\": \"<p>a free-form note</p>\",\n        \"amduca\": \"ONLABEL\"\n      }\n    ],\n    \"tags\": [\n      {\n        \"id\": 8,\n        \"color\": \"#516cc6\",\n        \"name\": \"in aliqua id \",\n        \"fixes\": [\n          {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n          },\n          {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n          }\n        ]\n      },\n      {\n        \"id\": 8,\n        \"color\": \"#516cc6\",\n        \"name\": \"sin\",\n        \"fixes\": [\n          {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n          },\n          {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n          }\n        ]\n      }\n    ],\n    \"diagnoses\": [\n      {\n        \"id\": 8,\n        \"name\": \"Pain/inflammation (musculoskeletal), treatment\"\n      },\n      {\n        \"id\": 8,\n        \"name\": \"Pain/inflammation (musculoskeletal), treatment\"\n      }\n    ],\n    \"eligibilities\": [\n      {\n        \"id\": 1,\n        \"name\": \"Beef Cattle\",\n        \"fdaSpecies\": [\n          \"bison\",\n          \"bison\"\n        ]\n      },\n      {\n        \"id\": 1,\n        \"name\": \"Beef Cattle\",\n        \"fdaSpecies\": [\n          \"dogs\",\n          \"horses\"\n        ]\n      }\n    ],\n    \"promises\": [\n      {\n        \"_type\": \"models.IdPromise\",\n        \"name\": \"ID promise\",\n        \"descrip\": \"You must give ID for each case enrolled\",\n        \"query\": \"What is the animal's name or number?\",\n        \"when\": \"PT24H\",\n        \"id\": 2345\n      },\n      {\n        \"_type\": \"models.IdPromise\",\n        \"name\": \"ID promise\",\n        \"descrip\": \"You must give ID for each case enrolled\",\n        \"query\": \"What is the animal's name or number?\",\n        \"when\": \"PT24H\",\n        \"id\": 2345\n      }\n    ],\n    \"metadata\": [\n      {\n        \"key\": \"popularity\",\n        \"value\": \"good 1.2\"\n      },\n      {\n        \"key\": \"popularity\",\n        \"value\": \"good 1.2\"\n      }\n    ]\n  },\n  \"remedy\": {\n    \"_type\": \"non consectetur\",\n    \"detail\": \"sunt culpa eu occaecat\",\n    \"message\": \"sint laborum\",\n    \"title\": \"dolor ut\"\n  }\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/api/protocols/tags/remedies",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"protocols",
														"tags",
														"remedies"
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": ""
										}
									]
								}
							],
							"id": "da8a5186-8d69-4569-8e14-1ad76b1421f7"
						},
						{
							"name": "promises",
							"item": [
								{
									"name": "list of all Promises",
									"id": "fd600765-5b9d-4250-805c-e184c0fd66cf",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/protocols/promises",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"protocols",
												"promises"
											]
										},
										"description": "This endpoint returns the full array of available Promises."
									},
									"response": [
										{
											"id": "de4eb33a-550f-47db-ba75-372ab779d09e",
											"name": "OK",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "X-Auth-Token",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/protocols/promises",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"protocols",
														"promises"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n  \"labels\": [\n    {\n      \"_type\": \"models.IdPromise\",\n      \"name\": \"ID promise\",\n      \"descrip\": \"You must give ID for each case enrolled\",\n      \"query\": \"What is the animal's name or number?\",\n      \"when\": \"PT24H\",\n      \"id\": 2345\n    },\n    {\n      \"_type\": \"models.IdPromise\",\n      \"name\": \"ID promise\",\n      \"descrip\": \"You must give ID for each case enrolled\",\n      \"query\": \"What is the animal's name or number?\",\n      \"when\": \"PT24H\",\n      \"id\": 2345\n    }\n  ]\n}"
										}
									]
								},
								{
									"name": "create Promise",
									"id": "457e3bd8-aaaf-4d12-85e4-4ccede39a2e9",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/protocols/promises",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"protocols",
												"promises"
											]
										}
									},
									"response": [
										{
											"id": "46c84224-602b-4561-b75a-dda6a9ba2dd1",
											"name": "The server can not understand the request due to invalid syntax.",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "X-Auth-Token",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/protocols/promises",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"protocols",
														"promises"
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n  \"title\": \"incorrect username or password\",\n  \"status\": 404,\n  \"errorType\": \"/errors/incorrect-user-pass\",\n  \"detail\": \"Authentication failed due to incorrect username or password.\",\n  \"instance\": \"/login/log/abc123\"\n}"
										},
										{
											"id": "f4274ef3-b290-461e-8296-6f17a9341088",
											"name": "Authorization required",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "X-Auth-Token",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/protocols/promises",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"protocols",
														"promises"
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": ""
										}
									]
								},
								{
									"name": "Promises in a Protocol",
									"id": "fb451adb-2b7c-4fec-9b82-2e5cb7640323",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/protocols/promises/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"protocols",
												"promises",
												":id"
											],
											"variable": [
												{
													"id": "1656c8cd-047e-42aa-8f1e-94ad0a977d5d",
													"key": "id",
													"value": "32",
													"description": "(Required) protocol  ID"
												}
											]
										},
										"description": "Return Promises contained within a Protocol."
									},
									"response": [
										{
											"id": "c555995b-201b-4e6a-a368-86ba423e847f",
											"name": "OK",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "X-Auth-Token",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/protocols/promises/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"protocols",
														"promises",
														":id"
													],
													"variable": [
														{
															"key": "id",
															"value": "32",
															"description": "(Required) protocol  ID"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n  \"id\": 1,\n  \"fdaSpecies\": [\n    \"ChickensBroilers\",\n    \"ChickensBroilers\"\n  ],\n  \"diagnosis\": \"pain (colic), symptomatic treatment\",\n  \"dxId\": 2002,\n  \"product\": \"Prevailâ„¢ Flunixin Meglumine Injection\",\n  \"route\": \"intr-corporeal\",\n  \"wtMeatHrs\": 22,\n  \"wtMilkHrs\": 5,\n  \"productId\": 1315018,\n  \"_dose\": \"3.0 ml per kg repeat in 6 hours and again in 24 hours\",\n  \"sequenceFunction\": {\n    \"_type\": \"models.SeqSingleDose\"\n  },\n  \"sizeFunction\": {\n    \"dose\": {\n      \"quantity\": {\n        \"dimension\": \"Volume\",\n        \"value\": 3,\n        \"symbol\": \"ml\"\n      }\n    },\n    \"_type\": \"models.FixedDoseFunction\"\n  },\n  \"doseNote\": \"THis can contain <b>html</b> tags\",\n  \"wtNote\": \"not for dairy animals\",\n  \"ndc\": \"200-308\",\n  \"generic\": \"OXYTETRACYCLINE\"\n}"
										}
									]
								}
							],
							"id": "7cde237a-6d4f-4f87-a16a-eaf95aade5ca"
						},
						{
							"name": "eligibilities",
							"item": [
								{
									"name": "list of all eligibilities",
									"id": "b3c089e8-6d05-46be-9be2-8fb4288b3330",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/protocols/eligibilities",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"protocols",
												"eligibilities"
											]
										},
										"description": "This endpoint returns an array of Eligibilities from which a User may choose. The ID field is authoritative, i.e., is all that is needed to identify a particular Eligibility."
									},
									"response": [
										{
											"id": "d64197d8-23ff-4c75-a1da-dda2047e1987",
											"name": "OK",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "X-Auth-Token",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/protocols/eligibilities",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"protocols",
														"eligibilities"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n  \"eligibilities\": [\n    {\n      \"id\": 1,\n      \"name\": \"Beef Cattle\",\n      \"fdaSpecies\": [\n        \"fish\",\n        \"dairy_cattle\"\n      ]\n    },\n    {\n      \"id\": 1,\n      \"name\": \"Beef Cattle\",\n      \"fdaSpecies\": [\n        \"horses\",\n        \"emus\"\n      ]\n    }\n  ]\n}"
										}
									]
								},
								{
									"name": "create Eligibility",
									"id": "1c9719f6-6108-4824-8386-dc2af715aa7f",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"id\": 1,\n  \"name\": \"Beef Cattle\",\n  \"fdaSpecies\": [\n    \"swine\",\n    \"other\"\n  ]\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/protocols/eligibilities",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"protocols",
												"eligibilities"
											]
										},
										"description": "Creation  a Eligibility."
									},
									"response": [
										{
											"id": "68423bd3-d0a6-4d77-ab1b-6d72ec5ef0b5",
											"name": "Success â€“  Eligibility recorded",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "X-Auth-Token",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"id\": 1,\n  \"name\": \"Beef Cattle\",\n  \"fdaSpecies\": [\n    \"swine\",\n    \"other\"\n  ]\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/api/protocols/eligibilities",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"protocols",
														"eligibilities"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n  \"protocol\": {\n    \"id\": 1,\n    \"name\": \"Beef Cattle\",\n    \"fdaSpecies\": [\n      \"swine\",\n      \"salmon\"\n    ]\n  }\n}"
										},
										{
											"id": "0fdccf1e-ef24-410e-83e2-33246f54445a",
											"name": "The server can not understand the request due to invalid syntax.",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "X-Auth-Token",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"id\": 1,\n  \"name\": \"Beef Cattle\",\n  \"fdaSpecies\": [\n    \"swine\",\n    \"other\"\n  ]\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/api/protocols/eligibilities",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"protocols",
														"eligibilities"
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n  \"title\": \"incorrect username or password\",\n  \"status\": 404,\n  \"errorType\": \"/errors/incorrect-user-pass\",\n  \"detail\": \"Authentication failed due to incorrect username or password.\",\n  \"instance\": \"/login/log/abc123\"\n}"
										},
										{
											"id": "33a92e2e-dc03-4fbb-9627-1e92d21c9296",
											"name": "Authorization required",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "X-Auth-Token",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"id\": 1,\n  \"name\": \"Beef Cattle\",\n  \"fdaSpecies\": [\n    \"swine\",\n    \"other\"\n  ]\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/api/protocols/eligibilities",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"protocols",
														"eligibilities"
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": ""
										}
									]
								},
								{
									"name": "Eligibility",
									"id": "8d465683-cbce-4d68-ae4b-272c898e3992",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "DELETE",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/protocols/eligibilities/{{id}}}",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"protocols",
												"eligibilities",
												"{{id}}}"
											]
										},
										"description": "Delete Eligibility."
									},
									"response": [
										{
											"id": "6f01d912-f2ed-4e1e-9bc6-ab4e63a8e6bf",
											"name": "deleted",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "X-Auth-Token",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/protocols/eligibilities/{{id}}}",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"protocols",
														"eligibilities",
														"{{id}}}"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n  \"deleted\": 74301612\n}"
										},
										{
											"id": "cb2c830c-2468-4b8d-bac6-4398c8706290",
											"name": "The server can not understand the request due to invalid syntax.",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "X-Auth-Token",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/protocols/eligibilities/{{id}}}",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"protocols",
														"eligibilities",
														"{{id}}}"
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n  \"title\": \"incorrect username or password\",\n  \"status\": 404,\n  \"errorType\": \"/errors/incorrect-user-pass\",\n  \"detail\": \"Authentication failed due to incorrect username or password.\",\n  \"instance\": \"/login/log/abc123\"\n}"
										},
										{
											"id": "a139643e-b6b9-4d62-8116-636568b43048",
											"name": "Authorization required",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "X-Auth-Token",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/protocols/eligibilities/{{id}}}",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"protocols",
														"eligibilities",
														"{{id}}}"
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": ""
										}
									]
								},
								{
									"name": "list of fda species",
									"id": "35a6ea19-bd87-495e-83ea-36587661c15f",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/protocols/eligibilities/fdaspecies",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"protocols",
												"eligibilities",
												"fdaspecies"
											]
										},
										"description": "\"Species\" is the term FDA uses to describe a class of animals in a label claim."
									},
									"response": [
										{
											"id": "d5a39347-6bc9-433a-8671-e91c359a238b",
											"name": "OK",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "X-Auth-Token",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/protocols/eligibilities/fdaspecies",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"protocols",
														"eligibilities",
														"fdaspecies"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n  \"eligibilities\": [\n    [\n      \"emus\",\n      \"dogs\"\n    ],\n    [\n      \"salmon\",\n      \"salmon\"\n    ]\n  ]\n}"
										}
									]
								}
							],
							"id": "3c4cba87-6751-4db2-b759-da51e2d6c839"
						},
						{
							"name": "diagnoses",
							"item": [
								{
									"name": "list of all diagnoses",
									"id": "59e369ce-c8f7-40ae-94da-b3bfcae6d8d8",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/protocols/diagnoses",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"protocols",
												"diagnoses"
											]
										},
										"description": "Returns an array of all coded Diagnoses known to the system."
									},
									"response": [
										{
											"id": "d06a0dbd-be0f-465f-9219-0f09c16e6619",
											"name": "OK",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "X-Auth-Token",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/protocols/diagnoses",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"protocols",
														"diagnoses"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n  \"diagnoses\": [\n    {\n      \"id\": 8,\n      \"name\": \"Pain/inflammation (musculoskeletal), treatment\"\n    },\n    {\n      \"id\": 8,\n      \"name\": \"Pain/inflammation (musculoskeletal), treatment\"\n    }\n  ]\n}"
										},
										{
											"id": "f1ace54d-c5c5-43de-b781-2f34f17f2b35",
											"name": "The server can not understand the request due to invalid syntax.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "X-Auth-Token",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/protocols/diagnoses",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"protocols",
														"diagnoses"
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n  \"title\": \"incorrect username or password\",\n  \"status\": 404,\n  \"errorType\": \"/errors/incorrect-user-pass\",\n  \"detail\": \"Authentication failed due to incorrect username or password.\",\n  \"instance\": \"/login/log/abc123\"\n}"
										},
										{
											"id": "0721bf4c-aabb-4e9f-9de4-83919daa8116",
											"name": "Authorization required",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "X-Auth-Token",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/protocols/diagnoses",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"protocols",
														"diagnoses"
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": ""
										}
									]
								},
								{
									"name": "create Eligibility",
									"id": "c93a6ef8-82c6-41c3-9cc8-6e8ba2603be2",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"id\": 8,\n  \"name\": \"Pain/inflammation (musculoskeletal), treatment\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/protocols/diagnoses",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"protocols",
												"diagnoses"
											]
										},
										"description": "Create  a Diagnosis."
									},
									"response": [
										{
											"id": "07adaf77-6353-45fd-ba9a-8f68f9a014db",
											"name": "Success â€“  Diagnosis recorded",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "X-Auth-Token",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"id\": 8,\n  \"name\": \"Pain/inflammation (musculoskeletal), treatment\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/api/protocols/diagnoses",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"protocols",
														"diagnoses"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n  \"protocol\": {\n    \"id\": 8,\n    \"name\": \"Pain/inflammation (musculoskeletal), treatment\"\n  }\n}"
										},
										{
											"id": "b5a645b4-b726-45ac-b965-f0a18c3adde3",
											"name": "The server can not understand the request due to invalid syntax.",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "X-Auth-Token",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"id\": 8,\n  \"name\": \"Pain/inflammation (musculoskeletal), treatment\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/api/protocols/diagnoses",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"protocols",
														"diagnoses"
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n  \"title\": \"incorrect username or password\",\n  \"status\": 404,\n  \"errorType\": \"/errors/incorrect-user-pass\",\n  \"detail\": \"Authentication failed due to incorrect username or password.\",\n  \"instance\": \"/login/log/abc123\"\n}"
										},
										{
											"id": "07befeef-8cba-4571-a2da-181727f44f3d",
											"name": "Authorization required",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "X-Auth-Token",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"id\": 8,\n  \"name\": \"Pain/inflammation (musculoskeletal), treatment\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/api/protocols/diagnoses",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"protocols",
														"diagnoses"
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": ""
										}
									]
								},
								{
									"name": "Diagnosis",
									"id": "d62acc8a-2fe2-447a-9d1e-f43cfe81a524",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "DELETE",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/protocols/diagnoses/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"protocols",
												"diagnoses",
												":id"
											],
											"variable": [
												{
													"id": "43510fd8-d079-480a-93e5-a020a65a5181",
													"key": "id",
													"value": "29077371",
													"description": "(Required) "
												}
											]
										},
										"description": "Delete Diagnosis."
									},
									"response": [
										{
											"id": "217e1927-74b5-4d79-b032-b9788a837343",
											"name": "deleted",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "X-Auth-Token",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/protocols/diagnoses/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"protocols",
														"diagnoses",
														":id"
													],
													"variable": [
														{
															"key": "id",
															"value": "29077371",
															"description": "(Required) "
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n  \"deleted\": 74301612\n}"
										},
										{
											"id": "7781da1c-8d82-424a-aae6-510a708d8d76",
											"name": "The server can not understand the request due to invalid syntax.",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "X-Auth-Token",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/protocols/diagnoses/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"protocols",
														"diagnoses",
														":id"
													],
													"variable": [
														{
															"key": "id",
															"value": "29077371",
															"description": "(Required) "
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n  \"title\": \"incorrect username or password\",\n  \"status\": 404,\n  \"errorType\": \"/errors/incorrect-user-pass\",\n  \"detail\": \"Authentication failed due to incorrect username or password.\",\n  \"instance\": \"/login/log/abc123\"\n}"
										},
										{
											"id": "da13b85f-4151-431a-b005-f15b966d1c29",
											"name": "Authorization required",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "X-Auth-Token",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/protocols/diagnoses/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"protocols",
														"diagnoses",
														":id"
													],
													"variable": [
														{
															"key": "id",
															"value": "29077371",
															"description": "(Required) "
														}
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": ""
										}
									]
								}
							],
							"id": "b8087f89-7508-4b6b-8483-e7beb773f0ee"
						},
						{
							"name": "{id}",
							"item": [
								{
									"name": "retrieve protocol by ID",
									"id": "bbb2ec95-31e5-4e4a-abd5-793b8c6ad851",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/protocols/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"protocols",
												":id"
											],
											"variable": [
												{
													"id": "2709d2fe-e198-4680-b8c8-95c59c709728",
													"key": "id",
													"value": "7",
													"description": "(Required) Protocol ID key"
												}
											]
										},
										"description": "This endpoint retrieves a Protocol by `protocol.id`."
									},
									"response": [
										{
											"id": "f748e697-54bc-42d0-b601-7486dd7a3eaa",
											"name": "OK",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "X-Auth-Token",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/protocols/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"protocols",
														":id"
													],
													"variable": [
														{
															"key": "id",
															"value": "7",
															"description": "(Required) Protocol ID key"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n  \"protocol\": {\n    \"ownerId\": 1,\n    \"name\": \"wip\",\n    \"status\": \"PRESCRIBED\",\n    \"instructions\": {\n      \"considerations\": \"<p>This is just an example, not a real protocol.</p>\",\n      \"restrictions\": \"<p>Not for use on real animals.</p>\",\n      \"dothis\": \"<h3>Examinations to perform</h3>\",\n      \"recordthis\": \"<p>record every step in your notebook.</p>\",\n      \"success\": \"<p>All problems are gone</p>\",\n      \"failure\": \"<p>One or more problems remain</p>\",\n      \"references\": \"<a href=\\\"https://en.wikipedia.org/wiki/Rickrolling\\\">Wikipedia</a>\"\n    },\n    \"id\": 12345,\n    \"shortname\": \"wip\",\n    \"created\": \"2020-01-10T10:30:37Z\",\n    \"edited\": \"2020-02-10T10:30:37Z\",\n    \"vetNote\": \"consider prescribing protocol x instead\",\n    \"wtMeatHrs\": 22,\n    \"wtMilkHrs\": 5,\n    \"shareAll\": true,\n    \"shareClonable\": true,\n    \"caseDefinition\": {\n      \"requireId\": false,\n      \"requireMor\": false,\n      \"contraindications\": \"<p>prohibited in animals older than than 24 months</p>\",\n      \"medical\": \"if fever is present, consider Protocol 12345 instead.\",\n      \"economic\": \"culling should be considered as an alternative, as milk production is unlikely to return to normal after treatment\",\n      \"note\": \"<p>overcrowding may be contributing to issues</p>\"\n    },\n    \"treatments\": [\n      {\n        \"product\": \"MiracleMed\",\n        \"route\": \"wip\",\n        \"dosage\": {\n          \"doseId\": -58527078\n        },\n        \"sequenceFunction\": {\n          \"_type\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n          }\n        },\n        \"sizeFunction\": {\n          \"dose\": {\n            \"quantity\": {\n              \"dimension\": \"Volume\",\n              \"value\": 3,\n              \"symbol\": \"ml\"\n            }\n          },\n          \"_type\": \"models.FixedDoseFunction\"\n        },\n        \"id\": \"B-123\",\n        \"ownerId\": 0,\n        \"description\": \"3.0 ml per kg repeat\",\n        \"eligibilities\": [\n          {\n            \"id\": 1,\n            \"name\": \"Beef Cattle\",\n            \"fdaSpecies\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          },\n          {\n            \"id\": 1,\n            \"name\": \"Beef Cattle\",\n            \"fdaSpecies\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          }\n        ],\n        \"_dose\": \"3.0 ml per kg repeat in 6 hours and again in 24 hours\",\n        \"wtMeatHrs\": 12063618,\n        \"wtMilkHrs\": -30921578,\n        \"nada\": \"wip\",\n        \"tags\": [\n          {\n            \"id\": 8,\n            \"color\": \"#516cc6\",\n            \"name\": \"\",\n            \"fixes\": [\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              }\n            ]\n          },\n          {\n            \"id\": 8,\n            \"color\": \"#516cc6\",\n            \"name\": \"si\",\n            \"fixes\": [\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              }\n            ]\n          }\n        ],\n        \"note\": \"<p>a free-form note</p>\",\n        \"amduca\": \"OFFLABEL\"\n      },\n      {\n        \"product\": \"MiracleMed\",\n        \"route\": \"wip\",\n        \"dosage\": {\n          \"doseId\": -21450596\n        },\n        \"sequenceFunction\": {\n          \"_type\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n          }\n        },\n        \"sizeFunction\": {\n          \"dose\": {\n            \"quantity\": {\n              \"dimension\": \"Volume\",\n              \"value\": 3,\n              \"symbol\": \"ml\"\n            }\n          },\n          \"_type\": \"models.FixedDoseFunction\"\n        },\n        \"id\": \"B-123\",\n        \"ownerId\": 0,\n        \"description\": \"3.0 ml per kg repeat\",\n        \"eligibilities\": [\n          {\n            \"id\": 1,\n            \"name\": \"Beef Cattle\",\n            \"fdaSpecies\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          },\n          {\n            \"id\": 1,\n            \"name\": \"Beef Cattle\",\n            \"fdaSpecies\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          }\n        ],\n        \"_dose\": \"3.0 ml per kg repeat in 6 hours and again in 24 hours\",\n        \"wtMeatHrs\": -9128385,\n        \"wtMilkHrs\": 81060292,\n        \"nada\": \"wip\",\n        \"tags\": [\n          {\n            \"id\": 8,\n            \"color\": \"#516cc6\",\n            \"name\": \"ullamco\",\n            \"fixes\": [\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              }\n            ]\n          },\n          {\n            \"id\": 8,\n            \"color\": \"#516cc6\",\n            \"name\": \"pro\",\n            \"fixes\": [\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              }\n            ]\n          }\n        ],\n        \"note\": \"<p>a free-form note</p>\",\n        \"amduca\": \"UNIDENTIFIED\"\n      }\n    ],\n    \"tags\": [\n      {\n        \"id\": 8,\n        \"color\": \"#516cc6\",\n        \"name\": \"est e\",\n        \"fixes\": [\n          {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n          },\n          {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n          }\n        ]\n      },\n      {\n        \"id\": 8,\n        \"color\": \"#516cc6\",\n        \"name\": \"E\",\n        \"fixes\": [\n          {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n          },\n          {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n          }\n        ]\n      }\n    ],\n    \"diagnoses\": [\n      {\n        \"id\": 8,\n        \"name\": \"Pain/inflammation (musculoskeletal), treatment\"\n      },\n      {\n        \"id\": 8,\n        \"name\": \"Pain/inflammation (musculoskeletal), treatment\"\n      }\n    ],\n    \"eligibilities\": [\n      {\n        \"id\": 1,\n        \"name\": \"Beef Cattle\",\n        \"fdaSpecies\": [\n          \"beef_cattle\",\n          \"llamas\"\n        ]\n      },\n      {\n        \"id\": 1,\n        \"name\": \"Beef Cattle\",\n        \"fdaSpecies\": [\n          \"sheep\",\n          \"gamebirds\"\n        ]\n      }\n    ],\n    \"promises\": [\n      {\n        \"_type\": \"models.IdPromise\",\n        \"name\": \"ID promise\",\n        \"descrip\": \"You must give ID for each case enrolled\",\n        \"query\": \"What is the animal's name or number?\",\n        \"when\": \"PT24H\",\n        \"id\": 2345\n      },\n      {\n        \"_type\": \"models.IdPromise\",\n        \"name\": \"ID promise\",\n        \"descrip\": \"You must give ID for each case enrolled\",\n        \"query\": \"What is the animal's name or number?\",\n        \"when\": \"PT24H\",\n        \"id\": 2345\n      }\n    ],\n    \"metadata\": [\n      {\n        \"key\": \"popularity\",\n        \"value\": \"good 1.2\"\n      },\n      {\n        \"key\": \"popularity\",\n        \"value\": \"good 1.2\"\n      }\n    ]\n  }\n}"
										},
										{
											"id": "b59af6b1-51c6-44fd-adb3-7d3c24ab6426",
											"name": "The server can not understand the request due to invalid syntax.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "X-Auth-Token",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/protocols/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"protocols",
														":id"
													],
													"variable": [
														{
															"key": "id",
															"value": "7",
															"description": "(Required) Protocol ID key"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n  \"title\": \"incorrect username or password\",\n  \"status\": 404,\n  \"errorType\": \"/errors/incorrect-user-pass\",\n  \"detail\": \"Authentication failed due to incorrect username or password.\",\n  \"instance\": \"/login/log/abc123\"\n}"
										},
										{
											"id": "5e19df14-a30e-4679-88d2-7a571fc85d33",
											"name": "Authorization required",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "X-Auth-Token",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/protocols/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"protocols",
														":id"
													],
													"variable": [
														{
															"key": "id",
															"value": "7",
															"description": "(Required) Protocol ID key"
														}
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": ""
										}
									]
								},
								{
									"name": "delete protocol",
									"id": "892e927c-60da-4878-9242-5dd3197db24e",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "DELETE",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/protocols/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"protocols",
												":id"
											],
											"variable": [
												{
													"id": "acfd512b-b613-4297-bc5f-c1f8ef7f7761",
													"key": "id",
													"value": "29077371",
													"description": "(Required) Protocol ID key"
												}
											]
										},
										"description": "Change `protocol.status` to DELETED (this does not actually remove it from the database)."
									},
									"response": [
										{
											"id": "705093b3-d64c-49e2-a1e0-ed1049a1c642",
											"name": "Protocol deprecated",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "X-Auth-Token",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/protocols/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"protocols",
														":id"
													],
													"variable": [
														{
															"key": "id",
															"value": "29077371",
															"description": "(Required) Protocol ID key"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n  \"deprecated\": 39987122\n}"
										},
										{
											"id": "f40494b2-8c10-48fd-b0bb-06d90d5896c2",
											"name": "The server can not understand the request due to invalid syntax.",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "X-Auth-Token",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/protocols/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"protocols",
														":id"
													],
													"variable": [
														{
															"key": "id",
															"value": "29077371",
															"description": "(Required) Protocol ID key"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n  \"title\": \"incorrect username or password\",\n  \"status\": 404,\n  \"errorType\": \"/errors/incorrect-user-pass\",\n  \"detail\": \"Authentication failed due to incorrect username or password.\",\n  \"instance\": \"/login/log/abc123\"\n}"
										},
										{
											"id": "0fbfa833-ea99-48e7-9d8f-f880214ece2e",
											"name": "Authorization required",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "X-Auth-Token",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/protocols/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"protocols",
														":id"
													],
													"variable": [
														{
															"key": "id",
															"value": "29077371",
															"description": "(Required) Protocol ID key"
														}
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": ""
										}
									]
								},
								{
									"name": "list of all diagnoses",
									"id": "7fa516be-0175-4596-8b21-4733e5b82ab3",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/protocols/:id/prescriptions",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"protocols",
												":id",
												"prescriptions"
											],
											"variable": [
												{
													"id": "9c3f0590-0288-46c2-aaaa-c790d90387d7",
													"key": "id",
													"value": "29077371",
													"description": "(Required) Protocol ID key"
												}
											]
										},
										"description": "returns an array of Prescriptions"
									},
									"response": [
										{
											"id": "af5af4d9-37f6-496f-8405-0cb21ebdf9db",
											"name": "OK",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "X-Auth-Token",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/protocols/:id/prescriptions",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"protocols",
														":id",
														"prescriptions"
													],
													"variable": [
														{
															"key": "id",
															"value": "29077371",
															"description": "(Required) Protocol ID key"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n  \"diagnoses\": [\n    {\n      \"vorId\": 1,\n      \"morId\": 2,\n      \"protocol\": {\n        \"ownerId\": 1,\n        \"name\": \"wip\",\n        \"status\": \"PRESCRIBED\",\n        \"instructions\": {\n          \"considerations\": \"<p>This is just an example, not a real protocol.</p>\",\n          \"restrictions\": \"<p>Not for use on real animals.</p>\",\n          \"dothis\": \"<h3>Examinations to perform</h3>\",\n          \"recordthis\": \"<p>record every step in your notebook.</p>\",\n          \"success\": \"<p>All problems are gone</p>\",\n          \"failure\": \"<p>One or more problems remain</p>\",\n          \"references\": \"<a href=\\\"https://en.wikipedia.org/wiki/Rickrolling\\\">Wikipedia</a>\"\n        },\n        \"id\": 12345,\n        \"shortname\": \"wip\",\n        \"created\": \"2020-01-10T10:30:37Z\",\n        \"edited\": \"2020-02-10T10:30:37Z\",\n        \"vetNote\": \"consider prescribing protocol x instead\",\n        \"wtMeatHrs\": 22,\n        \"wtMilkHrs\": 5,\n        \"shareAll\": true,\n        \"shareClonable\": true,\n        \"caseDefinition\": {\n          \"requireId\": false,\n          \"requireMor\": false,\n          \"contraindications\": \"<p>prohibited in animals older than than 24 months</p>\",\n          \"medical\": \"if fever is present, consider Protocol 12345 instead.\",\n          \"economic\": \"culling should be considered as an alternative, as milk production is unlikely to return to normal after treatment\",\n          \"note\": \"<p>overcrowding may be contributing to issues</p>\"\n        },\n        \"treatments\": [\n          {\n            \"product\": \"MiracleMed\",\n            \"route\": \"wip\",\n            \"dosage\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"sequenceFunction\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"sizeFunction\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"id\": \"B-123\",\n            \"ownerId\": 0,\n            \"description\": \"3.0 ml per kg repeat\",\n            \"eligibilities\": [\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              }\n            ],\n            \"_dose\": \"3.0 ml per kg repeat in 6 hours and again in 24 hours\",\n            \"wtMeatHrs\": 9938504,\n            \"wtMilkHrs\": 67494375,\n            \"nada\": \"wip\",\n            \"tags\": [\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              }\n            ],\n            \"note\": \"<p>a free-form note</p>\",\n            \"amduca\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          },\n          {\n            \"product\": \"MiracleMed\",\n            \"route\": \"wip\",\n            \"dosage\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"sequenceFunction\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"sizeFunction\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"id\": \"B-123\",\n            \"ownerId\": 0,\n            \"description\": \"3.0 ml per kg repeat\",\n            \"eligibilities\": [\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              }\n            ],\n            \"_dose\": \"3.0 ml per kg repeat in 6 hours and again in 24 hours\",\n            \"wtMeatHrs\": 38445676,\n            \"wtMilkHrs\": -5408056,\n            \"nada\": \"wip\",\n            \"tags\": [\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              }\n            ],\n            \"note\": \"<p>a free-form note</p>\",\n            \"amduca\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          }\n        ],\n        \"tags\": [\n          {\n            \"id\": 8,\n            \"color\": \"#516cc6\",\n            \"name\": \"Ut ul\",\n            \"fixes\": [\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              }\n            ]\n          },\n          {\n            \"id\": 8,\n            \"color\": \"#516cc6\",\n            \"name\": \"cillum off\",\n            \"fixes\": [\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              }\n            ]\n          }\n        ],\n        \"diagnoses\": [\n          {\n            \"id\": 8,\n            \"name\": \"Pain/inflammation (musculoskeletal), treatment\"\n          },\n          {\n            \"id\": 8,\n            \"name\": \"Pain/inflammation (musculoskeletal), treatment\"\n          }\n        ],\n        \"eligibilities\": [\n          {\n            \"id\": 1,\n            \"name\": \"Beef Cattle\",\n            \"fdaSpecies\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          },\n          {\n            \"id\": 1,\n            \"name\": \"Beef Cattle\",\n            \"fdaSpecies\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          }\n        ],\n        \"promises\": [\n          {\n            \"_type\": \"models.IdPromise\",\n            \"name\": \"ID promise\",\n            \"descrip\": \"You must give ID for each case enrolled\",\n            \"query\": \"What is the animal's name or number?\",\n            \"when\": \"PT24H\",\n            \"id\": 2345\n          },\n          {\n            \"_type\": \"models.IdPromise\",\n            \"name\": \"ID promise\",\n            \"descrip\": \"You must give ID for each case enrolled\",\n            \"query\": \"What is the animal's name or number?\",\n            \"when\": \"PT24H\",\n            \"id\": 2345\n          }\n        ],\n        \"metadata\": [\n          {\n            \"key\": \"popularity\",\n            \"value\": \"good 1.2\"\n          },\n          {\n            \"key\": \"popularity\",\n            \"value\": \"good 1.2\"\n          }\n        ]\n      },\n      \"status\": \"PRESCRIBED\",\n      \"rxId\": \"gG3pBCR1GCMKm89c\",\n      \"refills\": 0,\n      \"expiration\": \"2021-01-10T10:30:37Z\",\n      \"created\": \"2021-08-10T10:30:37Z\",\n      \"metadata\": [\n        {\n          \"key\": \"popularity\",\n          \"value\": \"good 1.2\"\n        },\n        {\n          \"key\": \"popularity\",\n          \"value\": \"good 1.2\"\n        }\n      ]\n    },\n    {\n      \"vorId\": 1,\n      \"morId\": 2,\n      \"protocol\": {\n        \"ownerId\": 1,\n        \"name\": \"wip\",\n        \"status\": \"PRESCRIBED\",\n        \"instructions\": {\n          \"considerations\": \"<p>This is just an example, not a real protocol.</p>\",\n          \"restrictions\": \"<p>Not for use on real animals.</p>\",\n          \"dothis\": \"<h3>Examinations to perform</h3>\",\n          \"recordthis\": \"<p>record every step in your notebook.</p>\",\n          \"success\": \"<p>All problems are gone</p>\",\n          \"failure\": \"<p>One or more problems remain</p>\",\n          \"references\": \"<a href=\\\"https://en.wikipedia.org/wiki/Rickrolling\\\">Wikipedia</a>\"\n        },\n        \"id\": 12345,\n        \"shortname\": \"wip\",\n        \"created\": \"2020-01-10T10:30:37Z\",\n        \"edited\": \"2020-02-10T10:30:37Z\",\n        \"vetNote\": \"consider prescribing protocol x instead\",\n        \"wtMeatHrs\": 22,\n        \"wtMilkHrs\": 5,\n        \"shareAll\": true,\n        \"shareClonable\": true,\n        \"caseDefinition\": {\n          \"requireId\": false,\n          \"requireMor\": false,\n          \"contraindications\": \"<p>prohibited in animals older than than 24 months</p>\",\n          \"medical\": \"if fever is present, consider Protocol 12345 instead.\",\n          \"economic\": \"culling should be considered as an alternative, as milk production is unlikely to return to normal after treatment\",\n          \"note\": \"<p>overcrowding may be contributing to issues</p>\"\n        },\n        \"treatments\": [\n          {\n            \"product\": \"MiracleMed\",\n            \"route\": \"wip\",\n            \"dosage\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"sequenceFunction\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"sizeFunction\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"id\": \"B-123\",\n            \"ownerId\": 0,\n            \"description\": \"3.0 ml per kg repeat\",\n            \"eligibilities\": [\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              }\n            ],\n            \"_dose\": \"3.0 ml per kg repeat in 6 hours and again in 24 hours\",\n            \"wtMeatHrs\": 19434218,\n            \"wtMilkHrs\": 63515248,\n            \"nada\": \"wip\",\n            \"tags\": [\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              }\n            ],\n            \"note\": \"<p>a free-form note</p>\",\n            \"amduca\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          },\n          {\n            \"product\": \"MiracleMed\",\n            \"route\": \"wip\",\n            \"dosage\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"sequenceFunction\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"sizeFunction\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"id\": \"B-123\",\n            \"ownerId\": 0,\n            \"description\": \"3.0 ml per kg repeat\",\n            \"eligibilities\": [\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              }\n            ],\n            \"_dose\": \"3.0 ml per kg repeat in 6 hours and again in 24 hours\",\n            \"wtMeatHrs\": 60281307,\n            \"wtMilkHrs\": 28778593,\n            \"nada\": \"wip\",\n            \"tags\": [\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              }\n            ],\n            \"note\": \"<p>a free-form note</p>\",\n            \"amduca\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          }\n        ],\n        \"tags\": [\n          {\n            \"id\": 8,\n            \"color\": \"#516cc6\",\n            \"name\": \"adipisicing\",\n            \"fixes\": [\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              }\n            ]\n          },\n          {\n            \"id\": 8,\n            \"color\": \"#516cc6\",\n            \"name\": \"amet eius\",\n            \"fixes\": [\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              }\n            ]\n          }\n        ],\n        \"diagnoses\": [\n          {\n            \"id\": 8,\n            \"name\": \"Pain/inflammation (musculoskeletal), treatment\"\n          },\n          {\n            \"id\": 8,\n            \"name\": \"Pain/inflammation (musculoskeletal), treatment\"\n          }\n        ],\n        \"eligibilities\": [\n          {\n            \"id\": 1,\n            \"name\": \"Beef Cattle\",\n            \"fdaSpecies\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          },\n          {\n            \"id\": 1,\n            \"name\": \"Beef Cattle\",\n            \"fdaSpecies\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          }\n        ],\n        \"promises\": [\n          {\n            \"_type\": \"models.IdPromise\",\n            \"name\": \"ID promise\",\n            \"descrip\": \"You must give ID for each case enrolled\",\n            \"query\": \"What is the animal's name or number?\",\n            \"when\": \"PT24H\",\n            \"id\": 2345\n          },\n          {\n            \"_type\": \"models.IdPromise\",\n            \"name\": \"ID promise\",\n            \"descrip\": \"You must give ID for each case enrolled\",\n            \"query\": \"What is the animal's name or number?\",\n            \"when\": \"PT24H\",\n            \"id\": 2345\n          }\n        ],\n        \"metadata\": [\n          {\n            \"key\": \"popularity\",\n            \"value\": \"good 1.2\"\n          },\n          {\n            \"key\": \"popularity\",\n            \"value\": \"good 1.2\"\n          }\n        ]\n      },\n      \"status\": \"PRESCRIBED\",\n      \"rxId\": \"gG3pBCR1GCMKm89c\",\n      \"refills\": 0,\n      \"expiration\": \"2021-01-10T10:30:37Z\",\n      \"created\": \"2021-08-10T10:30:37Z\",\n      \"metadata\": [\n        {\n          \"key\": \"popularity\",\n          \"value\": \"good 1.2\"\n        },\n        {\n          \"key\": \"popularity\",\n          \"value\": \"good 1.2\"\n        }\n      ]\n    }\n  ]\n}"
										},
										{
											"id": "4afac80c-1238-44fc-bd3d-278ac2512bd4",
											"name": "The server can not understand the request due to invalid syntax.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "X-Auth-Token",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/protocols/:id/prescriptions",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"protocols",
														":id",
														"prescriptions"
													],
													"variable": [
														{
															"key": "id",
															"value": "29077371",
															"description": "(Required) Protocol ID key"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n  \"title\": \"incorrect username or password\",\n  \"status\": 404,\n  \"errorType\": \"/errors/incorrect-user-pass\",\n  \"detail\": \"Authentication failed due to incorrect username or password.\",\n  \"instance\": \"/login/log/abc123\"\n}"
										},
										{
											"id": "b4480ac4-5cbc-4df6-ac44-076ae9f110c7",
											"name": "Authorization required",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "X-Auth-Token",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/protocols/:id/prescriptions",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"protocols",
														":id",
														"prescriptions"
													],
													"variable": [
														{
															"key": "id",
															"value": "29077371",
															"description": "(Required) Protocol ID key"
														}
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": ""
										}
									]
								}
							],
							"id": "c386432c-cf57-4cb5-bb0d-a9089044c309"
						},
						{
							"name": "protocols owned by user",
							"id": "ad0f1b01-cb4d-4247-9cd7-6339ec6fc482",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/protocols?status=PRESCRIBED|PRESCRIBED",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"protocols"
									],
									"query": [
										{
											"key": "status",
											"value": "PRESCRIBED|PRESCRIBED",
											"description": "filter Protocols to include only Protocols with listed statuses. If this parameter is omitted, the query defaults to all status values **except** DEPRECATED."
										}
									]
								},
								"description": "Retrieve all Protocols owned by, or shared with, the current User. The default excludes deleted (status DEPRECATED) protocols."
							},
							"response": [
								{
									"id": "19c25360-c21f-405a-86e4-66ebc3ae4af0",
									"name": "OK",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "X-Auth-Token",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/protocols?status=PRESCRIBED|PRESCRIBED",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"protocols"
											],
											"query": [
												{
													"key": "status",
													"value": "PRESCRIBED|PRESCRIBED"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"protocols\": [\n    {\n      \"ownerId\": 1,\n      \"name\": \"wip\",\n      \"status\": \"PRESCRIBED\",\n      \"instructions\": {\n        \"considerations\": \"<p>This is just an example, not a real protocol.</p>\",\n        \"restrictions\": \"<p>Not for use on real animals.</p>\",\n        \"dothis\": \"<h3>Examinations to perform</h3>\",\n        \"recordthis\": \"<p>record every step in your notebook.</p>\",\n        \"success\": \"<p>All problems are gone</p>\",\n        \"failure\": \"<p>One or more problems remain</p>\",\n        \"references\": \"<a href=\\\"https://en.wikipedia.org/wiki/Rickrolling\\\">Wikipedia</a>\"\n      },\n      \"id\": 12345,\n      \"shortname\": \"wip\",\n      \"created\": \"2020-01-10T10:30:37Z\",\n      \"edited\": \"2020-02-10T10:30:37Z\",\n      \"vetNote\": \"consider prescribing protocol x instead\",\n      \"wtMeatHrs\": 22,\n      \"wtMilkHrs\": 5,\n      \"shareAll\": true,\n      \"shareClonable\": true,\n      \"caseDefinition\": {\n        \"requireId\": false,\n        \"requireMor\": false,\n        \"contraindications\": \"<p>prohibited in animals older than than 24 months</p>\",\n        \"medical\": \"if fever is present, consider Protocol 12345 instead.\",\n        \"economic\": \"culling should be considered as an alternative, as milk production is unlikely to return to normal after treatment\",\n        \"note\": \"<p>overcrowding may be contributing to issues</p>\"\n      },\n      \"treatments\": [\n        {\n          \"product\": \"MiracleMed\",\n          \"route\": \"wip\",\n          \"dosage\": {\n            \"doseId\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          },\n          \"sequenceFunction\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n          },\n          \"sizeFunction\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n          },\n          \"id\": \"B-123\",\n          \"ownerId\": 0,\n          \"description\": \"3.0 ml per kg repeat\",\n          \"eligibilities\": [\n            {\n              \"id\": {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              \"name\": {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              \"fdaSpecies\": {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              }\n            },\n            {\n              \"id\": {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              \"name\": {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              \"fdaSpecies\": {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              }\n            }\n          ],\n          \"_dose\": \"3.0 ml per kg repeat in 6 hours and again in 24 hours\",\n          \"wtMeatHrs\": 69149638,\n          \"wtMilkHrs\": -56031168,\n          \"nada\": \"wip\",\n          \"tags\": [\n            {\n              \"id\": {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              \"color\": {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              \"name\": {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              \"fixes\": {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              }\n            },\n            {\n              \"id\": {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              \"color\": {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              \"name\": {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              \"fixes\": {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              }\n            }\n          ],\n          \"note\": \"<p>a free-form note</p>\",\n          \"amduca\": \"ONLABEL\"\n        },\n        {\n          \"product\": \"MiracleMed\",\n          \"route\": \"wip\",\n          \"dosage\": {\n            \"doseId\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          },\n          \"sequenceFunction\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n          },\n          \"sizeFunction\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n          },\n          \"id\": \"B-123\",\n          \"ownerId\": 0,\n          \"description\": \"3.0 ml per kg repeat\",\n          \"eligibilities\": [\n            {\n              \"id\": {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              \"name\": {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              \"fdaSpecies\": {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              }\n            },\n            {\n              \"id\": {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              \"name\": {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              \"fdaSpecies\": {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              }\n            }\n          ],\n          \"_dose\": \"3.0 ml per kg repeat in 6 hours and again in 24 hours\",\n          \"wtMeatHrs\": -85149224,\n          \"wtMilkHrs\": -93659716,\n          \"nada\": \"wip\",\n          \"tags\": [\n            {\n              \"id\": {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              \"color\": {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              \"name\": {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              \"fixes\": {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              }\n            },\n            {\n              \"id\": {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              \"color\": {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              \"name\": {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              \"fixes\": {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              }\n            }\n          ],\n          \"note\": \"<p>a free-form note</p>\",\n          \"amduca\": \"UNIDENTIFIED\"\n        }\n      ],\n      \"tags\": [\n        {\n          \"id\": 8,\n          \"color\": \"#516cc6\",\n          \"name\": \"aliquip veniam \",\n          \"fixes\": [\n            {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          ]\n        },\n        {\n          \"id\": 8,\n          \"color\": \"#516cc6\",\n          \"name\": \"veli\",\n          \"fixes\": [\n            {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          ]\n        }\n      ],\n      \"diagnoses\": [\n        {\n          \"id\": 8,\n          \"name\": \"Pain/inflammation (musculoskeletal), treatment\"\n        },\n        {\n          \"id\": 8,\n          \"name\": \"Pain/inflammation (musculoskeletal), treatment\"\n        }\n      ],\n      \"eligibilities\": [\n        {\n          \"id\": 1,\n          \"name\": \"Beef Cattle\",\n          \"fdaSpecies\": [\n            \"horses\",\n            \"llamas\"\n          ]\n        },\n        {\n          \"id\": 1,\n          \"name\": \"Beef Cattle\",\n          \"fdaSpecies\": [\n            \"turkeys\",\n            \"unidentified\"\n          ]\n        }\n      ],\n      \"promises\": [\n        {\n          \"_type\": \"models.IdPromise\",\n          \"name\": \"ID promise\",\n          \"descrip\": \"You must give ID for each case enrolled\",\n          \"query\": \"What is the animal's name or number?\",\n          \"when\": \"PT24H\",\n          \"id\": 2345\n        },\n        {\n          \"_type\": \"models.IdPromise\",\n          \"name\": \"ID promise\",\n          \"descrip\": \"You must give ID for each case enrolled\",\n          \"query\": \"What is the animal's name or number?\",\n          \"when\": \"PT24H\",\n          \"id\": 2345\n        }\n      ],\n      \"metadata\": [\n        {\n          \"key\": \"popularity\",\n          \"value\": \"good 1.2\"\n        },\n        {\n          \"key\": \"popularity\",\n          \"value\": \"good 1.2\"\n        }\n      ]\n    },\n    {\n      \"ownerId\": 1,\n      \"name\": \"wip\",\n      \"status\": \"PRESCRIBED\",\n      \"instructions\": {\n        \"considerations\": \"<p>This is just an example, not a real protocol.</p>\",\n        \"restrictions\": \"<p>Not for use on real animals.</p>\",\n        \"dothis\": \"<h3>Examinations to perform</h3>\",\n        \"recordthis\": \"<p>record every step in your notebook.</p>\",\n        \"success\": \"<p>All problems are gone</p>\",\n        \"failure\": \"<p>One or more problems remain</p>\",\n        \"references\": \"<a href=\\\"https://en.wikipedia.org/wiki/Rickrolling\\\">Wikipedia</a>\"\n      },\n      \"id\": 12345,\n      \"shortname\": \"wip\",\n      \"created\": \"2020-01-10T10:30:37Z\",\n      \"edited\": \"2020-02-10T10:30:37Z\",\n      \"vetNote\": \"consider prescribing protocol x instead\",\n      \"wtMeatHrs\": 22,\n      \"wtMilkHrs\": 5,\n      \"shareAll\": true,\n      \"shareClonable\": true,\n      \"caseDefinition\": {\n        \"requireId\": false,\n        \"requireMor\": false,\n        \"contraindications\": \"<p>prohibited in animals older than than 24 months</p>\",\n        \"medical\": \"if fever is present, consider Protocol 12345 instead.\",\n        \"economic\": \"culling should be considered as an alternative, as milk production is unlikely to return to normal after treatment\",\n        \"note\": \"<p>overcrowding may be contributing to issues</p>\"\n      },\n      \"treatments\": [\n        {\n          \"product\": \"MiracleMed\",\n          \"route\": \"wip\",\n          \"dosage\": {\n            \"doseId\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          },\n          \"sequenceFunction\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n          },\n          \"sizeFunction\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n          },\n          \"id\": \"B-123\",\n          \"ownerId\": 0,\n          \"description\": \"3.0 ml per kg repeat\",\n          \"eligibilities\": [\n            {\n              \"id\": {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              \"name\": {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              \"fdaSpecies\": {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              }\n            },\n            {\n              \"id\": {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              \"name\": {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              \"fdaSpecies\": {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              }\n            }\n          ],\n          \"_dose\": \"3.0 ml per kg repeat in 6 hours and again in 24 hours\",\n          \"wtMeatHrs\": 15977622,\n          \"wtMilkHrs\": 25523155,\n          \"nada\": \"wip\",\n          \"tags\": [\n            {\n              \"id\": {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              \"color\": {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              \"name\": {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              \"fixes\": {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              }\n            },\n            {\n              \"id\": {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              \"color\": {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              \"name\": {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              \"fixes\": {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              }\n            }\n          ],\n          \"note\": \"<p>a free-form note</p>\",\n          \"amduca\": \"UNIDENTIFIED\"\n        },\n        {\n          \"product\": \"MiracleMed\",\n          \"route\": \"wip\",\n          \"dosage\": {\n            \"doseId\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          },\n          \"sequenceFunction\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n          },\n          \"sizeFunction\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n          },\n          \"id\": \"B-123\",\n          \"ownerId\": 0,\n          \"description\": \"3.0 ml per kg repeat\",\n          \"eligibilities\": [\n            {\n              \"id\": {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              \"name\": {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              \"fdaSpecies\": {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              }\n            },\n            {\n              \"id\": {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              \"name\": {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              \"fdaSpecies\": {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              }\n            }\n          ],\n          \"_dose\": \"3.0 ml per kg repeat in 6 hours and again in 24 hours\",\n          \"wtMeatHrs\": -95659932,\n          \"wtMilkHrs\": -86562016,\n          \"nada\": \"wip\",\n          \"tags\": [\n            {\n              \"id\": {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              \"color\": {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              \"name\": {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              \"fixes\": {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              }\n            },\n            {\n              \"id\": {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              \"color\": {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              \"name\": {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              \"fixes\": {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              }\n            }\n          ],\n          \"note\": \"<p>a free-form note</p>\",\n          \"amduca\": \"OFFLABEL\"\n        }\n      ],\n      \"tags\": [\n        {\n          \"id\": 8,\n          \"color\": \"#516cc6\",\n          \"name\": \"id sit cill\",\n          \"fixes\": [\n            {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          ]\n        },\n        {\n          \"id\": 8,\n          \"color\": \"#516cc6\",\n          \"name\": \"aute\",\n          \"fixes\": [\n            {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          ]\n        }\n      ],\n      \"diagnoses\": [\n        {\n          \"id\": 8,\n          \"name\": \"Pain/inflammation (musculoskeletal), treatment\"\n        },\n        {\n          \"id\": 8,\n          \"name\": \"Pain/inflammation (musculoskeletal), treatment\"\n        }\n      ],\n      \"eligibilities\": [\n        {\n          \"id\": 1,\n          \"name\": \"Beef Cattle\",\n          \"fdaSpecies\": [\n            \"fish\",\n            \"cats\"\n          ]\n        },\n        {\n          \"id\": 1,\n          \"name\": \"Beef Cattle\",\n          \"fdaSpecies\": [\n            \"fish\",\n            \"other\"\n          ]\n        }\n      ],\n      \"promises\": [\n        {\n          \"_type\": \"models.IdPromise\",\n          \"name\": \"ID promise\",\n          \"descrip\": \"You must give ID for each case enrolled\",\n          \"query\": \"What is the animal's name or number?\",\n          \"when\": \"PT24H\",\n          \"id\": 2345\n        },\n        {\n          \"_type\": \"models.IdPromise\",\n          \"name\": \"ID promise\",\n          \"descrip\": \"You must give ID for each case enrolled\",\n          \"query\": \"What is the animal's name or number?\",\n          \"when\": \"PT24H\",\n          \"id\": 2345\n        }\n      ],\n      \"metadata\": [\n        {\n          \"key\": \"popularity\",\n          \"value\": \"good 1.2\"\n        },\n        {\n          \"key\": \"popularity\",\n          \"value\": \"good 1.2\"\n        }\n      ]\n    }\n  ]\n}"
								},
								{
									"id": "cf483d82-f7e5-44c3-b80a-f7ff086605b8",
									"name": "The server can not understand the request due to invalid syntax.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "X-Auth-Token",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/protocols?status=PRESCRIBED|PRESCRIBED",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"protocols"
											],
											"query": [
												{
													"key": "status",
													"value": "PRESCRIBED|PRESCRIBED"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"title\": \"incorrect username or password\",\n  \"status\": 404,\n  \"errorType\": \"/errors/incorrect-user-pass\",\n  \"detail\": \"Authentication failed due to incorrect username or password.\",\n  \"instance\": \"/login/log/abc123\"\n}"
								},
								{
									"id": "a3b194a2-0e8e-495d-a43b-9ea26250b335",
									"name": "Authorization required",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "X-Auth-Token",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/protocols?status=PRESCRIBED|PRESCRIBED",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"protocols"
											],
											"query": [
												{
													"key": "status",
													"value": "PRESCRIBED|PRESCRIBED"
												}
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": ""
								}
							]
						},
						{
							"name": "record and validate aprotocol",
							"id": "530cf88a-91f3-461b-a398-8a2bfcf4edb1",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"ownerId\": 1,\n  \"name\": \"wip\",\n  \"status\": \"PRESCRIBED\",\n  \"instructions\": {\n    \"considerations\": \"<p>This is just an example, not a real protocol.</p>\",\n    \"restrictions\": \"<p>Not for use on real animals.</p>\",\n    \"dothis\": \"<h3>Examinations to perform</h3>\",\n    \"recordthis\": \"<p>record every step in your notebook.</p>\",\n    \"success\": \"<p>All problems are gone</p>\",\n    \"failure\": \"<p>One or more problems remain</p>\",\n    \"references\": \"<a href=\\\"https://en.wikipedia.org/wiki/Rickrolling\\\">Wikipedia</a>\"\n  },\n  \"id\": 12345,\n  \"shortname\": \"wip\",\n  \"created\": \"2020-01-10T10:30:37Z\",\n  \"edited\": \"2020-02-10T10:30:37Z\",\n  \"vetNote\": \"consider prescribing protocol x instead\",\n  \"wtMeatHrs\": 22,\n  \"wtMilkHrs\": 5,\n  \"shareAll\": true,\n  \"shareClonable\": true,\n  \"caseDefinition\": {\n    \"requireId\": false,\n    \"requireMor\": false,\n    \"contraindications\": \"<p>prohibited in animals older than than 24 months</p>\",\n    \"medical\": \"if fever is present, consider Protocol 12345 instead.\",\n    \"economic\": \"culling should be considered as an alternative, as milk production is unlikely to return to normal after treatment\",\n    \"note\": \"<p>overcrowding may be contributing to issues</p>\"\n  },\n  \"treatments\": [\n    {\n      \"product\": \"MiracleMed\",\n      \"route\": \"wip\",\n      \"dosage\": {\n        \"doseId\": 97395836\n      },\n      \"sequenceFunction\": {\n        \"_type\": \"models.SeqSingleDose\"\n      },\n      \"sizeFunction\": {\n        \"dose\": {\n          \"quantity\": {\n            \"dimension\": \"Volume\",\n            \"value\": 3,\n            \"symbol\": \"ml\"\n          }\n        },\n        \"_type\": \"models.FixedDoseFunction\"\n      },\n      \"id\": \"B-123\",\n      \"ownerId\": 0,\n      \"description\": \"3.0 ml per kg repeat\",\n      \"eligibilities\": [\n        {\n          \"id\": 1,\n          \"name\": \"Beef Cattle\",\n          \"fdaSpecies\": [\n            {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          ]\n        },\n        {\n          \"id\": 1,\n          \"name\": \"Beef Cattle\",\n          \"fdaSpecies\": [\n            {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          ]\n        }\n      ],\n      \"_dose\": \"3.0 ml per kg repeat in 6 hours and again in 24 hours\",\n      \"wtMeatHrs\": -96639015,\n      \"wtMilkHrs\": 79533997,\n      \"nada\": \"wip\",\n      \"tags\": [\n        {\n          \"id\": 8,\n          \"color\": \"#516cc6\",\n          \"name\": \"ut \",\n          \"fixes\": [\n            {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          ]\n        },\n        {\n          \"id\": 8,\n          \"color\": \"#516cc6\",\n          \"name\": \"dolore eius\",\n          \"fixes\": [\n            {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          ]\n        }\n      ],\n      \"note\": \"<p>a free-form note</p>\",\n      \"amduca\": \"ONLABEL\"\n    },\n    {\n      \"product\": \"MiracleMed\",\n      \"route\": \"wip\",\n      \"dosage\": {\n        \"doseId\": 55708793\n      },\n      \"sequenceFunction\": {\n        \"_type\": \"models.SeqSingleDose\"\n      },\n      \"sizeFunction\": {\n        \"dose\": {\n          \"quantity\": {\n            \"dimension\": \"Volume\",\n            \"value\": 3,\n            \"symbol\": \"ml\"\n          }\n        },\n        \"_type\": \"models.FixedDoseFunction\"\n      },\n      \"id\": \"B-123\",\n      \"ownerId\": 0,\n      \"description\": \"3.0 ml per kg repeat\",\n      \"eligibilities\": [\n        {\n          \"id\": 1,\n          \"name\": \"Beef Cattle\",\n          \"fdaSpecies\": [\n            {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          ]\n        },\n        {\n          \"id\": 1,\n          \"name\": \"Beef Cattle\",\n          \"fdaSpecies\": [\n            {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          ]\n        }\n      ],\n      \"_dose\": \"3.0 ml per kg repeat in 6 hours and again in 24 hours\",\n      \"wtMeatHrs\": -94773703,\n      \"wtMilkHrs\": -86875119,\n      \"nada\": \"wip\",\n      \"tags\": [\n        {\n          \"id\": 8,\n          \"color\": \"#516cc6\",\n          \"name\": \"culpa\",\n          \"fixes\": [\n            {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          ]\n        },\n        {\n          \"id\": 8,\n          \"color\": \"#516cc6\",\n          \"name\": \"id enim amet\",\n          \"fixes\": [\n            {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          ]\n        }\n      ],\n      \"note\": \"<p>a free-form note</p>\",\n      \"amduca\": \"ONLABEL\"\n    }\n  ],\n  \"tags\": [\n    {\n      \"id\": 8,\n      \"color\": \"#516cc6\",\n      \"name\": \"ad\",\n      \"fixes\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"id\": 8,\n      \"color\": \"#516cc6\",\n      \"name\": \"sit \",\n      \"fixes\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    }\n  ],\n  \"diagnoses\": [\n    {\n      \"id\": 8,\n      \"name\": \"Pain/inflammation (musculoskeletal), treatment\"\n    },\n    {\n      \"id\": 8,\n      \"name\": \"Pain/inflammation (musculoskeletal), treatment\"\n    }\n  ],\n  \"eligibilities\": [\n    {\n      \"id\": 1,\n      \"name\": \"Beef Cattle\",\n      \"fdaSpecies\": [\n        \"horses\",\n        \"unidentified\"\n      ]\n    },\n    {\n      \"id\": 1,\n      \"name\": \"Beef Cattle\",\n      \"fdaSpecies\": [\n        \"veal\",\n        \"sheep\"\n      ]\n    }\n  ],\n  \"promises\": [\n    {\n      \"_type\": \"models.IdPromise\",\n      \"name\": \"ID promise\",\n      \"descrip\": \"You must give ID for each case enrolled\",\n      \"query\": \"What is the animal's name or number?\",\n      \"when\": \"PT24H\",\n      \"id\": 2345\n    },\n    {\n      \"_type\": \"models.IdPromise\",\n      \"name\": \"ID promise\",\n      \"descrip\": \"You must give ID for each case enrolled\",\n      \"query\": \"What is the animal's name or number?\",\n      \"when\": \"PT24H\",\n      \"id\": 2345\n    }\n  ],\n  \"metadata\": [\n    {\n      \"key\": \"popularity\",\n      \"value\": \"good 1.2\"\n    },\n    {\n      \"key\": \"popularity\",\n      \"value\": \"good 1.2\"\n    }\n  ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/protocols",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"protocols"
									]
								},
								"description": "This endpoint saves and validates a Protocol."
							},
							"response": [
								{
									"id": "786ee7c3-6dcb-4439-a8db-a8f0df3135ef",
									"name": "Success â€“ recorded Protocol",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "X-Auth-Token",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"ownerId\": 1,\n  \"name\": \"wip\",\n  \"status\": \"PRESCRIBED\",\n  \"instructions\": {\n    \"considerations\": \"<p>This is just an example, not a real protocol.</p>\",\n    \"restrictions\": \"<p>Not for use on real animals.</p>\",\n    \"dothis\": \"<h3>Examinations to perform</h3>\",\n    \"recordthis\": \"<p>record every step in your notebook.</p>\",\n    \"success\": \"<p>All problems are gone</p>\",\n    \"failure\": \"<p>One or more problems remain</p>\",\n    \"references\": \"<a href=\\\"https://en.wikipedia.org/wiki/Rickrolling\\\">Wikipedia</a>\"\n  },\n  \"id\": 12345,\n  \"shortname\": \"wip\",\n  \"created\": \"2020-01-10T10:30:37Z\",\n  \"edited\": \"2020-02-10T10:30:37Z\",\n  \"vetNote\": \"consider prescribing protocol x instead\",\n  \"wtMeatHrs\": 22,\n  \"wtMilkHrs\": 5,\n  \"shareAll\": true,\n  \"shareClonable\": true,\n  \"caseDefinition\": {\n    \"requireId\": false,\n    \"requireMor\": false,\n    \"contraindications\": \"<p>prohibited in animals older than than 24 months</p>\",\n    \"medical\": \"if fever is present, consider Protocol 12345 instead.\",\n    \"economic\": \"culling should be considered as an alternative, as milk production is unlikely to return to normal after treatment\",\n    \"note\": \"<p>overcrowding may be contributing to issues</p>\"\n  },\n  \"treatments\": [\n    {\n      \"product\": \"MiracleMed\",\n      \"route\": \"wip\",\n      \"dosage\": {\n        \"doseId\": 97395836\n      },\n      \"sequenceFunction\": {\n        \"_type\": \"models.SeqSingleDose\"\n      },\n      \"sizeFunction\": {\n        \"dose\": {\n          \"quantity\": {\n            \"dimension\": \"Volume\",\n            \"value\": 3,\n            \"symbol\": \"ml\"\n          }\n        },\n        \"_type\": \"models.FixedDoseFunction\"\n      },\n      \"id\": \"B-123\",\n      \"ownerId\": 0,\n      \"description\": \"3.0 ml per kg repeat\",\n      \"eligibilities\": [\n        {\n          \"id\": 1,\n          \"name\": \"Beef Cattle\",\n          \"fdaSpecies\": [\n            {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          ]\n        },\n        {\n          \"id\": 1,\n          \"name\": \"Beef Cattle\",\n          \"fdaSpecies\": [\n            {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          ]\n        }\n      ],\n      \"_dose\": \"3.0 ml per kg repeat in 6 hours and again in 24 hours\",\n      \"wtMeatHrs\": -96639015,\n      \"wtMilkHrs\": 79533997,\n      \"nada\": \"wip\",\n      \"tags\": [\n        {\n          \"id\": 8,\n          \"color\": \"#516cc6\",\n          \"name\": \"ut \",\n          \"fixes\": [\n            {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          ]\n        },\n        {\n          \"id\": 8,\n          \"color\": \"#516cc6\",\n          \"name\": \"dolore eius\",\n          \"fixes\": [\n            {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          ]\n        }\n      ],\n      \"note\": \"<p>a free-form note</p>\",\n      \"amduca\": \"ONLABEL\"\n    },\n    {\n      \"product\": \"MiracleMed\",\n      \"route\": \"wip\",\n      \"dosage\": {\n        \"doseId\": 55708793\n      },\n      \"sequenceFunction\": {\n        \"_type\": \"models.SeqSingleDose\"\n      },\n      \"sizeFunction\": {\n        \"dose\": {\n          \"quantity\": {\n            \"dimension\": \"Volume\",\n            \"value\": 3,\n            \"symbol\": \"ml\"\n          }\n        },\n        \"_type\": \"models.FixedDoseFunction\"\n      },\n      \"id\": \"B-123\",\n      \"ownerId\": 0,\n      \"description\": \"3.0 ml per kg repeat\",\n      \"eligibilities\": [\n        {\n          \"id\": 1,\n          \"name\": \"Beef Cattle\",\n          \"fdaSpecies\": [\n            {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          ]\n        },\n        {\n          \"id\": 1,\n          \"name\": \"Beef Cattle\",\n          \"fdaSpecies\": [\n            {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          ]\n        }\n      ],\n      \"_dose\": \"3.0 ml per kg repeat in 6 hours and again in 24 hours\",\n      \"wtMeatHrs\": -94773703,\n      \"wtMilkHrs\": -86875119,\n      \"nada\": \"wip\",\n      \"tags\": [\n        {\n          \"id\": 8,\n          \"color\": \"#516cc6\",\n          \"name\": \"culpa\",\n          \"fixes\": [\n            {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          ]\n        },\n        {\n          \"id\": 8,\n          \"color\": \"#516cc6\",\n          \"name\": \"id enim amet\",\n          \"fixes\": [\n            {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          ]\n        }\n      ],\n      \"note\": \"<p>a free-form note</p>\",\n      \"amduca\": \"ONLABEL\"\n    }\n  ],\n  \"tags\": [\n    {\n      \"id\": 8,\n      \"color\": \"#516cc6\",\n      \"name\": \"ad\",\n      \"fixes\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"id\": 8,\n      \"color\": \"#516cc6\",\n      \"name\": \"sit \",\n      \"fixes\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    }\n  ],\n  \"diagnoses\": [\n    {\n      \"id\": 8,\n      \"name\": \"Pain/inflammation (musculoskeletal), treatment\"\n    },\n    {\n      \"id\": 8,\n      \"name\": \"Pain/inflammation (musculoskeletal), treatment\"\n    }\n  ],\n  \"eligibilities\": [\n    {\n      \"id\": 1,\n      \"name\": \"Beef Cattle\",\n      \"fdaSpecies\": [\n        \"horses\",\n        \"unidentified\"\n      ]\n    },\n    {\n      \"id\": 1,\n      \"name\": \"Beef Cattle\",\n      \"fdaSpecies\": [\n        \"veal\",\n        \"sheep\"\n      ]\n    }\n  ],\n  \"promises\": [\n    {\n      \"_type\": \"models.IdPromise\",\n      \"name\": \"ID promise\",\n      \"descrip\": \"You must give ID for each case enrolled\",\n      \"query\": \"What is the animal's name or number?\",\n      \"when\": \"PT24H\",\n      \"id\": 2345\n    },\n    {\n      \"_type\": \"models.IdPromise\",\n      \"name\": \"ID promise\",\n      \"descrip\": \"You must give ID for each case enrolled\",\n      \"query\": \"What is the animal's name or number?\",\n      \"when\": \"PT24H\",\n      \"id\": 2345\n    }\n  ],\n  \"metadata\": [\n    {\n      \"key\": \"popularity\",\n      \"value\": \"good 1.2\"\n    },\n    {\n      \"key\": \"popularity\",\n      \"value\": \"good 1.2\"\n    }\n  ]\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/protocols",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"protocols"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"protocol\": {\n    \"ownerId\": 1,\n    \"name\": \"wip\",\n    \"status\": \"PRESCRIBED\",\n    \"instructions\": {\n      \"considerations\": \"<p>This is just an example, not a real protocol.</p>\",\n      \"restrictions\": \"<p>Not for use on real animals.</p>\",\n      \"dothis\": \"<h3>Examinations to perform</h3>\",\n      \"recordthis\": \"<p>record every step in your notebook.</p>\",\n      \"success\": \"<p>All problems are gone</p>\",\n      \"failure\": \"<p>One or more problems remain</p>\",\n      \"references\": \"<a href=\\\"https://en.wikipedia.org/wiki/Rickrolling\\\">Wikipedia</a>\"\n    },\n    \"id\": 12345,\n    \"shortname\": \"wip\",\n    \"created\": \"2020-01-10T10:30:37Z\",\n    \"edited\": \"2020-02-10T10:30:37Z\",\n    \"vetNote\": \"consider prescribing protocol x instead\",\n    \"wtMeatHrs\": 22,\n    \"wtMilkHrs\": 5,\n    \"shareAll\": true,\n    \"shareClonable\": true,\n    \"caseDefinition\": {\n      \"requireId\": false,\n      \"requireMor\": false,\n      \"contraindications\": \"<p>prohibited in animals older than than 24 months</p>\",\n      \"medical\": \"if fever is present, consider Protocol 12345 instead.\",\n      \"economic\": \"culling should be considered as an alternative, as milk production is unlikely to return to normal after treatment\",\n      \"note\": \"<p>overcrowding may be contributing to issues</p>\"\n    },\n    \"treatments\": [\n      {\n        \"product\": \"MiracleMed\",\n        \"route\": \"wip\",\n        \"dosage\": {\n          \"doseId\": -58527078\n        },\n        \"sequenceFunction\": {\n          \"_type\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n          }\n        },\n        \"sizeFunction\": {\n          \"dose\": {\n            \"quantity\": {\n              \"dimension\": \"Volume\",\n              \"value\": 3,\n              \"symbol\": \"ml\"\n            }\n          },\n          \"_type\": \"models.FixedDoseFunction\"\n        },\n        \"id\": \"B-123\",\n        \"ownerId\": 0,\n        \"description\": \"3.0 ml per kg repeat\",\n        \"eligibilities\": [\n          {\n            \"id\": 1,\n            \"name\": \"Beef Cattle\",\n            \"fdaSpecies\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          },\n          {\n            \"id\": 1,\n            \"name\": \"Beef Cattle\",\n            \"fdaSpecies\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          }\n        ],\n        \"_dose\": \"3.0 ml per kg repeat in 6 hours and again in 24 hours\",\n        \"wtMeatHrs\": 12063618,\n        \"wtMilkHrs\": -30921578,\n        \"nada\": \"wip\",\n        \"tags\": [\n          {\n            \"id\": 8,\n            \"color\": \"#516cc6\",\n            \"name\": \"\",\n            \"fixes\": [\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              }\n            ]\n          },\n          {\n            \"id\": 8,\n            \"color\": \"#516cc6\",\n            \"name\": \"si\",\n            \"fixes\": [\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              }\n            ]\n          }\n        ],\n        \"note\": \"<p>a free-form note</p>\",\n        \"amduca\": \"OFFLABEL\"\n      },\n      {\n        \"product\": \"MiracleMed\",\n        \"route\": \"wip\",\n        \"dosage\": {\n          \"doseId\": -21450596\n        },\n        \"sequenceFunction\": {\n          \"_type\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n          }\n        },\n        \"sizeFunction\": {\n          \"dose\": {\n            \"quantity\": {\n              \"dimension\": \"Volume\",\n              \"value\": 3,\n              \"symbol\": \"ml\"\n            }\n          },\n          \"_type\": \"models.FixedDoseFunction\"\n        },\n        \"id\": \"B-123\",\n        \"ownerId\": 0,\n        \"description\": \"3.0 ml per kg repeat\",\n        \"eligibilities\": [\n          {\n            \"id\": 1,\n            \"name\": \"Beef Cattle\",\n            \"fdaSpecies\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          },\n          {\n            \"id\": 1,\n            \"name\": \"Beef Cattle\",\n            \"fdaSpecies\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          }\n        ],\n        \"_dose\": \"3.0 ml per kg repeat in 6 hours and again in 24 hours\",\n        \"wtMeatHrs\": -9128385,\n        \"wtMilkHrs\": 81060292,\n        \"nada\": \"wip\",\n        \"tags\": [\n          {\n            \"id\": 8,\n            \"color\": \"#516cc6\",\n            \"name\": \"ullamco\",\n            \"fixes\": [\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              }\n            ]\n          },\n          {\n            \"id\": 8,\n            \"color\": \"#516cc6\",\n            \"name\": \"pro\",\n            \"fixes\": [\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              }\n            ]\n          }\n        ],\n        \"note\": \"<p>a free-form note</p>\",\n        \"amduca\": \"UNIDENTIFIED\"\n      }\n    ],\n    \"tags\": [\n      {\n        \"id\": 8,\n        \"color\": \"#516cc6\",\n        \"name\": \"est e\",\n        \"fixes\": [\n          {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n          },\n          {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n          }\n        ]\n      },\n      {\n        \"id\": 8,\n        \"color\": \"#516cc6\",\n        \"name\": \"E\",\n        \"fixes\": [\n          {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n          },\n          {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n          }\n        ]\n      }\n    ],\n    \"diagnoses\": [\n      {\n        \"id\": 8,\n        \"name\": \"Pain/inflammation (musculoskeletal), treatment\"\n      },\n      {\n        \"id\": 8,\n        \"name\": \"Pain/inflammation (musculoskeletal), treatment\"\n      }\n    ],\n    \"eligibilities\": [\n      {\n        \"id\": 1,\n        \"name\": \"Beef Cattle\",\n        \"fdaSpecies\": [\n          \"beef_cattle\",\n          \"llamas\"\n        ]\n      },\n      {\n        \"id\": 1,\n        \"name\": \"Beef Cattle\",\n        \"fdaSpecies\": [\n          \"sheep\",\n          \"gamebirds\"\n        ]\n      }\n    ],\n    \"promises\": [\n      {\n        \"_type\": \"models.IdPromise\",\n        \"name\": \"ID promise\",\n        \"descrip\": \"You must give ID for each case enrolled\",\n        \"query\": \"What is the animal's name or number?\",\n        \"when\": \"PT24H\",\n        \"id\": 2345\n      },\n      {\n        \"_type\": \"models.IdPromise\",\n        \"name\": \"ID promise\",\n        \"descrip\": \"You must give ID for each case enrolled\",\n        \"query\": \"What is the animal's name or number?\",\n        \"when\": \"PT24H\",\n        \"id\": 2345\n      }\n    ],\n    \"metadata\": [\n      {\n        \"key\": \"popularity\",\n        \"value\": \"good 1.2\"\n      },\n      {\n        \"key\": \"popularity\",\n        \"value\": \"good 1.2\"\n      }\n    ]\n  }\n}"
								},
								{
									"id": "cfea34b8-1134-4ad3-b675-5c5c76e6fa5c",
									"name": "The server can not understand the request due to invalid syntax.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "X-Auth-Token",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"ownerId\": 1,\n  \"name\": \"wip\",\n  \"status\": \"PRESCRIBED\",\n  \"instructions\": {\n    \"considerations\": \"<p>This is just an example, not a real protocol.</p>\",\n    \"restrictions\": \"<p>Not for use on real animals.</p>\",\n    \"dothis\": \"<h3>Examinations to perform</h3>\",\n    \"recordthis\": \"<p>record every step in your notebook.</p>\",\n    \"success\": \"<p>All problems are gone</p>\",\n    \"failure\": \"<p>One or more problems remain</p>\",\n    \"references\": \"<a href=\\\"https://en.wikipedia.org/wiki/Rickrolling\\\">Wikipedia</a>\"\n  },\n  \"id\": 12345,\n  \"shortname\": \"wip\",\n  \"created\": \"2020-01-10T10:30:37Z\",\n  \"edited\": \"2020-02-10T10:30:37Z\",\n  \"vetNote\": \"consider prescribing protocol x instead\",\n  \"wtMeatHrs\": 22,\n  \"wtMilkHrs\": 5,\n  \"shareAll\": true,\n  \"shareClonable\": true,\n  \"caseDefinition\": {\n    \"requireId\": false,\n    \"requireMor\": false,\n    \"contraindications\": \"<p>prohibited in animals older than than 24 months</p>\",\n    \"medical\": \"if fever is present, consider Protocol 12345 instead.\",\n    \"economic\": \"culling should be considered as an alternative, as milk production is unlikely to return to normal after treatment\",\n    \"note\": \"<p>overcrowding may be contributing to issues</p>\"\n  },\n  \"treatments\": [\n    {\n      \"product\": \"MiracleMed\",\n      \"route\": \"wip\",\n      \"dosage\": {\n        \"doseId\": 97395836\n      },\n      \"sequenceFunction\": {\n        \"_type\": \"models.SeqSingleDose\"\n      },\n      \"sizeFunction\": {\n        \"dose\": {\n          \"quantity\": {\n            \"dimension\": \"Volume\",\n            \"value\": 3,\n            \"symbol\": \"ml\"\n          }\n        },\n        \"_type\": \"models.FixedDoseFunction\"\n      },\n      \"id\": \"B-123\",\n      \"ownerId\": 0,\n      \"description\": \"3.0 ml per kg repeat\",\n      \"eligibilities\": [\n        {\n          \"id\": 1,\n          \"name\": \"Beef Cattle\",\n          \"fdaSpecies\": [\n            {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          ]\n        },\n        {\n          \"id\": 1,\n          \"name\": \"Beef Cattle\",\n          \"fdaSpecies\": [\n            {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          ]\n        }\n      ],\n      \"_dose\": \"3.0 ml per kg repeat in 6 hours and again in 24 hours\",\n      \"wtMeatHrs\": -96639015,\n      \"wtMilkHrs\": 79533997,\n      \"nada\": \"wip\",\n      \"tags\": [\n        {\n          \"id\": 8,\n          \"color\": \"#516cc6\",\n          \"name\": \"ut \",\n          \"fixes\": [\n            {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          ]\n        },\n        {\n          \"id\": 8,\n          \"color\": \"#516cc6\",\n          \"name\": \"dolore eius\",\n          \"fixes\": [\n            {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          ]\n        }\n      ],\n      \"note\": \"<p>a free-form note</p>\",\n      \"amduca\": \"ONLABEL\"\n    },\n    {\n      \"product\": \"MiracleMed\",\n      \"route\": \"wip\",\n      \"dosage\": {\n        \"doseId\": 55708793\n      },\n      \"sequenceFunction\": {\n        \"_type\": \"models.SeqSingleDose\"\n      },\n      \"sizeFunction\": {\n        \"dose\": {\n          \"quantity\": {\n            \"dimension\": \"Volume\",\n            \"value\": 3,\n            \"symbol\": \"ml\"\n          }\n        },\n        \"_type\": \"models.FixedDoseFunction\"\n      },\n      \"id\": \"B-123\",\n      \"ownerId\": 0,\n      \"description\": \"3.0 ml per kg repeat\",\n      \"eligibilities\": [\n        {\n          \"id\": 1,\n          \"name\": \"Beef Cattle\",\n          \"fdaSpecies\": [\n            {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          ]\n        },\n        {\n          \"id\": 1,\n          \"name\": \"Beef Cattle\",\n          \"fdaSpecies\": [\n            {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          ]\n        }\n      ],\n      \"_dose\": \"3.0 ml per kg repeat in 6 hours and again in 24 hours\",\n      \"wtMeatHrs\": -94773703,\n      \"wtMilkHrs\": -86875119,\n      \"nada\": \"wip\",\n      \"tags\": [\n        {\n          \"id\": 8,\n          \"color\": \"#516cc6\",\n          \"name\": \"culpa\",\n          \"fixes\": [\n            {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          ]\n        },\n        {\n          \"id\": 8,\n          \"color\": \"#516cc6\",\n          \"name\": \"id enim amet\",\n          \"fixes\": [\n            {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          ]\n        }\n      ],\n      \"note\": \"<p>a free-form note</p>\",\n      \"amduca\": \"ONLABEL\"\n    }\n  ],\n  \"tags\": [\n    {\n      \"id\": 8,\n      \"color\": \"#516cc6\",\n      \"name\": \"ad\",\n      \"fixes\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"id\": 8,\n      \"color\": \"#516cc6\",\n      \"name\": \"sit \",\n      \"fixes\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    }\n  ],\n  \"diagnoses\": [\n    {\n      \"id\": 8,\n      \"name\": \"Pain/inflammation (musculoskeletal), treatment\"\n    },\n    {\n      \"id\": 8,\n      \"name\": \"Pain/inflammation (musculoskeletal), treatment\"\n    }\n  ],\n  \"eligibilities\": [\n    {\n      \"id\": 1,\n      \"name\": \"Beef Cattle\",\n      \"fdaSpecies\": [\n        \"horses\",\n        \"unidentified\"\n      ]\n    },\n    {\n      \"id\": 1,\n      \"name\": \"Beef Cattle\",\n      \"fdaSpecies\": [\n        \"veal\",\n        \"sheep\"\n      ]\n    }\n  ],\n  \"promises\": [\n    {\n      \"_type\": \"models.IdPromise\",\n      \"name\": \"ID promise\",\n      \"descrip\": \"You must give ID for each case enrolled\",\n      \"query\": \"What is the animal's name or number?\",\n      \"when\": \"PT24H\",\n      \"id\": 2345\n    },\n    {\n      \"_type\": \"models.IdPromise\",\n      \"name\": \"ID promise\",\n      \"descrip\": \"You must give ID for each case enrolled\",\n      \"query\": \"What is the animal's name or number?\",\n      \"when\": \"PT24H\",\n      \"id\": 2345\n    }\n  ],\n  \"metadata\": [\n    {\n      \"key\": \"popularity\",\n      \"value\": \"good 1.2\"\n    },\n    {\n      \"key\": \"popularity\",\n      \"value\": \"good 1.2\"\n    }\n  ]\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/protocols",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"protocols"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"title\": \"incorrect username or password\",\n  \"status\": 404,\n  \"errorType\": \"/errors/incorrect-user-pass\",\n  \"detail\": \"Authentication failed due to incorrect username or password.\",\n  \"instance\": \"/login/log/abc123\"\n}"
								},
								{
									"id": "dfee6b3e-f076-436e-ba81-d2b418e1d8ed",
									"name": "Authorization required",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "X-Auth-Token",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"ownerId\": 1,\n  \"name\": \"wip\",\n  \"status\": \"PRESCRIBED\",\n  \"instructions\": {\n    \"considerations\": \"<p>This is just an example, not a real protocol.</p>\",\n    \"restrictions\": \"<p>Not for use on real animals.</p>\",\n    \"dothis\": \"<h3>Examinations to perform</h3>\",\n    \"recordthis\": \"<p>record every step in your notebook.</p>\",\n    \"success\": \"<p>All problems are gone</p>\",\n    \"failure\": \"<p>One or more problems remain</p>\",\n    \"references\": \"<a href=\\\"https://en.wikipedia.org/wiki/Rickrolling\\\">Wikipedia</a>\"\n  },\n  \"id\": 12345,\n  \"shortname\": \"wip\",\n  \"created\": \"2020-01-10T10:30:37Z\",\n  \"edited\": \"2020-02-10T10:30:37Z\",\n  \"vetNote\": \"consider prescribing protocol x instead\",\n  \"wtMeatHrs\": 22,\n  \"wtMilkHrs\": 5,\n  \"shareAll\": true,\n  \"shareClonable\": true,\n  \"caseDefinition\": {\n    \"requireId\": false,\n    \"requireMor\": false,\n    \"contraindications\": \"<p>prohibited in animals older than than 24 months</p>\",\n    \"medical\": \"if fever is present, consider Protocol 12345 instead.\",\n    \"economic\": \"culling should be considered as an alternative, as milk production is unlikely to return to normal after treatment\",\n    \"note\": \"<p>overcrowding may be contributing to issues</p>\"\n  },\n  \"treatments\": [\n    {\n      \"product\": \"MiracleMed\",\n      \"route\": \"wip\",\n      \"dosage\": {\n        \"doseId\": 97395836\n      },\n      \"sequenceFunction\": {\n        \"_type\": \"models.SeqSingleDose\"\n      },\n      \"sizeFunction\": {\n        \"dose\": {\n          \"quantity\": {\n            \"dimension\": \"Volume\",\n            \"value\": 3,\n            \"symbol\": \"ml\"\n          }\n        },\n        \"_type\": \"models.FixedDoseFunction\"\n      },\n      \"id\": \"B-123\",\n      \"ownerId\": 0,\n      \"description\": \"3.0 ml per kg repeat\",\n      \"eligibilities\": [\n        {\n          \"id\": 1,\n          \"name\": \"Beef Cattle\",\n          \"fdaSpecies\": [\n            {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          ]\n        },\n        {\n          \"id\": 1,\n          \"name\": \"Beef Cattle\",\n          \"fdaSpecies\": [\n            {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          ]\n        }\n      ],\n      \"_dose\": \"3.0 ml per kg repeat in 6 hours and again in 24 hours\",\n      \"wtMeatHrs\": -96639015,\n      \"wtMilkHrs\": 79533997,\n      \"nada\": \"wip\",\n      \"tags\": [\n        {\n          \"id\": 8,\n          \"color\": \"#516cc6\",\n          \"name\": \"ut \",\n          \"fixes\": [\n            {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          ]\n        },\n        {\n          \"id\": 8,\n          \"color\": \"#516cc6\",\n          \"name\": \"dolore eius\",\n          \"fixes\": [\n            {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          ]\n        }\n      ],\n      \"note\": \"<p>a free-form note</p>\",\n      \"amduca\": \"ONLABEL\"\n    },\n    {\n      \"product\": \"MiracleMed\",\n      \"route\": \"wip\",\n      \"dosage\": {\n        \"doseId\": 55708793\n      },\n      \"sequenceFunction\": {\n        \"_type\": \"models.SeqSingleDose\"\n      },\n      \"sizeFunction\": {\n        \"dose\": {\n          \"quantity\": {\n            \"dimension\": \"Volume\",\n            \"value\": 3,\n            \"symbol\": \"ml\"\n          }\n        },\n        \"_type\": \"models.FixedDoseFunction\"\n      },\n      \"id\": \"B-123\",\n      \"ownerId\": 0,\n      \"description\": \"3.0 ml per kg repeat\",\n      \"eligibilities\": [\n        {\n          \"id\": 1,\n          \"name\": \"Beef Cattle\",\n          \"fdaSpecies\": [\n            {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          ]\n        },\n        {\n          \"id\": 1,\n          \"name\": \"Beef Cattle\",\n          \"fdaSpecies\": [\n            {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          ]\n        }\n      ],\n      \"_dose\": \"3.0 ml per kg repeat in 6 hours and again in 24 hours\",\n      \"wtMeatHrs\": -94773703,\n      \"wtMilkHrs\": -86875119,\n      \"nada\": \"wip\",\n      \"tags\": [\n        {\n          \"id\": 8,\n          \"color\": \"#516cc6\",\n          \"name\": \"culpa\",\n          \"fixes\": [\n            {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          ]\n        },\n        {\n          \"id\": 8,\n          \"color\": \"#516cc6\",\n          \"name\": \"id enim amet\",\n          \"fixes\": [\n            {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          ]\n        }\n      ],\n      \"note\": \"<p>a free-form note</p>\",\n      \"amduca\": \"ONLABEL\"\n    }\n  ],\n  \"tags\": [\n    {\n      \"id\": 8,\n      \"color\": \"#516cc6\",\n      \"name\": \"ad\",\n      \"fixes\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"id\": 8,\n      \"color\": \"#516cc6\",\n      \"name\": \"sit \",\n      \"fixes\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    }\n  ],\n  \"diagnoses\": [\n    {\n      \"id\": 8,\n      \"name\": \"Pain/inflammation (musculoskeletal), treatment\"\n    },\n    {\n      \"id\": 8,\n      \"name\": \"Pain/inflammation (musculoskeletal), treatment\"\n    }\n  ],\n  \"eligibilities\": [\n    {\n      \"id\": 1,\n      \"name\": \"Beef Cattle\",\n      \"fdaSpecies\": [\n        \"horses\",\n        \"unidentified\"\n      ]\n    },\n    {\n      \"id\": 1,\n      \"name\": \"Beef Cattle\",\n      \"fdaSpecies\": [\n        \"veal\",\n        \"sheep\"\n      ]\n    }\n  ],\n  \"promises\": [\n    {\n      \"_type\": \"models.IdPromise\",\n      \"name\": \"ID promise\",\n      \"descrip\": \"You must give ID for each case enrolled\",\n      \"query\": \"What is the animal's name or number?\",\n      \"when\": \"PT24H\",\n      \"id\": 2345\n    },\n    {\n      \"_type\": \"models.IdPromise\",\n      \"name\": \"ID promise\",\n      \"descrip\": \"You must give ID for each case enrolled\",\n      \"query\": \"What is the animal's name or number?\",\n      \"when\": \"PT24H\",\n      \"id\": 2345\n    }\n  ],\n  \"metadata\": [\n    {\n      \"key\": \"popularity\",\n      \"value\": \"good 1.2\"\n    },\n    {\n      \"key\": \"popularity\",\n      \"value\": \"good 1.2\"\n    }\n  ]\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/protocols",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"protocols"
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": ""
								}
							]
						},
						{
							"name": "update protocol",
							"id": "e53d1234-5f26-4c56-a68d-5c547e0fe920",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"ownerId\": 1,\n  \"name\": \"wip\",\n  \"status\": \"PRESCRIBED\",\n  \"instructions\": {\n    \"considerations\": \"<p>This is just an example, not a real protocol.</p>\",\n    \"restrictions\": \"<p>Not for use on real animals.</p>\",\n    \"dothis\": \"<h3>Examinations to perform</h3>\",\n    \"recordthis\": \"<p>record every step in your notebook.</p>\",\n    \"success\": \"<p>All problems are gone</p>\",\n    \"failure\": \"<p>One or more problems remain</p>\",\n    \"references\": \"<a href=\\\"https://en.wikipedia.org/wiki/Rickrolling\\\">Wikipedia</a>\"\n  },\n  \"id\": 12345,\n  \"shortname\": \"wip\",\n  \"created\": \"2020-01-10T10:30:37Z\",\n  \"edited\": \"2020-02-10T10:30:37Z\",\n  \"vetNote\": \"consider prescribing protocol x instead\",\n  \"wtMeatHrs\": 22,\n  \"wtMilkHrs\": 5,\n  \"shareAll\": true,\n  \"shareClonable\": true,\n  \"caseDefinition\": {\n    \"requireId\": false,\n    \"requireMor\": false,\n    \"contraindications\": \"<p>prohibited in animals older than than 24 months</p>\",\n    \"medical\": \"if fever is present, consider Protocol 12345 instead.\",\n    \"economic\": \"culling should be considered as an alternative, as milk production is unlikely to return to normal after treatment\",\n    \"note\": \"<p>overcrowding may be contributing to issues</p>\"\n  },\n  \"treatments\": [\n    {\n      \"product\": \"MiracleMed\",\n      \"route\": \"wip\",\n      \"dosage\": {\n        \"doseId\": 97395836\n      },\n      \"sequenceFunction\": {\n        \"_type\": \"models.SeqSingleDose\"\n      },\n      \"sizeFunction\": {\n        \"dose\": {\n          \"quantity\": {\n            \"dimension\": \"Volume\",\n            \"value\": 3,\n            \"symbol\": \"ml\"\n          }\n        },\n        \"_type\": \"models.FixedDoseFunction\"\n      },\n      \"id\": \"B-123\",\n      \"ownerId\": 0,\n      \"description\": \"3.0 ml per kg repeat\",\n      \"eligibilities\": [\n        {\n          \"id\": 1,\n          \"name\": \"Beef Cattle\",\n          \"fdaSpecies\": [\n            {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          ]\n        },\n        {\n          \"id\": 1,\n          \"name\": \"Beef Cattle\",\n          \"fdaSpecies\": [\n            {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          ]\n        }\n      ],\n      \"_dose\": \"3.0 ml per kg repeat in 6 hours and again in 24 hours\",\n      \"wtMeatHrs\": -96639015,\n      \"wtMilkHrs\": 79533997,\n      \"nada\": \"wip\",\n      \"tags\": [\n        {\n          \"id\": 8,\n          \"color\": \"#516cc6\",\n          \"name\": \"ut \",\n          \"fixes\": [\n            {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          ]\n        },\n        {\n          \"id\": 8,\n          \"color\": \"#516cc6\",\n          \"name\": \"dolore eius\",\n          \"fixes\": [\n            {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          ]\n        }\n      ],\n      \"note\": \"<p>a free-form note</p>\",\n      \"amduca\": \"ONLABEL\"\n    },\n    {\n      \"product\": \"MiracleMed\",\n      \"route\": \"wip\",\n      \"dosage\": {\n        \"doseId\": 55708793\n      },\n      \"sequenceFunction\": {\n        \"_type\": \"models.SeqSingleDose\"\n      },\n      \"sizeFunction\": {\n        \"dose\": {\n          \"quantity\": {\n            \"dimension\": \"Volume\",\n            \"value\": 3,\n            \"symbol\": \"ml\"\n          }\n        },\n        \"_type\": \"models.FixedDoseFunction\"\n      },\n      \"id\": \"B-123\",\n      \"ownerId\": 0,\n      \"description\": \"3.0 ml per kg repeat\",\n      \"eligibilities\": [\n        {\n          \"id\": 1,\n          \"name\": \"Beef Cattle\",\n          \"fdaSpecies\": [\n            {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          ]\n        },\n        {\n          \"id\": 1,\n          \"name\": \"Beef Cattle\",\n          \"fdaSpecies\": [\n            {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          ]\n        }\n      ],\n      \"_dose\": \"3.0 ml per kg repeat in 6 hours and again in 24 hours\",\n      \"wtMeatHrs\": -94773703,\n      \"wtMilkHrs\": -86875119,\n      \"nada\": \"wip\",\n      \"tags\": [\n        {\n          \"id\": 8,\n          \"color\": \"#516cc6\",\n          \"name\": \"culpa\",\n          \"fixes\": [\n            {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          ]\n        },\n        {\n          \"id\": 8,\n          \"color\": \"#516cc6\",\n          \"name\": \"id enim amet\",\n          \"fixes\": [\n            {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          ]\n        }\n      ],\n      \"note\": \"<p>a free-form note</p>\",\n      \"amduca\": \"ONLABEL\"\n    }\n  ],\n  \"tags\": [\n    {\n      \"id\": 8,\n      \"color\": \"#516cc6\",\n      \"name\": \"ad\",\n      \"fixes\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"id\": 8,\n      \"color\": \"#516cc6\",\n      \"name\": \"sit \",\n      \"fixes\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    }\n  ],\n  \"diagnoses\": [\n    {\n      \"id\": 8,\n      \"name\": \"Pain/inflammation (musculoskeletal), treatment\"\n    },\n    {\n      \"id\": 8,\n      \"name\": \"Pain/inflammation (musculoskeletal), treatment\"\n    }\n  ],\n  \"eligibilities\": [\n    {\n      \"id\": 1,\n      \"name\": \"Beef Cattle\",\n      \"fdaSpecies\": [\n        \"horses\",\n        \"unidentified\"\n      ]\n    },\n    {\n      \"id\": 1,\n      \"name\": \"Beef Cattle\",\n      \"fdaSpecies\": [\n        \"veal\",\n        \"sheep\"\n      ]\n    }\n  ],\n  \"promises\": [\n    {\n      \"_type\": \"models.IdPromise\",\n      \"name\": \"ID promise\",\n      \"descrip\": \"You must give ID for each case enrolled\",\n      \"query\": \"What is the animal's name or number?\",\n      \"when\": \"PT24H\",\n      \"id\": 2345\n    },\n    {\n      \"_type\": \"models.IdPromise\",\n      \"name\": \"ID promise\",\n      \"descrip\": \"You must give ID for each case enrolled\",\n      \"query\": \"What is the animal's name or number?\",\n      \"when\": \"PT24H\",\n      \"id\": 2345\n    }\n  ],\n  \"metadata\": [\n    {\n      \"key\": \"popularity\",\n      \"value\": \"good 1.2\"\n    },\n    {\n      \"key\": \"popularity\",\n      \"value\": \"good 1.2\"\n    }\n  ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/protocols",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"protocols"
									]
								},
								"description": "This endpoint updates and validates a Protocol."
							},
							"response": [
								{
									"id": "51403044-a385-46d7-9c9c-2e9f75d980bb",
									"name": "Success â€“ updated Protocol",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "X-Auth-Token",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"ownerId\": 1,\n  \"name\": \"wip\",\n  \"status\": \"PRESCRIBED\",\n  \"instructions\": {\n    \"considerations\": \"<p>This is just an example, not a real protocol.</p>\",\n    \"restrictions\": \"<p>Not for use on real animals.</p>\",\n    \"dothis\": \"<h3>Examinations to perform</h3>\",\n    \"recordthis\": \"<p>record every step in your notebook.</p>\",\n    \"success\": \"<p>All problems are gone</p>\",\n    \"failure\": \"<p>One or more problems remain</p>\",\n    \"references\": \"<a href=\\\"https://en.wikipedia.org/wiki/Rickrolling\\\">Wikipedia</a>\"\n  },\n  \"id\": 12345,\n  \"shortname\": \"wip\",\n  \"created\": \"2020-01-10T10:30:37Z\",\n  \"edited\": \"2020-02-10T10:30:37Z\",\n  \"vetNote\": \"consider prescribing protocol x instead\",\n  \"wtMeatHrs\": 22,\n  \"wtMilkHrs\": 5,\n  \"shareAll\": true,\n  \"shareClonable\": true,\n  \"caseDefinition\": {\n    \"requireId\": false,\n    \"requireMor\": false,\n    \"contraindications\": \"<p>prohibited in animals older than than 24 months</p>\",\n    \"medical\": \"if fever is present, consider Protocol 12345 instead.\",\n    \"economic\": \"culling should be considered as an alternative, as milk production is unlikely to return to normal after treatment\",\n    \"note\": \"<p>overcrowding may be contributing to issues</p>\"\n  },\n  \"treatments\": [\n    {\n      \"product\": \"MiracleMed\",\n      \"route\": \"wip\",\n      \"dosage\": {\n        \"doseId\": 97395836\n      },\n      \"sequenceFunction\": {\n        \"_type\": \"models.SeqSingleDose\"\n      },\n      \"sizeFunction\": {\n        \"dose\": {\n          \"quantity\": {\n            \"dimension\": \"Volume\",\n            \"value\": 3,\n            \"symbol\": \"ml\"\n          }\n        },\n        \"_type\": \"models.FixedDoseFunction\"\n      },\n      \"id\": \"B-123\",\n      \"ownerId\": 0,\n      \"description\": \"3.0 ml per kg repeat\",\n      \"eligibilities\": [\n        {\n          \"id\": 1,\n          \"name\": \"Beef Cattle\",\n          \"fdaSpecies\": [\n            {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          ]\n        },\n        {\n          \"id\": 1,\n          \"name\": \"Beef Cattle\",\n          \"fdaSpecies\": [\n            {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          ]\n        }\n      ],\n      \"_dose\": \"3.0 ml per kg repeat in 6 hours and again in 24 hours\",\n      \"wtMeatHrs\": -96639015,\n      \"wtMilkHrs\": 79533997,\n      \"nada\": \"wip\",\n      \"tags\": [\n        {\n          \"id\": 8,\n          \"color\": \"#516cc6\",\n          \"name\": \"ut \",\n          \"fixes\": [\n            {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          ]\n        },\n        {\n          \"id\": 8,\n          \"color\": \"#516cc6\",\n          \"name\": \"dolore eius\",\n          \"fixes\": [\n            {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          ]\n        }\n      ],\n      \"note\": \"<p>a free-form note</p>\",\n      \"amduca\": \"ONLABEL\"\n    },\n    {\n      \"product\": \"MiracleMed\",\n      \"route\": \"wip\",\n      \"dosage\": {\n        \"doseId\": 55708793\n      },\n      \"sequenceFunction\": {\n        \"_type\": \"models.SeqSingleDose\"\n      },\n      \"sizeFunction\": {\n        \"dose\": {\n          \"quantity\": {\n            \"dimension\": \"Volume\",\n            \"value\": 3,\n            \"symbol\": \"ml\"\n          }\n        },\n        \"_type\": \"models.FixedDoseFunction\"\n      },\n      \"id\": \"B-123\",\n      \"ownerId\": 0,\n      \"description\": \"3.0 ml per kg repeat\",\n      \"eligibilities\": [\n        {\n          \"id\": 1,\n          \"name\": \"Beef Cattle\",\n          \"fdaSpecies\": [\n            {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          ]\n        },\n        {\n          \"id\": 1,\n          \"name\": \"Beef Cattle\",\n          \"fdaSpecies\": [\n            {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          ]\n        }\n      ],\n      \"_dose\": \"3.0 ml per kg repeat in 6 hours and again in 24 hours\",\n      \"wtMeatHrs\": -94773703,\n      \"wtMilkHrs\": -86875119,\n      \"nada\": \"wip\",\n      \"tags\": [\n        {\n          \"id\": 8,\n          \"color\": \"#516cc6\",\n          \"name\": \"culpa\",\n          \"fixes\": [\n            {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          ]\n        },\n        {\n          \"id\": 8,\n          \"color\": \"#516cc6\",\n          \"name\": \"id enim amet\",\n          \"fixes\": [\n            {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          ]\n        }\n      ],\n      \"note\": \"<p>a free-form note</p>\",\n      \"amduca\": \"ONLABEL\"\n    }\n  ],\n  \"tags\": [\n    {\n      \"id\": 8,\n      \"color\": \"#516cc6\",\n      \"name\": \"ad\",\n      \"fixes\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"id\": 8,\n      \"color\": \"#516cc6\",\n      \"name\": \"sit \",\n      \"fixes\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    }\n  ],\n  \"diagnoses\": [\n    {\n      \"id\": 8,\n      \"name\": \"Pain/inflammation (musculoskeletal), treatment\"\n    },\n    {\n      \"id\": 8,\n      \"name\": \"Pain/inflammation (musculoskeletal), treatment\"\n    }\n  ],\n  \"eligibilities\": [\n    {\n      \"id\": 1,\n      \"name\": \"Beef Cattle\",\n      \"fdaSpecies\": [\n        \"horses\",\n        \"unidentified\"\n      ]\n    },\n    {\n      \"id\": 1,\n      \"name\": \"Beef Cattle\",\n      \"fdaSpecies\": [\n        \"veal\",\n        \"sheep\"\n      ]\n    }\n  ],\n  \"promises\": [\n    {\n      \"_type\": \"models.IdPromise\",\n      \"name\": \"ID promise\",\n      \"descrip\": \"You must give ID for each case enrolled\",\n      \"query\": \"What is the animal's name or number?\",\n      \"when\": \"PT24H\",\n      \"id\": 2345\n    },\n    {\n      \"_type\": \"models.IdPromise\",\n      \"name\": \"ID promise\",\n      \"descrip\": \"You must give ID for each case enrolled\",\n      \"query\": \"What is the animal's name or number?\",\n      \"when\": \"PT24H\",\n      \"id\": 2345\n    }\n  ],\n  \"metadata\": [\n    {\n      \"key\": \"popularity\",\n      \"value\": \"good 1.2\"\n    },\n    {\n      \"key\": \"popularity\",\n      \"value\": \"good 1.2\"\n    }\n  ]\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/protocols",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"protocols"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"protocol\": {\n    \"ownerId\": 1,\n    \"name\": \"wip\",\n    \"status\": \"PRESCRIBED\",\n    \"instructions\": {\n      \"considerations\": \"<p>This is just an example, not a real protocol.</p>\",\n      \"restrictions\": \"<p>Not for use on real animals.</p>\",\n      \"dothis\": \"<h3>Examinations to perform</h3>\",\n      \"recordthis\": \"<p>record every step in your notebook.</p>\",\n      \"success\": \"<p>All problems are gone</p>\",\n      \"failure\": \"<p>One or more problems remain</p>\",\n      \"references\": \"<a href=\\\"https://en.wikipedia.org/wiki/Rickrolling\\\">Wikipedia</a>\"\n    },\n    \"id\": 12345,\n    \"shortname\": \"wip\",\n    \"created\": \"2020-01-10T10:30:37Z\",\n    \"edited\": \"2020-02-10T10:30:37Z\",\n    \"vetNote\": \"consider prescribing protocol x instead\",\n    \"wtMeatHrs\": 22,\n    \"wtMilkHrs\": 5,\n    \"shareAll\": true,\n    \"shareClonable\": true,\n    \"caseDefinition\": {\n      \"requireId\": false,\n      \"requireMor\": false,\n      \"contraindications\": \"<p>prohibited in animals older than than 24 months</p>\",\n      \"medical\": \"if fever is present, consider Protocol 12345 instead.\",\n      \"economic\": \"culling should be considered as an alternative, as milk production is unlikely to return to normal after treatment\",\n      \"note\": \"<p>overcrowding may be contributing to issues</p>\"\n    },\n    \"treatments\": [\n      {\n        \"product\": \"MiracleMed\",\n        \"route\": \"wip\",\n        \"dosage\": {\n          \"doseId\": -58527078\n        },\n        \"sequenceFunction\": {\n          \"_type\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n          }\n        },\n        \"sizeFunction\": {\n          \"dose\": {\n            \"quantity\": {\n              \"dimension\": \"Volume\",\n              \"value\": 3,\n              \"symbol\": \"ml\"\n            }\n          },\n          \"_type\": \"models.FixedDoseFunction\"\n        },\n        \"id\": \"B-123\",\n        \"ownerId\": 0,\n        \"description\": \"3.0 ml per kg repeat\",\n        \"eligibilities\": [\n          {\n            \"id\": 1,\n            \"name\": \"Beef Cattle\",\n            \"fdaSpecies\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          },\n          {\n            \"id\": 1,\n            \"name\": \"Beef Cattle\",\n            \"fdaSpecies\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          }\n        ],\n        \"_dose\": \"3.0 ml per kg repeat in 6 hours and again in 24 hours\",\n        \"wtMeatHrs\": 12063618,\n        \"wtMilkHrs\": -30921578,\n        \"nada\": \"wip\",\n        \"tags\": [\n          {\n            \"id\": 8,\n            \"color\": \"#516cc6\",\n            \"name\": \"\",\n            \"fixes\": [\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              }\n            ]\n          },\n          {\n            \"id\": 8,\n            \"color\": \"#516cc6\",\n            \"name\": \"si\",\n            \"fixes\": [\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              }\n            ]\n          }\n        ],\n        \"note\": \"<p>a free-form note</p>\",\n        \"amduca\": \"OFFLABEL\"\n      },\n      {\n        \"product\": \"MiracleMed\",\n        \"route\": \"wip\",\n        \"dosage\": {\n          \"doseId\": -21450596\n        },\n        \"sequenceFunction\": {\n          \"_type\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n          }\n        },\n        \"sizeFunction\": {\n          \"dose\": {\n            \"quantity\": {\n              \"dimension\": \"Volume\",\n              \"value\": 3,\n              \"symbol\": \"ml\"\n            }\n          },\n          \"_type\": \"models.FixedDoseFunction\"\n        },\n        \"id\": \"B-123\",\n        \"ownerId\": 0,\n        \"description\": \"3.0 ml per kg repeat\",\n        \"eligibilities\": [\n          {\n            \"id\": 1,\n            \"name\": \"Beef Cattle\",\n            \"fdaSpecies\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          },\n          {\n            \"id\": 1,\n            \"name\": \"Beef Cattle\",\n            \"fdaSpecies\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          }\n        ],\n        \"_dose\": \"3.0 ml per kg repeat in 6 hours and again in 24 hours\",\n        \"wtMeatHrs\": -9128385,\n        \"wtMilkHrs\": 81060292,\n        \"nada\": \"wip\",\n        \"tags\": [\n          {\n            \"id\": 8,\n            \"color\": \"#516cc6\",\n            \"name\": \"ullamco\",\n            \"fixes\": [\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              }\n            ]\n          },\n          {\n            \"id\": 8,\n            \"color\": \"#516cc6\",\n            \"name\": \"pro\",\n            \"fixes\": [\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              }\n            ]\n          }\n        ],\n        \"note\": \"<p>a free-form note</p>\",\n        \"amduca\": \"UNIDENTIFIED\"\n      }\n    ],\n    \"tags\": [\n      {\n        \"id\": 8,\n        \"color\": \"#516cc6\",\n        \"name\": \"est e\",\n        \"fixes\": [\n          {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n          },\n          {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n          }\n        ]\n      },\n      {\n        \"id\": 8,\n        \"color\": \"#516cc6\",\n        \"name\": \"E\",\n        \"fixes\": [\n          {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n          },\n          {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n          }\n        ]\n      }\n    ],\n    \"diagnoses\": [\n      {\n        \"id\": 8,\n        \"name\": \"Pain/inflammation (musculoskeletal), treatment\"\n      },\n      {\n        \"id\": 8,\n        \"name\": \"Pain/inflammation (musculoskeletal), treatment\"\n      }\n    ],\n    \"eligibilities\": [\n      {\n        \"id\": 1,\n        \"name\": \"Beef Cattle\",\n        \"fdaSpecies\": [\n          \"beef_cattle\",\n          \"llamas\"\n        ]\n      },\n      {\n        \"id\": 1,\n        \"name\": \"Beef Cattle\",\n        \"fdaSpecies\": [\n          \"sheep\",\n          \"gamebirds\"\n        ]\n      }\n    ],\n    \"promises\": [\n      {\n        \"_type\": \"models.IdPromise\",\n        \"name\": \"ID promise\",\n        \"descrip\": \"You must give ID for each case enrolled\",\n        \"query\": \"What is the animal's name or number?\",\n        \"when\": \"PT24H\",\n        \"id\": 2345\n      },\n      {\n        \"_type\": \"models.IdPromise\",\n        \"name\": \"ID promise\",\n        \"descrip\": \"You must give ID for each case enrolled\",\n        \"query\": \"What is the animal's name or number?\",\n        \"when\": \"PT24H\",\n        \"id\": 2345\n      }\n    ],\n    \"metadata\": [\n      {\n        \"key\": \"popularity\",\n        \"value\": \"good 1.2\"\n      },\n      {\n        \"key\": \"popularity\",\n        \"value\": \"good 1.2\"\n      }\n    ]\n  }\n}"
								},
								{
									"id": "3db964c1-5987-4c7a-b779-6f24ef3098c4",
									"name": "The server can not understand the request due to invalid syntax.",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "X-Auth-Token",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"ownerId\": 1,\n  \"name\": \"wip\",\n  \"status\": \"PRESCRIBED\",\n  \"instructions\": {\n    \"considerations\": \"<p>This is just an example, not a real protocol.</p>\",\n    \"restrictions\": \"<p>Not for use on real animals.</p>\",\n    \"dothis\": \"<h3>Examinations to perform</h3>\",\n    \"recordthis\": \"<p>record every step in your notebook.</p>\",\n    \"success\": \"<p>All problems are gone</p>\",\n    \"failure\": \"<p>One or more problems remain</p>\",\n    \"references\": \"<a href=\\\"https://en.wikipedia.org/wiki/Rickrolling\\\">Wikipedia</a>\"\n  },\n  \"id\": 12345,\n  \"shortname\": \"wip\",\n  \"created\": \"2020-01-10T10:30:37Z\",\n  \"edited\": \"2020-02-10T10:30:37Z\",\n  \"vetNote\": \"consider prescribing protocol x instead\",\n  \"wtMeatHrs\": 22,\n  \"wtMilkHrs\": 5,\n  \"shareAll\": true,\n  \"shareClonable\": true,\n  \"caseDefinition\": {\n    \"requireId\": false,\n    \"requireMor\": false,\n    \"contraindications\": \"<p>prohibited in animals older than than 24 months</p>\",\n    \"medical\": \"if fever is present, consider Protocol 12345 instead.\",\n    \"economic\": \"culling should be considered as an alternative, as milk production is unlikely to return to normal after treatment\",\n    \"note\": \"<p>overcrowding may be contributing to issues</p>\"\n  },\n  \"treatments\": [\n    {\n      \"product\": \"MiracleMed\",\n      \"route\": \"wip\",\n      \"dosage\": {\n        \"doseId\": 97395836\n      },\n      \"sequenceFunction\": {\n        \"_type\": \"models.SeqSingleDose\"\n      },\n      \"sizeFunction\": {\n        \"dose\": {\n          \"quantity\": {\n            \"dimension\": \"Volume\",\n            \"value\": 3,\n            \"symbol\": \"ml\"\n          }\n        },\n        \"_type\": \"models.FixedDoseFunction\"\n      },\n      \"id\": \"B-123\",\n      \"ownerId\": 0,\n      \"description\": \"3.0 ml per kg repeat\",\n      \"eligibilities\": [\n        {\n          \"id\": 1,\n          \"name\": \"Beef Cattle\",\n          \"fdaSpecies\": [\n            {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          ]\n        },\n        {\n          \"id\": 1,\n          \"name\": \"Beef Cattle\",\n          \"fdaSpecies\": [\n            {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          ]\n        }\n      ],\n      \"_dose\": \"3.0 ml per kg repeat in 6 hours and again in 24 hours\",\n      \"wtMeatHrs\": -96639015,\n      \"wtMilkHrs\": 79533997,\n      \"nada\": \"wip\",\n      \"tags\": [\n        {\n          \"id\": 8,\n          \"color\": \"#516cc6\",\n          \"name\": \"ut \",\n          \"fixes\": [\n            {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          ]\n        },\n        {\n          \"id\": 8,\n          \"color\": \"#516cc6\",\n          \"name\": \"dolore eius\",\n          \"fixes\": [\n            {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          ]\n        }\n      ],\n      \"note\": \"<p>a free-form note</p>\",\n      \"amduca\": \"ONLABEL\"\n    },\n    {\n      \"product\": \"MiracleMed\",\n      \"route\": \"wip\",\n      \"dosage\": {\n        \"doseId\": 55708793\n      },\n      \"sequenceFunction\": {\n        \"_type\": \"models.SeqSingleDose\"\n      },\n      \"sizeFunction\": {\n        \"dose\": {\n          \"quantity\": {\n            \"dimension\": \"Volume\",\n            \"value\": 3,\n            \"symbol\": \"ml\"\n          }\n        },\n        \"_type\": \"models.FixedDoseFunction\"\n      },\n      \"id\": \"B-123\",\n      \"ownerId\": 0,\n      \"description\": \"3.0 ml per kg repeat\",\n      \"eligibilities\": [\n        {\n          \"id\": 1,\n          \"name\": \"Beef Cattle\",\n          \"fdaSpecies\": [\n            {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          ]\n        },\n        {\n          \"id\": 1,\n          \"name\": \"Beef Cattle\",\n          \"fdaSpecies\": [\n            {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          ]\n        }\n      ],\n      \"_dose\": \"3.0 ml per kg repeat in 6 hours and again in 24 hours\",\n      \"wtMeatHrs\": -94773703,\n      \"wtMilkHrs\": -86875119,\n      \"nada\": \"wip\",\n      \"tags\": [\n        {\n          \"id\": 8,\n          \"color\": \"#516cc6\",\n          \"name\": \"culpa\",\n          \"fixes\": [\n            {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          ]\n        },\n        {\n          \"id\": 8,\n          \"color\": \"#516cc6\",\n          \"name\": \"id enim amet\",\n          \"fixes\": [\n            {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          ]\n        }\n      ],\n      \"note\": \"<p>a free-form note</p>\",\n      \"amduca\": \"ONLABEL\"\n    }\n  ],\n  \"tags\": [\n    {\n      \"id\": 8,\n      \"color\": \"#516cc6\",\n      \"name\": \"ad\",\n      \"fixes\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"id\": 8,\n      \"color\": \"#516cc6\",\n      \"name\": \"sit \",\n      \"fixes\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    }\n  ],\n  \"diagnoses\": [\n    {\n      \"id\": 8,\n      \"name\": \"Pain/inflammation (musculoskeletal), treatment\"\n    },\n    {\n      \"id\": 8,\n      \"name\": \"Pain/inflammation (musculoskeletal), treatment\"\n    }\n  ],\n  \"eligibilities\": [\n    {\n      \"id\": 1,\n      \"name\": \"Beef Cattle\",\n      \"fdaSpecies\": [\n        \"horses\",\n        \"unidentified\"\n      ]\n    },\n    {\n      \"id\": 1,\n      \"name\": \"Beef Cattle\",\n      \"fdaSpecies\": [\n        \"veal\",\n        \"sheep\"\n      ]\n    }\n  ],\n  \"promises\": [\n    {\n      \"_type\": \"models.IdPromise\",\n      \"name\": \"ID promise\",\n      \"descrip\": \"You must give ID for each case enrolled\",\n      \"query\": \"What is the animal's name or number?\",\n      \"when\": \"PT24H\",\n      \"id\": 2345\n    },\n    {\n      \"_type\": \"models.IdPromise\",\n      \"name\": \"ID promise\",\n      \"descrip\": \"You must give ID for each case enrolled\",\n      \"query\": \"What is the animal's name or number?\",\n      \"when\": \"PT24H\",\n      \"id\": 2345\n    }\n  ],\n  \"metadata\": [\n    {\n      \"key\": \"popularity\",\n      \"value\": \"good 1.2\"\n    },\n    {\n      \"key\": \"popularity\",\n      \"value\": \"good 1.2\"\n    }\n  ]\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/protocols",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"protocols"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"title\": \"incorrect username or password\",\n  \"status\": 404,\n  \"errorType\": \"/errors/incorrect-user-pass\",\n  \"detail\": \"Authentication failed due to incorrect username or password.\",\n  \"instance\": \"/login/log/abc123\"\n}"
								},
								{
									"id": "4c0db66a-8735-44ad-9bc9-c7441149773e",
									"name": "Authorization required",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "X-Auth-Token",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"ownerId\": 1,\n  \"name\": \"wip\",\n  \"status\": \"PRESCRIBED\",\n  \"instructions\": {\n    \"considerations\": \"<p>This is just an example, not a real protocol.</p>\",\n    \"restrictions\": \"<p>Not for use on real animals.</p>\",\n    \"dothis\": \"<h3>Examinations to perform</h3>\",\n    \"recordthis\": \"<p>record every step in your notebook.</p>\",\n    \"success\": \"<p>All problems are gone</p>\",\n    \"failure\": \"<p>One or more problems remain</p>\",\n    \"references\": \"<a href=\\\"https://en.wikipedia.org/wiki/Rickrolling\\\">Wikipedia</a>\"\n  },\n  \"id\": 12345,\n  \"shortname\": \"wip\",\n  \"created\": \"2020-01-10T10:30:37Z\",\n  \"edited\": \"2020-02-10T10:30:37Z\",\n  \"vetNote\": \"consider prescribing protocol x instead\",\n  \"wtMeatHrs\": 22,\n  \"wtMilkHrs\": 5,\n  \"shareAll\": true,\n  \"shareClonable\": true,\n  \"caseDefinition\": {\n    \"requireId\": false,\n    \"requireMor\": false,\n    \"contraindications\": \"<p>prohibited in animals older than than 24 months</p>\",\n    \"medical\": \"if fever is present, consider Protocol 12345 instead.\",\n    \"economic\": \"culling should be considered as an alternative, as milk production is unlikely to return to normal after treatment\",\n    \"note\": \"<p>overcrowding may be contributing to issues</p>\"\n  },\n  \"treatments\": [\n    {\n      \"product\": \"MiracleMed\",\n      \"route\": \"wip\",\n      \"dosage\": {\n        \"doseId\": 97395836\n      },\n      \"sequenceFunction\": {\n        \"_type\": \"models.SeqSingleDose\"\n      },\n      \"sizeFunction\": {\n        \"dose\": {\n          \"quantity\": {\n            \"dimension\": \"Volume\",\n            \"value\": 3,\n            \"symbol\": \"ml\"\n          }\n        },\n        \"_type\": \"models.FixedDoseFunction\"\n      },\n      \"id\": \"B-123\",\n      \"ownerId\": 0,\n      \"description\": \"3.0 ml per kg repeat\",\n      \"eligibilities\": [\n        {\n          \"id\": 1,\n          \"name\": \"Beef Cattle\",\n          \"fdaSpecies\": [\n            {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          ]\n        },\n        {\n          \"id\": 1,\n          \"name\": \"Beef Cattle\",\n          \"fdaSpecies\": [\n            {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          ]\n        }\n      ],\n      \"_dose\": \"3.0 ml per kg repeat in 6 hours and again in 24 hours\",\n      \"wtMeatHrs\": -96639015,\n      \"wtMilkHrs\": 79533997,\n      \"nada\": \"wip\",\n      \"tags\": [\n        {\n          \"id\": 8,\n          \"color\": \"#516cc6\",\n          \"name\": \"ut \",\n          \"fixes\": [\n            {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          ]\n        },\n        {\n          \"id\": 8,\n          \"color\": \"#516cc6\",\n          \"name\": \"dolore eius\",\n          \"fixes\": [\n            {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          ]\n        }\n      ],\n      \"note\": \"<p>a free-form note</p>\",\n      \"amduca\": \"ONLABEL\"\n    },\n    {\n      \"product\": \"MiracleMed\",\n      \"route\": \"wip\",\n      \"dosage\": {\n        \"doseId\": 55708793\n      },\n      \"sequenceFunction\": {\n        \"_type\": \"models.SeqSingleDose\"\n      },\n      \"sizeFunction\": {\n        \"dose\": {\n          \"quantity\": {\n            \"dimension\": \"Volume\",\n            \"value\": 3,\n            \"symbol\": \"ml\"\n          }\n        },\n        \"_type\": \"models.FixedDoseFunction\"\n      },\n      \"id\": \"B-123\",\n      \"ownerId\": 0,\n      \"description\": \"3.0 ml per kg repeat\",\n      \"eligibilities\": [\n        {\n          \"id\": 1,\n          \"name\": \"Beef Cattle\",\n          \"fdaSpecies\": [\n            {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          ]\n        },\n        {\n          \"id\": 1,\n          \"name\": \"Beef Cattle\",\n          \"fdaSpecies\": [\n            {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          ]\n        }\n      ],\n      \"_dose\": \"3.0 ml per kg repeat in 6 hours and again in 24 hours\",\n      \"wtMeatHrs\": -94773703,\n      \"wtMilkHrs\": -86875119,\n      \"nada\": \"wip\",\n      \"tags\": [\n        {\n          \"id\": 8,\n          \"color\": \"#516cc6\",\n          \"name\": \"culpa\",\n          \"fixes\": [\n            {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          ]\n        },\n        {\n          \"id\": 8,\n          \"color\": \"#516cc6\",\n          \"name\": \"id enim amet\",\n          \"fixes\": [\n            {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          ]\n        }\n      ],\n      \"note\": \"<p>a free-form note</p>\",\n      \"amduca\": \"ONLABEL\"\n    }\n  ],\n  \"tags\": [\n    {\n      \"id\": 8,\n      \"color\": \"#516cc6\",\n      \"name\": \"ad\",\n      \"fixes\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"id\": 8,\n      \"color\": \"#516cc6\",\n      \"name\": \"sit \",\n      \"fixes\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    }\n  ],\n  \"diagnoses\": [\n    {\n      \"id\": 8,\n      \"name\": \"Pain/inflammation (musculoskeletal), treatment\"\n    },\n    {\n      \"id\": 8,\n      \"name\": \"Pain/inflammation (musculoskeletal), treatment\"\n    }\n  ],\n  \"eligibilities\": [\n    {\n      \"id\": 1,\n      \"name\": \"Beef Cattle\",\n      \"fdaSpecies\": [\n        \"horses\",\n        \"unidentified\"\n      ]\n    },\n    {\n      \"id\": 1,\n      \"name\": \"Beef Cattle\",\n      \"fdaSpecies\": [\n        \"veal\",\n        \"sheep\"\n      ]\n    }\n  ],\n  \"promises\": [\n    {\n      \"_type\": \"models.IdPromise\",\n      \"name\": \"ID promise\",\n      \"descrip\": \"You must give ID for each case enrolled\",\n      \"query\": \"What is the animal's name or number?\",\n      \"when\": \"PT24H\",\n      \"id\": 2345\n    },\n    {\n      \"_type\": \"models.IdPromise\",\n      \"name\": \"ID promise\",\n      \"descrip\": \"You must give ID for each case enrolled\",\n      \"query\": \"What is the animal's name or number?\",\n      \"when\": \"PT24H\",\n      \"id\": 2345\n    }\n  ],\n  \"metadata\": [\n    {\n      \"key\": \"popularity\",\n      \"value\": \"good 1.2\"\n    },\n    {\n      \"key\": \"popularity\",\n      \"value\": \"good 1.2\"\n    }\n  ]\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/protocols",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"protocols"
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": ""
								}
							]
						},
						{
							"name": "AMDUCA-tag protocol",
							"id": "85f6cc17-5815-4828-9867-f9d33545ba73",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"ownerId\": 1,\n  \"name\": \"wip\",\n  \"status\": \"PRESCRIBED\",\n  \"instructions\": {\n    \"considerations\": \"<p>This is just an example, not a real protocol.</p>\",\n    \"restrictions\": \"<p>Not for use on real animals.</p>\",\n    \"dothis\": \"<h3>Examinations to perform</h3>\",\n    \"recordthis\": \"<p>record every step in your notebook.</p>\",\n    \"success\": \"<p>All problems are gone</p>\",\n    \"failure\": \"<p>One or more problems remain</p>\",\n    \"references\": \"<a href=\\\"https://en.wikipedia.org/wiki/Rickrolling\\\">Wikipedia</a>\"\n  },\n  \"id\": 12345,\n  \"shortname\": \"wip\",\n  \"created\": \"2020-01-10T10:30:37Z\",\n  \"edited\": \"2020-02-10T10:30:37Z\",\n  \"vetNote\": \"consider prescribing protocol x instead\",\n  \"wtMeatHrs\": 22,\n  \"wtMilkHrs\": 5,\n  \"shareAll\": true,\n  \"shareClonable\": true,\n  \"caseDefinition\": {\n    \"requireId\": false,\n    \"requireMor\": false,\n    \"contraindications\": \"<p>prohibited in animals older than than 24 months</p>\",\n    \"medical\": \"if fever is present, consider Protocol 12345 instead.\",\n    \"economic\": \"culling should be considered as an alternative, as milk production is unlikely to return to normal after treatment\",\n    \"note\": \"<p>overcrowding may be contributing to issues</p>\"\n  },\n  \"treatments\": [\n    {\n      \"product\": \"MiracleMed\",\n      \"route\": \"wip\",\n      \"dosage\": {\n        \"doseId\": 97395836\n      },\n      \"sequenceFunction\": {\n        \"_type\": \"models.SeqSingleDose\"\n      },\n      \"sizeFunction\": {\n        \"dose\": {\n          \"quantity\": {\n            \"dimension\": \"Volume\",\n            \"value\": 3,\n            \"symbol\": \"ml\"\n          }\n        },\n        \"_type\": \"models.FixedDoseFunction\"\n      },\n      \"id\": \"B-123\",\n      \"ownerId\": 0,\n      \"description\": \"3.0 ml per kg repeat\",\n      \"eligibilities\": [\n        {\n          \"id\": 1,\n          \"name\": \"Beef Cattle\",\n          \"fdaSpecies\": [\n            {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          ]\n        },\n        {\n          \"id\": 1,\n          \"name\": \"Beef Cattle\",\n          \"fdaSpecies\": [\n            {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          ]\n        }\n      ],\n      \"_dose\": \"3.0 ml per kg repeat in 6 hours and again in 24 hours\",\n      \"wtMeatHrs\": -96639015,\n      \"wtMilkHrs\": 79533997,\n      \"nada\": \"wip\",\n      \"tags\": [\n        {\n          \"id\": 8,\n          \"color\": \"#516cc6\",\n          \"name\": \"ut \",\n          \"fixes\": [\n            {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          ]\n        },\n        {\n          \"id\": 8,\n          \"color\": \"#516cc6\",\n          \"name\": \"dolore eius\",\n          \"fixes\": [\n            {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          ]\n        }\n      ],\n      \"note\": \"<p>a free-form note</p>\",\n      \"amduca\": \"ONLABEL\"\n    },\n    {\n      \"product\": \"MiracleMed\",\n      \"route\": \"wip\",\n      \"dosage\": {\n        \"doseId\": 55708793\n      },\n      \"sequenceFunction\": {\n        \"_type\": \"models.SeqSingleDose\"\n      },\n      \"sizeFunction\": {\n        \"dose\": {\n          \"quantity\": {\n            \"dimension\": \"Volume\",\n            \"value\": 3,\n            \"symbol\": \"ml\"\n          }\n        },\n        \"_type\": \"models.FixedDoseFunction\"\n      },\n      \"id\": \"B-123\",\n      \"ownerId\": 0,\n      \"description\": \"3.0 ml per kg repeat\",\n      \"eligibilities\": [\n        {\n          \"id\": 1,\n          \"name\": \"Beef Cattle\",\n          \"fdaSpecies\": [\n            {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          ]\n        },\n        {\n          \"id\": 1,\n          \"name\": \"Beef Cattle\",\n          \"fdaSpecies\": [\n            {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          ]\n        }\n      ],\n      \"_dose\": \"3.0 ml per kg repeat in 6 hours and again in 24 hours\",\n      \"wtMeatHrs\": -94773703,\n      \"wtMilkHrs\": -86875119,\n      \"nada\": \"wip\",\n      \"tags\": [\n        {\n          \"id\": 8,\n          \"color\": \"#516cc6\",\n          \"name\": \"culpa\",\n          \"fixes\": [\n            {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          ]\n        },\n        {\n          \"id\": 8,\n          \"color\": \"#516cc6\",\n          \"name\": \"id enim amet\",\n          \"fixes\": [\n            {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          ]\n        }\n      ],\n      \"note\": \"<p>a free-form note</p>\",\n      \"amduca\": \"ONLABEL\"\n    }\n  ],\n  \"tags\": [\n    {\n      \"id\": 8,\n      \"color\": \"#516cc6\",\n      \"name\": \"ad\",\n      \"fixes\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"id\": 8,\n      \"color\": \"#516cc6\",\n      \"name\": \"sit \",\n      \"fixes\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    }\n  ],\n  \"diagnoses\": [\n    {\n      \"id\": 8,\n      \"name\": \"Pain/inflammation (musculoskeletal), treatment\"\n    },\n    {\n      \"id\": 8,\n      \"name\": \"Pain/inflammation (musculoskeletal), treatment\"\n    }\n  ],\n  \"eligibilities\": [\n    {\n      \"id\": 1,\n      \"name\": \"Beef Cattle\",\n      \"fdaSpecies\": [\n        \"horses\",\n        \"unidentified\"\n      ]\n    },\n    {\n      \"id\": 1,\n      \"name\": \"Beef Cattle\",\n      \"fdaSpecies\": [\n        \"veal\",\n        \"sheep\"\n      ]\n    }\n  ],\n  \"promises\": [\n    {\n      \"_type\": \"models.IdPromise\",\n      \"name\": \"ID promise\",\n      \"descrip\": \"You must give ID for each case enrolled\",\n      \"query\": \"What is the animal's name or number?\",\n      \"when\": \"PT24H\",\n      \"id\": 2345\n    },\n    {\n      \"_type\": \"models.IdPromise\",\n      \"name\": \"ID promise\",\n      \"descrip\": \"You must give ID for each case enrolled\",\n      \"query\": \"What is the animal's name or number?\",\n      \"when\": \"PT24H\",\n      \"id\": 2345\n    }\n  ],\n  \"metadata\": [\n    {\n      \"key\": \"popularity\",\n      \"value\": \"good 1.2\"\n    },\n    {\n      \"key\": \"popularity\",\n      \"value\": \"good 1.2\"\n    }\n  ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/protocols/amducatags",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"protocols",
										"amducatags"
									]
								},
								"description": "add tags to protocol per AMDUCA rules"
							},
							"response": [
								{
									"id": "99b65cae-9db1-4569-b78a-ad9b06aba86a",
									"name": "Success â€“ updated Protocol",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "X-Auth-Token",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"ownerId\": 1,\n  \"name\": \"wip\",\n  \"status\": \"PRESCRIBED\",\n  \"instructions\": {\n    \"considerations\": \"<p>This is just an example, not a real protocol.</p>\",\n    \"restrictions\": \"<p>Not for use on real animals.</p>\",\n    \"dothis\": \"<h3>Examinations to perform</h3>\",\n    \"recordthis\": \"<p>record every step in your notebook.</p>\",\n    \"success\": \"<p>All problems are gone</p>\",\n    \"failure\": \"<p>One or more problems remain</p>\",\n    \"references\": \"<a href=\\\"https://en.wikipedia.org/wiki/Rickrolling\\\">Wikipedia</a>\"\n  },\n  \"id\": 12345,\n  \"shortname\": \"wip\",\n  \"created\": \"2020-01-10T10:30:37Z\",\n  \"edited\": \"2020-02-10T10:30:37Z\",\n  \"vetNote\": \"consider prescribing protocol x instead\",\n  \"wtMeatHrs\": 22,\n  \"wtMilkHrs\": 5,\n  \"shareAll\": true,\n  \"shareClonable\": true,\n  \"caseDefinition\": {\n    \"requireId\": false,\n    \"requireMor\": false,\n    \"contraindications\": \"<p>prohibited in animals older than than 24 months</p>\",\n    \"medical\": \"if fever is present, consider Protocol 12345 instead.\",\n    \"economic\": \"culling should be considered as an alternative, as milk production is unlikely to return to normal after treatment\",\n    \"note\": \"<p>overcrowding may be contributing to issues</p>\"\n  },\n  \"treatments\": [\n    {\n      \"product\": \"MiracleMed\",\n      \"route\": \"wip\",\n      \"dosage\": {\n        \"doseId\": 97395836\n      },\n      \"sequenceFunction\": {\n        \"_type\": \"models.SeqSingleDose\"\n      },\n      \"sizeFunction\": {\n        \"dose\": {\n          \"quantity\": {\n            \"dimension\": \"Volume\",\n            \"value\": 3,\n            \"symbol\": \"ml\"\n          }\n        },\n        \"_type\": \"models.FixedDoseFunction\"\n      },\n      \"id\": \"B-123\",\n      \"ownerId\": 0,\n      \"description\": \"3.0 ml per kg repeat\",\n      \"eligibilities\": [\n        {\n          \"id\": 1,\n          \"name\": \"Beef Cattle\",\n          \"fdaSpecies\": [\n            {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          ]\n        },\n        {\n          \"id\": 1,\n          \"name\": \"Beef Cattle\",\n          \"fdaSpecies\": [\n            {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          ]\n        }\n      ],\n      \"_dose\": \"3.0 ml per kg repeat in 6 hours and again in 24 hours\",\n      \"wtMeatHrs\": -96639015,\n      \"wtMilkHrs\": 79533997,\n      \"nada\": \"wip\",\n      \"tags\": [\n        {\n          \"id\": 8,\n          \"color\": \"#516cc6\",\n          \"name\": \"ut \",\n          \"fixes\": [\n            {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          ]\n        },\n        {\n          \"id\": 8,\n          \"color\": \"#516cc6\",\n          \"name\": \"dolore eius\",\n          \"fixes\": [\n            {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          ]\n        }\n      ],\n      \"note\": \"<p>a free-form note</p>\",\n      \"amduca\": \"ONLABEL\"\n    },\n    {\n      \"product\": \"MiracleMed\",\n      \"route\": \"wip\",\n      \"dosage\": {\n        \"doseId\": 55708793\n      },\n      \"sequenceFunction\": {\n        \"_type\": \"models.SeqSingleDose\"\n      },\n      \"sizeFunction\": {\n        \"dose\": {\n          \"quantity\": {\n            \"dimension\": \"Volume\",\n            \"value\": 3,\n            \"symbol\": \"ml\"\n          }\n        },\n        \"_type\": \"models.FixedDoseFunction\"\n      },\n      \"id\": \"B-123\",\n      \"ownerId\": 0,\n      \"description\": \"3.0 ml per kg repeat\",\n      \"eligibilities\": [\n        {\n          \"id\": 1,\n          \"name\": \"Beef Cattle\",\n          \"fdaSpecies\": [\n            {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          ]\n        },\n        {\n          \"id\": 1,\n          \"name\": \"Beef Cattle\",\n          \"fdaSpecies\": [\n            {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          ]\n        }\n      ],\n      \"_dose\": \"3.0 ml per kg repeat in 6 hours and again in 24 hours\",\n      \"wtMeatHrs\": -94773703,\n      \"wtMilkHrs\": -86875119,\n      \"nada\": \"wip\",\n      \"tags\": [\n        {\n          \"id\": 8,\n          \"color\": \"#516cc6\",\n          \"name\": \"culpa\",\n          \"fixes\": [\n            {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          ]\n        },\n        {\n          \"id\": 8,\n          \"color\": \"#516cc6\",\n          \"name\": \"id enim amet\",\n          \"fixes\": [\n            {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          ]\n        }\n      ],\n      \"note\": \"<p>a free-form note</p>\",\n      \"amduca\": \"ONLABEL\"\n    }\n  ],\n  \"tags\": [\n    {\n      \"id\": 8,\n      \"color\": \"#516cc6\",\n      \"name\": \"ad\",\n      \"fixes\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"id\": 8,\n      \"color\": \"#516cc6\",\n      \"name\": \"sit \",\n      \"fixes\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    }\n  ],\n  \"diagnoses\": [\n    {\n      \"id\": 8,\n      \"name\": \"Pain/inflammation (musculoskeletal), treatment\"\n    },\n    {\n      \"id\": 8,\n      \"name\": \"Pain/inflammation (musculoskeletal), treatment\"\n    }\n  ],\n  \"eligibilities\": [\n    {\n      \"id\": 1,\n      \"name\": \"Beef Cattle\",\n      \"fdaSpecies\": [\n        \"horses\",\n        \"unidentified\"\n      ]\n    },\n    {\n      \"id\": 1,\n      \"name\": \"Beef Cattle\",\n      \"fdaSpecies\": [\n        \"veal\",\n        \"sheep\"\n      ]\n    }\n  ],\n  \"promises\": [\n    {\n      \"_type\": \"models.IdPromise\",\n      \"name\": \"ID promise\",\n      \"descrip\": \"You must give ID for each case enrolled\",\n      \"query\": \"What is the animal's name or number?\",\n      \"when\": \"PT24H\",\n      \"id\": 2345\n    },\n    {\n      \"_type\": \"models.IdPromise\",\n      \"name\": \"ID promise\",\n      \"descrip\": \"You must give ID for each case enrolled\",\n      \"query\": \"What is the animal's name or number?\",\n      \"when\": \"PT24H\",\n      \"id\": 2345\n    }\n  ],\n  \"metadata\": [\n    {\n      \"key\": \"popularity\",\n      \"value\": \"good 1.2\"\n    },\n    {\n      \"key\": \"popularity\",\n      \"value\": \"good 1.2\"\n    }\n  ]\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/protocols/amducatags",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"protocols",
												"amducatags"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"protocol\": {\n    \"ownerId\": 1,\n    \"name\": \"wip\",\n    \"status\": \"PRESCRIBED\",\n    \"instructions\": {\n      \"considerations\": \"<p>This is just an example, not a real protocol.</p>\",\n      \"restrictions\": \"<p>Not for use on real animals.</p>\",\n      \"dothis\": \"<h3>Examinations to perform</h3>\",\n      \"recordthis\": \"<p>record every step in your notebook.</p>\",\n      \"success\": \"<p>All problems are gone</p>\",\n      \"failure\": \"<p>One or more problems remain</p>\",\n      \"references\": \"<a href=\\\"https://en.wikipedia.org/wiki/Rickrolling\\\">Wikipedia</a>\"\n    },\n    \"id\": 12345,\n    \"shortname\": \"wip\",\n    \"created\": \"2020-01-10T10:30:37Z\",\n    \"edited\": \"2020-02-10T10:30:37Z\",\n    \"vetNote\": \"consider prescribing protocol x instead\",\n    \"wtMeatHrs\": 22,\n    \"wtMilkHrs\": 5,\n    \"shareAll\": true,\n    \"shareClonable\": true,\n    \"caseDefinition\": {\n      \"requireId\": false,\n      \"requireMor\": false,\n      \"contraindications\": \"<p>prohibited in animals older than than 24 months</p>\",\n      \"medical\": \"if fever is present, consider Protocol 12345 instead.\",\n      \"economic\": \"culling should be considered as an alternative, as milk production is unlikely to return to normal after treatment\",\n      \"note\": \"<p>overcrowding may be contributing to issues</p>\"\n    },\n    \"treatments\": [\n      {\n        \"product\": \"MiracleMed\",\n        \"route\": \"wip\",\n        \"dosage\": {\n          \"doseId\": -58527078\n        },\n        \"sequenceFunction\": {\n          \"_type\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n          }\n        },\n        \"sizeFunction\": {\n          \"dose\": {\n            \"quantity\": {\n              \"dimension\": \"Volume\",\n              \"value\": 3,\n              \"symbol\": \"ml\"\n            }\n          },\n          \"_type\": \"models.FixedDoseFunction\"\n        },\n        \"id\": \"B-123\",\n        \"ownerId\": 0,\n        \"description\": \"3.0 ml per kg repeat\",\n        \"eligibilities\": [\n          {\n            \"id\": 1,\n            \"name\": \"Beef Cattle\",\n            \"fdaSpecies\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          },\n          {\n            \"id\": 1,\n            \"name\": \"Beef Cattle\",\n            \"fdaSpecies\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          }\n        ],\n        \"_dose\": \"3.0 ml per kg repeat in 6 hours and again in 24 hours\",\n        \"wtMeatHrs\": 12063618,\n        \"wtMilkHrs\": -30921578,\n        \"nada\": \"wip\",\n        \"tags\": [\n          {\n            \"id\": 8,\n            \"color\": \"#516cc6\",\n            \"name\": \"\",\n            \"fixes\": [\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              }\n            ]\n          },\n          {\n            \"id\": 8,\n            \"color\": \"#516cc6\",\n            \"name\": \"si\",\n            \"fixes\": [\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              }\n            ]\n          }\n        ],\n        \"note\": \"<p>a free-form note</p>\",\n        \"amduca\": \"OFFLABEL\"\n      },\n      {\n        \"product\": \"MiracleMed\",\n        \"route\": \"wip\",\n        \"dosage\": {\n          \"doseId\": -21450596\n        },\n        \"sequenceFunction\": {\n          \"_type\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n          }\n        },\n        \"sizeFunction\": {\n          \"dose\": {\n            \"quantity\": {\n              \"dimension\": \"Volume\",\n              \"value\": 3,\n              \"symbol\": \"ml\"\n            }\n          },\n          \"_type\": \"models.FixedDoseFunction\"\n        },\n        \"id\": \"B-123\",\n        \"ownerId\": 0,\n        \"description\": \"3.0 ml per kg repeat\",\n        \"eligibilities\": [\n          {\n            \"id\": 1,\n            \"name\": \"Beef Cattle\",\n            \"fdaSpecies\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          },\n          {\n            \"id\": 1,\n            \"name\": \"Beef Cattle\",\n            \"fdaSpecies\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          }\n        ],\n        \"_dose\": \"3.0 ml per kg repeat in 6 hours and again in 24 hours\",\n        \"wtMeatHrs\": -9128385,\n        \"wtMilkHrs\": 81060292,\n        \"nada\": \"wip\",\n        \"tags\": [\n          {\n            \"id\": 8,\n            \"color\": \"#516cc6\",\n            \"name\": \"ullamco\",\n            \"fixes\": [\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              }\n            ]\n          },\n          {\n            \"id\": 8,\n            \"color\": \"#516cc6\",\n            \"name\": \"pro\",\n            \"fixes\": [\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              }\n            ]\n          }\n        ],\n        \"note\": \"<p>a free-form note</p>\",\n        \"amduca\": \"UNIDENTIFIED\"\n      }\n    ],\n    \"tags\": [\n      {\n        \"id\": 8,\n        \"color\": \"#516cc6\",\n        \"name\": \"est e\",\n        \"fixes\": [\n          {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n          },\n          {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n          }\n        ]\n      },\n      {\n        \"id\": 8,\n        \"color\": \"#516cc6\",\n        \"name\": \"E\",\n        \"fixes\": [\n          {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n          },\n          {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n          }\n        ]\n      }\n    ],\n    \"diagnoses\": [\n      {\n        \"id\": 8,\n        \"name\": \"Pain/inflammation (musculoskeletal), treatment\"\n      },\n      {\n        \"id\": 8,\n        \"name\": \"Pain/inflammation (musculoskeletal), treatment\"\n      }\n    ],\n    \"eligibilities\": [\n      {\n        \"id\": 1,\n        \"name\": \"Beef Cattle\",\n        \"fdaSpecies\": [\n          \"beef_cattle\",\n          \"llamas\"\n        ]\n      },\n      {\n        \"id\": 1,\n        \"name\": \"Beef Cattle\",\n        \"fdaSpecies\": [\n          \"sheep\",\n          \"gamebirds\"\n        ]\n      }\n    ],\n    \"promises\": [\n      {\n        \"_type\": \"models.IdPromise\",\n        \"name\": \"ID promise\",\n        \"descrip\": \"You must give ID for each case enrolled\",\n        \"query\": \"What is the animal's name or number?\",\n        \"when\": \"PT24H\",\n        \"id\": 2345\n      },\n      {\n        \"_type\": \"models.IdPromise\",\n        \"name\": \"ID promise\",\n        \"descrip\": \"You must give ID for each case enrolled\",\n        \"query\": \"What is the animal's name or number?\",\n        \"when\": \"PT24H\",\n        \"id\": 2345\n      }\n    ],\n    \"metadata\": [\n      {\n        \"key\": \"popularity\",\n        \"value\": \"good 1.2\"\n      },\n      {\n        \"key\": \"popularity\",\n        \"value\": \"good 1.2\"\n      }\n    ]\n  }\n}"
								},
								{
									"id": "21746db0-c90e-4e32-8fe0-0fc1d8d4cbbc",
									"name": "The server can not understand the request due to invalid syntax.",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "X-Auth-Token",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"ownerId\": 1,\n  \"name\": \"wip\",\n  \"status\": \"PRESCRIBED\",\n  \"instructions\": {\n    \"considerations\": \"<p>This is just an example, not a real protocol.</p>\",\n    \"restrictions\": \"<p>Not for use on real animals.</p>\",\n    \"dothis\": \"<h3>Examinations to perform</h3>\",\n    \"recordthis\": \"<p>record every step in your notebook.</p>\",\n    \"success\": \"<p>All problems are gone</p>\",\n    \"failure\": \"<p>One or more problems remain</p>\",\n    \"references\": \"<a href=\\\"https://en.wikipedia.org/wiki/Rickrolling\\\">Wikipedia</a>\"\n  },\n  \"id\": 12345,\n  \"shortname\": \"wip\",\n  \"created\": \"2020-01-10T10:30:37Z\",\n  \"edited\": \"2020-02-10T10:30:37Z\",\n  \"vetNote\": \"consider prescribing protocol x instead\",\n  \"wtMeatHrs\": 22,\n  \"wtMilkHrs\": 5,\n  \"shareAll\": true,\n  \"shareClonable\": true,\n  \"caseDefinition\": {\n    \"requireId\": false,\n    \"requireMor\": false,\n    \"contraindications\": \"<p>prohibited in animals older than than 24 months</p>\",\n    \"medical\": \"if fever is present, consider Protocol 12345 instead.\",\n    \"economic\": \"culling should be considered as an alternative, as milk production is unlikely to return to normal after treatment\",\n    \"note\": \"<p>overcrowding may be contributing to issues</p>\"\n  },\n  \"treatments\": [\n    {\n      \"product\": \"MiracleMed\",\n      \"route\": \"wip\",\n      \"dosage\": {\n        \"doseId\": 97395836\n      },\n      \"sequenceFunction\": {\n        \"_type\": \"models.SeqSingleDose\"\n      },\n      \"sizeFunction\": {\n        \"dose\": {\n          \"quantity\": {\n            \"dimension\": \"Volume\",\n            \"value\": 3,\n            \"symbol\": \"ml\"\n          }\n        },\n        \"_type\": \"models.FixedDoseFunction\"\n      },\n      \"id\": \"B-123\",\n      \"ownerId\": 0,\n      \"description\": \"3.0 ml per kg repeat\",\n      \"eligibilities\": [\n        {\n          \"id\": 1,\n          \"name\": \"Beef Cattle\",\n          \"fdaSpecies\": [\n            {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          ]\n        },\n        {\n          \"id\": 1,\n          \"name\": \"Beef Cattle\",\n          \"fdaSpecies\": [\n            {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          ]\n        }\n      ],\n      \"_dose\": \"3.0 ml per kg repeat in 6 hours and again in 24 hours\",\n      \"wtMeatHrs\": -96639015,\n      \"wtMilkHrs\": 79533997,\n      \"nada\": \"wip\",\n      \"tags\": [\n        {\n          \"id\": 8,\n          \"color\": \"#516cc6\",\n          \"name\": \"ut \",\n          \"fixes\": [\n            {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          ]\n        },\n        {\n          \"id\": 8,\n          \"color\": \"#516cc6\",\n          \"name\": \"dolore eius\",\n          \"fixes\": [\n            {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          ]\n        }\n      ],\n      \"note\": \"<p>a free-form note</p>\",\n      \"amduca\": \"ONLABEL\"\n    },\n    {\n      \"product\": \"MiracleMed\",\n      \"route\": \"wip\",\n      \"dosage\": {\n        \"doseId\": 55708793\n      },\n      \"sequenceFunction\": {\n        \"_type\": \"models.SeqSingleDose\"\n      },\n      \"sizeFunction\": {\n        \"dose\": {\n          \"quantity\": {\n            \"dimension\": \"Volume\",\n            \"value\": 3,\n            \"symbol\": \"ml\"\n          }\n        },\n        \"_type\": \"models.FixedDoseFunction\"\n      },\n      \"id\": \"B-123\",\n      \"ownerId\": 0,\n      \"description\": \"3.0 ml per kg repeat\",\n      \"eligibilities\": [\n        {\n          \"id\": 1,\n          \"name\": \"Beef Cattle\",\n          \"fdaSpecies\": [\n            {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          ]\n        },\n        {\n          \"id\": 1,\n          \"name\": \"Beef Cattle\",\n          \"fdaSpecies\": [\n            {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          ]\n        }\n      ],\n      \"_dose\": \"3.0 ml per kg repeat in 6 hours and again in 24 hours\",\n      \"wtMeatHrs\": -94773703,\n      \"wtMilkHrs\": -86875119,\n      \"nada\": \"wip\",\n      \"tags\": [\n        {\n          \"id\": 8,\n          \"color\": \"#516cc6\",\n          \"name\": \"culpa\",\n          \"fixes\": [\n            {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          ]\n        },\n        {\n          \"id\": 8,\n          \"color\": \"#516cc6\",\n          \"name\": \"id enim amet\",\n          \"fixes\": [\n            {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          ]\n        }\n      ],\n      \"note\": \"<p>a free-form note</p>\",\n      \"amduca\": \"ONLABEL\"\n    }\n  ],\n  \"tags\": [\n    {\n      \"id\": 8,\n      \"color\": \"#516cc6\",\n      \"name\": \"ad\",\n      \"fixes\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"id\": 8,\n      \"color\": \"#516cc6\",\n      \"name\": \"sit \",\n      \"fixes\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    }\n  ],\n  \"diagnoses\": [\n    {\n      \"id\": 8,\n      \"name\": \"Pain/inflammation (musculoskeletal), treatment\"\n    },\n    {\n      \"id\": 8,\n      \"name\": \"Pain/inflammation (musculoskeletal), treatment\"\n    }\n  ],\n  \"eligibilities\": [\n    {\n      \"id\": 1,\n      \"name\": \"Beef Cattle\",\n      \"fdaSpecies\": [\n        \"horses\",\n        \"unidentified\"\n      ]\n    },\n    {\n      \"id\": 1,\n      \"name\": \"Beef Cattle\",\n      \"fdaSpecies\": [\n        \"veal\",\n        \"sheep\"\n      ]\n    }\n  ],\n  \"promises\": [\n    {\n      \"_type\": \"models.IdPromise\",\n      \"name\": \"ID promise\",\n      \"descrip\": \"You must give ID for each case enrolled\",\n      \"query\": \"What is the animal's name or number?\",\n      \"when\": \"PT24H\",\n      \"id\": 2345\n    },\n    {\n      \"_type\": \"models.IdPromise\",\n      \"name\": \"ID promise\",\n      \"descrip\": \"You must give ID for each case enrolled\",\n      \"query\": \"What is the animal's name or number?\",\n      \"when\": \"PT24H\",\n      \"id\": 2345\n    }\n  ],\n  \"metadata\": [\n    {\n      \"key\": \"popularity\",\n      \"value\": \"good 1.2\"\n    },\n    {\n      \"key\": \"popularity\",\n      \"value\": \"good 1.2\"\n    }\n  ]\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/protocols/amducatags",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"protocols",
												"amducatags"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"title\": \"incorrect username or password\",\n  \"status\": 404,\n  \"errorType\": \"/errors/incorrect-user-pass\",\n  \"detail\": \"Authentication failed due to incorrect username or password.\",\n  \"instance\": \"/login/log/abc123\"\n}"
								},
								{
									"id": "50163834-bfe0-4c34-93ea-08e57ef3f66f",
									"name": "Authorization required",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "X-Auth-Token",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"ownerId\": 1,\n  \"name\": \"wip\",\n  \"status\": \"PRESCRIBED\",\n  \"instructions\": {\n    \"considerations\": \"<p>This is just an example, not a real protocol.</p>\",\n    \"restrictions\": \"<p>Not for use on real animals.</p>\",\n    \"dothis\": \"<h3>Examinations to perform</h3>\",\n    \"recordthis\": \"<p>record every step in your notebook.</p>\",\n    \"success\": \"<p>All problems are gone</p>\",\n    \"failure\": \"<p>One or more problems remain</p>\",\n    \"references\": \"<a href=\\\"https://en.wikipedia.org/wiki/Rickrolling\\\">Wikipedia</a>\"\n  },\n  \"id\": 12345,\n  \"shortname\": \"wip\",\n  \"created\": \"2020-01-10T10:30:37Z\",\n  \"edited\": \"2020-02-10T10:30:37Z\",\n  \"vetNote\": \"consider prescribing protocol x instead\",\n  \"wtMeatHrs\": 22,\n  \"wtMilkHrs\": 5,\n  \"shareAll\": true,\n  \"shareClonable\": true,\n  \"caseDefinition\": {\n    \"requireId\": false,\n    \"requireMor\": false,\n    \"contraindications\": \"<p>prohibited in animals older than than 24 months</p>\",\n    \"medical\": \"if fever is present, consider Protocol 12345 instead.\",\n    \"economic\": \"culling should be considered as an alternative, as milk production is unlikely to return to normal after treatment\",\n    \"note\": \"<p>overcrowding may be contributing to issues</p>\"\n  },\n  \"treatments\": [\n    {\n      \"product\": \"MiracleMed\",\n      \"route\": \"wip\",\n      \"dosage\": {\n        \"doseId\": 97395836\n      },\n      \"sequenceFunction\": {\n        \"_type\": \"models.SeqSingleDose\"\n      },\n      \"sizeFunction\": {\n        \"dose\": {\n          \"quantity\": {\n            \"dimension\": \"Volume\",\n            \"value\": 3,\n            \"symbol\": \"ml\"\n          }\n        },\n        \"_type\": \"models.FixedDoseFunction\"\n      },\n      \"id\": \"B-123\",\n      \"ownerId\": 0,\n      \"description\": \"3.0 ml per kg repeat\",\n      \"eligibilities\": [\n        {\n          \"id\": 1,\n          \"name\": \"Beef Cattle\",\n          \"fdaSpecies\": [\n            {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          ]\n        },\n        {\n          \"id\": 1,\n          \"name\": \"Beef Cattle\",\n          \"fdaSpecies\": [\n            {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          ]\n        }\n      ],\n      \"_dose\": \"3.0 ml per kg repeat in 6 hours and again in 24 hours\",\n      \"wtMeatHrs\": -96639015,\n      \"wtMilkHrs\": 79533997,\n      \"nada\": \"wip\",\n      \"tags\": [\n        {\n          \"id\": 8,\n          \"color\": \"#516cc6\",\n          \"name\": \"ut \",\n          \"fixes\": [\n            {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          ]\n        },\n        {\n          \"id\": 8,\n          \"color\": \"#516cc6\",\n          \"name\": \"dolore eius\",\n          \"fixes\": [\n            {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          ]\n        }\n      ],\n      \"note\": \"<p>a free-form note</p>\",\n      \"amduca\": \"ONLABEL\"\n    },\n    {\n      \"product\": \"MiracleMed\",\n      \"route\": \"wip\",\n      \"dosage\": {\n        \"doseId\": 55708793\n      },\n      \"sequenceFunction\": {\n        \"_type\": \"models.SeqSingleDose\"\n      },\n      \"sizeFunction\": {\n        \"dose\": {\n          \"quantity\": {\n            \"dimension\": \"Volume\",\n            \"value\": 3,\n            \"symbol\": \"ml\"\n          }\n        },\n        \"_type\": \"models.FixedDoseFunction\"\n      },\n      \"id\": \"B-123\",\n      \"ownerId\": 0,\n      \"description\": \"3.0 ml per kg repeat\",\n      \"eligibilities\": [\n        {\n          \"id\": 1,\n          \"name\": \"Beef Cattle\",\n          \"fdaSpecies\": [\n            {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          ]\n        },\n        {\n          \"id\": 1,\n          \"name\": \"Beef Cattle\",\n          \"fdaSpecies\": [\n            {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          ]\n        }\n      ],\n      \"_dose\": \"3.0 ml per kg repeat in 6 hours and again in 24 hours\",\n      \"wtMeatHrs\": -94773703,\n      \"wtMilkHrs\": -86875119,\n      \"nada\": \"wip\",\n      \"tags\": [\n        {\n          \"id\": 8,\n          \"color\": \"#516cc6\",\n          \"name\": \"culpa\",\n          \"fixes\": [\n            {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          ]\n        },\n        {\n          \"id\": 8,\n          \"color\": \"#516cc6\",\n          \"name\": \"id enim amet\",\n          \"fixes\": [\n            {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          ]\n        }\n      ],\n      \"note\": \"<p>a free-form note</p>\",\n      \"amduca\": \"ONLABEL\"\n    }\n  ],\n  \"tags\": [\n    {\n      \"id\": 8,\n      \"color\": \"#516cc6\",\n      \"name\": \"ad\",\n      \"fixes\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"id\": 8,\n      \"color\": \"#516cc6\",\n      \"name\": \"sit \",\n      \"fixes\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    }\n  ],\n  \"diagnoses\": [\n    {\n      \"id\": 8,\n      \"name\": \"Pain/inflammation (musculoskeletal), treatment\"\n    },\n    {\n      \"id\": 8,\n      \"name\": \"Pain/inflammation (musculoskeletal), treatment\"\n    }\n  ],\n  \"eligibilities\": [\n    {\n      \"id\": 1,\n      \"name\": \"Beef Cattle\",\n      \"fdaSpecies\": [\n        \"horses\",\n        \"unidentified\"\n      ]\n    },\n    {\n      \"id\": 1,\n      \"name\": \"Beef Cattle\",\n      \"fdaSpecies\": [\n        \"veal\",\n        \"sheep\"\n      ]\n    }\n  ],\n  \"promises\": [\n    {\n      \"_type\": \"models.IdPromise\",\n      \"name\": \"ID promise\",\n      \"descrip\": \"You must give ID for each case enrolled\",\n      \"query\": \"What is the animal's name or number?\",\n      \"when\": \"PT24H\",\n      \"id\": 2345\n    },\n    {\n      \"_type\": \"models.IdPromise\",\n      \"name\": \"ID promise\",\n      \"descrip\": \"You must give ID for each case enrolled\",\n      \"query\": \"What is the animal's name or number?\",\n      \"when\": \"PT24H\",\n      \"id\": 2345\n    }\n  ],\n  \"metadata\": [\n    {\n      \"key\": \"popularity\",\n      \"value\": \"good 1.2\"\n    },\n    {\n      \"key\": \"popularity\",\n      \"value\": \"good 1.2\"\n    }\n  ]\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/protocols/amducatags",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"protocols",
												"amducatags"
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": ""
								}
							]
						},
						{
							"name": "This endpoint validates a protocol without saving it.",
							"id": "b5983a16-4d53-4e74-849c-b196c65aec38",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"ownerId\": 1,\n  \"name\": \"wip\",\n  \"status\": \"PRESCRIBED\",\n  \"instructions\": {\n    \"considerations\": \"<p>This is just an example, not a real protocol.</p>\",\n    \"restrictions\": \"<p>Not for use on real animals.</p>\",\n    \"dothis\": \"<h3>Examinations to perform</h3>\",\n    \"recordthis\": \"<p>record every step in your notebook.</p>\",\n    \"success\": \"<p>All problems are gone</p>\",\n    \"failure\": \"<p>One or more problems remain</p>\",\n    \"references\": \"<a href=\\\"https://en.wikipedia.org/wiki/Rickrolling\\\">Wikipedia</a>\"\n  },\n  \"id\": 12345,\n  \"shortname\": \"wip\",\n  \"created\": \"2020-01-10T10:30:37Z\",\n  \"edited\": \"2020-02-10T10:30:37Z\",\n  \"vetNote\": \"consider prescribing protocol x instead\",\n  \"wtMeatHrs\": 22,\n  \"wtMilkHrs\": 5,\n  \"shareAll\": true,\n  \"shareClonable\": true,\n  \"caseDefinition\": {\n    \"requireId\": false,\n    \"requireMor\": false,\n    \"contraindications\": \"<p>prohibited in animals older than than 24 months</p>\",\n    \"medical\": \"if fever is present, consider Protocol 12345 instead.\",\n    \"economic\": \"culling should be considered as an alternative, as milk production is unlikely to return to normal after treatment\",\n    \"note\": \"<p>overcrowding may be contributing to issues</p>\"\n  },\n  \"treatments\": [\n    {\n      \"product\": \"MiracleMed\",\n      \"route\": \"wip\",\n      \"dosage\": {\n        \"doseId\": 97395836\n      },\n      \"sequenceFunction\": {\n        \"_type\": \"models.SeqSingleDose\"\n      },\n      \"sizeFunction\": {\n        \"dose\": {\n          \"quantity\": {\n            \"dimension\": \"Volume\",\n            \"value\": 3,\n            \"symbol\": \"ml\"\n          }\n        },\n        \"_type\": \"models.FixedDoseFunction\"\n      },\n      \"id\": \"B-123\",\n      \"ownerId\": 0,\n      \"description\": \"3.0 ml per kg repeat\",\n      \"eligibilities\": [\n        {\n          \"id\": 1,\n          \"name\": \"Beef Cattle\",\n          \"fdaSpecies\": [\n            {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          ]\n        },\n        {\n          \"id\": 1,\n          \"name\": \"Beef Cattle\",\n          \"fdaSpecies\": [\n            {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          ]\n        }\n      ],\n      \"_dose\": \"3.0 ml per kg repeat in 6 hours and again in 24 hours\",\n      \"wtMeatHrs\": -96639015,\n      \"wtMilkHrs\": 79533997,\n      \"nada\": \"wip\",\n      \"tags\": [\n        {\n          \"id\": 8,\n          \"color\": \"#516cc6\",\n          \"name\": \"ut \",\n          \"fixes\": [\n            {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          ]\n        },\n        {\n          \"id\": 8,\n          \"color\": \"#516cc6\",\n          \"name\": \"dolore eius\",\n          \"fixes\": [\n            {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          ]\n        }\n      ],\n      \"note\": \"<p>a free-form note</p>\",\n      \"amduca\": \"ONLABEL\"\n    },\n    {\n      \"product\": \"MiracleMed\",\n      \"route\": \"wip\",\n      \"dosage\": {\n        \"doseId\": 55708793\n      },\n      \"sequenceFunction\": {\n        \"_type\": \"models.SeqSingleDose\"\n      },\n      \"sizeFunction\": {\n        \"dose\": {\n          \"quantity\": {\n            \"dimension\": \"Volume\",\n            \"value\": 3,\n            \"symbol\": \"ml\"\n          }\n        },\n        \"_type\": \"models.FixedDoseFunction\"\n      },\n      \"id\": \"B-123\",\n      \"ownerId\": 0,\n      \"description\": \"3.0 ml per kg repeat\",\n      \"eligibilities\": [\n        {\n          \"id\": 1,\n          \"name\": \"Beef Cattle\",\n          \"fdaSpecies\": [\n            {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          ]\n        },\n        {\n          \"id\": 1,\n          \"name\": \"Beef Cattle\",\n          \"fdaSpecies\": [\n            {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          ]\n        }\n      ],\n      \"_dose\": \"3.0 ml per kg repeat in 6 hours and again in 24 hours\",\n      \"wtMeatHrs\": -94773703,\n      \"wtMilkHrs\": -86875119,\n      \"nada\": \"wip\",\n      \"tags\": [\n        {\n          \"id\": 8,\n          \"color\": \"#516cc6\",\n          \"name\": \"culpa\",\n          \"fixes\": [\n            {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          ]\n        },\n        {\n          \"id\": 8,\n          \"color\": \"#516cc6\",\n          \"name\": \"id enim amet\",\n          \"fixes\": [\n            {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          ]\n        }\n      ],\n      \"note\": \"<p>a free-form note</p>\",\n      \"amduca\": \"ONLABEL\"\n    }\n  ],\n  \"tags\": [\n    {\n      \"id\": 8,\n      \"color\": \"#516cc6\",\n      \"name\": \"ad\",\n      \"fixes\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"id\": 8,\n      \"color\": \"#516cc6\",\n      \"name\": \"sit \",\n      \"fixes\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    }\n  ],\n  \"diagnoses\": [\n    {\n      \"id\": 8,\n      \"name\": \"Pain/inflammation (musculoskeletal), treatment\"\n    },\n    {\n      \"id\": 8,\n      \"name\": \"Pain/inflammation (musculoskeletal), treatment\"\n    }\n  ],\n  \"eligibilities\": [\n    {\n      \"id\": 1,\n      \"name\": \"Beef Cattle\",\n      \"fdaSpecies\": [\n        \"horses\",\n        \"unidentified\"\n      ]\n    },\n    {\n      \"id\": 1,\n      \"name\": \"Beef Cattle\",\n      \"fdaSpecies\": [\n        \"veal\",\n        \"sheep\"\n      ]\n    }\n  ],\n  \"promises\": [\n    {\n      \"_type\": \"models.IdPromise\",\n      \"name\": \"ID promise\",\n      \"descrip\": \"You must give ID for each case enrolled\",\n      \"query\": \"What is the animal's name or number?\",\n      \"when\": \"PT24H\",\n      \"id\": 2345\n    },\n    {\n      \"_type\": \"models.IdPromise\",\n      \"name\": \"ID promise\",\n      \"descrip\": \"You must give ID for each case enrolled\",\n      \"query\": \"What is the animal's name or number?\",\n      \"when\": \"PT24H\",\n      \"id\": 2345\n    }\n  ],\n  \"metadata\": [\n    {\n      \"key\": \"popularity\",\n      \"value\": \"good 1.2\"\n    },\n    {\n      \"key\": \"popularity\",\n      \"value\": \"good 1.2\"\n    }\n  ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/protocols/validate",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"protocols",
										"validate"
									]
								},
								"description": "This endpoint validates a protocol for prescribing without saving it. It should only be called if the user wants to prescribe a protocol without saving changes. The endpoints to save or update protocols automatically include validation.4"
							},
							"response": [
								{
									"id": "018aaf09-c18d-4b91-805e-72cf1834028e",
									"name": "Success â€“ updated Protocol",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "X-Auth-Token",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"ownerId\": 1,\n  \"name\": \"wip\",\n  \"status\": \"PRESCRIBED\",\n  \"instructions\": {\n    \"considerations\": \"<p>This is just an example, not a real protocol.</p>\",\n    \"restrictions\": \"<p>Not for use on real animals.</p>\",\n    \"dothis\": \"<h3>Examinations to perform</h3>\",\n    \"recordthis\": \"<p>record every step in your notebook.</p>\",\n    \"success\": \"<p>All problems are gone</p>\",\n    \"failure\": \"<p>One or more problems remain</p>\",\n    \"references\": \"<a href=\\\"https://en.wikipedia.org/wiki/Rickrolling\\\">Wikipedia</a>\"\n  },\n  \"id\": 12345,\n  \"shortname\": \"wip\",\n  \"created\": \"2020-01-10T10:30:37Z\",\n  \"edited\": \"2020-02-10T10:30:37Z\",\n  \"vetNote\": \"consider prescribing protocol x instead\",\n  \"wtMeatHrs\": 22,\n  \"wtMilkHrs\": 5,\n  \"shareAll\": true,\n  \"shareClonable\": true,\n  \"caseDefinition\": {\n    \"requireId\": false,\n    \"requireMor\": false,\n    \"contraindications\": \"<p>prohibited in animals older than than 24 months</p>\",\n    \"medical\": \"if fever is present, consider Protocol 12345 instead.\",\n    \"economic\": \"culling should be considered as an alternative, as milk production is unlikely to return to normal after treatment\",\n    \"note\": \"<p>overcrowding may be contributing to issues</p>\"\n  },\n  \"treatments\": [\n    {\n      \"product\": \"MiracleMed\",\n      \"route\": \"wip\",\n      \"dosage\": {\n        \"doseId\": 97395836\n      },\n      \"sequenceFunction\": {\n        \"_type\": \"models.SeqSingleDose\"\n      },\n      \"sizeFunction\": {\n        \"dose\": {\n          \"quantity\": {\n            \"dimension\": \"Volume\",\n            \"value\": 3,\n            \"symbol\": \"ml\"\n          }\n        },\n        \"_type\": \"models.FixedDoseFunction\"\n      },\n      \"id\": \"B-123\",\n      \"ownerId\": 0,\n      \"description\": \"3.0 ml per kg repeat\",\n      \"eligibilities\": [\n        {\n          \"id\": 1,\n          \"name\": \"Beef Cattle\",\n          \"fdaSpecies\": [\n            {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          ]\n        },\n        {\n          \"id\": 1,\n          \"name\": \"Beef Cattle\",\n          \"fdaSpecies\": [\n            {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          ]\n        }\n      ],\n      \"_dose\": \"3.0 ml per kg repeat in 6 hours and again in 24 hours\",\n      \"wtMeatHrs\": -96639015,\n      \"wtMilkHrs\": 79533997,\n      \"nada\": \"wip\",\n      \"tags\": [\n        {\n          \"id\": 8,\n          \"color\": \"#516cc6\",\n          \"name\": \"ut \",\n          \"fixes\": [\n            {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          ]\n        },\n        {\n          \"id\": 8,\n          \"color\": \"#516cc6\",\n          \"name\": \"dolore eius\",\n          \"fixes\": [\n            {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          ]\n        }\n      ],\n      \"note\": \"<p>a free-form note</p>\",\n      \"amduca\": \"ONLABEL\"\n    },\n    {\n      \"product\": \"MiracleMed\",\n      \"route\": \"wip\",\n      \"dosage\": {\n        \"doseId\": 55708793\n      },\n      \"sequenceFunction\": {\n        \"_type\": \"models.SeqSingleDose\"\n      },\n      \"sizeFunction\": {\n        \"dose\": {\n          \"quantity\": {\n            \"dimension\": \"Volume\",\n            \"value\": 3,\n            \"symbol\": \"ml\"\n          }\n        },\n        \"_type\": \"models.FixedDoseFunction\"\n      },\n      \"id\": \"B-123\",\n      \"ownerId\": 0,\n      \"description\": \"3.0 ml per kg repeat\",\n      \"eligibilities\": [\n        {\n          \"id\": 1,\n          \"name\": \"Beef Cattle\",\n          \"fdaSpecies\": [\n            {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          ]\n        },\n        {\n          \"id\": 1,\n          \"name\": \"Beef Cattle\",\n          \"fdaSpecies\": [\n            {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          ]\n        }\n      ],\n      \"_dose\": \"3.0 ml per kg repeat in 6 hours and again in 24 hours\",\n      \"wtMeatHrs\": -94773703,\n      \"wtMilkHrs\": -86875119,\n      \"nada\": \"wip\",\n      \"tags\": [\n        {\n          \"id\": 8,\n          \"color\": \"#516cc6\",\n          \"name\": \"culpa\",\n          \"fixes\": [\n            {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          ]\n        },\n        {\n          \"id\": 8,\n          \"color\": \"#516cc6\",\n          \"name\": \"id enim amet\",\n          \"fixes\": [\n            {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          ]\n        }\n      ],\n      \"note\": \"<p>a free-form note</p>\",\n      \"amduca\": \"ONLABEL\"\n    }\n  ],\n  \"tags\": [\n    {\n      \"id\": 8,\n      \"color\": \"#516cc6\",\n      \"name\": \"ad\",\n      \"fixes\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"id\": 8,\n      \"color\": \"#516cc6\",\n      \"name\": \"sit \",\n      \"fixes\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    }\n  ],\n  \"diagnoses\": [\n    {\n      \"id\": 8,\n      \"name\": \"Pain/inflammation (musculoskeletal), treatment\"\n    },\n    {\n      \"id\": 8,\n      \"name\": \"Pain/inflammation (musculoskeletal), treatment\"\n    }\n  ],\n  \"eligibilities\": [\n    {\n      \"id\": 1,\n      \"name\": \"Beef Cattle\",\n      \"fdaSpecies\": [\n        \"horses\",\n        \"unidentified\"\n      ]\n    },\n    {\n      \"id\": 1,\n      \"name\": \"Beef Cattle\",\n      \"fdaSpecies\": [\n        \"veal\",\n        \"sheep\"\n      ]\n    }\n  ],\n  \"promises\": [\n    {\n      \"_type\": \"models.IdPromise\",\n      \"name\": \"ID promise\",\n      \"descrip\": \"You must give ID for each case enrolled\",\n      \"query\": \"What is the animal's name or number?\",\n      \"when\": \"PT24H\",\n      \"id\": 2345\n    },\n    {\n      \"_type\": \"models.IdPromise\",\n      \"name\": \"ID promise\",\n      \"descrip\": \"You must give ID for each case enrolled\",\n      \"query\": \"What is the animal's name or number?\",\n      \"when\": \"PT24H\",\n      \"id\": 2345\n    }\n  ],\n  \"metadata\": [\n    {\n      \"key\": \"popularity\",\n      \"value\": \"good 1.2\"\n    },\n    {\n      \"key\": \"popularity\",\n      \"value\": \"good 1.2\"\n    }\n  ]\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/protocols/validate",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"protocols",
												"validate"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"protocol\": {\n    \"ownerId\": 1,\n    \"name\": \"wip\",\n    \"status\": \"PRESCRIBED\",\n    \"instructions\": {\n      \"considerations\": \"<p>This is just an example, not a real protocol.</p>\",\n      \"restrictions\": \"<p>Not for use on real animals.</p>\",\n      \"dothis\": \"<h3>Examinations to perform</h3>\",\n      \"recordthis\": \"<p>record every step in your notebook.</p>\",\n      \"success\": \"<p>All problems are gone</p>\",\n      \"failure\": \"<p>One or more problems remain</p>\",\n      \"references\": \"<a href=\\\"https://en.wikipedia.org/wiki/Rickrolling\\\">Wikipedia</a>\"\n    },\n    \"id\": 12345,\n    \"shortname\": \"wip\",\n    \"created\": \"2020-01-10T10:30:37Z\",\n    \"edited\": \"2020-02-10T10:30:37Z\",\n    \"vetNote\": \"consider prescribing protocol x instead\",\n    \"wtMeatHrs\": 22,\n    \"wtMilkHrs\": 5,\n    \"shareAll\": true,\n    \"shareClonable\": true,\n    \"caseDefinition\": {\n      \"requireId\": false,\n      \"requireMor\": false,\n      \"contraindications\": \"<p>prohibited in animals older than than 24 months</p>\",\n      \"medical\": \"if fever is present, consider Protocol 12345 instead.\",\n      \"economic\": \"culling should be considered as an alternative, as milk production is unlikely to return to normal after treatment\",\n      \"note\": \"<p>overcrowding may be contributing to issues</p>\"\n    },\n    \"treatments\": [\n      {\n        \"product\": \"MiracleMed\",\n        \"route\": \"wip\",\n        \"dosage\": {\n          \"doseId\": -58527078\n        },\n        \"sequenceFunction\": {\n          \"_type\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n          }\n        },\n        \"sizeFunction\": {\n          \"dose\": {\n            \"quantity\": {\n              \"dimension\": \"Volume\",\n              \"value\": 3,\n              \"symbol\": \"ml\"\n            }\n          },\n          \"_type\": \"models.FixedDoseFunction\"\n        },\n        \"id\": \"B-123\",\n        \"ownerId\": 0,\n        \"description\": \"3.0 ml per kg repeat\",\n        \"eligibilities\": [\n          {\n            \"id\": 1,\n            \"name\": \"Beef Cattle\",\n            \"fdaSpecies\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          },\n          {\n            \"id\": 1,\n            \"name\": \"Beef Cattle\",\n            \"fdaSpecies\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          }\n        ],\n        \"_dose\": \"3.0 ml per kg repeat in 6 hours and again in 24 hours\",\n        \"wtMeatHrs\": 12063618,\n        \"wtMilkHrs\": -30921578,\n        \"nada\": \"wip\",\n        \"tags\": [\n          {\n            \"id\": 8,\n            \"color\": \"#516cc6\",\n            \"name\": \"\",\n            \"fixes\": [\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              }\n            ]\n          },\n          {\n            \"id\": 8,\n            \"color\": \"#516cc6\",\n            \"name\": \"si\",\n            \"fixes\": [\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              }\n            ]\n          }\n        ],\n        \"note\": \"<p>a free-form note</p>\",\n        \"amduca\": \"OFFLABEL\"\n      },\n      {\n        \"product\": \"MiracleMed\",\n        \"route\": \"wip\",\n        \"dosage\": {\n          \"doseId\": -21450596\n        },\n        \"sequenceFunction\": {\n          \"_type\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n          }\n        },\n        \"sizeFunction\": {\n          \"dose\": {\n            \"quantity\": {\n              \"dimension\": \"Volume\",\n              \"value\": 3,\n              \"symbol\": \"ml\"\n            }\n          },\n          \"_type\": \"models.FixedDoseFunction\"\n        },\n        \"id\": \"B-123\",\n        \"ownerId\": 0,\n        \"description\": \"3.0 ml per kg repeat\",\n        \"eligibilities\": [\n          {\n            \"id\": 1,\n            \"name\": \"Beef Cattle\",\n            \"fdaSpecies\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          },\n          {\n            \"id\": 1,\n            \"name\": \"Beef Cattle\",\n            \"fdaSpecies\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          }\n        ],\n        \"_dose\": \"3.0 ml per kg repeat in 6 hours and again in 24 hours\",\n        \"wtMeatHrs\": -9128385,\n        \"wtMilkHrs\": 81060292,\n        \"nada\": \"wip\",\n        \"tags\": [\n          {\n            \"id\": 8,\n            \"color\": \"#516cc6\",\n            \"name\": \"ullamco\",\n            \"fixes\": [\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              }\n            ]\n          },\n          {\n            \"id\": 8,\n            \"color\": \"#516cc6\",\n            \"name\": \"pro\",\n            \"fixes\": [\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              }\n            ]\n          }\n        ],\n        \"note\": \"<p>a free-form note</p>\",\n        \"amduca\": \"UNIDENTIFIED\"\n      }\n    ],\n    \"tags\": [\n      {\n        \"id\": 8,\n        \"color\": \"#516cc6\",\n        \"name\": \"est e\",\n        \"fixes\": [\n          {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n          },\n          {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n          }\n        ]\n      },\n      {\n        \"id\": 8,\n        \"color\": \"#516cc6\",\n        \"name\": \"E\",\n        \"fixes\": [\n          {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n          },\n          {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n          }\n        ]\n      }\n    ],\n    \"diagnoses\": [\n      {\n        \"id\": 8,\n        \"name\": \"Pain/inflammation (musculoskeletal), treatment\"\n      },\n      {\n        \"id\": 8,\n        \"name\": \"Pain/inflammation (musculoskeletal), treatment\"\n      }\n    ],\n    \"eligibilities\": [\n      {\n        \"id\": 1,\n        \"name\": \"Beef Cattle\",\n        \"fdaSpecies\": [\n          \"beef_cattle\",\n          \"llamas\"\n        ]\n      },\n      {\n        \"id\": 1,\n        \"name\": \"Beef Cattle\",\n        \"fdaSpecies\": [\n          \"sheep\",\n          \"gamebirds\"\n        ]\n      }\n    ],\n    \"promises\": [\n      {\n        \"_type\": \"models.IdPromise\",\n        \"name\": \"ID promise\",\n        \"descrip\": \"You must give ID for each case enrolled\",\n        \"query\": \"What is the animal's name or number?\",\n        \"when\": \"PT24H\",\n        \"id\": 2345\n      },\n      {\n        \"_type\": \"models.IdPromise\",\n        \"name\": \"ID promise\",\n        \"descrip\": \"You must give ID for each case enrolled\",\n        \"query\": \"What is the animal's name or number?\",\n        \"when\": \"PT24H\",\n        \"id\": 2345\n      }\n    ],\n    \"metadata\": [\n      {\n        \"key\": \"popularity\",\n        \"value\": \"good 1.2\"\n      },\n      {\n        \"key\": \"popularity\",\n        \"value\": \"good 1.2\"\n      }\n    ]\n  }\n}"
								},
								{
									"id": "ba31793e-7943-4951-8bea-9e3c29316cdd",
									"name": "The server can not understand the request due to invalid syntax.",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "X-Auth-Token",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"ownerId\": 1,\n  \"name\": \"wip\",\n  \"status\": \"PRESCRIBED\",\n  \"instructions\": {\n    \"considerations\": \"<p>This is just an example, not a real protocol.</p>\",\n    \"restrictions\": \"<p>Not for use on real animals.</p>\",\n    \"dothis\": \"<h3>Examinations to perform</h3>\",\n    \"recordthis\": \"<p>record every step in your notebook.</p>\",\n    \"success\": \"<p>All problems are gone</p>\",\n    \"failure\": \"<p>One or more problems remain</p>\",\n    \"references\": \"<a href=\\\"https://en.wikipedia.org/wiki/Rickrolling\\\">Wikipedia</a>\"\n  },\n  \"id\": 12345,\n  \"shortname\": \"wip\",\n  \"created\": \"2020-01-10T10:30:37Z\",\n  \"edited\": \"2020-02-10T10:30:37Z\",\n  \"vetNote\": \"consider prescribing protocol x instead\",\n  \"wtMeatHrs\": 22,\n  \"wtMilkHrs\": 5,\n  \"shareAll\": true,\n  \"shareClonable\": true,\n  \"caseDefinition\": {\n    \"requireId\": false,\n    \"requireMor\": false,\n    \"contraindications\": \"<p>prohibited in animals older than than 24 months</p>\",\n    \"medical\": \"if fever is present, consider Protocol 12345 instead.\",\n    \"economic\": \"culling should be considered as an alternative, as milk production is unlikely to return to normal after treatment\",\n    \"note\": \"<p>overcrowding may be contributing to issues</p>\"\n  },\n  \"treatments\": [\n    {\n      \"product\": \"MiracleMed\",\n      \"route\": \"wip\",\n      \"dosage\": {\n        \"doseId\": 97395836\n      },\n      \"sequenceFunction\": {\n        \"_type\": \"models.SeqSingleDose\"\n      },\n      \"sizeFunction\": {\n        \"dose\": {\n          \"quantity\": {\n            \"dimension\": \"Volume\",\n            \"value\": 3,\n            \"symbol\": \"ml\"\n          }\n        },\n        \"_type\": \"models.FixedDoseFunction\"\n      },\n      \"id\": \"B-123\",\n      \"ownerId\": 0,\n      \"description\": \"3.0 ml per kg repeat\",\n      \"eligibilities\": [\n        {\n          \"id\": 1,\n          \"name\": \"Beef Cattle\",\n          \"fdaSpecies\": [\n            {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          ]\n        },\n        {\n          \"id\": 1,\n          \"name\": \"Beef Cattle\",\n          \"fdaSpecies\": [\n            {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          ]\n        }\n      ],\n      \"_dose\": \"3.0 ml per kg repeat in 6 hours and again in 24 hours\",\n      \"wtMeatHrs\": -96639015,\n      \"wtMilkHrs\": 79533997,\n      \"nada\": \"wip\",\n      \"tags\": [\n        {\n          \"id\": 8,\n          \"color\": \"#516cc6\",\n          \"name\": \"ut \",\n          \"fixes\": [\n            {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          ]\n        },\n        {\n          \"id\": 8,\n          \"color\": \"#516cc6\",\n          \"name\": \"dolore eius\",\n          \"fixes\": [\n            {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          ]\n        }\n      ],\n      \"note\": \"<p>a free-form note</p>\",\n      \"amduca\": \"ONLABEL\"\n    },\n    {\n      \"product\": \"MiracleMed\",\n      \"route\": \"wip\",\n      \"dosage\": {\n        \"doseId\": 55708793\n      },\n      \"sequenceFunction\": {\n        \"_type\": \"models.SeqSingleDose\"\n      },\n      \"sizeFunction\": {\n        \"dose\": {\n          \"quantity\": {\n            \"dimension\": \"Volume\",\n            \"value\": 3,\n            \"symbol\": \"ml\"\n          }\n        },\n        \"_type\": \"models.FixedDoseFunction\"\n      },\n      \"id\": \"B-123\",\n      \"ownerId\": 0,\n      \"description\": \"3.0 ml per kg repeat\",\n      \"eligibilities\": [\n        {\n          \"id\": 1,\n          \"name\": \"Beef Cattle\",\n          \"fdaSpecies\": [\n            {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          ]\n        },\n        {\n          \"id\": 1,\n          \"name\": \"Beef Cattle\",\n          \"fdaSpecies\": [\n            {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          ]\n        }\n      ],\n      \"_dose\": \"3.0 ml per kg repeat in 6 hours and again in 24 hours\",\n      \"wtMeatHrs\": -94773703,\n      \"wtMilkHrs\": -86875119,\n      \"nada\": \"wip\",\n      \"tags\": [\n        {\n          \"id\": 8,\n          \"color\": \"#516cc6\",\n          \"name\": \"culpa\",\n          \"fixes\": [\n            {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          ]\n        },\n        {\n          \"id\": 8,\n          \"color\": \"#516cc6\",\n          \"name\": \"id enim amet\",\n          \"fixes\": [\n            {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          ]\n        }\n      ],\n      \"note\": \"<p>a free-form note</p>\",\n      \"amduca\": \"ONLABEL\"\n    }\n  ],\n  \"tags\": [\n    {\n      \"id\": 8,\n      \"color\": \"#516cc6\",\n      \"name\": \"ad\",\n      \"fixes\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"id\": 8,\n      \"color\": \"#516cc6\",\n      \"name\": \"sit \",\n      \"fixes\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    }\n  ],\n  \"diagnoses\": [\n    {\n      \"id\": 8,\n      \"name\": \"Pain/inflammation (musculoskeletal), treatment\"\n    },\n    {\n      \"id\": 8,\n      \"name\": \"Pain/inflammation (musculoskeletal), treatment\"\n    }\n  ],\n  \"eligibilities\": [\n    {\n      \"id\": 1,\n      \"name\": \"Beef Cattle\",\n      \"fdaSpecies\": [\n        \"horses\",\n        \"unidentified\"\n      ]\n    },\n    {\n      \"id\": 1,\n      \"name\": \"Beef Cattle\",\n      \"fdaSpecies\": [\n        \"veal\",\n        \"sheep\"\n      ]\n    }\n  ],\n  \"promises\": [\n    {\n      \"_type\": \"models.IdPromise\",\n      \"name\": \"ID promise\",\n      \"descrip\": \"You must give ID for each case enrolled\",\n      \"query\": \"What is the animal's name or number?\",\n      \"when\": \"PT24H\",\n      \"id\": 2345\n    },\n    {\n      \"_type\": \"models.IdPromise\",\n      \"name\": \"ID promise\",\n      \"descrip\": \"You must give ID for each case enrolled\",\n      \"query\": \"What is the animal's name or number?\",\n      \"when\": \"PT24H\",\n      \"id\": 2345\n    }\n  ],\n  \"metadata\": [\n    {\n      \"key\": \"popularity\",\n      \"value\": \"good 1.2\"\n    },\n    {\n      \"key\": \"popularity\",\n      \"value\": \"good 1.2\"\n    }\n  ]\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/protocols/validate",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"protocols",
												"validate"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"title\": \"incorrect username or password\",\n  \"status\": 404,\n  \"errorType\": \"/errors/incorrect-user-pass\",\n  \"detail\": \"Authentication failed due to incorrect username or password.\",\n  \"instance\": \"/login/log/abc123\"\n}"
								},
								{
									"id": "bba2ed40-9f25-4d15-af13-c1e8056b7eed",
									"name": "Authorization required",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "X-Auth-Token",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"ownerId\": 1,\n  \"name\": \"wip\",\n  \"status\": \"PRESCRIBED\",\n  \"instructions\": {\n    \"considerations\": \"<p>This is just an example, not a real protocol.</p>\",\n    \"restrictions\": \"<p>Not for use on real animals.</p>\",\n    \"dothis\": \"<h3>Examinations to perform</h3>\",\n    \"recordthis\": \"<p>record every step in your notebook.</p>\",\n    \"success\": \"<p>All problems are gone</p>\",\n    \"failure\": \"<p>One or more problems remain</p>\",\n    \"references\": \"<a href=\\\"https://en.wikipedia.org/wiki/Rickrolling\\\">Wikipedia</a>\"\n  },\n  \"id\": 12345,\n  \"shortname\": \"wip\",\n  \"created\": \"2020-01-10T10:30:37Z\",\n  \"edited\": \"2020-02-10T10:30:37Z\",\n  \"vetNote\": \"consider prescribing protocol x instead\",\n  \"wtMeatHrs\": 22,\n  \"wtMilkHrs\": 5,\n  \"shareAll\": true,\n  \"shareClonable\": true,\n  \"caseDefinition\": {\n    \"requireId\": false,\n    \"requireMor\": false,\n    \"contraindications\": \"<p>prohibited in animals older than than 24 months</p>\",\n    \"medical\": \"if fever is present, consider Protocol 12345 instead.\",\n    \"economic\": \"culling should be considered as an alternative, as milk production is unlikely to return to normal after treatment\",\n    \"note\": \"<p>overcrowding may be contributing to issues</p>\"\n  },\n  \"treatments\": [\n    {\n      \"product\": \"MiracleMed\",\n      \"route\": \"wip\",\n      \"dosage\": {\n        \"doseId\": 97395836\n      },\n      \"sequenceFunction\": {\n        \"_type\": \"models.SeqSingleDose\"\n      },\n      \"sizeFunction\": {\n        \"dose\": {\n          \"quantity\": {\n            \"dimension\": \"Volume\",\n            \"value\": 3,\n            \"symbol\": \"ml\"\n          }\n        },\n        \"_type\": \"models.FixedDoseFunction\"\n      },\n      \"id\": \"B-123\",\n      \"ownerId\": 0,\n      \"description\": \"3.0 ml per kg repeat\",\n      \"eligibilities\": [\n        {\n          \"id\": 1,\n          \"name\": \"Beef Cattle\",\n          \"fdaSpecies\": [\n            {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          ]\n        },\n        {\n          \"id\": 1,\n          \"name\": \"Beef Cattle\",\n          \"fdaSpecies\": [\n            {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          ]\n        }\n      ],\n      \"_dose\": \"3.0 ml per kg repeat in 6 hours and again in 24 hours\",\n      \"wtMeatHrs\": -96639015,\n      \"wtMilkHrs\": 79533997,\n      \"nada\": \"wip\",\n      \"tags\": [\n        {\n          \"id\": 8,\n          \"color\": \"#516cc6\",\n          \"name\": \"ut \",\n          \"fixes\": [\n            {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          ]\n        },\n        {\n          \"id\": 8,\n          \"color\": \"#516cc6\",\n          \"name\": \"dolore eius\",\n          \"fixes\": [\n            {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          ]\n        }\n      ],\n      \"note\": \"<p>a free-form note</p>\",\n      \"amduca\": \"ONLABEL\"\n    },\n    {\n      \"product\": \"MiracleMed\",\n      \"route\": \"wip\",\n      \"dosage\": {\n        \"doseId\": 55708793\n      },\n      \"sequenceFunction\": {\n        \"_type\": \"models.SeqSingleDose\"\n      },\n      \"sizeFunction\": {\n        \"dose\": {\n          \"quantity\": {\n            \"dimension\": \"Volume\",\n            \"value\": 3,\n            \"symbol\": \"ml\"\n          }\n        },\n        \"_type\": \"models.FixedDoseFunction\"\n      },\n      \"id\": \"B-123\",\n      \"ownerId\": 0,\n      \"description\": \"3.0 ml per kg repeat\",\n      \"eligibilities\": [\n        {\n          \"id\": 1,\n          \"name\": \"Beef Cattle\",\n          \"fdaSpecies\": [\n            {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          ]\n        },\n        {\n          \"id\": 1,\n          \"name\": \"Beef Cattle\",\n          \"fdaSpecies\": [\n            {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          ]\n        }\n      ],\n      \"_dose\": \"3.0 ml per kg repeat in 6 hours and again in 24 hours\",\n      \"wtMeatHrs\": -94773703,\n      \"wtMilkHrs\": -86875119,\n      \"nada\": \"wip\",\n      \"tags\": [\n        {\n          \"id\": 8,\n          \"color\": \"#516cc6\",\n          \"name\": \"culpa\",\n          \"fixes\": [\n            {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          ]\n        },\n        {\n          \"id\": 8,\n          \"color\": \"#516cc6\",\n          \"name\": \"id enim amet\",\n          \"fixes\": [\n            {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          ]\n        }\n      ],\n      \"note\": \"<p>a free-form note</p>\",\n      \"amduca\": \"ONLABEL\"\n    }\n  ],\n  \"tags\": [\n    {\n      \"id\": 8,\n      \"color\": \"#516cc6\",\n      \"name\": \"ad\",\n      \"fixes\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"id\": 8,\n      \"color\": \"#516cc6\",\n      \"name\": \"sit \",\n      \"fixes\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    }\n  ],\n  \"diagnoses\": [\n    {\n      \"id\": 8,\n      \"name\": \"Pain/inflammation (musculoskeletal), treatment\"\n    },\n    {\n      \"id\": 8,\n      \"name\": \"Pain/inflammation (musculoskeletal), treatment\"\n    }\n  ],\n  \"eligibilities\": [\n    {\n      \"id\": 1,\n      \"name\": \"Beef Cattle\",\n      \"fdaSpecies\": [\n        \"horses\",\n        \"unidentified\"\n      ]\n    },\n    {\n      \"id\": 1,\n      \"name\": \"Beef Cattle\",\n      \"fdaSpecies\": [\n        \"veal\",\n        \"sheep\"\n      ]\n    }\n  ],\n  \"promises\": [\n    {\n      \"_type\": \"models.IdPromise\",\n      \"name\": \"ID promise\",\n      \"descrip\": \"You must give ID for each case enrolled\",\n      \"query\": \"What is the animal's name or number?\",\n      \"when\": \"PT24H\",\n      \"id\": 2345\n    },\n    {\n      \"_type\": \"models.IdPromise\",\n      \"name\": \"ID promise\",\n      \"descrip\": \"You must give ID for each case enrolled\",\n      \"query\": \"What is the animal's name or number?\",\n      \"when\": \"PT24H\",\n      \"id\": 2345\n    }\n  ],\n  \"metadata\": [\n    {\n      \"key\": \"popularity\",\n      \"value\": \"good 1.2\"\n    },\n    {\n      \"key\": \"popularity\",\n      \"value\": \"good 1.2\"\n    }\n  ]\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/protocols/validate",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"protocols",
												"validate"
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": ""
								}
							]
						},
						{
							"name": "list of library protocols",
							"id": "3e3ff63d-dcfd-4240-8f12-c859c9480764",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/protocols/libs",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"protocols",
										"libs"
									]
								},
								"description": "This endpoint retrieves all protocols owned by, or shared with, the current User."
							},
							"response": [
								{
									"id": "cc02749e-6bc9-4a23-bc9f-6388787aceaa",
									"name": "OK",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "X-Auth-Token",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/protocols/libs",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"protocols",
												"libs"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"protocols\": [\n    {\n      \"ownerId\": 1,\n      \"name\": \"wip\",\n      \"status\": \"PRESCRIBED\",\n      \"instructions\": {\n        \"considerations\": \"<p>This is just an example, not a real protocol.</p>\",\n        \"restrictions\": \"<p>Not for use on real animals.</p>\",\n        \"dothis\": \"<h3>Examinations to perform</h3>\",\n        \"recordthis\": \"<p>record every step in your notebook.</p>\",\n        \"success\": \"<p>All problems are gone</p>\",\n        \"failure\": \"<p>One or more problems remain</p>\",\n        \"references\": \"<a href=\\\"https://en.wikipedia.org/wiki/Rickrolling\\\">Wikipedia</a>\"\n      },\n      \"id\": 12345,\n      \"shortname\": \"wip\",\n      \"created\": \"2020-01-10T10:30:37Z\",\n      \"edited\": \"2020-02-10T10:30:37Z\",\n      \"vetNote\": \"consider prescribing protocol x instead\",\n      \"wtMeatHrs\": 22,\n      \"wtMilkHrs\": 5,\n      \"shareAll\": true,\n      \"shareClonable\": true,\n      \"caseDefinition\": {\n        \"requireId\": false,\n        \"requireMor\": false,\n        \"contraindications\": \"<p>prohibited in animals older than than 24 months</p>\",\n        \"medical\": \"if fever is present, consider Protocol 12345 instead.\",\n        \"economic\": \"culling should be considered as an alternative, as milk production is unlikely to return to normal after treatment\",\n        \"note\": \"<p>overcrowding may be contributing to issues</p>\"\n      },\n      \"treatments\": [\n        {\n          \"product\": \"MiracleMed\",\n          \"route\": \"wip\",\n          \"dosage\": {\n            \"doseId\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          },\n          \"sequenceFunction\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n          },\n          \"sizeFunction\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n          },\n          \"id\": \"B-123\",\n          \"ownerId\": 0,\n          \"description\": \"3.0 ml per kg repeat\",\n          \"eligibilities\": [\n            {\n              \"id\": {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              \"name\": {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              \"fdaSpecies\": {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              }\n            },\n            {\n              \"id\": {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              \"name\": {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              \"fdaSpecies\": {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              }\n            }\n          ],\n          \"_dose\": \"3.0 ml per kg repeat in 6 hours and again in 24 hours\",\n          \"wtMeatHrs\": 56967919,\n          \"wtMilkHrs\": 63609053,\n          \"nada\": \"wip\",\n          \"tags\": [\n            {\n              \"id\": {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              \"color\": {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              \"name\": {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              \"fixes\": {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              }\n            },\n            {\n              \"id\": {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              \"color\": {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              \"name\": {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              \"fixes\": {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              }\n            }\n          ],\n          \"note\": \"<p>a free-form note</p>\",\n          \"amduca\": \"ONLABEL\"\n        },\n        {\n          \"product\": \"MiracleMed\",\n          \"route\": \"wip\",\n          \"dosage\": {\n            \"doseId\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          },\n          \"sequenceFunction\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n          },\n          \"sizeFunction\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n          },\n          \"id\": \"B-123\",\n          \"ownerId\": 0,\n          \"description\": \"3.0 ml per kg repeat\",\n          \"eligibilities\": [\n            {\n              \"id\": {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              \"name\": {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              \"fdaSpecies\": {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              }\n            },\n            {\n              \"id\": {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              \"name\": {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              \"fdaSpecies\": {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              }\n            }\n          ],\n          \"_dose\": \"3.0 ml per kg repeat in 6 hours and again in 24 hours\",\n          \"wtMeatHrs\": 46491304,\n          \"wtMilkHrs\": -38150153,\n          \"nada\": \"wip\",\n          \"tags\": [\n            {\n              \"id\": {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              \"color\": {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              \"name\": {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              \"fixes\": {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              }\n            },\n            {\n              \"id\": {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              \"color\": {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              \"name\": {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              \"fixes\": {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              }\n            }\n          ],\n          \"note\": \"<p>a free-form note</p>\",\n          \"amduca\": \"UNIDENTIFIED\"\n        }\n      ],\n      \"tags\": [\n        {\n          \"id\": 8,\n          \"color\": \"#516cc6\",\n          \"name\": \"Excepteur aut\",\n          \"fixes\": [\n            {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          ]\n        },\n        {\n          \"id\": 8,\n          \"color\": \"#516cc6\",\n          \"name\": \"sint ad qui\",\n          \"fixes\": [\n            {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          ]\n        }\n      ],\n      \"diagnoses\": [\n        {\n          \"id\": 8,\n          \"name\": \"Pain/inflammation (musculoskeletal), treatment\"\n        },\n        {\n          \"id\": 8,\n          \"name\": \"Pain/inflammation (musculoskeletal), treatment\"\n        }\n      ],\n      \"eligibilities\": [\n        {\n          \"id\": 1,\n          \"name\": \"Beef Cattle\",\n          \"fdaSpecies\": [\n            \"other\",\n            \"fish\"\n          ]\n        },\n        {\n          \"id\": 1,\n          \"name\": \"Beef Cattle\",\n          \"fdaSpecies\": [\n            \"dogs\",\n            \"other\"\n          ]\n        }\n      ],\n      \"promises\": [\n        {\n          \"_type\": \"models.IdPromise\",\n          \"name\": \"ID promise\",\n          \"descrip\": \"You must give ID for each case enrolled\",\n          \"query\": \"What is the animal's name or number?\",\n          \"when\": \"PT24H\",\n          \"id\": 2345\n        },\n        {\n          \"_type\": \"models.IdPromise\",\n          \"name\": \"ID promise\",\n          \"descrip\": \"You must give ID for each case enrolled\",\n          \"query\": \"What is the animal's name or number?\",\n          \"when\": \"PT24H\",\n          \"id\": 2345\n        }\n      ],\n      \"metadata\": [\n        {\n          \"key\": \"popularity\",\n          \"value\": \"good 1.2\"\n        },\n        {\n          \"key\": \"popularity\",\n          \"value\": \"good 1.2\"\n        }\n      ]\n    },\n    {\n      \"ownerId\": 1,\n      \"name\": \"wip\",\n      \"status\": \"PRESCRIBED\",\n      \"instructions\": {\n        \"considerations\": \"<p>This is just an example, not a real protocol.</p>\",\n        \"restrictions\": \"<p>Not for use on real animals.</p>\",\n        \"dothis\": \"<h3>Examinations to perform</h3>\",\n        \"recordthis\": \"<p>record every step in your notebook.</p>\",\n        \"success\": \"<p>All problems are gone</p>\",\n        \"failure\": \"<p>One or more problems remain</p>\",\n        \"references\": \"<a href=\\\"https://en.wikipedia.org/wiki/Rickrolling\\\">Wikipedia</a>\"\n      },\n      \"id\": 12345,\n      \"shortname\": \"wip\",\n      \"created\": \"2020-01-10T10:30:37Z\",\n      \"edited\": \"2020-02-10T10:30:37Z\",\n      \"vetNote\": \"consider prescribing protocol x instead\",\n      \"wtMeatHrs\": 22,\n      \"wtMilkHrs\": 5,\n      \"shareAll\": true,\n      \"shareClonable\": true,\n      \"caseDefinition\": {\n        \"requireId\": false,\n        \"requireMor\": false,\n        \"contraindications\": \"<p>prohibited in animals older than than 24 months</p>\",\n        \"medical\": \"if fever is present, consider Protocol 12345 instead.\",\n        \"economic\": \"culling should be considered as an alternative, as milk production is unlikely to return to normal after treatment\",\n        \"note\": \"<p>overcrowding may be contributing to issues</p>\"\n      },\n      \"treatments\": [\n        {\n          \"product\": \"MiracleMed\",\n          \"route\": \"wip\",\n          \"dosage\": {\n            \"doseId\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          },\n          \"sequenceFunction\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n          },\n          \"sizeFunction\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n          },\n          \"id\": \"B-123\",\n          \"ownerId\": 0,\n          \"description\": \"3.0 ml per kg repeat\",\n          \"eligibilities\": [\n            {\n              \"id\": {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              \"name\": {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              \"fdaSpecies\": {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              }\n            },\n            {\n              \"id\": {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              \"name\": {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              \"fdaSpecies\": {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              }\n            }\n          ],\n          \"_dose\": \"3.0 ml per kg repeat in 6 hours and again in 24 hours\",\n          \"wtMeatHrs\": 75517092,\n          \"wtMilkHrs\": 26240620,\n          \"nada\": \"wip\",\n          \"tags\": [\n            {\n              \"id\": {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              \"color\": {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              \"name\": {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              \"fixes\": {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              }\n            },\n            {\n              \"id\": {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              \"color\": {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              \"name\": {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              \"fixes\": {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              }\n            }\n          ],\n          \"note\": \"<p>a free-form note</p>\",\n          \"amduca\": \"OFFLABEL\"\n        },\n        {\n          \"product\": \"MiracleMed\",\n          \"route\": \"wip\",\n          \"dosage\": {\n            \"doseId\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          },\n          \"sequenceFunction\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n          },\n          \"sizeFunction\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n          },\n          \"id\": \"B-123\",\n          \"ownerId\": 0,\n          \"description\": \"3.0 ml per kg repeat\",\n          \"eligibilities\": [\n            {\n              \"id\": {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              \"name\": {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              \"fdaSpecies\": {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              }\n            },\n            {\n              \"id\": {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              \"name\": {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              \"fdaSpecies\": {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              }\n            }\n          ],\n          \"_dose\": \"3.0 ml per kg repeat in 6 hours and again in 24 hours\",\n          \"wtMeatHrs\": 87519508,\n          \"wtMilkHrs\": -32857361,\n          \"nada\": \"wip\",\n          \"tags\": [\n            {\n              \"id\": {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              \"color\": {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              \"name\": {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              \"fixes\": {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              }\n            },\n            {\n              \"id\": {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              \"color\": {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              \"name\": {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              },\n              \"fixes\": {\n                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n              }\n            }\n          ],\n          \"note\": \"<p>a free-form note</p>\",\n          \"amduca\": \"ONLABEL\"\n        }\n      ],\n      \"tags\": [\n        {\n          \"id\": 8,\n          \"color\": \"#516cc6\",\n          \"name\": \"Excepteur \",\n          \"fixes\": [\n            {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          ]\n        },\n        {\n          \"id\": 8,\n          \"color\": \"#516cc6\",\n          \"name\": \"dolore\",\n          \"fixes\": [\n            {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          ]\n        }\n      ],\n      \"diagnoses\": [\n        {\n          \"id\": 8,\n          \"name\": \"Pain/inflammation (musculoskeletal), treatment\"\n        },\n        {\n          \"id\": 8,\n          \"name\": \"Pain/inflammation (musculoskeletal), treatment\"\n        }\n      ],\n      \"eligibilities\": [\n        {\n          \"id\": 1,\n          \"name\": \"Beef Cattle\",\n          \"fdaSpecies\": [\n            \"goats\",\n            \"dogs\"\n          ]\n        },\n        {\n          \"id\": 1,\n          \"name\": \"Beef Cattle\",\n          \"fdaSpecies\": [\n            \"dairy_cattle\",\n            \"fish\"\n          ]\n        }\n      ],\n      \"promises\": [\n        {\n          \"_type\": \"models.IdPromise\",\n          \"name\": \"ID promise\",\n          \"descrip\": \"You must give ID for each case enrolled\",\n          \"query\": \"What is the animal's name or number?\",\n          \"when\": \"PT24H\",\n          \"id\": 2345\n        },\n        {\n          \"_type\": \"models.IdPromise\",\n          \"name\": \"ID promise\",\n          \"descrip\": \"You must give ID for each case enrolled\",\n          \"query\": \"What is the animal's name or number?\",\n          \"when\": \"PT24H\",\n          \"id\": 2345\n        }\n      ],\n      \"metadata\": [\n        {\n          \"key\": \"popularity\",\n          \"value\": \"good 1.2\"\n        },\n        {\n          \"key\": \"popularity\",\n          \"value\": \"good 1.2\"\n        }\n      ]\n    }\n  ]\n}"
								}
							]
						},
						{
							"name": "list of all diagnoses",
							"id": "20f9ad8f-219f-48e5-a402-1944b45ea069",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/protocols/exclusivestubs",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"protocols",
										"exclusivestubs"
									]
								},
								"description": "returns an array of Pxes ."
							},
							"response": [
								{
									"id": "8085327e-0f58-4a7a-9fbb-93499e80396a",
									"name": "OK",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "X-Auth-Token",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/protocols/exclusivestubs",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"protocols",
												"exclusivestubs"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"diagnoses\": [\n    {\n      \"ownerId\": 0,\n      \"name\": \"example protocol\",\n      \"created\": \"2020-01-10T22:20:39Z\",\n      \"edited\": \"2020-02-10T22:20:39Z\",\n      \"status\": \"PRESCRIBED\",\n      \"shareAll\": true,\n      \"id\": 0,\n      \"shortname\": \"EXamp\",\n      \"vetNote\": \"consider prescribing protocol x instead\",\n      \"wtMeatHrs\": 72,\n      \"wtMilkHrs\": 72,\n      \"wtNote\": \"Not for use in horses intended for food.\",\n      \"considerations\": \"<p>think first</p>\",\n      \"restrictions\": \"<p>not suitable in pregnancy</p>\",\n      \"dothis\": \"<p>execute protocol</p>\",\n      \"recordthis\": \"case data\",\n      \"success\": \"<p>good</p>\",\n      \"failure\": \"<p>bad</p>\",\n      \"references\": \"<a href=\\\"https://en.wikipedia.org/wiki/Rickrolling\\\">Wikipedia</a>\"\n    },\n    {\n      \"ownerId\": 0,\n      \"name\": \"example protocol\",\n      \"created\": \"2020-01-10T22:20:39Z\",\n      \"edited\": \"2020-02-10T22:20:39Z\",\n      \"status\": \"PRESCRIBED\",\n      \"shareAll\": true,\n      \"id\": 0,\n      \"shortname\": \"EXamp\",\n      \"vetNote\": \"consider prescribing protocol x instead\",\n      \"wtMeatHrs\": 72,\n      \"wtMilkHrs\": 72,\n      \"wtNote\": \"Not for use in horses intended for food.\",\n      \"considerations\": \"<p>think first</p>\",\n      \"restrictions\": \"<p>not suitable in pregnancy</p>\",\n      \"dothis\": \"<p>execute protocol</p>\",\n      \"recordthis\": \"case data\",\n      \"success\": \"<p>good</p>\",\n      \"failure\": \"<p>bad</p>\",\n      \"references\": \"<a href=\\\"https://en.wikipedia.org/wiki/Rickrolling\\\">Wikipedia</a>\"\n    }\n  ]\n}"
								},
								{
									"id": "46ae10f3-0b94-46b7-a100-a28ef6b8351a",
									"name": "The server can not understand the request due to invalid syntax.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "X-Auth-Token",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/protocols/exclusivestubs",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"protocols",
												"exclusivestubs"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"title\": \"incorrect username or password\",\n  \"status\": 404,\n  \"errorType\": \"/errors/incorrect-user-pass\",\n  \"detail\": \"Authentication failed due to incorrect username or password.\",\n  \"instance\": \"/login/log/abc123\"\n}"
								},
								{
									"id": "3143e804-ed3c-4401-81c1-a14c666ea35d",
									"name": "Authorization required",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "X-Auth-Token",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/protocols/exclusivestubs",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"protocols",
												"exclusivestubs"
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": ""
								}
							]
						},
						{
							"name": "validate a structured Dosage",
							"id": "e09f7516-edf3-4498-b93f-ead5dd6c3474",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"sequenceFunction\": {\n    \"_type\": \"models.SeqSingleDose\"\n  },\n  \"sizeFunction\": {\n    \"dose\": {\n      \"quantity\": {\n        \"dimension\": \"Volume\",\n        \"value\": 3,\n        \"symbol\": \"ml\"\n      }\n    },\n    \"_type\": \"models.FixedDoseFunction\"\n  }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/protocols/dosages",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"protocols",
										"dosages"
									]
								},
								"description": "validate a Dosage with SizeFunction and SequewnceFunction returning an test '_dose\" description."
							},
							"response": [
								{
									"id": "3abdcc41-4c13-470f-b070-fe1de1d51acb",
									"name": "_dose",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "X-Auth-Token",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"sequenceFunction\": {\n    \"_type\": \"models.SeqSingleDose\"\n  },\n  \"sizeFunction\": {\n    \"dose\": {\n      \"quantity\": {\n        \"dimension\": \"Volume\",\n        \"value\": 3,\n        \"symbol\": \"ml\"\n      }\n    },\n    \"_type\": \"models.FixedDoseFunction\"\n  }\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/protocols/dosages",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"protocols",
												"dosages"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"_dose\": \"do ad\"\n}"
								},
								{
									"id": "f2881936-a50e-4964-b4aa-bfbf7f034748",
									"name": "The server can not understand the request due to invalid syntax.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "X-Auth-Token",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"sequenceFunction\": {\n    \"_type\": \"models.SeqSingleDose\"\n  },\n  \"sizeFunction\": {\n    \"dose\": {\n      \"quantity\": {\n        \"dimension\": \"Volume\",\n        \"value\": 3,\n        \"symbol\": \"ml\"\n      }\n    },\n    \"_type\": \"models.FixedDoseFunction\"\n  }\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/protocols/dosages",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"protocols",
												"dosages"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"title\": \"incorrect username or password\",\n  \"status\": 404,\n  \"errorType\": \"/errors/incorrect-user-pass\",\n  \"detail\": \"Authentication failed due to incorrect username or password.\",\n  \"instance\": \"/login/log/abc123\"\n}"
								},
								{
									"id": "05b76d3a-e037-49e9-b6b7-69081fa41404",
									"name": "Authorization required",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "X-Auth-Token",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"sequenceFunction\": {\n    \"_type\": \"models.SeqSingleDose\"\n  },\n  \"sizeFunction\": {\n    \"dose\": {\n      \"quantity\": {\n        \"dimension\": \"Volume\",\n        \"value\": 3,\n        \"symbol\": \"ml\"\n      }\n    },\n    \"_type\": \"models.FixedDoseFunction\"\n  }\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/protocols/dosages",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"protocols",
												"dosages"
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": ""
								}
							]
						},
						{
							"name": "list of library pxes",
							"id": "5fd5058c-b69c-4915-b42f-fb8bcca317cf",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/protocols/libstubs",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"protocols",
										"libstubs"
									]
								},
								"description": "This endpoint returns all the Protocols owned by, or shared with, the current User."
							},
							"response": [
								{
									"id": "5283b060-11aa-446f-9cda-4db5593d436f",
									"name": "OK",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "X-Auth-Token",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/protocols/libstubs",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"protocols",
												"libstubs"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"pxes\": [\n    {\n      \"ownerId\": 0,\n      \"name\": \"example protocol\",\n      \"created\": \"2020-01-10T22:20:39Z\",\n      \"edited\": \"2020-02-10T22:20:39Z\",\n      \"status\": \"PRESCRIBED\",\n      \"shareAll\": true,\n      \"id\": 0,\n      \"shortname\": \"EXamp\",\n      \"vetNote\": \"consider prescribing protocol x instead\",\n      \"wtMeatHrs\": 72,\n      \"wtMilkHrs\": 72,\n      \"wtNote\": \"Not for use in horses intended for food.\",\n      \"considerations\": \"<p>think first</p>\",\n      \"restrictions\": \"<p>not suitable in pregnancy</p>\",\n      \"dothis\": \"<p>execute protocol</p>\",\n      \"recordthis\": \"case data\",\n      \"success\": \"<p>good</p>\",\n      \"failure\": \"<p>bad</p>\",\n      \"references\": \"<a href=\\\"https://en.wikipedia.org/wiki/Rickrolling\\\">Wikipedia</a>\"\n    },\n    {\n      \"ownerId\": 0,\n      \"name\": \"example protocol\",\n      \"created\": \"2020-01-10T22:20:39Z\",\n      \"edited\": \"2020-02-10T22:20:39Z\",\n      \"status\": \"PRESCRIBED\",\n      \"shareAll\": true,\n      \"id\": 0,\n      \"shortname\": \"EXamp\",\n      \"vetNote\": \"consider prescribing protocol x instead\",\n      \"wtMeatHrs\": 72,\n      \"wtMilkHrs\": 72,\n      \"wtNote\": \"Not for use in horses intended for food.\",\n      \"considerations\": \"<p>think first</p>\",\n      \"restrictions\": \"<p>not suitable in pregnancy</p>\",\n      \"dothis\": \"<p>execute protocol</p>\",\n      \"recordthis\": \"case data\",\n      \"success\": \"<p>good</p>\",\n      \"failure\": \"<p>bad</p>\",\n      \"references\": \"<a href=\\\"https://en.wikipedia.org/wiki/Rickrolling\\\">Wikipedia</a>\"\n    }\n  ]\n}"
								},
								{
									"id": "947bc9f0-c0e9-4968-a8fa-ff9b233de330",
									"name": "The server can not understand the request due to invalid syntax.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "X-Auth-Token",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/protocols/libstubs",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"protocols",
												"libstubs"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"title\": \"incorrect username or password\",\n  \"status\": 404,\n  \"errorType\": \"/errors/incorrect-user-pass\",\n  \"detail\": \"Authentication failed due to incorrect username or password.\",\n  \"instance\": \"/login/log/abc123\"\n}"
								},
								{
									"id": "2e6d236e-2e60-4825-af0f-43658673dca8",
									"name": "Authorization required",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "X-Auth-Token",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/protocols/libstubs",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"protocols",
												"libstubs"
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": ""
								}
							]
						}
					],
					"id": "959b3c84-4e3c-418a-be98-35d7ad2d1c0c"
				},
				{
					"name": "help/{key}",
					"item": [
						{
							"name": "help message",
							"id": "f1c445dd-c4ff-4f7c-846c-c4303c8c4027",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/help/:key",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"help",
										":key"
									],
									"variable": [
										{
											"id": "98ebda4e-f43e-43f1-8fb8-830779f7a837",
											"key": "key",
											"value": "ut ad",
											"description": "(Required) help screen key"
										}
									]
								},
								"description": "return a help message, normally to be displayed in a popup help screen."
							},
							"response": [
								{
									"id": "39b38fee-ec7c-45fa-9f93-d92ff23d0a61",
									"name": "OK",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "X-Auth-Token",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/help/:key",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"help",
												":key"
											],
											"variable": [
												{
													"key": "key",
													"value": "ut ad",
													"description": "(Required) help screen key"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"help\": \"sunt ea adipisicing\"\n}"
								},
								{
									"id": "1525018d-54cd-44a2-b682-23406f1c4d16",
									"name": "The server can not understand the request due to invalid syntax.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "X-Auth-Token",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/help/:key",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"help",
												":key"
											],
											"variable": [
												{
													"key": "key",
													"value": "ut ad",
													"description": "(Required) help screen key"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"title\": \"incorrect username or password\",\n  \"status\": 404,\n  \"errorType\": \"/errors/incorrect-user-pass\",\n  \"detail\": \"Authentication failed due to incorrect username or password.\",\n  \"instance\": \"/login/log/abc123\"\n}"
								},
								{
									"id": "e80f6d6a-d87e-4348-b230-48b8c42c5d1f",
									"name": "Authorization required",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "X-Auth-Token",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/help/:key",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"help",
												":key"
											],
											"variable": [
												{
													"key": "key",
													"value": "ut ad",
													"description": "(Required) help screen key"
												}
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": ""
								}
							]
						},
						{
							"name": "create help screen",
							"id": "dadae69d-c34b-47b8-951e-12a6c21e1995",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"key\": \"aliqua pariatur non\",\n  \"msg\": \"cillum\",\n  \"lang\": \"sint in tempor ut cupidatat\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/help/:key",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"help",
										":key"
									],
									"variable": [
										{
											"id": "64eebdbc-641f-4bcf-9f94-36bd54c5222b",
											"key": "key",
											"value": "ut ad",
											"description": "(Required) help screen key"
										}
									]
								},
								"description": "Creation  a help screen."
							},
							"response": [
								{
									"id": "577230d7-2254-4c1c-a7e4-52d5554da31b",
									"name": "Success â€“  help screen recorded",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "X-Auth-Token",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"key\": \"aliqua pariatur non\",\n  \"msg\": \"cillum\",\n  \"lang\": \"sint in tempor ut cupidatat\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/help/:key",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"help",
												":key"
											],
											"variable": [
												{
													"key": "key",
													"value": "ut ad",
													"description": "(Required) help screen key"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"protocol\": {\n    \"key\": \"ullamco aute fugiat culpa\",\n    \"msg\": \"minim consectetur aute\",\n    \"lang\": \"exercitation ut\"\n  }\n}"
								},
								{
									"id": "51e80670-a9ec-4902-b8ec-e4a825a8c698",
									"name": "The server can not understand the request due to invalid syntax.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "X-Auth-Token",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"key\": \"aliqua pariatur non\",\n  \"msg\": \"cillum\",\n  \"lang\": \"sint in tempor ut cupidatat\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/help/:key",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"help",
												":key"
											],
											"variable": [
												{
													"key": "key",
													"value": "ut ad",
													"description": "(Required) help screen key"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"title\": \"incorrect username or password\",\n  \"status\": 404,\n  \"errorType\": \"/errors/incorrect-user-pass\",\n  \"detail\": \"Authentication failed due to incorrect username or password.\",\n  \"instance\": \"/login/log/abc123\"\n}"
								},
								{
									"id": "d396b067-eca8-42c6-b4ad-07e2a0563757",
									"name": "Authorization required",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "X-Auth-Token",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"key\": \"aliqua pariatur non\",\n  \"msg\": \"cillum\",\n  \"lang\": \"sint in tempor ut cupidatat\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/help/:key",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"help",
												":key"
											],
											"variable": [
												{
													"key": "key",
													"value": "ut ad",
													"description": "(Required) help screen key"
												}
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": ""
								}
							]
						},
						{
							"name": "delete help screen",
							"id": "c5e7c3fb-7e16-4e7c-9f32-32bd4029a81d",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "DELETE",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/help/:key",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"help",
										":key"
									],
									"variable": [
										{
											"id": "25c6785f-3ccd-483f-ba7c-4916d8667424",
											"key": "key",
											"value": "ut ad",
											"description": "(Required) help screen key"
										}
									]
								},
								"description": "Delete help screen."
							},
							"response": [
								{
									"id": "19461070-8c83-4daa-82c0-01c50e4c22c6",
									"name": "deleted",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "X-Auth-Token",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/help/:key",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"help",
												":key"
											],
											"variable": [
												{
													"key": "key",
													"value": "ut ad",
													"description": "(Required) help screen key"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"deleted\": 74301612\n}"
								},
								{
									"id": "a3a6eea0-a163-4804-962d-f7bc6b99c3e8",
									"name": "The server can not understand the request due to invalid syntax.",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "X-Auth-Token",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/help/:key",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"help",
												":key"
											],
											"variable": [
												{
													"key": "key",
													"value": "ut ad",
													"description": "(Required) help screen key"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"title\": \"incorrect username or password\",\n  \"status\": 404,\n  \"errorType\": \"/errors/incorrect-user-pass\",\n  \"detail\": \"Authentication failed due to incorrect username or password.\",\n  \"instance\": \"/login/log/abc123\"\n}"
								},
								{
									"id": "9965400b-b60d-4e54-991c-1842e01dd9ad",
									"name": "Authorization required",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "X-Auth-Token",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/help/:key",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"help",
												":key"
											],
											"variable": [
												{
													"key": "key",
													"value": "ut ad",
													"description": "(Required) help screen key"
												}
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": ""
								}
							]
						}
					],
					"id": "4f06e5e8-82a7-48e1-90de-7a1097057d4d"
				},
				{
					"name": "labels",
					"item": [
						{
							"name": "{id}",
							"item": [
								{
									"name": "labelclaim",
									"id": "1d2fb04b-21a1-4944-be6d-e0f0fab2ced5",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/labels/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"labels",
												":id"
											],
											"variable": [
												{
													"id": "14c7aafd-0f7e-4a15-9417-e4a86942c686",
													"key": "id",
													"value": "32",
													"description": "(Required) labelclaim  ID"
												}
											]
										},
										"description": "Return specified labelclaim."
									},
									"response": [
										{
											"id": "ded96834-e8e8-47ef-8dba-6f93b4ded043",
											"name": "OK",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "X-Auth-Token",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/labels/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"labels",
														":id"
													],
													"variable": [
														{
															"key": "id",
															"value": "32",
															"description": "(Required) labelclaim  ID"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n  \"id\": 1,\n  \"fdaSpecies\": [\n    \"ChickensBroilers\",\n    \"ChickensBroilers\"\n  ],\n  \"diagnosis\": \"pain (colic), symptomatic treatment\",\n  \"dxId\": 2002,\n  \"product\": \"Prevailâ„¢ Flunixin Meglumine Injection\",\n  \"route\": \"intr-corporeal\",\n  \"wtMeatHrs\": 22,\n  \"wtMilkHrs\": 5,\n  \"productId\": 1315018,\n  \"_dose\": \"3.0 ml per kg repeat in 6 hours and again in 24 hours\",\n  \"sequenceFunction\": {\n    \"_type\": \"models.SeqSingleDose\"\n  },\n  \"sizeFunction\": {\n    \"dose\": {\n      \"quantity\": {\n        \"dimension\": \"Volume\",\n        \"value\": 3,\n        \"symbol\": \"ml\"\n      }\n    },\n    \"_type\": \"models.FixedDoseFunction\"\n  },\n  \"doseNote\": \"THis can contain <b>html</b> tags\",\n  \"wtNote\": \"not for dairy animals\",\n  \"ndc\": \"200-308\",\n  \"generic\": \"OXYTETRACYCLINE\"\n}"
										},
										{
											"id": "8b0d69b1-d5fc-4c80-9728-5f03fcf4a412",
											"name": "The server can not understand the request due to invalid syntax.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "X-Auth-Token",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/labels/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"labels",
														":id"
													],
													"variable": [
														{
															"key": "id",
															"value": "32",
															"description": "(Required) labelclaim  ID"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n  \"title\": \"incorrect username or password\",\n  \"status\": 404,\n  \"errorType\": \"/errors/incorrect-user-pass\",\n  \"detail\": \"Authentication failed due to incorrect username or password.\",\n  \"instance\": \"/login/log/abc123\"\n}"
										},
										{
											"id": "250beeef-d1f6-4b4a-b902-09ecb9437f7b",
											"name": "Authorization required",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "X-Auth-Token",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/labels/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"labels",
														":id"
													],
													"variable": [
														{
															"key": "id",
															"value": "32",
															"description": "(Required) labelclaim  ID"
														}
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": ""
										}
									]
								},
								{
									"name": "create help screen",
									"id": "6c8f4c8d-9660-4567-90c0-b97711e41658",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"id\": 1,\n  \"fdaSpecies\": [\n    \"ChickensBroilers\",\n    \"ChickensBroilers\"\n  ],\n  \"diagnosis\": \"pain (colic), symptomatic treatment\",\n  \"dxId\": 2002,\n  \"product\": \"Prevailâ„¢ Flunixin Meglumine Injection\",\n  \"route\": \"intr-corporeal\",\n  \"wtMeatHrs\": 22,\n  \"wtMilkHrs\": 5,\n  \"productId\": 1315018,\n  \"_dose\": \"3.0 ml per kg repeat in 6 hours and again in 24 hours\",\n  \"sequenceFunction\": {\n    \"_type\": \"models.SeqSingleDose\"\n  },\n  \"sizeFunction\": {\n    \"dose\": {\n      \"quantity\": {\n        \"dimension\": \"Volume\",\n        \"value\": 3,\n        \"symbol\": \"ml\"\n      }\n    },\n    \"_type\": \"models.FixedDoseFunction\"\n  },\n  \"doseNote\": \"THis can contain <b>html</b> tags\",\n  \"wtNote\": \"not for dairy animals\",\n  \"ndc\": \"200-308\",\n  \"generic\": \"OXYTETRACYCLINE\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/labels/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"labels",
												":id"
											],
											"variable": [
												{
													"id": "c8998e22-b4b4-47d7-b658-459036e8f6ef",
													"key": "id",
													"value": "29077371",
													"description": "(Required) labelclaim id"
												}
											]
										},
										"description": "update a labelclaim."
									},
									"response": [
										{
											"id": "ec3a88e5-959f-4069-a85f-ea658ef29eda",
											"name": "Success â€“  labelclaim updated",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "X-Auth-Token",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"id\": 1,\n  \"fdaSpecies\": [\n    \"ChickensBroilers\",\n    \"ChickensBroilers\"\n  ],\n  \"diagnosis\": \"pain (colic), symptomatic treatment\",\n  \"dxId\": 2002,\n  \"product\": \"Prevailâ„¢ Flunixin Meglumine Injection\",\n  \"route\": \"intr-corporeal\",\n  \"wtMeatHrs\": 22,\n  \"wtMilkHrs\": 5,\n  \"productId\": 1315018,\n  \"_dose\": \"3.0 ml per kg repeat in 6 hours and again in 24 hours\",\n  \"sequenceFunction\": {\n    \"_type\": \"models.SeqSingleDose\"\n  },\n  \"sizeFunction\": {\n    \"dose\": {\n      \"quantity\": {\n        \"dimension\": \"Volume\",\n        \"value\": 3,\n        \"symbol\": \"ml\"\n      }\n    },\n    \"_type\": \"models.FixedDoseFunction\"\n  },\n  \"doseNote\": \"THis can contain <b>html</b> tags\",\n  \"wtNote\": \"not for dairy animals\",\n  \"ndc\": \"200-308\",\n  \"generic\": \"OXYTETRACYCLINE\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/api/labels/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"labels",
														":id"
													],
													"variable": [
														{
															"key": "id",
															"value": "29077371",
															"description": "(Required) labelclaim id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n  \"protocol\": {\n    \"id\": 1,\n    \"fdaSpecies\": [\n      \"ChickensBroilers\",\n      \"ChickensBroilers\"\n    ],\n    \"diagnosis\": \"pain (colic), symptomatic treatment\",\n    \"dxId\": 2002,\n    \"product\": \"Prevailâ„¢ Flunixin Meglumine Injection\",\n    \"route\": \"intr-corporeal\",\n    \"wtMeatHrs\": 22,\n    \"wtMilkHrs\": 5,\n    \"productId\": 1315018,\n    \"_dose\": \"3.0 ml per kg repeat in 6 hours and again in 24 hours\",\n    \"sequenceFunction\": {\n      \"_type\": \"models.SeqSingleDose\"\n    },\n    \"sizeFunction\": {\n      \"dose\": {\n        \"quantity\": {\n          \"dimension\": \"Volume\",\n          \"value\": 3,\n          \"symbol\": \"ml\"\n        }\n      },\n      \"_type\": \"models.FixedDoseFunction\"\n    },\n    \"doseNote\": \"THis can contain <b>html</b> tags\",\n    \"wtNote\": \"not for dairy animals\",\n    \"ndc\": \"200-308\",\n    \"generic\": \"OXYTETRACYCLINE\"\n  }\n}"
										},
										{
											"id": "2d9afdbb-8c6c-4686-9494-a671aebfd646",
											"name": "The server can not understand the request due to invalid syntax.",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "X-Auth-Token",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"id\": 1,\n  \"fdaSpecies\": [\n    \"ChickensBroilers\",\n    \"ChickensBroilers\"\n  ],\n  \"diagnosis\": \"pain (colic), symptomatic treatment\",\n  \"dxId\": 2002,\n  \"product\": \"Prevailâ„¢ Flunixin Meglumine Injection\",\n  \"route\": \"intr-corporeal\",\n  \"wtMeatHrs\": 22,\n  \"wtMilkHrs\": 5,\n  \"productId\": 1315018,\n  \"_dose\": \"3.0 ml per kg repeat in 6 hours and again in 24 hours\",\n  \"sequenceFunction\": {\n    \"_type\": \"models.SeqSingleDose\"\n  },\n  \"sizeFunction\": {\n    \"dose\": {\n      \"quantity\": {\n        \"dimension\": \"Volume\",\n        \"value\": 3,\n        \"symbol\": \"ml\"\n      }\n    },\n    \"_type\": \"models.FixedDoseFunction\"\n  },\n  \"doseNote\": \"THis can contain <b>html</b> tags\",\n  \"wtNote\": \"not for dairy animals\",\n  \"ndc\": \"200-308\",\n  \"generic\": \"OXYTETRACYCLINE\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/api/labels/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"labels",
														":id"
													],
													"variable": [
														{
															"key": "id",
															"value": "29077371",
															"description": "(Required) labelclaim id"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n  \"title\": \"incorrect username or password\",\n  \"status\": 404,\n  \"errorType\": \"/errors/incorrect-user-pass\",\n  \"detail\": \"Authentication failed due to incorrect username or password.\",\n  \"instance\": \"/login/log/abc123\"\n}"
										},
										{
											"id": "5225d023-92ba-40a2-a819-6a76fe9effe5",
											"name": "Authorization required",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "X-Auth-Token",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"id\": 1,\n  \"fdaSpecies\": [\n    \"ChickensBroilers\",\n    \"ChickensBroilers\"\n  ],\n  \"diagnosis\": \"pain (colic), symptomatic treatment\",\n  \"dxId\": 2002,\n  \"product\": \"Prevailâ„¢ Flunixin Meglumine Injection\",\n  \"route\": \"intr-corporeal\",\n  \"wtMeatHrs\": 22,\n  \"wtMilkHrs\": 5,\n  \"productId\": 1315018,\n  \"_dose\": \"3.0 ml per kg repeat in 6 hours and again in 24 hours\",\n  \"sequenceFunction\": {\n    \"_type\": \"models.SeqSingleDose\"\n  },\n  \"sizeFunction\": {\n    \"dose\": {\n      \"quantity\": {\n        \"dimension\": \"Volume\",\n        \"value\": 3,\n        \"symbol\": \"ml\"\n      }\n    },\n    \"_type\": \"models.FixedDoseFunction\"\n  },\n  \"doseNote\": \"THis can contain <b>html</b> tags\",\n  \"wtNote\": \"not for dairy animals\",\n  \"ndc\": \"200-308\",\n  \"generic\": \"OXYTETRACYCLINE\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/api/labels/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"labels",
														":id"
													],
													"variable": [
														{
															"key": "id",
															"value": "29077371",
															"description": "(Required) labelclaim id"
														}
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": ""
										}
									]
								}
							],
							"id": "a970c17d-2a9e-4ba8-a27d-eab6e78aaf4e"
						},
						{
							"name": "list of all labelclaims",
							"id": "7ab2df1d-379b-4b46-86e0-c0f03ec3bae9",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/labels",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"labels"
									]
								},
								"description": "This endpoint returns the full array of drug labels."
							},
							"response": [
								{
									"id": "003e8010-a98e-4073-94cf-af6fe9ff193b",
									"name": "OK",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "X-Auth-Token",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/labels",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"labels"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"labels\": [\n    {\n      \"id\": 1,\n      \"fdaSpecies\": [\n        \"ChickensBroilers\",\n        \"ChickensBroilers\"\n      ],\n      \"diagnosis\": \"pain (colic), symptomatic treatment\",\n      \"dxId\": 2002,\n      \"product\": \"Prevailâ„¢ Flunixin Meglumine Injection\",\n      \"route\": \"intr-corporeal\",\n      \"wtMeatHrs\": 22,\n      \"wtMilkHrs\": 5,\n      \"productId\": 1315018,\n      \"_dose\": \"3.0 ml per kg repeat in 6 hours and again in 24 hours\",\n      \"sequenceFunction\": {\n        \"_type\": \"models.SeqSingleDose\"\n      },\n      \"sizeFunction\": {\n        \"dose\": {\n          \"quantity\": {\n            \"dimension\": \"Volume\",\n            \"value\": 3,\n            \"symbol\": \"ml\"\n          }\n        },\n        \"_type\": \"models.FixedDoseFunction\"\n      },\n      \"doseNote\": \"THis can contain <b>html</b> tags\",\n      \"wtNote\": \"not for dairy animals\",\n      \"ndc\": \"200-308\",\n      \"generic\": \"OXYTETRACYCLINE\"\n    },\n    {\n      \"id\": 1,\n      \"fdaSpecies\": [\n        \"ChickensBroilers\",\n        \"ChickensBroilers\"\n      ],\n      \"diagnosis\": \"pain (colic), symptomatic treatment\",\n      \"dxId\": 2002,\n      \"product\": \"Prevailâ„¢ Flunixin Meglumine Injection\",\n      \"route\": \"intr-corporeal\",\n      \"wtMeatHrs\": 22,\n      \"wtMilkHrs\": 5,\n      \"productId\": 1315018,\n      \"_dose\": \"3.0 ml per kg repeat in 6 hours and again in 24 hours\",\n      \"sequenceFunction\": {\n        \"_type\": \"models.SeqSingleDose\"\n      },\n      \"sizeFunction\": {\n        \"dose\": {\n          \"quantity\": {\n            \"dimension\": \"Volume\",\n            \"value\": 3,\n            \"symbol\": \"ml\"\n          }\n        },\n        \"_type\": \"models.FixedDoseFunction\"\n      },\n      \"doseNote\": \"THis can contain <b>html</b> tags\",\n      \"wtNote\": \"not for dairy animals\",\n      \"ndc\": \"200-308\",\n      \"generic\": \"OXYTETRACYCLINE\"\n    }\n  ]\n}"
								},
								{
									"id": "d67c3aa6-f236-4cf0-9914-cb667eb9c47e",
									"name": "The server can not understand the request due to invalid syntax.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "X-Auth-Token",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/labels",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"labels"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"title\": \"incorrect username or password\",\n  \"status\": 404,\n  \"errorType\": \"/errors/incorrect-user-pass\",\n  \"detail\": \"Authentication failed due to incorrect username or password.\",\n  \"instance\": \"/login/log/abc123\"\n}"
								},
								{
									"id": "c55824f9-6ec7-4768-bbab-a840b82708c9",
									"name": "Authorization required",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "X-Auth-Token",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/labels",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"labels"
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": ""
								}
							]
						},
						{
							"name": "create labelclaim",
							"id": "3072356a-02c4-4bba-bb61-cc2df1fb54d6",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"id\": 1,\n  \"fdaSpecies\": [\n    \"ChickensBroilers\",\n    \"ChickensBroilers\"\n  ],\n  \"diagnosis\": \"pain (colic), symptomatic treatment\",\n  \"dxId\": 2002,\n  \"product\": \"Prevailâ„¢ Flunixin Meglumine Injection\",\n  \"route\": \"intr-corporeal\",\n  \"wtMeatHrs\": 22,\n  \"wtMilkHrs\": 5,\n  \"productId\": 1315018,\n  \"_dose\": \"3.0 ml per kg repeat in 6 hours and again in 24 hours\",\n  \"sequenceFunction\": {\n    \"_type\": \"models.SeqSingleDose\"\n  },\n  \"sizeFunction\": {\n    \"dose\": {\n      \"quantity\": {\n        \"dimension\": \"Volume\",\n        \"value\": 3,\n        \"symbol\": \"ml\"\n      }\n    },\n    \"_type\": \"models.FixedDoseFunction\"\n  },\n  \"doseNote\": \"THis can contain <b>html</b> tags\",\n  \"wtNote\": \"not for dairy animals\",\n  \"ndc\": \"200-308\",\n  \"generic\": \"OXYTETRACYCLINE\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/labels",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"labels"
									]
								},
								"description": "Creation  a labelclaim."
							},
							"response": [
								{
									"id": "f882ae83-0f8f-4815-b1c2-87bbfd8c795d",
									"name": "Success â€“  labelclaim recorded",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "X-Auth-Token",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"id\": 1,\n  \"fdaSpecies\": [\n    \"ChickensBroilers\",\n    \"ChickensBroilers\"\n  ],\n  \"diagnosis\": \"pain (colic), symptomatic treatment\",\n  \"dxId\": 2002,\n  \"product\": \"Prevailâ„¢ Flunixin Meglumine Injection\",\n  \"route\": \"intr-corporeal\",\n  \"wtMeatHrs\": 22,\n  \"wtMilkHrs\": 5,\n  \"productId\": 1315018,\n  \"_dose\": \"3.0 ml per kg repeat in 6 hours and again in 24 hours\",\n  \"sequenceFunction\": {\n    \"_type\": \"models.SeqSingleDose\"\n  },\n  \"sizeFunction\": {\n    \"dose\": {\n      \"quantity\": {\n        \"dimension\": \"Volume\",\n        \"value\": 3,\n        \"symbol\": \"ml\"\n      }\n    },\n    \"_type\": \"models.FixedDoseFunction\"\n  },\n  \"doseNote\": \"THis can contain <b>html</b> tags\",\n  \"wtNote\": \"not for dairy animals\",\n  \"ndc\": \"200-308\",\n  \"generic\": \"OXYTETRACYCLINE\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/labels",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"labels"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"protocol\": {\n    \"id\": 1,\n    \"fdaSpecies\": [\n      \"ChickensBroilers\",\n      \"ChickensBroilers\"\n    ],\n    \"diagnosis\": \"pain (colic), symptomatic treatment\",\n    \"dxId\": 2002,\n    \"product\": \"Prevailâ„¢ Flunixin Meglumine Injection\",\n    \"route\": \"intr-corporeal\",\n    \"wtMeatHrs\": 22,\n    \"wtMilkHrs\": 5,\n    \"productId\": 1315018,\n    \"_dose\": \"3.0 ml per kg repeat in 6 hours and again in 24 hours\",\n    \"sequenceFunction\": {\n      \"_type\": \"models.SeqSingleDose\"\n    },\n    \"sizeFunction\": {\n      \"dose\": {\n        \"quantity\": {\n          \"dimension\": \"Volume\",\n          \"value\": 3,\n          \"symbol\": \"ml\"\n        }\n      },\n      \"_type\": \"models.FixedDoseFunction\"\n    },\n    \"doseNote\": \"THis can contain <b>html</b> tags\",\n    \"wtNote\": \"not for dairy animals\",\n    \"ndc\": \"200-308\",\n    \"generic\": \"OXYTETRACYCLINE\"\n  }\n}"
								},
								{
									"id": "47f296d6-29db-40b3-b2d8-17bc5d567392",
									"name": "The server can not understand the request due to invalid syntax.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "X-Auth-Token",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"id\": 1,\n  \"fdaSpecies\": [\n    \"ChickensBroilers\",\n    \"ChickensBroilers\"\n  ],\n  \"diagnosis\": \"pain (colic), symptomatic treatment\",\n  \"dxId\": 2002,\n  \"product\": \"Prevailâ„¢ Flunixin Meglumine Injection\",\n  \"route\": \"intr-corporeal\",\n  \"wtMeatHrs\": 22,\n  \"wtMilkHrs\": 5,\n  \"productId\": 1315018,\n  \"_dose\": \"3.0 ml per kg repeat in 6 hours and again in 24 hours\",\n  \"sequenceFunction\": {\n    \"_type\": \"models.SeqSingleDose\"\n  },\n  \"sizeFunction\": {\n    \"dose\": {\n      \"quantity\": {\n        \"dimension\": \"Volume\",\n        \"value\": 3,\n        \"symbol\": \"ml\"\n      }\n    },\n    \"_type\": \"models.FixedDoseFunction\"\n  },\n  \"doseNote\": \"THis can contain <b>html</b> tags\",\n  \"wtNote\": \"not for dairy animals\",\n  \"ndc\": \"200-308\",\n  \"generic\": \"OXYTETRACYCLINE\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/labels",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"labels"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"title\": \"incorrect username or password\",\n  \"status\": 404,\n  \"errorType\": \"/errors/incorrect-user-pass\",\n  \"detail\": \"Authentication failed due to incorrect username or password.\",\n  \"instance\": \"/login/log/abc123\"\n}"
								},
								{
									"id": "51675c79-0289-49a1-b735-6568f6bfa060",
									"name": "Authorization required",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "X-Auth-Token",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"id\": 1,\n  \"fdaSpecies\": [\n    \"ChickensBroilers\",\n    \"ChickensBroilers\"\n  ],\n  \"diagnosis\": \"pain (colic), symptomatic treatment\",\n  \"dxId\": 2002,\n  \"product\": \"Prevailâ„¢ Flunixin Meglumine Injection\",\n  \"route\": \"intr-corporeal\",\n  \"wtMeatHrs\": 22,\n  \"wtMilkHrs\": 5,\n  \"productId\": 1315018,\n  \"_dose\": \"3.0 ml per kg repeat in 6 hours and again in 24 hours\",\n  \"sequenceFunction\": {\n    \"_type\": \"models.SeqSingleDose\"\n  },\n  \"sizeFunction\": {\n    \"dose\": {\n      \"quantity\": {\n        \"dimension\": \"Volume\",\n        \"value\": 3,\n        \"symbol\": \"ml\"\n      }\n    },\n    \"_type\": \"models.FixedDoseFunction\"\n  },\n  \"doseNote\": \"THis can contain <b>html</b> tags\",\n  \"wtNote\": \"not for dairy animals\",\n  \"ndc\": \"200-308\",\n  \"generic\": \"OXYTETRACYCLINE\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/labels",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"labels"
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": ""
								}
							]
						},
						{
							"name": "update labelclaim",
							"id": "2ca98258-7b54-4330-9a65-e0efc000b685",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"id\": 1,\n  \"fdaSpecies\": [\n    \"ChickensBroilers\",\n    \"ChickensBroilers\"\n  ],\n  \"diagnosis\": \"pain (colic), symptomatic treatment\",\n  \"dxId\": 2002,\n  \"product\": \"Prevailâ„¢ Flunixin Meglumine Injection\",\n  \"route\": \"intr-corporeal\",\n  \"wtMeatHrs\": 22,\n  \"wtMilkHrs\": 5,\n  \"productId\": 1315018,\n  \"_dose\": \"3.0 ml per kg repeat in 6 hours and again in 24 hours\",\n  \"sequenceFunction\": {\n    \"_type\": \"models.SeqSingleDose\"\n  },\n  \"sizeFunction\": {\n    \"dose\": {\n      \"quantity\": {\n        \"dimension\": \"Volume\",\n        \"value\": 3,\n        \"symbol\": \"ml\"\n      }\n    },\n    \"_type\": \"models.FixedDoseFunction\"\n  },\n  \"doseNote\": \"THis can contain <b>html</b> tags\",\n  \"wtNote\": \"not for dairy animals\",\n  \"ndc\": \"200-308\",\n  \"generic\": \"OXYTETRACYCLINE\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/labels",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"labels"
									]
								},
								"description": "update a labelclaim."
							},
							"response": [
								{
									"id": "483039c6-ec28-4595-a581-d693f695d02c",
									"name": "Success â€“ Â© Protocol",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "X-Auth-Token",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"id\": 1,\n  \"fdaSpecies\": [\n    \"ChickensBroilers\",\n    \"ChickensBroilers\"\n  ],\n  \"diagnosis\": \"pain (colic), symptomatic treatment\",\n  \"dxId\": 2002,\n  \"product\": \"Prevailâ„¢ Flunixin Meglumine Injection\",\n  \"route\": \"intr-corporeal\",\n  \"wtMeatHrs\": 22,\n  \"wtMilkHrs\": 5,\n  \"productId\": 1315018,\n  \"_dose\": \"3.0 ml per kg repeat in 6 hours and again in 24 hours\",\n  \"sequenceFunction\": {\n    \"_type\": \"models.SeqSingleDose\"\n  },\n  \"sizeFunction\": {\n    \"dose\": {\n      \"quantity\": {\n        \"dimension\": \"Volume\",\n        \"value\": 3,\n        \"symbol\": \"ml\"\n      }\n    },\n    \"_type\": \"models.FixedDoseFunction\"\n  },\n  \"doseNote\": \"THis can contain <b>html</b> tags\",\n  \"wtNote\": \"not for dairy animals\",\n  \"ndc\": \"200-308\",\n  \"generic\": \"OXYTETRACYCLINE\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/labels",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"labels"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"protocol\": {\n    \"id\": 1,\n    \"fdaSpecies\": [\n      \"ChickensBroilers\",\n      \"ChickensBroilers\"\n    ],\n    \"diagnosis\": \"pain (colic), symptomatic treatment\",\n    \"dxId\": 2002,\n    \"product\": \"Prevailâ„¢ Flunixin Meglumine Injection\",\n    \"route\": \"intr-corporeal\",\n    \"wtMeatHrs\": 22,\n    \"wtMilkHrs\": 5,\n    \"productId\": 1315018,\n    \"_dose\": \"3.0 ml per kg repeat in 6 hours and again in 24 hours\",\n    \"sequenceFunction\": {\n      \"_type\": \"models.SeqSingleDose\"\n    },\n    \"sizeFunction\": {\n      \"dose\": {\n        \"quantity\": {\n          \"dimension\": \"Volume\",\n          \"value\": 3,\n          \"symbol\": \"ml\"\n        }\n      },\n      \"_type\": \"models.FixedDoseFunction\"\n    },\n    \"doseNote\": \"THis can contain <b>html</b> tags\",\n    \"wtNote\": \"not for dairy animals\",\n    \"ndc\": \"200-308\",\n    \"generic\": \"OXYTETRACYCLINE\"\n  }\n}"
								},
								{
									"id": "8a4f8608-18f6-43ae-9c2e-5d16c2dc7090",
									"name": "The server can not understand the request due to invalid syntax.",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "X-Auth-Token",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"id\": 1,\n  \"fdaSpecies\": [\n    \"ChickensBroilers\",\n    \"ChickensBroilers\"\n  ],\n  \"diagnosis\": \"pain (colic), symptomatic treatment\",\n  \"dxId\": 2002,\n  \"product\": \"Prevailâ„¢ Flunixin Meglumine Injection\",\n  \"route\": \"intr-corporeal\",\n  \"wtMeatHrs\": 22,\n  \"wtMilkHrs\": 5,\n  \"productId\": 1315018,\n  \"_dose\": \"3.0 ml per kg repeat in 6 hours and again in 24 hours\",\n  \"sequenceFunction\": {\n    \"_type\": \"models.SeqSingleDose\"\n  },\n  \"sizeFunction\": {\n    \"dose\": {\n      \"quantity\": {\n        \"dimension\": \"Volume\",\n        \"value\": 3,\n        \"symbol\": \"ml\"\n      }\n    },\n    \"_type\": \"models.FixedDoseFunction\"\n  },\n  \"doseNote\": \"THis can contain <b>html</b> tags\",\n  \"wtNote\": \"not for dairy animals\",\n  \"ndc\": \"200-308\",\n  \"generic\": \"OXYTETRACYCLINE\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/labels",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"labels"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"title\": \"incorrect username or password\",\n  \"status\": 404,\n  \"errorType\": \"/errors/incorrect-user-pass\",\n  \"detail\": \"Authentication failed due to incorrect username or password.\",\n  \"instance\": \"/login/log/abc123\"\n}"
								},
								{
									"id": "f2eca48a-9e50-40ff-877f-ae80f2f73623",
									"name": "Authorization required",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "X-Auth-Token",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"id\": 1,\n  \"fdaSpecies\": [\n    \"ChickensBroilers\",\n    \"ChickensBroilers\"\n  ],\n  \"diagnosis\": \"pain (colic), symptomatic treatment\",\n  \"dxId\": 2002,\n  \"product\": \"Prevailâ„¢ Flunixin Meglumine Injection\",\n  \"route\": \"intr-corporeal\",\n  \"wtMeatHrs\": 22,\n  \"wtMilkHrs\": 5,\n  \"productId\": 1315018,\n  \"_dose\": \"3.0 ml per kg repeat in 6 hours and again in 24 hours\",\n  \"sequenceFunction\": {\n    \"_type\": \"models.SeqSingleDose\"\n  },\n  \"sizeFunction\": {\n    \"dose\": {\n      \"quantity\": {\n        \"dimension\": \"Volume\",\n        \"value\": 3,\n        \"symbol\": \"ml\"\n      }\n    },\n    \"_type\": \"models.FixedDoseFunction\"\n  },\n  \"doseNote\": \"THis can contain <b>html</b> tags\",\n  \"wtNote\": \"not for dairy animals\",\n  \"ndc\": \"200-308\",\n  \"generic\": \"OXYTETRACYCLINE\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/labels",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"labels"
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": ""
								}
							]
						},
						{
							"name": "package insert",
							"id": "4ce65f09-7a56-4f4a-aa9e-3df2ed05bed8",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/labels/inserts/:lxId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"labels",
										"inserts",
										":lxId"
									],
									"variable": [
										{
											"id": "e38cc3f5-9001-4fbc-9a06-69d18b1d46ab",
											"key": "lxId",
											"value": "32",
											"description": "(Required) label ID"
										}
									]
								},
								"description": "Retrieve the product package insert."
							},
							"response": [
								{
									"id": "05368a51-2642-4de7-bad0-beae30b4d9ee",
									"name": "OK",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "X-Auth-Token",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/labels/inserts/:lxId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"labels",
												"inserts",
												":lxId"
											],
											"variable": [
												{
													"key": "lxId",
													"value": "32",
													"description": "(Required) label ID"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "\"ut ad\""
								},
								{
									"id": "b070893e-f46a-418b-8210-56cba98fe4cf",
									"name": "The server can not understand the request due to invalid syntax.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "X-Auth-Token",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/labels/inserts/:lxId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"labels",
												"inserts",
												":lxId"
											],
											"variable": [
												{
													"key": "lxId",
													"value": "32",
													"description": "(Required) label ID"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"title\": \"incorrect username or password\",\n  \"status\": 404,\n  \"errorType\": \"/errors/incorrect-user-pass\",\n  \"detail\": \"Authentication failed due to incorrect username or password.\",\n  \"instance\": \"/login/log/abc123\"\n}"
								},
								{
									"id": "d35df5e7-5b05-4c8c-a120-784d8a99a057",
									"name": "Authorization required",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "X-Auth-Token",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/labels/inserts/:lxId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"labels",
												"inserts",
												":lxId"
											],
											"variable": [
												{
													"key": "lxId",
													"value": "32",
													"description": "(Required) label ID"
												}
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": ""
								},
								{
									"id": "b5c53c28-4bf5-45fa-8b58-60250b559659",
									"name": "The server can not find the requested resource.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "X-Auth-Token",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/labels/inserts/:lxId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"labels",
												"inserts",
												":lxId"
											],
											"variable": [
												{
													"key": "lxId",
													"value": "32",
													"description": "(Required) label ID"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": ""
								}
							]
						}
					],
					"id": "915b2f18-4553-4c4d-be0b-45cf16e97b76"
				},
				{
					"name": "spl/{ndc}",
					"item": [
						{
							"name": "get detail of a Greenbook Drug as a link",
							"id": "c408c80d-f6cb-4be6-82cf-cf3e4889e5aa",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "text/html"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/spl/:ndc",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"spl",
										":ndc"
									],
									"variable": [
										{
											"id": "4fed50c2-9e1b-42a6-85f4-24fe3b15bcc4",
											"key": "ndc",
											"value": "0010-3832",
											"description": "(Required) unique hyphenated number with up to 10 digits in 2 or 3 segments as labelerCode-productCode-packageCode. packageCode may not be needed."
										}
									]
								},
								"description": "This"
							},
							"response": [
								{
									"id": "29e02b3a-5655-4b5a-888e-d7cac6536893",
									"name": "OK",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "X-Auth-Token",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/spl/:ndc",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"spl",
												":ndc"
											],
											"variable": [
												{
													"key": "ndc",
													"value": "0010-3832",
													"description": "(Required) unique hyphenated number with up to 10 digits in 2 or 3 segments as labelerCode-productCode-packageCode. packageCode may not be needed."
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/html"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "voluptate adipisicing incididunt consequat"
								},
								{
									"id": "3954379a-19e7-4943-88f0-42ec4eafd07b",
									"name": "Redirect to SPL file served from FDA server",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "X-Auth-Token",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/spl/:ndc",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"spl",
												":ndc"
											],
											"variable": [
												{
													"key": "ndc",
													"value": "0010-3832",
													"description": "(Required) unique hyphenated number with up to 10 digits in 2 or 3 segments as labelerCode-productCode-packageCode. packageCode may not be needed."
												}
											]
										}
									},
									"status": "See Other",
									"code": 303,
									"_postman_previewlanguage": "xml",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/xml"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "<element>(string)</element>"
								}
							]
						},
						{
							"name": "get detail of a Greenbook Drug as a link",
							"id": "5aac9951-fac2-40a6-83ce-e88acae53af7",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/spl/:ndc/:image",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"spl",
										":ndc",
										":image"
									],
									"variable": [
										{
											"id": "5f1594f0-4890-4b35-85b8-305eec100cf2",
											"key": "ndc",
											"value": "0010-3495",
											"description": "(Required) unique hyphenated number with up to 10 digits in 2 or 3 segments as labelerCode-productCode-packageCode. packageCode may not be needed."
										},
										{
											"id": "c61d6366-ea48-4b6c-ab37-8aa8a577c6bd",
											"key": "image",
											"value": "601588-image-fake.jpg",
											"description": "(Required) name of image file"
										}
									]
								},
								"description": "This"
							},
							"response": [
								{
									"id": "434e0abb-47ad-4eea-8aef-6366151bd8e9",
									"name": "OK",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "X-Auth-Token",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/spl/:ndc/:image",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"spl",
												":ndc",
												":image"
											],
											"variable": [
												{
													"key": "ndc",
													"value": "0010-3495",
													"description": "(Required) unique hyphenated number with up to 10 digits in 2 or 3 segments as labelerCode-productCode-packageCode. packageCode may not be needed."
												},
												{
													"key": "image",
													"value": "601588-image-fake.jpg",
													"description": "(Required) name of image file"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "\"laboris ipsum in deserunt\""
								},
								{
									"id": "7444ffc9-b312-47ca-a053-ebe07dcb8434",
									"name": "Redirect to SPL file served from FDA server",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "X-Auth-Token",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/spl/:ndc/:image",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"spl",
												":ndc",
												":image"
											],
											"variable": [
												{
													"key": "ndc",
													"value": "0010-3495",
													"description": "(Required) unique hyphenated number with up to 10 digits in 2 or 3 segments as labelerCode-productCode-packageCode. packageCode may not be needed."
												},
												{
													"key": "image",
													"value": "601588-image-fake.jpg",
													"description": "(Required) name of image file"
												}
											]
										}
									},
									"status": "See Other",
									"code": 303,
									"_postman_previewlanguage": "xml",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/xml"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "<element>(string)</element>"
								}
							]
						}
					],
					"id": "dde3bd4a-f523-4baa-95f4-eb9c2c6ff0fd"
				},
				{
					"name": "prescriptions",
					"item": [
						{
							"name": "{id}",
							"item": [
								{
									"name": "retrieve prescription by ID",
									"id": "16f17793-a0f1-4beb-9763-a4f9517c227b",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/prescriptions/:id/",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"prescriptions",
												":id",
												""
											],
											"variable": [
												{
													"id": "fdac8471-b0e4-41c8-b561-537241bcc318",
													"key": "id",
													"value": "Vi1y9kbpEj7Upqy7",
													"description": "(Required) Prescription ID key"
												}
											]
										},
										"description": "Retrieve a Prescription by `prescription.id`."
									},
									"response": [
										{
											"id": "e4210552-9a38-4b3a-bbf5-84313fcc0f0a",
											"name": "OK",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "X-Auth-Token",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/prescriptions/:id/",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"prescriptions",
														":id",
														""
													],
													"variable": [
														{
															"key": "id",
															"value": "Vi1y9kbpEj7Upqy7",
															"description": "(Required) Prescription ID key"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n  \"prescription\": {\n    \"vorId\": 1,\n    \"morId\": 2,\n    \"protocol\": {\n      \"ownerId\": 1,\n      \"name\": \"wip\",\n      \"status\": \"PRESCRIBED\",\n      \"instructions\": {\n        \"considerations\": \"<p>This is just an example, not a real protocol.</p>\",\n        \"restrictions\": \"<p>Not for use on real animals.</p>\",\n        \"dothis\": \"<h3>Examinations to perform</h3>\",\n        \"recordthis\": \"<p>record every step in your notebook.</p>\",\n        \"success\": \"<p>All problems are gone</p>\",\n        \"failure\": \"<p>One or more problems remain</p>\",\n        \"references\": \"<a href=\\\"https://en.wikipedia.org/wiki/Rickrolling\\\">Wikipedia</a>\"\n      },\n      \"id\": 12345,\n      \"shortname\": \"wip\",\n      \"created\": \"2020-01-10T10:30:37Z\",\n      \"edited\": \"2020-02-10T10:30:37Z\",\n      \"vetNote\": \"consider prescribing protocol x instead\",\n      \"wtMeatHrs\": 22,\n      \"wtMilkHrs\": 5,\n      \"shareAll\": true,\n      \"shareClonable\": true,\n      \"caseDefinition\": {\n        \"requireId\": false,\n        \"requireMor\": false,\n        \"contraindications\": \"<p>prohibited in animals older than than 24 months</p>\",\n        \"medical\": \"if fever is present, consider Protocol 12345 instead.\",\n        \"economic\": \"culling should be considered as an alternative, as milk production is unlikely to return to normal after treatment\",\n        \"note\": \"<p>overcrowding may be contributing to issues</p>\"\n      },\n      \"treatments\": [\n        {\n          \"product\": \"MiracleMed\",\n          \"route\": \"wip\",\n          \"dosage\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n          },\n          \"sequenceFunction\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n          },\n          \"sizeFunction\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n          },\n          \"id\": \"B-123\",\n          \"ownerId\": 0,\n          \"description\": \"3.0 ml per kg repeat\",\n          \"eligibilities\": [\n            {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          ],\n          \"_dose\": \"3.0 ml per kg repeat in 6 hours and again in 24 hours\",\n          \"wtMeatHrs\": 1589641,\n          \"wtMilkHrs\": 38827891,\n          \"nada\": \"wip\",\n          \"tags\": [\n            {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          ],\n          \"note\": \"<p>a free-form note</p>\",\n          \"amduca\": \"ONLABEL\"\n        },\n        {\n          \"product\": \"MiracleMed\",\n          \"route\": \"wip\",\n          \"dosage\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n          },\n          \"sequenceFunction\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n          },\n          \"sizeFunction\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n          },\n          \"id\": \"B-123\",\n          \"ownerId\": 0,\n          \"description\": \"3.0 ml per kg repeat\",\n          \"eligibilities\": [\n            {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          ],\n          \"_dose\": \"3.0 ml per kg repeat in 6 hours and again in 24 hours\",\n          \"wtMeatHrs\": 82076656,\n          \"wtMilkHrs\": 9683577,\n          \"nada\": \"wip\",\n          \"tags\": [\n            {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          ],\n          \"note\": \"<p>a free-form note</p>\",\n          \"amduca\": \"UNIDENTIFIED\"\n        }\n      ],\n      \"tags\": [\n        {\n          \"id\": 8,\n          \"color\": \"#516cc6\",\n          \"name\": \"est cupidata\",\n          \"fixes\": [\n            {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          ]\n        },\n        {\n          \"id\": 8,\n          \"color\": \"#516cc6\",\n          \"name\": \"sit anim repreh\",\n          \"fixes\": [\n            {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          ]\n        }\n      ],\n      \"diagnoses\": [\n        {\n          \"id\": 8,\n          \"name\": \"Pain/inflammation (musculoskeletal), treatment\"\n        },\n        {\n          \"id\": 8,\n          \"name\": \"Pain/inflammation (musculoskeletal), treatment\"\n        }\n      ],\n      \"eligibilities\": [\n        {\n          \"id\": 1,\n          \"name\": \"Beef Cattle\",\n          \"fdaSpecies\": [\n            {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          ]\n        },\n        {\n          \"id\": 1,\n          \"name\": \"Beef Cattle\",\n          \"fdaSpecies\": [\n            {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          ]\n        }\n      ],\n      \"promises\": [\n        {\n          \"_type\": \"models.IdPromise\",\n          \"name\": \"ID promise\",\n          \"descrip\": \"You must give ID for each case enrolled\",\n          \"query\": \"What is the animal's name or number?\",\n          \"when\": \"PT24H\",\n          \"id\": 2345\n        },\n        {\n          \"_type\": \"models.IdPromise\",\n          \"name\": \"ID promise\",\n          \"descrip\": \"You must give ID for each case enrolled\",\n          \"query\": \"What is the animal's name or number?\",\n          \"when\": \"PT24H\",\n          \"id\": 2345\n        }\n      ],\n      \"metadata\": [\n        {\n          \"key\": \"popularity\",\n          \"value\": \"good 1.2\"\n        },\n        {\n          \"key\": \"popularity\",\n          \"value\": \"good 1.2\"\n        }\n      ]\n    },\n    \"status\": \"PRESCRIBED\",\n    \"rxId\": \"gG3pBCR1GCMKm89c\",\n    \"refills\": 0,\n    \"expiration\": \"2021-01-10T10:30:37Z\",\n    \"created\": \"2021-08-10T10:30:37Z\",\n    \"metadata\": [\n      {\n        \"key\": \"popularity\",\n        \"value\": \"good 1.2\"\n      },\n      {\n        \"key\": \"popularity\",\n        \"value\": \"good 1.2\"\n      }\n    ]\n  }\n}"
										}
									]
								},
								{
									"name": "recall or decline a prescription",
									"id": "8eca8dab-bfd5-40cc-992d-0b5cfd03960f",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "DELETE",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/prescriptions/:id/",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"prescriptions",
												":id",
												""
											],
											"variable": [
												{
													"id": "17c9267d-5a97-456e-92d6-4fa2677f891b",
													"key": "key",
													"value": "ut ad",
													"description": "(Required) Prescription identifier"
												}
											]
										},
										"description": "Prescriptions are immutable except for metadata, and cannot actually be deleted. This endpoint makes a prescription unavailable for use. If called by the VOR, it sets staus to RECALLED. If called by the MOR to whom it is prescribed, it sets status to DECLINED. New cases  cannot be enrolled if either RECALLED or DECLIENED."
									},
									"response": [
										{
											"id": "f1fe9ff2-02f6-4d7a-b9be-e9a0a0b71e2a",
											"name": "prescription updated",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "X-Auth-Token",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/prescriptions/:id/",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"prescriptions",
														":id",
														""
													],
													"variable": [
														{
															"key": "key",
															"value": "ut ad",
															"description": "(Required) Prescription identifier"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n  \"updated\": 8369446\n}"
										},
										{
											"id": "a2f0e87d-bc39-4709-9fd8-743ac1b9a78a",
											"name": "Authorization required",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "X-Auth-Token",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/prescriptions/:id/",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"prescriptions",
														":id",
														""
													],
													"variable": [
														{
															"key": "key",
															"value": "ut ad",
															"description": "(Required) Prescription identifier"
														}
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": ""
										}
									]
								}
							],
							"id": "5e3b14bb-5ff3-42e2-aa55-b01c55066c07"
						},
						{
							"name": "list  of cases for a rx",
							"id": "b40b05b7-d880-4697-8306-e8f33abd8e38",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/prescriptions/:rxId/cases",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"prescriptions",
										":rxId",
										"cases"
									],
									"variable": [
										{
											"id": "cda6d17d-bb61-423c-bb7e-7b5777fc0ac6",
											"key": "rxId",
											"value": "Vi1y9kbpEj7Upqy7",
											"description": "(Required) prescription uuid"
										}
									]
								},
								"description": "Get all current cases for this prescription and this user"
							},
							"response": [
								{
									"id": "95c9213e-ace9-4782-ac65-1c3442110c18",
									"name": "Success â€“ token refreshed",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "X-Auth-Token",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/prescriptions/:rxId/cases",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"prescriptions",
												":rxId",
												"cases"
											],
											"variable": [
												{
													"key": "rxId",
													"value": "Vi1y9kbpEj7Upqy7",
													"description": "(Required) prescription uuid"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"cases\": [\n    {\n      \"id\": 123,\n      \"rxId\": \"gG3pBCR1GCMKm89c\",\n      \"caseData\": {\n        \"id\": 0,\n        \"rxId\": \"gG3pBCR1GCMKm89c\",\n        \"caseData\": {\n          \"_type\": \"models.IdData\",\n          \"animalId\": \"Bossie\",\n          \"initiationTime\": \"2020-01-10T10:30:37Z\"\n        }\n      },\n      \"promiseData\": [\n        {\n          \"_type\": \"models.IdPromise\",\n          \"name\": \"ID promise\",\n          \"descrip\": \"You must give ID for each case enrolled\",\n          \"query\": \"What is the animal's name or number?\",\n          \"when\": \"PT24H\",\n          \"id\": 2345\n        },\n        {\n          \"_type\": \"models.IdPromise\",\n          \"name\": \"ID promise\",\n          \"descrip\": \"You must give ID for each case enrolled\",\n          \"query\": \"What is the animal's name or number?\",\n          \"when\": \"PT24H\",\n          \"id\": 2345\n        }\n      ]\n    },\n    {\n      \"id\": 123,\n      \"rxId\": \"gG3pBCR1GCMKm89c\",\n      \"caseData\": {\n        \"id\": 0,\n        \"rxId\": \"gG3pBCR1GCMKm89c\",\n        \"caseData\": {\n          \"_type\": \"models.IdData\",\n          \"animalId\": \"Bossie\",\n          \"initiationTime\": \"2020-01-10T10:30:37Z\"\n        }\n      },\n      \"promiseData\": [\n        {\n          \"_type\": \"models.IdPromise\",\n          \"name\": \"ID promise\",\n          \"descrip\": \"You must give ID for each case enrolled\",\n          \"query\": \"What is the animal's name or number?\",\n          \"when\": \"PT24H\",\n          \"id\": 2345\n        },\n        {\n          \"_type\": \"models.IdPromise\",\n          \"name\": \"ID promise\",\n          \"descrip\": \"You must give ID for each case enrolled\",\n          \"query\": \"What is the animal's name or number?\",\n          \"when\": \"PT24H\",\n          \"id\": 2345\n        }\n      ]\n    }\n  ]\n}"
								},
								{
									"id": "21b1ae57-848d-45c1-ae31-77927c92c622",
									"name": "Authorization required",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "X-Auth-Token",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/prescriptions/:rxId/cases",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"prescriptions",
												":rxId",
												"cases"
											],
											"variable": [
												{
													"key": "rxId",
													"value": "Vi1y9kbpEj7Upqy7",
													"description": "(Required) prescription uuid"
												}
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": ""
								}
							]
						}
					],
					"id": "93d36bbb-0f4f-45f7-b48d-a31ace23eb5e"
				},
				{
					"name": "cases",
					"item": [
						{
							"name": "enroll case",
							"id": "83257bf4-7b19-41ba-8e8d-ca640f516245",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"id\": 123,\n  \"rxId\": \"gG3pBCR1GCMKm89c\",\n  \"caseData\": {\n    \"id\": 0,\n    \"rxId\": \"gG3pBCR1GCMKm89c\",\n    \"caseData\": {\n      \"_type\": \"models.IdData\",\n      \"animalId\": \"Bossie\",\n      \"initiationTime\": \"2020-01-10T10:30:37Z\"\n    }\n  },\n  \"promiseData\": [\n    {\n      \"_type\": \"models.IdPromise\",\n      \"name\": \"ID promise\",\n      \"descrip\": \"You must give ID for each case enrolled\",\n      \"query\": \"What is the animal's name or number?\",\n      \"when\": \"PT24H\",\n      \"id\": 2345\n    },\n    {\n      \"_type\": \"models.IdPromise\",\n      \"name\": \"ID promise\",\n      \"descrip\": \"You must give ID for each case enrolled\",\n      \"query\": \"What is the animal's name or number?\",\n      \"when\": \"PT24H\",\n      \"id\": 2345\n    }\n  ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/cases",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"cases"
									]
								},
								"description": "Creates a Case linked to a prescription."
							},
							"response": [
								{
									"id": "db8dd5a5-da31-4d4a-957e-c67be133a3d3",
									"name": "Success â€“ recorded Protocol",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "X-Auth-Token",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"id\": 123,\n  \"rxId\": \"gG3pBCR1GCMKm89c\",\n  \"caseData\": {\n    \"id\": 0,\n    \"rxId\": \"gG3pBCR1GCMKm89c\",\n    \"caseData\": {\n      \"_type\": \"models.IdData\",\n      \"animalId\": \"Bossie\",\n      \"initiationTime\": \"2020-01-10T10:30:37Z\"\n    }\n  },\n  \"promiseData\": [\n    {\n      \"_type\": \"models.IdPromise\",\n      \"name\": \"ID promise\",\n      \"descrip\": \"You must give ID for each case enrolled\",\n      \"query\": \"What is the animal's name or number?\",\n      \"when\": \"PT24H\",\n      \"id\": 2345\n    },\n    {\n      \"_type\": \"models.IdPromise\",\n      \"name\": \"ID promise\",\n      \"descrip\": \"You must give ID for each case enrolled\",\n      \"query\": \"What is the animal's name or number?\",\n      \"when\": \"PT24H\",\n      \"id\": 2345\n    }\n  ]\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/cases",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"cases"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"case\": {\n    \"id\": 123,\n    \"rxId\": \"gG3pBCR1GCMKm89c\",\n    \"caseData\": {\n      \"id\": 0,\n      \"rxId\": \"gG3pBCR1GCMKm89c\",\n      \"caseData\": {\n        \"_type\": \"models.IdData\",\n        \"animalId\": \"Bossie\",\n        \"initiationTime\": \"2020-01-10T10:30:37Z\"\n      }\n    },\n    \"promiseData\": [\n      {\n        \"_type\": \"models.IdPromise\",\n        \"name\": \"ID promise\",\n        \"descrip\": \"You must give ID for each case enrolled\",\n        \"query\": \"What is the animal's name or number?\",\n        \"when\": \"PT24H\",\n        \"id\": 2345\n      },\n      {\n        \"_type\": \"models.IdPromise\",\n        \"name\": \"ID promise\",\n        \"descrip\": \"You must give ID for each case enrolled\",\n        \"query\": \"What is the animal's name or number?\",\n        \"when\": \"PT24H\",\n        \"id\": 2345\n      }\n    ]\n  }\n}"
								},
								{
									"id": "c5f1cd07-3748-466e-8619-007373e6ec27",
									"name": "The server can not understand the request due to invalid syntax.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "X-Auth-Token",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"id\": 123,\n  \"rxId\": \"gG3pBCR1GCMKm89c\",\n  \"caseData\": {\n    \"id\": 0,\n    \"rxId\": \"gG3pBCR1GCMKm89c\",\n    \"caseData\": {\n      \"_type\": \"models.IdData\",\n      \"animalId\": \"Bossie\",\n      \"initiationTime\": \"2020-01-10T10:30:37Z\"\n    }\n  },\n  \"promiseData\": [\n    {\n      \"_type\": \"models.IdPromise\",\n      \"name\": \"ID promise\",\n      \"descrip\": \"You must give ID for each case enrolled\",\n      \"query\": \"What is the animal's name or number?\",\n      \"when\": \"PT24H\",\n      \"id\": 2345\n    },\n    {\n      \"_type\": \"models.IdPromise\",\n      \"name\": \"ID promise\",\n      \"descrip\": \"You must give ID for each case enrolled\",\n      \"query\": \"What is the animal's name or number?\",\n      \"when\": \"PT24H\",\n      \"id\": 2345\n    }\n  ]\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/cases",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"cases"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"title\": \"incorrect username or password\",\n  \"status\": 404,\n  \"errorType\": \"/errors/incorrect-user-pass\",\n  \"detail\": \"Authentication failed due to incorrect username or password.\",\n  \"instance\": \"/login/log/abc123\"\n}"
								}
							]
						},
						{
							"name": "list of cases",
							"id": "f0025796-0359-44de-b211-a9cb0df0ff69",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/cases",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"cases"
									]
								},
								"description": "Get all current cases for this user"
							},
							"response": [
								{
									"id": "6712462a-db2a-4e34-986a-2a0fc6dfe990",
									"name": "Success â€“ token refreshed",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "X-Auth-Token",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/cases",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"cases"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"cases\": [\n    {\n      \"id\": 123,\n      \"rxId\": \"gG3pBCR1GCMKm89c\",\n      \"caseData\": {\n        \"id\": 0,\n        \"rxId\": \"gG3pBCR1GCMKm89c\",\n        \"caseData\": {\n          \"_type\": \"models.IdData\",\n          \"animalId\": \"Bossie\",\n          \"initiationTime\": \"2020-01-10T10:30:37Z\"\n        }\n      },\n      \"promiseData\": [\n        {\n          \"_type\": \"models.IdPromise\",\n          \"name\": \"ID promise\",\n          \"descrip\": \"You must give ID for each case enrolled\",\n          \"query\": \"What is the animal's name or number?\",\n          \"when\": \"PT24H\",\n          \"id\": 2345\n        },\n        {\n          \"_type\": \"models.IdPromise\",\n          \"name\": \"ID promise\",\n          \"descrip\": \"You must give ID for each case enrolled\",\n          \"query\": \"What is the animal's name or number?\",\n          \"when\": \"PT24H\",\n          \"id\": 2345\n        }\n      ]\n    },\n    {\n      \"id\": 123,\n      \"rxId\": \"gG3pBCR1GCMKm89c\",\n      \"caseData\": {\n        \"id\": 0,\n        \"rxId\": \"gG3pBCR1GCMKm89c\",\n        \"caseData\": {\n          \"_type\": \"models.IdData\",\n          \"animalId\": \"Bossie\",\n          \"initiationTime\": \"2020-01-10T10:30:37Z\"\n        }\n      },\n      \"promiseData\": [\n        {\n          \"_type\": \"models.IdPromise\",\n          \"name\": \"ID promise\",\n          \"descrip\": \"You must give ID for each case enrolled\",\n          \"query\": \"What is the animal's name or number?\",\n          \"when\": \"PT24H\",\n          \"id\": 2345\n        },\n        {\n          \"_type\": \"models.IdPromise\",\n          \"name\": \"ID promise\",\n          \"descrip\": \"You must give ID for each case enrolled\",\n          \"query\": \"What is the animal's name or number?\",\n          \"when\": \"PT24H\",\n          \"id\": 2345\n        }\n      ]\n    }\n  ]\n}"
								},
								{
									"id": "bba5aebb-c0d4-463a-bda0-bf7eaf958dd1",
									"name": "Authorization required",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "X-Auth-Token",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/cases",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"cases"
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": ""
								}
							]
						}
					],
					"id": "f4429391-523e-4fff-a0a3-3b28d8f438c7"
				},
				{
					"name": "admin",
					"item": [
						{
							"name": "product",
							"item": [
								{
									"name": "get Greenbook Drug summary by NDC pattern",
									"id": "f41a3dcb-b21b-4a10-bd43-f54add5e3529",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/admin/product?ndcProd=29077371&ndcLabeler=29077371&ndcBrand=29077371",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"admin",
												"product"
											],
											"query": [
												{
													"key": "ndcProd",
													"value": "29077371",
													"description": "first section labeler code of a NDC"
												},
												{
													"key": "ndcLabeler",
													"value": "29077371",
													"description": "mid section product code of a NDC"
												},
												{
													"key": "ndcBrand",
													"value": "29077371",
													"description": "end section package code of a NDC"
												}
											]
										},
										"description": "This endpoint returns the summary listing of a Greenbook Drug by NDC pattern."
									},
									"response": [
										{
											"id": "904c3d3d-17fe-4a3f-96ca-3c0c0f88ec29",
											"name": "OK",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "X-Auth-Token",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/admin/product?ndcProd=29077371&ndcLabeler=29077371&ndcBrand=29077371",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"admin",
														"product"
													],
													"query": [
														{
															"key": "ndcProd",
															"value": "29077371"
														},
														{
															"key": "ndcLabeler",
															"value": "29077371"
														},
														{
															"key": "ndcBrand",
															"value": "29077371"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "[\n  {\n    \"id\": 27298057,\n    \"nada\": \"mollit Ut cupidatat\",\n    \"name\": \"dolore et Excepteur\",\n    \"companyId\": 32979682,\n    \"imageURL\": \"id nostrud\",\n    \"insertURL\": \"Duis fugiat eiusmod non sit\"\n  },\n  {\n    \"id\": 39787613,\n    \"nada\": \"ad deserunt cillum\",\n    \"name\": \"mollit\",\n    \"companyId\": -6176561,\n    \"imageURL\": \"ut \",\n    \"insertURL\": \"velit occaecat adipisicing in\"\n  }\n]"
										}
									]
								},
								{
									"name": "get summary listing of a Greenbook Drug",
									"id": "fa53c4b1-bef4-4e09-8cc9-da4aa56fc80f",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/admin/product/:ndc",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"admin",
												"product",
												":ndc"
											],
											"variable": [
												{
													"id": "3f0af058-7da4-4d58-a028-6fa76e254898",
													"key": "ndc",
													"value": "0061-4321-03",
													"description": "(Required) unique 10-digit, 3-segment number. labelerCode-productCode-packageCode"
												}
											]
										},
										"description": "This endpoint returns the summary listing of a Greenbook Drug by ndc identifier."
									},
									"response": [
										{
											"id": "4a9c2342-71c9-4b4e-a72b-6c7550fc9383",
											"name": "OK",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "X-Auth-Token",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/admin/product/:ndc",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"admin",
														"product",
														":ndc"
													],
													"variable": [
														{
															"key": "ndc",
															"value": "0061-4321-03",
															"description": "(Required) unique 10-digit, 3-segment number. labelerCode-productCode-packageCode"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n  \"id\": -73736456,\n  \"nada\": \"occaecat dolore\",\n  \"name\": \"ut dolore\",\n  \"companyId\": -30074770,\n  \"imageURL\": \"sint quis exercitation\",\n  \"insertURL\": \"non deserunt in commodo\"\n}"
										}
									]
								}
							],
							"id": "3cc5432a-add3-4620-9797-fae1b3e364b6"
						},
						{
							"name": "gbd",
							"item": [
								{
									"name": "greenbook drugs",
									"id": "939d0c95-660c-4b99-b0e2-ddbf73dcea73",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/admin/gbd?ndcProd=29077371&ndcLabeler=29077371&ndcBrand=29077371&offset=29077371&eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJleUp3Y205MmFXUmxja2xFSWpvaVkzSmxaR1Z1ZEdsaGJITWlMQ0p3Y205MmFXUmxja3RsZVNJNkluUmxjM1JXVDFJaWZRPT0iLCJpc3MiOiJwbGF5LXNpbGhvdWV0dGUiLCJle***...=29077371",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"admin",
												"gbd"
											],
											"query": [
												{
													"key": "ndcProd",
													"value": "29077371",
													"description": "first section labeler code of a NDC"
												},
												{
													"key": "ndcLabeler",
													"value": "29077371",
													"description": "mid section product code of a NDC"
												},
												{
													"key": "ndcBrand",
													"value": "29077371",
													"description": "starting row number in GBD table"
												},
												{
													"key": "offset",
													"value": "29077371",
													"description": "maximum number of rows to return"
												},
												{
													"key": "eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJleUp3Y205MmFXUmxja2xFSWpvaVkzSmxaR1Z1ZEdsaGJITWlMQ0p3Y205MmFXUmxja3RsZVNJNkluUmxjM1JXVDFJaWZRPT0iLCJpc3MiOiJwbGF5LXNpbGhvdWV0dGUiLCJle***...",
													"value": "29077371",
													"description": "end section package code of a NDC"
												}
											]
										},
										"description": "Return GBDs."
									},
									"response": [
										{
											"id": "48142618-e29e-4598-9f6e-0640210945bb",
											"name": "OK",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "X-Auth-Token",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/admin/gbd?ndcProd=29077371&ndcLabeler=29077371&ndcBrand=29077371&offset=29077371&eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJleUp3Y205MmFXUmxja2xFSWpvaVkzSmxaR1Z1ZEdsaGJITWlMQ0p3Y205MmFXUmxja3RsZVNJNkluUmxjM1JXVDFJaWZRPT0iLCJpc3MiOiJwbGF5LXNpbGhvdWV0dGUiLCJle***...=29077371",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"admin",
														"gbd"
													],
													"query": [
														{
															"key": "ndcProd",
															"value": "29077371"
														},
														{
															"key": "ndcLabeler",
															"value": "29077371"
														},
														{
															"key": "ndcBrand",
															"value": "29077371"
														},
														{
															"key": "offset",
															"value": "29077371"
														},
														{
															"key": "eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJleUp3Y205MmFXUmxja2xFSWpvaVkzSmxaR1Z1ZEdsaGJITWlMQ0p3Y205MmFXUmxja3RsZVNJNkluUmxjM1JXVDFJaWZRPT0iLCJpc3MiOiJwbGF5LXNpbGhvdWV0dGUiLCJle***...",
															"value": "29077371"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "[\n  {\n    \"ndc\": \"0010-3495\",\n    \"proprietery\": \"Bio-Mycin 200\",\n    \"nonProp\": \"OXYTETRACYCLINE\",\n    \"ingredients\": \"OXYTETRACYCLINE\",\n    \"labeler\": \"Boehringer Ingelheim Vetmedica, Inc.\",\n    \"productType\": \"OTC ANIMAL DRUG\",\n    \"marketCat\": \"ANADA\",\n    \"appNumber\": \"ANADA200008\",\n    \"link\": \"https://www.accessdata.fda.gov/spl/data/c9491ada-6813-4548-8872-57bb38a58feb/c9491ada-6813-4548-8872-57bb38a58feb.xml\",\n    \"status\": 0,\n    \"lastChanged\": \"2020-05-16T16:19:12Z\"\n  },\n  {\n    \"ndc\": \"0010-3495\",\n    \"proprietery\": \"Bio-Mycin 200\",\n    \"nonProp\": \"OXYTETRACYCLINE\",\n    \"ingredients\": \"OXYTETRACYCLINE\",\n    \"labeler\": \"Boehringer Ingelheim Vetmedica, Inc.\",\n    \"productType\": \"OTC ANIMAL DRUG\",\n    \"marketCat\": \"ANADA\",\n    \"appNumber\": \"ANADA200008\",\n    \"link\": \"https://www.accessdata.fda.gov/spl/data/c9491ada-6813-4548-8872-57bb38a58feb/c9491ada-6813-4548-8872-57bb38a58feb.xml\",\n    \"status\": 0,\n    \"lastChanged\": \"2020-05-16T16:19:12Z\"\n  }\n]"
										}
									]
								},
								{
									"name": "update GBD",
									"id": "6ea045be-6a7c-4458-b2fa-8837d74068aa",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"ndc\": \"0010-3495\",\n  \"proprietery\": \"Bio-Mycin 200\",\n  \"nonProp\": \"OXYTETRACYCLINE\",\n  \"ingredients\": \"OXYTETRACYCLINE\",\n  \"labeler\": \"Boehringer Ingelheim Vetmedica, Inc.\",\n  \"productType\": \"OTC ANIMAL DRUG\",\n  \"marketCat\": \"ANADA\",\n  \"appNumber\": \"ANADA200008\",\n  \"link\": \"https://www.accessdata.fda.gov/spl/data/c9491ada-6813-4548-8872-57bb38a58feb/c9491ada-6813-4548-8872-57bb38a58feb.xml\",\n  \"status\": 0,\n  \"lastChanged\": \"2020-05-16T16:19:12Z\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/admin/gbd",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"admin",
												"gbd"
											]
										},
										"description": "M"
									},
									"response": [
										{
											"id": "6dabd18f-be50-44e8-87d9-3fee66e683e5",
											"name": "Success, GreenbookDrug updated",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "X-Auth-Token",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"ndc\": \"0010-3495\",\n  \"proprietery\": \"Bio-Mycin 200\",\n  \"nonProp\": \"OXYTETRACYCLINE\",\n  \"ingredients\": \"OXYTETRACYCLINE\",\n  \"labeler\": \"Boehringer Ingelheim Vetmedica, Inc.\",\n  \"productType\": \"OTC ANIMAL DRUG\",\n  \"marketCat\": \"ANADA\",\n  \"appNumber\": \"ANADA200008\",\n  \"link\": \"https://www.accessdata.fda.gov/spl/data/c9491ada-6813-4548-8872-57bb38a58feb/c9491ada-6813-4548-8872-57bb38a58feb.xml\",\n  \"status\": 0,\n  \"lastChanged\": \"2020-05-16T16:19:12Z\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/api/admin/gbd",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"admin",
														"gbd"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n  \"case\": {\n    \"ndc\": \"0010-3495\",\n    \"proprietery\": \"Bio-Mycin 200\",\n    \"nonProp\": \"OXYTETRACYCLINE\",\n    \"ingredients\": \"OXYTETRACYCLINE\",\n    \"labeler\": \"Boehringer Ingelheim Vetmedica, Inc.\",\n    \"productType\": \"OTC ANIMAL DRUG\",\n    \"marketCat\": \"ANADA\",\n    \"appNumber\": \"ANADA200008\",\n    \"link\": \"https://www.accessdata.fda.gov/spl/data/c9491ada-6813-4548-8872-57bb38a58feb/c9491ada-6813-4548-8872-57bb38a58feb.xml\",\n    \"status\": 0,\n    \"lastChanged\": \"2020-05-16T16:19:12Z\"\n  }\n}"
										},
										{
											"id": "63551bda-d971-4bd9-9e6f-76d70a0226d3",
											"name": "The server can not understand the request due to invalid syntax.",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "X-Auth-Token",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"ndc\": \"0010-3495\",\n  \"proprietery\": \"Bio-Mycin 200\",\n  \"nonProp\": \"OXYTETRACYCLINE\",\n  \"ingredients\": \"OXYTETRACYCLINE\",\n  \"labeler\": \"Boehringer Ingelheim Vetmedica, Inc.\",\n  \"productType\": \"OTC ANIMAL DRUG\",\n  \"marketCat\": \"ANADA\",\n  \"appNumber\": \"ANADA200008\",\n  \"link\": \"https://www.accessdata.fda.gov/spl/data/c9491ada-6813-4548-8872-57bb38a58feb/c9491ada-6813-4548-8872-57bb38a58feb.xml\",\n  \"status\": 0,\n  \"lastChanged\": \"2020-05-16T16:19:12Z\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/api/admin/gbd",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"admin",
														"gbd"
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n  \"title\": \"incorrect username or password\",\n  \"status\": 404,\n  \"errorType\": \"/errors/incorrect-user-pass\",\n  \"detail\": \"Authentication failed due to incorrect username or password.\",\n  \"instance\": \"/login/log/abc123\"\n}"
										}
									]
								},
								{
									"name": "get Greenbook Drug",
									"id": "d42dc04b-42cf-43d0-aa1d-bf7d752fa934",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/admin/gbd/:ndc",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"admin",
												"gbd",
												":ndc"
											],
											"variable": [
												{
													"id": "05c69c62-988e-4a7d-9b92-65fc8710eb30",
													"key": "ndc",
													"value": "0061-4321-03",
													"description": "(Required) unique 10-digit, 3-segment number. labelerCode-productCode-packageCode"
												}
											]
										}
									},
									"response": [
										{
											"id": "e5e4f8c8-5498-4987-bda5-99b3d65a6c9c",
											"name": "Authorization required",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "X-Auth-Token",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/admin/gbd/:ndc",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"admin",
														"gbd",
														":ndc"
													],
													"variable": [
														{
															"key": "ndc",
															"value": "0061-4321-03",
															"description": "(Required) unique 10-digit, 3-segment number. labelerCode-productCode-packageCode"
														}
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": ""
										}
									]
								}
							],
							"id": "b88db241-196f-414e-8250-475c885c0e99"
						},
						{
							"name": "get SPL",
							"id": "6ef4f664-8767-4a70-ae47-cf85b54dbb85",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/admin/spl{{ndc}}",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"admin",
										"spl{{ndc}}"
									]
								}
							},
							"response": [
								{
									"id": "6811f02b-321d-4a71-97cf-eeac3cbf48a4",
									"name": "Authorization required",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "X-Auth-Token",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/admin/spl{{ndc}}",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"admin",
												"spl{{ndc}}"
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": ""
								}
							]
						},
						{
							"name": "confirm VOR",
							"id": "3d87bfcf-c029-4d6e-8481-ccbeceb12475",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/admin/ConfirmVOR?sendEmail=true",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"admin",
										"ConfirmVOR"
									],
									"query": [
										{
											"key": "sendEmail",
											"value": "true"
										}
									]
								}
							},
							"response": [
								{
									"id": "d17e3a50-cf04-4216-ae92-3740ddfe646b",
									"name": "User",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "X-Auth-Token",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/admin/ConfirmVOR?sendEmail=true",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"admin",
												"ConfirmVOR"
											],
											"query": [
												{
													"key": "sendEmail",
													"value": "true"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"vor\": {\n    \"id\": 1,\n    \"uname\": \"exampleUser\",\n    \"userType\": \"VOR\",\n    \"firstname\": \"Example\",\n    \"lastname\": \"User\",\n    \"email\": \"exampleUser@email.com\",\n    \"suffix\": \"DVM\"\n  }\n}"
								},
								{
									"id": "cbb704d6-6723-42ee-a886-b9877baf3b78",
									"name": "Authorization required",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "X-Auth-Token",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/admin/ConfirmVOR?sendEmail=true",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"admin",
												"ConfirmVOR"
											],
											"query": [
												{
													"key": "sendEmail",
													"value": "true"
												}
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": ""
								}
							]
						}
					],
					"id": "94c02b0b-67ed-4c25-863a-97820c983c0a"
				},
				{
					"name": "list of all",
					"id": "1a5ee7fa-ff80-421f-9c86-094f17924367",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/visits/:id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"visits",
								":id"
							],
							"variable": [
								{
									"id": "56fbb418-d066-461b-b3cf-b53dc315ecd3",
									"key": "id",
									"value": "2",
									"description": "(Required) User ID key"
								}
							]
						},
						"description": "list of ."
					},
					"response": [
						{
							"id": "8241ce48-4afa-49c3-b17e-c89e23d8c56a",
							"name": "OK",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "X-Auth-Token",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/visits/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"visits",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "2",
											"description": "(Required) User ID key"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"responseTime": null,
							"body": "{\n  \"visits\": [\n    {\n      \"message\": \"some message\",\n      \"userId\": 1,\n      \"when\": \"2020-01-10T10:30:37Z\"\n    },\n    {\n      \"message\": \"some message\",\n      \"userId\": 1,\n      \"when\": \"2020-01-10T10:30:37Z\"\n    }\n  ]\n}"
						}
					]
				},
				{
					"name": "list of all diagnoses",
					"id": "a83ba8d8-3103-45d8-8d49-abda3094fee9",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/helpkeys",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"helpkeys"
							]
						},
						"description": "Returns an array of keys used to identify help messages."
					},
					"response": [
						{
							"id": "4021cbb1-7c0c-490c-a0bf-68351d150f15",
							"name": "OK",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "X-Auth-Token",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/helpkeys",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"helpkeys"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"responseTime": null,
							"body": "{\n  \"keys\": [\n    \"sed deserunt ut est\",\n    \"Duis fugiat\"\n  ]\n}"
						},
						{
							"id": "74cc05e2-eb8e-4d71-9107-97103e084985",
							"name": "The server can not understand the request due to invalid syntax.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "X-Auth-Token",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/helpkeys",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"helpkeys"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"responseTime": null,
							"body": "{\n  \"title\": \"incorrect username or password\",\n  \"status\": 404,\n  \"errorType\": \"/errors/incorrect-user-pass\",\n  \"detail\": \"Authentication failed due to incorrect username or password.\",\n  \"instance\": \"/login/log/abc123\"\n}"
						},
						{
							"id": "52383bfe-cb19-4883-a7da-76429da21613",
							"name": "Authorization required",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "X-Auth-Token",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/helpkeys",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"helpkeys"
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"responseTime": null,
							"body": ""
						}
					]
				}
			],
			"id": "709d28e0-3fd7-4ae8-9ca1-a78702c91579"
		},
		{
			"name": "load Editor",
			"id": "1b969538-e75f-4384-82a3-8f4a3f4e5ae5",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Accept",
						"value": "text/html"
					}
				],
				"url": {
					"raw": "{{baseUrl}}/editor",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"editor"
					]
				},
				"description": "load Protocol Editor"
			},
			"response": [
				{
					"id": "0ce2c57c-3679-40cf-b354-501e64e20a5d",
					"name": "load Protocol Editor",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"description": "Added as a part of security scheme: apikey",
								"key": "X-Auth-Token",
								"value": "<API Key>"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/editor",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"editor"
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "text",
					"header": [
						{
							"key": "Content-Type",
							"value": "text/html"
						}
					],
					"cookie": [],
					"responseTime": null,
					"body": ""
				},
				{
					"id": "6b2ed621-7f93-4356-9ea5-70cab6bf1aaa",
					"name": "Authorization required",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"description": "Added as a part of security scheme: apikey",
								"key": "X-Auth-Token",
								"value": "<API Key>"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/editor",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"editor"
							]
						}
					},
					"status": "Unauthorized",
					"code": 401,
					"_postman_previewlanguage": "text",
					"header": [
						{
							"key": "Content-Type",
							"value": "text/plain"
						}
					],
					"cookie": [],
					"responseTime": null,
					"body": ""
				}
			]
		},
		{
			"name": "load Farm App",
			"id": "d6da3985-2f88-4eba-ad63-9223d1f23e22",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Accept",
						"value": "text/html"
					}
				],
				"url": {
					"raw": "{{baseUrl}}/farm",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"farm"
					]
				},
				"description": "load Farm App"
			},
			"response": [
				{
					"id": "cdb0dedb-6c25-413c-82f2-82d9c5ae5277",
					"name": "load Farm App",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"description": "Added as a part of security scheme: apikey",
								"key": "X-Auth-Token",
								"value": "<API Key>"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/farm",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"farm"
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "text",
					"header": [
						{
							"key": "Content-Type",
							"value": "text/html"
						}
					],
					"cookie": [],
					"responseTime": null,
					"body": ""
				},
				{
					"id": "b4e907a5-74ce-4412-ab33-0f1b02afbf3c",
					"name": "Authorization required",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"description": "Added as a part of security scheme: apikey",
								"key": "X-Auth-Token",
								"value": "<API Key>"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/farm",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"farm"
							]
						}
					},
					"status": "Unauthorized",
					"code": 401,
					"_postman_previewlanguage": "text",
					"header": [
						{
							"key": "Content-Type",
							"value": "text/plain"
						}
					],
					"cookie": [],
					"responseTime": null,
					"body": ""
				}
			]
		},
		{
			"name": "load Admin App",
			"id": "51467259-0104-4f14-bcfd-ffe011abeb87",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Accept",
						"value": "text/html"
					}
				],
				"url": {
					"raw": "{{baseUrl}}/admin",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"admin"
					]
				},
				"description": "load Admin app"
			},
			"response": [
				{
					"id": "bb2ebf89-0a7e-4f8b-b024-ed59f67fbf9f",
					"name": "load SPA",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"description": "Added as a part of security scheme: apikey",
								"key": "X-Auth-Token",
								"value": "<API Key>"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/admin",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"admin"
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "text",
					"header": [
						{
							"key": "Content-Type",
							"value": "text/html"
						}
					],
					"cookie": [],
					"responseTime": null,
					"body": ""
				},
				{
					"id": "c2fbe5df-3cf6-4fbe-beef-b4c489ef301b",
					"name": "Authorization required",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"description": "Added as a part of security scheme: apikey",
								"key": "X-Auth-Token",
								"value": "<API Key>"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/admin",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"admin"
							]
						}
					},
					"status": "Unauthorized",
					"code": 401,
					"_postman_previewlanguage": "text",
					"header": [
						{
							"key": "Content-Type",
							"value": "text/plain"
						}
					],
					"cookie": [],
					"responseTime": null,
					"body": ""
				}
			]
		}
	],
	"auth": {
		"type": "apikey",
		"apikey": [
			{
				"key": "key",
				"value": "X-Auth-Token",
				"type": "string"
			},
			{
				"key": "value",
				"value": "<API Key>",
				"type": "string"
			},
			{
				"key": "in",
				"value": "header",
				"type": "string"
			}
		]
	},
	"variable": [
		{
			"id": "d7e1bcb9-c382-4d12-b31b-eb29314aad06",
			"key": "baseUrl",
			"value": "https://VCPR.ORG",
			"type": "string"
		},
		{
			"id": "be1c6c66-7808-4a0d-acb0-a713144c14f7",
			"key": "id",
			"value": "29077371",
			"type": "any",
			"description": "(Required) "
		},
		{
			"id": "753c8a14-e984-48b9-80c3-62af8ffbff89",
			"key": "ndc",
			"value": "ut ad",
			"type": "any",
			"description": "(Required) unique 10-digit, 3-segment number. labelerCode-productCode-packageCode"
		}
	]
}
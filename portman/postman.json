{
  "_": {
    "postman_id": "cda3adc5-8ab5-4270-8caf-c2c18c63eb4b"
  },
  "item": [
    {
      "id": "2b47b5ed-24ce-4c4e-934c-80dd1a43abef",
      "name": "VOR",
      "description": {
        "content": "available to veterinarians.",
        "type": "text/plain"
      },
      "item": [
        {
          "id": "dac5ebc4-8e1d-43cc-913b-e0fdfd03c4de",
          "name": "load Editor",
          "request": {
            "name": "load Editor",
            "description": {
              "content": "load Protocol Editor",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "editor"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Accept",
                "value": "text/html"
              }
            ],
            "method": "GET"
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "b1ee3769-31a0-4035-b9b6-803c25b7fa60",
                "type": "text/javascript",
                "exec": [
                  "./portman/pm-login.json"
                ]
              }
            }
          ]
        },
        {
          "id": "ba290955-ad48-44ef-a146-f74c4b3a1399",
          "name": "load Farm App",
          "request": {
            "name": "load Farm App",
            "description": {
              "content": "load Farm App",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "farm"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Accept",
                "value": "text/html"
              }
            ],
            "method": "GET"
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "4ca92220-091f-4ea0-b0cc-1b8f2a444e5e",
                "type": "text/javascript",
                "exec": [
                  "./portman/pm-login.json"
                ]
              }
            }
          ]
        },
        {
          "id": "0cce057a-b5f0-40fb-b986-8ec228c5a6cf",
          "name": "list of Users IDs",
          "request": {
            "name": "list of Users IDs",
            "description": {
              "content": "Returns the ID and names of all active Users of the type(s) specified.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "api",
                "users"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": false,
                  "description": {
                    "content": "User types to include",
                    "type": "text/plain"
                  },
                  "key": "usertypes",
                  "value": "VOR"
                }
              ],
              "variable": []
            },
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "GET"
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "ec90e139-1f6d-48ae-b9b3-394909236007",
                "type": "text/javascript",
                "exec": [
                  "./portman/pm-login.json"
                ]
              }
            }
          ]
        },
        {
          "id": "c0d4450a-350a-4e2f-a0b2-ac5f64828014",
          "name": "list of VORs",
          "request": {
            "name": "list of VORs",
            "description": {
              "content": "list of VOR users.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "api",
                "users",
                "vors"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "GET"
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "32cd7789-cd8c-4a88-9a84-d87051359b88",
                "type": "text/javascript",
                "exec": [
                  "./portman/pm-login.json"
                ]
              }
            }
          ]
        },
        {
          "id": "f785d751-ce64-443d-9514-49bc9738fd44",
          "name": "delete user",
          "request": {
            "name": "delete user",
            "description": {
              "content": "This endpoint supports the (reversible) \"delete\" of a User by setting user.status to `REMOVED`. Removed Users are not visible in normal queries.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "api",
                "users",
                ":id"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": [
                {
                  "disabled": false,
                  "description": {
                    "content": "(Required) User ID key",
                    "type": "text/plain"
                  },
                  "type": "any",
                  "value": "5",
                  "key": "id"
                }
              ]
            },
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "DELETE"
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "02746e6f-1aed-439e-b62d-bb28b93667d3",
                "type": "text/javascript",
                "exec": [
                  "./portman/pm-login.json"
                ]
              }
            }
          ]
        },
        {
          "id": "9bc6571e-ee8b-4643-8d01-45bbb33b09fd",
          "name": "create a sandbox user",
          "request": {
            "name": "create a sandbox user",
            "description": {
              "content": "Create a sandbox user of MOR `UserType` who is a `CLIENT` of logged-in VOR. This allows the VOR to prescribe to the sandbox client, then view prescriptions from the client's point of view using the Farm App.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "api",
                "users",
                "sandboxClient"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "\"quis occaecat laboris ipsum\"",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "4cad7a32-d952-470c-b0c5-daebd9866b51",
                "type": "text/javascript",
                "exec": [
                  "./portman/pm-login.json"
                ]
              }
            }
          ],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        {
          "id": "ae767627-470e-4fd3-a3ec-20aedcb52934",
          "name": "delete sandboxClient",
          "request": {
            "name": "delete sandboxClient",
            "description": {
              "content": "Delete the User and CLIENT Relation records from the database,  irreversibly removing the sandbocx client, but not any existing Prescriptions.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "api",
                "users",
                "sandboxClient"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "DELETE"
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "224c314e-8a0f-4640-9832-f99d10128e33",
                "type": "text/javascript",
                "exec": [
                  "./portman/pm-login.json"
                ]
              }
            }
          ]
        },
        {
          "id": "c1dc73a2-26a5-451e-b91b-eed36c18a004",
          "name": "add a relationship",
          "request": {
            "name": "add a relationship",
            "description": {
              "content": "adds a relationship of the type specified by `name` to the current User, who must be a VOR. Defaults to CLIENT relationship.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "api",
                "users",
                "relations"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "\"CLIENT\"",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "fb48b396-5ad6-46ec-837e-41725982b5f3",
                "type": "text/javascript",
                "exec": [
                  "./portman/pm-login.json"
                ]
              }
            }
          ],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        {
          "id": "b5e6eb89-a0ac-4539-97cd-21bdb1dc4d03",
          "name": "get my right-related users",
          "request": {
            "name": "get my right-related users",
            "description": {
              "content": "get my right-related users",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "api",
                "users",
                "my-right-relations"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": false,
                  "key": "relationship",
                  "value": "CLIENT"
                },
                {
                  "disabled": false,
                  "description": {
                    "content": "whether to return user's addresses too",
                    "type": "text/plain"
                  },
                  "key": "withAddress",
                  "value": "false"
                }
              ],
              "variable": []
            },
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "GET"
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "bfe6bb42-0a5a-4e03-b833-d0b6fa44b03b",
                "type": "text/javascript",
                "exec": [
                  "./portman/pm-login.json"
                ]
              }
            }
          ]
        },
        {
          "id": "cea057b7-7a0a-4153-9542-1cb73af505fa",
          "name": "add a User with relationship",
          "request": {
            "name": "add a User with relationship",
            "description": {
              "content": "This endpoint adds a User and a relationship of the type specified by `name` to the current User, who must be a VOR. Defaults to CLIENT relationship.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "api",
                "users",
                "my-right-relations"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": false,
                  "description": {
                    "content": "(Required) ",
                    "type": "text/plain"
                  },
                  "key": "relationship",
                  "value": "CLIENT"
                },
                {
                  "disabled": false,
                  "description": {
                    "content": "(Required) ",
                    "type": "text/plain"
                  },
                  "key": "usertype",
                  "value": "VOR"
                }
              ],
              "variable": []
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n  \"uname\": \"exampleUser\",\n  \"userType\": \"VOR\",\n  \"firstname\": \"Example\",\n  \"lastname\": \"User\",\n  \"id\": 99,\n  \"email\": \"exampleUser@email.com\",\n  \"suffix\": \"DVM\"\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "b97cffb5-8ece-4d1b-8d97-939cc4b11915",
                "type": "text/javascript",
                "exec": [
                  "./portman/pm-login.json"
                ]
              }
            }
          ],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        {
          "id": "e4a25266-be1e-43b8-bced-78ac8693cf23",
          "name": "get my prescriptions",
          "request": {
            "name": "get my prescriptions",
            "description": {
              "content": "get prescriptions prescribed by the current User.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "api",
                "protocols",
                "prescriptions",
                "by"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "GET"
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "6c461af6-ccab-4d93-8cf4-2af1592d15b6",
                "type": "text/javascript",
                "exec": [
                  "./portman/pm-login.json",
                  "// Validate status 2xx \npm.test(\"[GET]::/api/protocols/prescriptions/by - Status code is 2xx\", function () {\n   pm.response.to.be.success;\n});\n"
                ]
              }
            }
          ]
        },
        {
          "id": "550be059-cc35-4abe-a3e8-efba1218a6d1",
          "name": "get my prescriptions",
          "request": {
            "name": "get my prescriptions",
            "description": {
              "content": "get prescriptions prescribed to the current User.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "api",
                "protocols",
                "prescriptions",
                "to"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "GET"
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "d828dba1-88e3-4bd9-80e8-9c9368f37881",
                "type": "text/javascript",
                "exec": [
                  "./portman/pm-login.json",
                  "// Validate status 2xx \npm.test(\"[GET]::/api/protocols/prescriptions/to - Status code is 2xx\", function () {\n   pm.response.to.be.success;\n});\n"
                ]
              }
            }
          ]
        },
        {
          "id": "30e59acc-07ca-44c4-8eae-a37ef732f191",
          "name": "get my protocol shares",
          "request": {
            "name": "get my protocol shares",
            "description": {
              "content": "This endpoint retrieves a User's Protocol shares, optionally filtered by Protocol and recipient.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "api",
                "protocols",
                "shares"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": false,
                  "description": {
                    "content": "select only shares of this Protocol ID",
                    "type": "text/plain"
                  },
                  "key": "pxFilter",
                  "value": "-74363535"
                },
                {
                  "disabled": false,
                  "description": {
                    "content": "select only shares to this VOR User",
                    "type": "text/plain"
                  },
                  "key": "toFilter",
                  "value": "-74363535"
                }
              ],
              "variable": []
            },
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "GET"
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "3d43643b-2a2c-4abf-874f-551c057c7d46",
                "type": "text/javascript",
                "exec": [
                  "./portman/pm-login.json",
                  "// Validate status 2xx \npm.test(\"[GET]::/api/protocols/shares - Status code is 2xx\", function () {\n   pm.response.to.be.success;\n});\n"
                ]
              }
            }
          ]
        },
        {
          "id": "93589254-b712-4f9b-867f-d1229757b679",
          "name": "create protocol share",
          "request": {
            "name": "create protocol share",
            "description": {
              "content": "This endpoint shares a protocol with another VOR User.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "api",
                "protocols",
                "shares"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n  \"px-id\": 1,\n  \"share-to\": 2,\n  \"clonable\": true\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "12e115e3-8a15-490f-86cd-6353ba34d050",
                "type": "text/javascript",
                "exec": [
                  "./portman/pm-login.json",
                  "// Validate status 2xx \npm.test(\"[POST]::/api/protocols/shares - Status code is 2xx\", function () {\n   pm.response.to.be.success;\n});\n"
                ]
              }
            }
          ],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        {
          "id": "bf651e1b-5a3d-483c-9ae9-edb697b31969",
          "name": "delete protocol share",
          "request": {
            "name": "delete protocol share",
            "description": {
              "content": "This endpoint retracts a Protocol share with another VOR User.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "api",
                "protocols",
                "shares"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": false,
                  "description": {
                    "content": "(Required) Protocol ID",
                    "type": "text/plain"
                  },
                  "key": "pxId",
                  "value": "-74363535"
                },
                {
                  "disabled": false,
                  "description": {
                    "content": "(Required) ID of VOR to whom Protocol was shared",
                    "type": "text/plain"
                  },
                  "key": "toVor",
                  "value": "-74363535"
                }
              ],
              "variable": []
            },
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "DELETE"
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "3eba6b1b-1c29-41ef-b769-f0241d928ba3",
                "type": "text/javascript",
                "exec": [
                  "./portman/pm-login.json",
                  "// Validate status 2xx \npm.test(\"[DELETE]::/api/protocols/shares - Status code is 2xx\", function () {\n   pm.response.to.be.success;\n});\n"
                ]
              }
            }
          ]
        },
        {
          "id": "eeaed5a4-d14c-40f8-8be0-ccdb72dc9f7a",
          "name": "list of User's shared protocols",
          "request": {
            "name": "list of User's shared protocols",
            "description": {
              "content": "This endpoint retrieves a list of User's protocols shared to all VORs.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "api",
                "protocols",
                "sharesToAll",
                ""
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "GET"
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "265074fd-73cf-4557-b861-91a2f8d856aa",
                "type": "text/javascript",
                "exec": [
                  "./portman/pm-login.json",
                  "// Validate status 2xx \npm.test(\"[GET]::/api/protocols/sharesToAll/ - Status code is 2xx\", function () {\n   pm.response.to.be.success;\n});\n"
                ]
              }
            }
          ]
        },
        {
          "id": "3dc73023-9935-4cdc-bd92-a384077d7208",
          "name": "share Protocol with all VOR Users",
          "request": {
            "name": "share Protocol with all VOR Users",
            "description": {
              "content": "This endpoint shares a User's protocol with all VOR Users.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "api",
                "protocols",
                "sharesToAll",
                ":pxId"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": false,
                  "key": "clonable",
                  "value": "true"
                }
              ],
              "variable": [
                {
                  "disabled": false,
                  "description": {
                    "content": "(Required) ID of Protocol to be shared",
                    "type": "text/plain"
                  },
                  "type": "any",
                  "value": "-74363535",
                  "key": "pxId"
                }
              ]
            },
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "POST"
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "d223ee1d-38eb-473e-a00e-503a61d0c740",
                "type": "text/javascript",
                "exec": [
                  "./portman/pm-login.json",
                  "// Validate status 2xx \npm.test(\"[POST]::/api/protocols/sharesToAll/:pxId - Status code is 2xx\", function () {\n   pm.response.to.be.success;\n});\n"
                ]
              }
            }
          ]
        },
        {
          "id": "f47e162b-d02c-4045-8a91-28a856c3a06b",
          "name": "cancel sharing",
          "request": {
            "name": "cancel sharing",
            "description": {
              "content": "wip -- This endpoint probably unshares protocols to all.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "api",
                "protocols",
                "sharesToAll",
                ":pxId"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": [
                {
                  "disabled": false,
                  "description": {
                    "content": "(Required) ID of Protocol",
                    "type": "text/plain"
                  },
                  "type": "any",
                  "value": "1",
                  "key": "pxId"
                }
              ]
            },
            "method": "DELETE"
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "413d65ef-6095-4809-90ca-a44dd4ae69ab",
                "type": "text/javascript",
                "exec": [
                  "./portman/pm-login.json",
                  "// Validate status 2xx \npm.test(\"[DELETE]::/api/protocols/sharesToAll/:pxId - Status code is 2xx\", function () {\n   pm.response.to.be.success;\n});\n"
                ]
              }
            }
          ]
        },
        {
          "id": "03ba0693-afe0-49a6-b427-77f12aeb2583",
          "name": "AMDUCA-tag protocol",
          "request": {
            "name": "AMDUCA-tag protocol",
            "description": {
              "content": "add tags to protocol per AMDUCA rules",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "api",
                "protocols",
                "amducatags"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "PUT",
            "body": {
              "mode": "raw",
              "raw": "{\n  \"ownerId\": 1,\n  \"name\": \"wip\",\n  \"status\": \"PRESCRIBED\",\n  \"instructions\": {\n    \"considerations\": \"<p>This is just an example, not a real protocol.</p>\",\n    \"restrictions\": \"<p>Not for use on real animals.</p>\",\n    \"dothis\": \"<h3>Examinations to perform</h3>\",\n    \"recordthis\": \"<p>record every step in your notebook.</p>\",\n    \"success\": \"<p>All problems are gone</p>\",\n    \"failure\": \"<p>One or more problems remain</p>\",\n    \"references\": \"<a href=\\\"https://en.wikipedia.org/wiki/Rickrolling\\\">Wikipedia</a>\"\n  },\n  \"id\": 12345,\n  \"shortname\": \"wip\",\n  \"created\": \"1949-03-30T07:12:47.653Z\",\n  \"edited\": \"2005-02-23T22:36:28.790Z\",\n  \"vetNote\": \"consider prescribing protocol x instead\",\n  \"wtMeatHrs\": 22,\n  \"wtMilkHrs\": 5,\n  \"shareAll\": true,\n  \"shareClonable\": true,\n  \"caseDefinition\": {\n    \"requireId\": false,\n    \"requireMor\": false,\n    \"contraindications\": \"\",\n    \"medical\": \"if fever is present, consider Protocol 12345 instead.\",\n    \"economic\": \"\",\n    \"note\": \"\"\n  },\n  \"treatments\": [\n    {\n      \"product\": \"MiracleMed\",\n      \"route\": \"wip\",\n      \"dosage\": {\n        \"doseId\": -82841067\n      },\n      \"sequenceFunction\": {\n        \"_type\": \"models.SeqSingleDose\"\n      },\n      \"sizeFunction\": {\n        \"_type\": \"models.FixedDoseFunction\",\n        \"dose\": {\n          \"quantity\": {\n            \"dimension\": \"Mass\",\n            \"value\": 3,\n            \"symbol\": \"oz\"\n          }\n        }\n      },\n      \"id\": \"B-123\",\n      \"ownerId\": 0,\n      \"description\": \"3.0 ml per kg repeat\",\n      \"eligibilities\": [\n        {\n          \"id\": 1,\n          \"name\": \"Beef Cattle\",\n          \"fdaSpecies\": [\n            \"fish\",\n            \"other\"\n          ]\n        },\n        {\n          \"id\": 1,\n          \"name\": \"Beef Cattle\",\n          \"fdaSpecies\": [\n            \"swine\",\n            \"unidentified\"\n          ]\n        }\n      ],\n      \"_dose\": \"3.0 ml per kg repeat in 6 hours and again in 24 hours\",\n      \"wtMeatHrs\": 10995847,\n      \"wtMilkHrs\": 17838355,\n      \"nada\": \"wip\",\n      \"tags\": [\n        {\n          \"id\": 8,\n          \"color\": \"#516cc6\",\n          \"name\": \"ullamco qui m\",\n          \"fixes\": [\n            {\n              \"_type\": \"Ut in incididunt\",\n              \"detail\": \"dolor Duis\",\n              \"message\": \"ex Excepteur ipsum eu anim\",\n              \"title\": \"nulla Excepteur nisi eu irure\"\n            },\n            {\n              \"_type\": \"Excepteur nostrud reprehenderit consequat\",\n              \"detail\": \"minim incididunt exercitation\",\n              \"message\": \"et Excepteur\",\n              \"title\": \"pariatur dolor exercitation in\"\n            }\n          ]\n        },\n        {\n          \"id\": 8,\n          \"color\": \"#516cc6\",\n          \"name\": \"non E\",\n          \"fixes\": [\n            {\n              \"_type\": \"Excepteur laboris cupidatat\",\n              \"detail\": \"proident dolore Duis aliqua\",\n              \"message\": \"Duis in dolor\",\n              \"title\": \"nisi consequat commodo occaecat dolor\"\n            },\n            {\n              \"_type\": \"laboris nisi dolore ullamco\",\n              \"detail\": \"aliqua proident cillum\",\n              \"message\": \"eu sunt quis\",\n              \"title\": \"adipisicing elit enim\"\n            }\n          ]\n        }\n      ],\n      \"note\": \"<p>a free-form note</p>\",\n      \"amduca\": \"UNIDENTIFIED\"\n    },\n    {\n      \"product\": \"MiracleMed\",\n      \"route\": \"wip\",\n      \"dosage\": {\n        \"doseId\": -24031332\n      },\n      \"sequenceFunction\": {\n        \"_type\": \"models.SeqSingleDose\"\n      },\n      \"sizeFunction\": {\n        \"_type\": \"models.FixedDoseFunction\",\n        \"dose\": {\n          \"quantity\": {\n            \"dimension\": \"Mass\",\n            \"value\": 3,\n            \"symbol\": \"oz\"\n          }\n        }\n      },\n      \"id\": \"B-123\",\n      \"ownerId\": 0,\n      \"description\": \"3.0 ml per kg repeat\",\n      \"eligibilities\": [\n        {\n          \"id\": 1,\n          \"name\": \"Beef Cattle\",\n          \"fdaSpecies\": [\n            \"other\",\n            \"catfish\"\n          ]\n        },\n        {\n          \"id\": 1,\n          \"name\": \"Beef Cattle\",\n          \"fdaSpecies\": [\n            \"other\",\n            \"dogs\"\n          ]\n        }\n      ],\n      \"_dose\": \"3.0 ml per kg repeat in 6 hours and again in 24 hours\",\n      \"wtMeatHrs\": 63539704,\n      \"wtMilkHrs\": 92808235,\n      \"nada\": \"wip\",\n      \"tags\": [\n        {\n          \"id\": 8,\n          \"color\": \"#516cc6\",\n          \"name\": \"commod\",\n          \"fixes\": [\n            {\n              \"_type\": \"ut\",\n              \"detail\": \"Lorem ea proide\",\n              \"message\": \"esse labori\",\n              \"title\": \"elit esse qui sint\"\n            },\n            {\n              \"_type\": \"adipisicing aute Excepteur ullamco\",\n              \"detail\": \"adipisicing deserunt\",\n              \"message\": \"quis fugiat\",\n              \"title\": \"sint in occaecat\"\n            }\n          ]\n        },\n        {\n          \"id\": 8,\n          \"color\": \"#516cc6\",\n          \"name\": \"irure\",\n          \"fixes\": [\n            {\n              \"_type\": \"esse sit occaecat tempor in\",\n              \"detail\": \"aute ut et\",\n              \"message\": \"nulla fugiat eu ex id\",\n              \"title\": \"officia qui Excepteur exercitation\"\n            },\n            {\n              \"_type\": \"nisi eu do non\",\n              \"detail\": \"incididunt laboris sint magna ipsum\",\n              \"message\": \"laborum commodo culpa fugiat\",\n              \"title\": \"minim ullamco in\"\n            }\n          ]\n        }\n      ],\n      \"note\": \"<p>a free-form note</p>\",\n      \"amduca\": \"ONLABEL\"\n    }\n  ],\n  \"tags\": [\n    {\n      \"id\": 8,\n      \"color\": \"#516cc6\",\n      \"name\": \"proident nis\",\n      \"fixes\": [\n        {\n          \"_type\": \"nisi\",\n          \"detail\": \"culpa nisi Ut in\",\n          \"message\": \"pariatur proident id\",\n          \"title\": \"sunt nostrud pariatur sit\"\n        },\n        {\n          \"_type\": \"dolor qui\",\n          \"detail\": \"aliqua\",\n          \"message\": \"ut\",\n          \"title\": \"amet ir\"\n        }\n      ]\n    },\n    {\n      \"id\": 8,\n      \"color\": \"#516cc6\",\n      \"name\": \"labore\",\n      \"fixes\": [\n        {\n          \"_type\": \"dolore qui pariatur\",\n          \"detail\": \"est proident\",\n          \"message\": \"minim proident i\",\n          \"title\": \"veniam\"\n        },\n        {\n          \"_type\": \"eiusmod occaecat est quis velit\",\n          \"detail\": \"enim Duis fugiat nisi cillum\",\n          \"message\": \"voluptate deserunt\",\n          \"title\": \"eu sit\"\n        }\n      ]\n    }\n  ],\n  \"diagnoses\": [\n    {\n      \"id\": 8,\n      \"name\": \"Pain/inflammation (musculoskeletal), treatment\"\n    },\n    {\n      \"id\": 8,\n      \"name\": \"Pain/inflammation (musculoskeletal), treatment\"\n    }\n  ],\n  \"eligibilities\": [\n    {\n      \"id\": 1,\n      \"name\": \"Beef Cattle\",\n      \"fdaSpecies\": [\n        \"unidentified\",\n        \"swine\"\n      ]\n    },\n    {\n      \"id\": 1,\n      \"name\": \"Beef Cattle\",\n      \"fdaSpecies\": [\n        \"gamebirds\",\n        \"cats\"\n      ]\n    }\n  ],\n  \"promises\": [\n    {\n      \"_type\": \"models.AffirmationPromise\",\n      \"name\": \"ID promise\",\n      \"when\": \"PT0H\",\n      \"id\": 2345,\n      \"ownerId\": 123,\n      \"descrip\": \"You must give ID for each case enrolled\"\n    },\n    {\n      \"_type\": \"models.AffirmationPromise\",\n      \"name\": \"ID promise\",\n      \"when\": \"PT0H\",\n      \"id\": 2345,\n      \"ownerId\": 123,\n      \"descrip\": \"You must give ID for each case enrolled\"\n    }\n  ],\n  \"metadata\": [\n    {\n      \"key\": \"popularity\",\n      \"value\": \"good 1.2\"\n    },\n    {\n      \"key\": \"popularity\",\n      \"value\": \"good 1.2\"\n    }\n  ]\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "83187d81-f3ef-4656-b961-ba05bc8a4e27",
                "type": "text/javascript",
                "exec": [
                  "./portman/pm-login.json",
                  "// Validate status 2xx \npm.test(\"[PUT]::/api/protocols/amducatags - Status code is 2xx\", function () {\n   pm.response.to.be.success;\n});\n"
                ]
              }
            }
          ],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        {
          "id": "729a4dcc-0ed9-47e1-b2f8-69b555d7ea92",
          "name": "list of all Tags",
          "request": {
            "name": "list of all Tags",
            "description": {
              "content": "Returns the full array of tags for protocols and treatments.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "api",
                "protocols",
                "tags"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "GET"
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "cc850dc8-19eb-416c-afea-d2107cef8eae",
                "type": "text/javascript",
                "exec": [
                  "./portman/pm-login.json",
                  "// Validate status 2xx \npm.test(\"[GET]::/api/protocols/tags - Status code is 2xx\", function () {\n   pm.response.to.be.success;\n});\n"
                ]
              }
            }
          ]
        },
        {
          "id": "96ea6c16-864d-4844-95c5-37e571ca3837",
          "name": "execute Remedy",
          "request": {
            "name": "execute Remedy",
            "description": {
              "content": "Apply a Remedy to a Protocol, returning the fixed Protocol.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "api",
                "protocols",
                "tags",
                "remedies"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "PUT",
            "body": {
              "mode": "raw",
              "raw": "{\n  \"protocol\": {\n    \"ownerId\": 1,\n    \"name\": \"wip\",\n    \"status\": \"PRESCRIBED\",\n    \"instructions\": {\n      \"considerations\": \"<p>This is just an example, not a real protocol.</p>\",\n      \"restrictions\": \"<p>Not for use on real animals.</p>\",\n      \"dothis\": \"<h3>Examinations to perform</h3>\",\n      \"recordthis\": \"<p>record every step in your notebook.</p>\",\n      \"success\": \"<p>All problems are gone</p>\",\n      \"failure\": \"<p>One or more problems remain</p>\",\n      \"references\": \"<a href=\\\"https://en.wikipedia.org/wiki/Rickrolling\\\">Wikipedia</a>\"\n    },\n    \"id\": 12345,\n    \"shortname\": \"wip\",\n    \"created\": \"1975-03-15T16:05:24.998Z\",\n    \"edited\": \"1965-06-25T21:24:53.580Z\",\n    \"vetNote\": \"consider prescribing protocol x instead\",\n    \"wtMeatHrs\": 22,\n    \"wtMilkHrs\": 5,\n    \"shareAll\": true,\n    \"shareClonable\": true,\n    \"caseDefinition\": {\n      \"requireId\": false,\n      \"requireMor\": false,\n      \"contraindications\": \"\",\n      \"medical\": \"if fever is present, consider Protocol 12345 instead.\",\n      \"economic\": \"\",\n      \"note\": \"\"\n    },\n    \"treatments\": [\n      {\n        \"product\": \"MiracleMed\",\n        \"route\": \"wip\",\n        \"dosage\": {\n          \"doseId\": -89579602\n        },\n        \"sequenceFunction\": {\n          \"_type\": \"models.SeqSingleDose\"\n        },\n        \"sizeFunction\": {\n          \"_type\": \"models.FixedDoseFunction\",\n          \"dose\": {\n            \"quantity\": {\n              \"dimension\": \"Mass\",\n              \"value\": 3,\n              \"symbol\": \"oz\"\n            }\n          }\n        },\n        \"id\": \"B-123\",\n        \"ownerId\": 0,\n        \"description\": \"3.0 ml per kg repeat\",\n        \"eligibilities\": [\n          {\n            \"id\": 1,\n            \"name\": \"Beef Cattle\",\n            \"fdaSpecies\": [\n              \"salmon\",\n              \"horses\"\n            ]\n          },\n          {\n            \"id\": 1,\n            \"name\": \"Beef Cattle\",\n            \"fdaSpecies\": [\n              \"llamas\",\n              \"beef_cattle\"\n            ]\n          }\n        ],\n        \"_dose\": \"3.0 ml per kg repeat in 6 hours and again in 24 hours\",\n        \"wtMeatHrs\": 29656817,\n        \"wtMilkHrs\": -5381292,\n        \"nada\": \"wip\",\n        \"tags\": [\n          {\n            \"id\": 8,\n            \"color\": \"#516cc6\",\n            \"name\": \"pariatu\",\n            \"fixes\": [\n              {\n                \"_type\": {\n                  \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"detail\": {\n                  \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"message\": {\n                  \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"title\": {\n                  \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                }\n              },\n              {\n                \"_type\": {\n                  \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"detail\": {\n                  \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"message\": {\n                  \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"title\": {\n                  \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                }\n              }\n            ]\n          },\n          {\n            \"id\": 8,\n            \"color\": \"#516cc6\",\n            \"name\": \"dolore enim d\",\n            \"fixes\": [\n              {\n                \"_type\": {\n                  \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"detail\": {\n                  \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"message\": {\n                  \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"title\": {\n                  \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                }\n              },\n              {\n                \"_type\": {\n                  \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"detail\": {\n                  \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"message\": {\n                  \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"title\": {\n                  \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                }\n              }\n            ]\n          }\n        ],\n        \"note\": \"<p>a free-form note</p>\",\n        \"amduca\": \"OFFLABEL\"\n      },\n      {\n        \"product\": \"MiracleMed\",\n        \"route\": \"wip\",\n        \"dosage\": {\n          \"doseId\": 8242699\n        },\n        \"sequenceFunction\": {\n          \"_type\": \"models.SeqSingleDose\"\n        },\n        \"sizeFunction\": {\n          \"_type\": \"models.FixedDoseFunction\",\n          \"dose\": {\n            \"quantity\": {\n              \"dimension\": \"Mass\",\n              \"value\": 3,\n              \"symbol\": \"oz\"\n            }\n          }\n        },\n        \"id\": \"B-123\",\n        \"ownerId\": 0,\n        \"description\": \"3.0 ml per kg repeat\",\n        \"eligibilities\": [\n          {\n            \"id\": 1,\n            \"name\": \"Beef Cattle\",\n            \"fdaSpecies\": [\n              \"chickens\",\n              \"salmon\"\n            ]\n          },\n          {\n            \"id\": 1,\n            \"name\": \"Beef Cattle\",\n            \"fdaSpecies\": [\n              \"cats\",\n              \"unidentified\"\n            ]\n          }\n        ],\n        \"_dose\": \"3.0 ml per kg repeat in 6 hours and again in 24 hours\",\n        \"wtMeatHrs\": 43563087,\n        \"wtMilkHrs\": 25702416,\n        \"nada\": \"wip\",\n        \"tags\": [\n          {\n            \"id\": 8,\n            \"color\": \"#516cc6\",\n            \"name\": \"dolor ea\",\n            \"fixes\": [\n              {\n                \"_type\": {\n                  \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"detail\": {\n                  \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"message\": {\n                  \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"title\": {\n                  \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                }\n              },\n              {\n                \"_type\": {\n                  \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"detail\": {\n                  \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"message\": {\n                  \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"title\": {\n                  \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                }\n              }\n            ]\n          },\n          {\n            \"id\": 8,\n            \"color\": \"#516cc6\",\n            \"name\": \"magn\",\n            \"fixes\": [\n              {\n                \"_type\": {\n                  \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"detail\": {\n                  \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"message\": {\n                  \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"title\": {\n                  \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                }\n              },\n              {\n                \"_type\": {\n                  \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"detail\": {\n                  \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"message\": {\n                  \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"title\": {\n                  \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                }\n              }\n            ]\n          }\n        ],\n        \"note\": \"<p>a free-form note</p>\",\n        \"amduca\": \"UNIDENTIFIED\"\n      }\n    ],\n    \"tags\": [\n      {\n        \"id\": 8,\n        \"color\": \"#516cc6\",\n        \"name\": \"dolore sit\",\n        \"fixes\": [\n          {\n            \"_type\": \"nulla ipsum sed incididunt velit\",\n            \"detail\": \"do eu Lorem esse aliquip\",\n            \"message\": \"commodo in exercitation\",\n            \"title\": \"Ut veniam\"\n          },\n          {\n            \"_type\": \"nisi\",\n            \"detail\": \"minim n\",\n            \"message\": \"\",\n            \"title\": \"adipisicing\"\n          }\n        ]\n      },\n      {\n        \"id\": 8,\n        \"color\": \"#516cc6\",\n        \"name\": \"dolor e\",\n        \"fixes\": [\n          {\n            \"_type\": \"minim\",\n            \"detail\": \"in elit dolor\",\n            \"message\": \"tempor deserunt magna est\",\n            \"title\": \"nulla anim laboris dolor\"\n          },\n          {\n            \"_type\": \"sed vo\",\n            \"detail\": \"Excepteur mollit\",\n            \"message\": \"do incididunt enim\",\n            \"title\": \"Ut sed do sunt pariatur\"\n          }\n        ]\n      }\n    ],\n    \"diagnoses\": [\n      {\n        \"id\": 8,\n        \"name\": \"Pain/inflammation (musculoskeletal), treatment\"\n      },\n      {\n        \"id\": 8,\n        \"name\": \"Pain/inflammation (musculoskeletal), treatment\"\n      }\n    ],\n    \"eligibilities\": [\n      {\n        \"id\": 1,\n        \"name\": \"Beef Cattle\",\n        \"fdaSpecies\": [\n          \"goats\",\n          \"sheep\"\n        ]\n      },\n      {\n        \"id\": 1,\n        \"name\": \"Beef Cattle\",\n        \"fdaSpecies\": [\n          \"sheep\",\n          \"goats\"\n        ]\n      }\n    ],\n    \"promises\": [\n      {\n        \"_type\": \"models.AffirmationPromise\",\n        \"name\": \"ID promise\",\n        \"when\": \"PT0H\",\n        \"id\": 2345,\n        \"ownerId\": 123,\n        \"descrip\": \"You must give ID for each case enrolled\"\n      },\n      {\n        \"_type\": \"models.AffirmationPromise\",\n        \"name\": \"ID promise\",\n        \"when\": \"PT0H\",\n        \"id\": 2345,\n        \"ownerId\": 123,\n        \"descrip\": \"You must give ID for each case enrolled\"\n      }\n    ],\n    \"metadata\": [\n      {\n        \"key\": \"popularity\",\n        \"value\": \"good 1.2\"\n      },\n      {\n        \"key\": \"popularity\",\n        \"value\": \"good 1.2\"\n      }\n    ]\n  },\n  \"remedy\": {\n    \"_type\": \"ipsum in dolore\",\n    \"detail\": \"laboris et\",\n    \"message\": \"et aute dolor\",\n    \"title\": \"aute nostrud deserunt\"\n  }\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "6c20b0f4-6633-49e9-be33-0e87c06280d1",
                "type": "text/javascript",
                "exec": [
                  "./portman/pm-login.json",
                  "// Validate status 2xx \npm.test(\"[PUT]::/api/protocols/tags/remedies - Status code is 2xx\", function () {\n   pm.response.to.be.success;\n});\n"
                ]
              }
            }
          ],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        {
          "id": "ef0221d8-eb79-401e-abe7-65f44b1d996a",
          "name": "list of Promises",
          "request": {
            "name": "list of Promises",
            "description": {
              "content": "VOR users have access to a set of public promises plus any Promises they have created for their own use.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "api",
                "protocols",
                "promises"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "GET"
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "a7c85bcb-6964-44f5-85ac-f4af39d9e21e",
                "type": "text/javascript",
                "exec": [
                  "./portman/pm-login.json",
                  "// Validate status 2xx \npm.test(\"[GET]::/api/protocols/promises - Status code is 2xx\", function () {\n   pm.response.to.be.success;\n});\n"
                ]
              }
            }
          ]
        },
        {
          "id": "3d51cce0-473e-4cfe-b054-65841e02e4f2",
          "name": "create a private Promise",
          "request": {
            "name": "create a private Promise",
            "description": {
              "content": "Create a Promise type that will be private (available only to the VOR recording it)",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "api",
                "protocols",
                "privatePromises"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n  \"_type\": \"models.AffirmationPromise\",\n  \"name\": \"ID promise\",\n  \"when\": \"PT0H\",\n  \"id\": 2345,\n  \"ownerId\": 123,\n  \"descrip\": \"You must give ID for each case enrolled\"\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "28728441-e583-4c7c-9042-c3c9c7e62572",
                "type": "text/javascript",
                "exec": [
                  "./portman/pm-login.json",
                  "// Validate status 2xx \npm.test(\"[POST]::/api/protocols/privatePromises - Status code is 2xx\", function () {\n   pm.response.to.be.success;\n});\n"
                ]
              }
            }
          ],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        {
          "id": "418a5e6e-6e06-4566-9d97-f2f12b58bc3e",
          "name": "Promises in a Protocol",
          "request": {
            "name": "Promises in a Protocol",
            "description": {
              "content": "Return Promises contained within a Protocol.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "api",
                "protocols",
                "promises",
                ":id"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": [
                {
                  "disabled": false,
                  "description": {
                    "content": "(Required) protocol  ID",
                    "type": "text/plain"
                  },
                  "type": "any",
                  "value": "32",
                  "key": "id"
                }
              ]
            },
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "GET"
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "b8ffa75e-99b1-4ae8-b593-57e462c8c8a1",
                "type": "text/javascript",
                "exec": [
                  "./portman/pm-login.json",
                  "// Validate status 2xx \npm.test(\"[GET]::/api/protocols/promises/:id - Status code is 2xx\", function () {\n   pm.response.to.be.success;\n});\n"
                ]
              }
            }
          ]
        },
        {
          "id": "1a766400-2259-4a0f-9bc6-d59e63e1d76e",
          "name": "send a message to another user",
          "request": {
            "name": "send a message to another user",
            "description": {
              "content": "send a message to another user",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "api",
                "messages"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": false,
                  "description": {
                    "content": "Mode(s) or channel(s) to use in messaging, defaulting to EMAIL",
                    "type": "text/plain"
                  },
                  "key": "modes",
                  "value": "EMAIL|EMAIL"
                }
              ],
              "variable": []
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n  \"_type\": \"models.SimpleMessage\",\n  \"from\": 99,\n  \"to\": 99,\n  \"subject\": \"\",\n  \"message\": \"Hello <b>world</b>\",\n  \"detail\": \"magna\"\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "cb454103-395c-4b44-ad67-79b3aee0f30e",
                "type": "text/javascript",
                "exec": [
                  "./portman/pm-login.json"
                ]
              }
            }
          ],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        {
          "id": "2819f60f-e0e4-431b-a8dc-177ac5a6026d",
          "name": "protocols owned by user",
          "request": {
            "name": "protocols owned by user",
            "description": {
              "content": "Retrieve all Protocols owned by, or shared with, the current User. The default excludes deleted (status DEPRECATED) protocols.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "api",
                "protocols"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": false,
                  "description": {
                    "content": "filter Protocols to include only Protocols with listed statuses. If this parameter is omitted, the query defaults to all status values **except** DEPRECATED.",
                    "type": "text/plain"
                  },
                  "key": "status",
                  "value": "PRESCRIBED|PRESCRIBED"
                }
              ],
              "variable": []
            },
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "GET"
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "3bf49b0f-6de9-4d2c-808b-6e0ccc8f3f94",
                "type": "text/javascript",
                "exec": [
                  "./portman/pm-login.json"
                ]
              }
            }
          ]
        },
        {
          "id": "0ff327f2-d4a2-4088-826a-0d2020303d6e",
          "name": "record and validate aprotocol",
          "request": {
            "name": "record and validate aprotocol",
            "description": {
              "content": "This endpoint saves and validates a Protocol.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "api",
                "protocols"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n  \"ownerId\": 1,\n  \"name\": \"wip\",\n  \"status\": \"PRESCRIBED\",\n  \"instructions\": {\n    \"considerations\": \"<p>This is just an example, not a real protocol.</p>\",\n    \"restrictions\": \"<p>Not for use on real animals.</p>\",\n    \"dothis\": \"<h3>Examinations to perform</h3>\",\n    \"recordthis\": \"<p>record every step in your notebook.</p>\",\n    \"success\": \"<p>All problems are gone</p>\",\n    \"failure\": \"<p>One or more problems remain</p>\",\n    \"references\": \"<a href=\\\"https://en.wikipedia.org/wiki/Rickrolling\\\">Wikipedia</a>\"\n  },\n  \"id\": 12345,\n  \"shortname\": \"wip\",\n  \"created\": \"1949-03-30T07:12:47.653Z\",\n  \"edited\": \"2005-02-23T22:36:28.790Z\",\n  \"vetNote\": \"consider prescribing protocol x instead\",\n  \"wtMeatHrs\": 22,\n  \"wtMilkHrs\": 5,\n  \"shareAll\": true,\n  \"shareClonable\": true,\n  \"caseDefinition\": {\n    \"requireId\": false,\n    \"requireMor\": false,\n    \"contraindications\": \"\",\n    \"medical\": \"if fever is present, consider Protocol 12345 instead.\",\n    \"economic\": \"\",\n    \"note\": \"\"\n  },\n  \"treatments\": [\n    {\n      \"product\": \"MiracleMed\",\n      \"route\": \"wip\",\n      \"dosage\": {\n        \"doseId\": -82841067\n      },\n      \"sequenceFunction\": {\n        \"_type\": \"models.SeqSingleDose\"\n      },\n      \"sizeFunction\": {\n        \"_type\": \"models.FixedDoseFunction\",\n        \"dose\": {\n          \"quantity\": {\n            \"dimension\": \"Mass\",\n            \"value\": 3,\n            \"symbol\": \"oz\"\n          }\n        }\n      },\n      \"id\": \"B-123\",\n      \"ownerId\": 0,\n      \"description\": \"3.0 ml per kg repeat\",\n      \"eligibilities\": [\n        {\n          \"id\": 1,\n          \"name\": \"Beef Cattle\",\n          \"fdaSpecies\": [\n            \"fish\",\n            \"other\"\n          ]\n        },\n        {\n          \"id\": 1,\n          \"name\": \"Beef Cattle\",\n          \"fdaSpecies\": [\n            \"swine\",\n            \"unidentified\"\n          ]\n        }\n      ],\n      \"_dose\": \"3.0 ml per kg repeat in 6 hours and again in 24 hours\",\n      \"wtMeatHrs\": 10995847,\n      \"wtMilkHrs\": 17838355,\n      \"nada\": \"wip\",\n      \"tags\": [\n        {\n          \"id\": 8,\n          \"color\": \"#516cc6\",\n          \"name\": \"ullamco qui m\",\n          \"fixes\": [\n            {\n              \"_type\": \"Ut in incididunt\",\n              \"detail\": \"dolor Duis\",\n              \"message\": \"ex Excepteur ipsum eu anim\",\n              \"title\": \"nulla Excepteur nisi eu irure\"\n            },\n            {\n              \"_type\": \"Excepteur nostrud reprehenderit consequat\",\n              \"detail\": \"minim incididunt exercitation\",\n              \"message\": \"et Excepteur\",\n              \"title\": \"pariatur dolor exercitation in\"\n            }\n          ]\n        },\n        {\n          \"id\": 8,\n          \"color\": \"#516cc6\",\n          \"name\": \"non E\",\n          \"fixes\": [\n            {\n              \"_type\": \"Excepteur laboris cupidatat\",\n              \"detail\": \"proident dolore Duis aliqua\",\n              \"message\": \"Duis in dolor\",\n              \"title\": \"nisi consequat commodo occaecat dolor\"\n            },\n            {\n              \"_type\": \"laboris nisi dolore ullamco\",\n              \"detail\": \"aliqua proident cillum\",\n              \"message\": \"eu sunt quis\",\n              \"title\": \"adipisicing elit enim\"\n            }\n          ]\n        }\n      ],\n      \"note\": \"<p>a free-form note</p>\",\n      \"amduca\": \"UNIDENTIFIED\"\n    },\n    {\n      \"product\": \"MiracleMed\",\n      \"route\": \"wip\",\n      \"dosage\": {\n        \"doseId\": -24031332\n      },\n      \"sequenceFunction\": {\n        \"_type\": \"models.SeqSingleDose\"\n      },\n      \"sizeFunction\": {\n        \"_type\": \"models.FixedDoseFunction\",\n        \"dose\": {\n          \"quantity\": {\n            \"dimension\": \"Mass\",\n            \"value\": 3,\n            \"symbol\": \"oz\"\n          }\n        }\n      },\n      \"id\": \"B-123\",\n      \"ownerId\": 0,\n      \"description\": \"3.0 ml per kg repeat\",\n      \"eligibilities\": [\n        {\n          \"id\": 1,\n          \"name\": \"Beef Cattle\",\n          \"fdaSpecies\": [\n            \"other\",\n            \"catfish\"\n          ]\n        },\n        {\n          \"id\": 1,\n          \"name\": \"Beef Cattle\",\n          \"fdaSpecies\": [\n            \"other\",\n            \"dogs\"\n          ]\n        }\n      ],\n      \"_dose\": \"3.0 ml per kg repeat in 6 hours and again in 24 hours\",\n      \"wtMeatHrs\": 63539704,\n      \"wtMilkHrs\": 92808235,\n      \"nada\": \"wip\",\n      \"tags\": [\n        {\n          \"id\": 8,\n          \"color\": \"#516cc6\",\n          \"name\": \"commod\",\n          \"fixes\": [\n            {\n              \"_type\": \"ut\",\n              \"detail\": \"Lorem ea proide\",\n              \"message\": \"esse labori\",\n              \"title\": \"elit esse qui sint\"\n            },\n            {\n              \"_type\": \"adipisicing aute Excepteur ullamco\",\n              \"detail\": \"adipisicing deserunt\",\n              \"message\": \"quis fugiat\",\n              \"title\": \"sint in occaecat\"\n            }\n          ]\n        },\n        {\n          \"id\": 8,\n          \"color\": \"#516cc6\",\n          \"name\": \"irure\",\n          \"fixes\": [\n            {\n              \"_type\": \"esse sit occaecat tempor in\",\n              \"detail\": \"aute ut et\",\n              \"message\": \"nulla fugiat eu ex id\",\n              \"title\": \"officia qui Excepteur exercitation\"\n            },\n            {\n              \"_type\": \"nisi eu do non\",\n              \"detail\": \"incididunt laboris sint magna ipsum\",\n              \"message\": \"laborum commodo culpa fugiat\",\n              \"title\": \"minim ullamco in\"\n            }\n          ]\n        }\n      ],\n      \"note\": \"<p>a free-form note</p>\",\n      \"amduca\": \"ONLABEL\"\n    }\n  ],\n  \"tags\": [\n    {\n      \"id\": 8,\n      \"color\": \"#516cc6\",\n      \"name\": \"proident nis\",\n      \"fixes\": [\n        {\n          \"_type\": \"nisi\",\n          \"detail\": \"culpa nisi Ut in\",\n          \"message\": \"pariatur proident id\",\n          \"title\": \"sunt nostrud pariatur sit\"\n        },\n        {\n          \"_type\": \"dolor qui\",\n          \"detail\": \"aliqua\",\n          \"message\": \"ut\",\n          \"title\": \"amet ir\"\n        }\n      ]\n    },\n    {\n      \"id\": 8,\n      \"color\": \"#516cc6\",\n      \"name\": \"labore\",\n      \"fixes\": [\n        {\n          \"_type\": \"dolore qui pariatur\",\n          \"detail\": \"est proident\",\n          \"message\": \"minim proident i\",\n          \"title\": \"veniam\"\n        },\n        {\n          \"_type\": \"eiusmod occaecat est quis velit\",\n          \"detail\": \"enim Duis fugiat nisi cillum\",\n          \"message\": \"voluptate deserunt\",\n          \"title\": \"eu sit\"\n        }\n      ]\n    }\n  ],\n  \"diagnoses\": [\n    {\n      \"id\": 8,\n      \"name\": \"Pain/inflammation (musculoskeletal), treatment\"\n    },\n    {\n      \"id\": 8,\n      \"name\": \"Pain/inflammation (musculoskeletal), treatment\"\n    }\n  ],\n  \"eligibilities\": [\n    {\n      \"id\": 1,\n      \"name\": \"Beef Cattle\",\n      \"fdaSpecies\": [\n        \"unidentified\",\n        \"swine\"\n      ]\n    },\n    {\n      \"id\": 1,\n      \"name\": \"Beef Cattle\",\n      \"fdaSpecies\": [\n        \"gamebirds\",\n        \"cats\"\n      ]\n    }\n  ],\n  \"promises\": [\n    {\n      \"_type\": \"models.AffirmationPromise\",\n      \"name\": \"ID promise\",\n      \"when\": \"PT0H\",\n      \"id\": 2345,\n      \"ownerId\": 123,\n      \"descrip\": \"You must give ID for each case enrolled\"\n    },\n    {\n      \"_type\": \"models.AffirmationPromise\",\n      \"name\": \"ID promise\",\n      \"when\": \"PT0H\",\n      \"id\": 2345,\n      \"ownerId\": 123,\n      \"descrip\": \"You must give ID for each case enrolled\"\n    }\n  ],\n  \"metadata\": [\n    {\n      \"key\": \"popularity\",\n      \"value\": \"good 1.2\"\n    },\n    {\n      \"key\": \"popularity\",\n      \"value\": \"good 1.2\"\n    }\n  ]\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "7dd63418-2f1e-4a83-ad33-4ec64ef23ada",
                "type": "text/javascript",
                "exec": [
                  "./portman/pm-login.json"
                ]
              }
            }
          ],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        {
          "id": "3dad9865-0a68-4a69-bc83-c1b1c0a7d5e5",
          "name": "update protocol",
          "request": {
            "name": "update protocol",
            "description": {
              "content": "This endpoint updates and validates a Protocol.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "api",
                "protocols"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "PUT",
            "body": {
              "mode": "raw",
              "raw": "{\n  \"ownerId\": 1,\n  \"name\": \"wip\",\n  \"status\": \"PRESCRIBED\",\n  \"instructions\": {\n    \"considerations\": \"<p>This is just an example, not a real protocol.</p>\",\n    \"restrictions\": \"<p>Not for use on real animals.</p>\",\n    \"dothis\": \"<h3>Examinations to perform</h3>\",\n    \"recordthis\": \"<p>record every step in your notebook.</p>\",\n    \"success\": \"<p>All problems are gone</p>\",\n    \"failure\": \"<p>One or more problems remain</p>\",\n    \"references\": \"<a href=\\\"https://en.wikipedia.org/wiki/Rickrolling\\\">Wikipedia</a>\"\n  },\n  \"id\": 12345,\n  \"shortname\": \"wip\",\n  \"created\": \"1949-03-30T07:12:47.653Z\",\n  \"edited\": \"2005-02-23T22:36:28.790Z\",\n  \"vetNote\": \"consider prescribing protocol x instead\",\n  \"wtMeatHrs\": 22,\n  \"wtMilkHrs\": 5,\n  \"shareAll\": true,\n  \"shareClonable\": true,\n  \"caseDefinition\": {\n    \"requireId\": false,\n    \"requireMor\": false,\n    \"contraindications\": \"\",\n    \"medical\": \"if fever is present, consider Protocol 12345 instead.\",\n    \"economic\": \"\",\n    \"note\": \"\"\n  },\n  \"treatments\": [\n    {\n      \"product\": \"MiracleMed\",\n      \"route\": \"wip\",\n      \"dosage\": {\n        \"doseId\": -82841067\n      },\n      \"sequenceFunction\": {\n        \"_type\": \"models.SeqSingleDose\"\n      },\n      \"sizeFunction\": {\n        \"_type\": \"models.FixedDoseFunction\",\n        \"dose\": {\n          \"quantity\": {\n            \"dimension\": \"Mass\",\n            \"value\": 3,\n            \"symbol\": \"oz\"\n          }\n        }\n      },\n      \"id\": \"B-123\",\n      \"ownerId\": 0,\n      \"description\": \"3.0 ml per kg repeat\",\n      \"eligibilities\": [\n        {\n          \"id\": 1,\n          \"name\": \"Beef Cattle\",\n          \"fdaSpecies\": [\n            \"fish\",\n            \"other\"\n          ]\n        },\n        {\n          \"id\": 1,\n          \"name\": \"Beef Cattle\",\n          \"fdaSpecies\": [\n            \"swine\",\n            \"unidentified\"\n          ]\n        }\n      ],\n      \"_dose\": \"3.0 ml per kg repeat in 6 hours and again in 24 hours\",\n      \"wtMeatHrs\": 10995847,\n      \"wtMilkHrs\": 17838355,\n      \"nada\": \"wip\",\n      \"tags\": [\n        {\n          \"id\": 8,\n          \"color\": \"#516cc6\",\n          \"name\": \"ullamco qui m\",\n          \"fixes\": [\n            {\n              \"_type\": \"Ut in incididunt\",\n              \"detail\": \"dolor Duis\",\n              \"message\": \"ex Excepteur ipsum eu anim\",\n              \"title\": \"nulla Excepteur nisi eu irure\"\n            },\n            {\n              \"_type\": \"Excepteur nostrud reprehenderit consequat\",\n              \"detail\": \"minim incididunt exercitation\",\n              \"message\": \"et Excepteur\",\n              \"title\": \"pariatur dolor exercitation in\"\n            }\n          ]\n        },\n        {\n          \"id\": 8,\n          \"color\": \"#516cc6\",\n          \"name\": \"non E\",\n          \"fixes\": [\n            {\n              \"_type\": \"Excepteur laboris cupidatat\",\n              \"detail\": \"proident dolore Duis aliqua\",\n              \"message\": \"Duis in dolor\",\n              \"title\": \"nisi consequat commodo occaecat dolor\"\n            },\n            {\n              \"_type\": \"laboris nisi dolore ullamco\",\n              \"detail\": \"aliqua proident cillum\",\n              \"message\": \"eu sunt quis\",\n              \"title\": \"adipisicing elit enim\"\n            }\n          ]\n        }\n      ],\n      \"note\": \"<p>a free-form note</p>\",\n      \"amduca\": \"UNIDENTIFIED\"\n    },\n    {\n      \"product\": \"MiracleMed\",\n      \"route\": \"wip\",\n      \"dosage\": {\n        \"doseId\": -24031332\n      },\n      \"sequenceFunction\": {\n        \"_type\": \"models.SeqSingleDose\"\n      },\n      \"sizeFunction\": {\n        \"_type\": \"models.FixedDoseFunction\",\n        \"dose\": {\n          \"quantity\": {\n            \"dimension\": \"Mass\",\n            \"value\": 3,\n            \"symbol\": \"oz\"\n          }\n        }\n      },\n      \"id\": \"B-123\",\n      \"ownerId\": 0,\n      \"description\": \"3.0 ml per kg repeat\",\n      \"eligibilities\": [\n        {\n          \"id\": 1,\n          \"name\": \"Beef Cattle\",\n          \"fdaSpecies\": [\n            \"other\",\n            \"catfish\"\n          ]\n        },\n        {\n          \"id\": 1,\n          \"name\": \"Beef Cattle\",\n          \"fdaSpecies\": [\n            \"other\",\n            \"dogs\"\n          ]\n        }\n      ],\n      \"_dose\": \"3.0 ml per kg repeat in 6 hours and again in 24 hours\",\n      \"wtMeatHrs\": 63539704,\n      \"wtMilkHrs\": 92808235,\n      \"nada\": \"wip\",\n      \"tags\": [\n        {\n          \"id\": 8,\n          \"color\": \"#516cc6\",\n          \"name\": \"commod\",\n          \"fixes\": [\n            {\n              \"_type\": \"ut\",\n              \"detail\": \"Lorem ea proide\",\n              \"message\": \"esse labori\",\n              \"title\": \"elit esse qui sint\"\n            },\n            {\n              \"_type\": \"adipisicing aute Excepteur ullamco\",\n              \"detail\": \"adipisicing deserunt\",\n              \"message\": \"quis fugiat\",\n              \"title\": \"sint in occaecat\"\n            }\n          ]\n        },\n        {\n          \"id\": 8,\n          \"color\": \"#516cc6\",\n          \"name\": \"irure\",\n          \"fixes\": [\n            {\n              \"_type\": \"esse sit occaecat tempor in\",\n              \"detail\": \"aute ut et\",\n              \"message\": \"nulla fugiat eu ex id\",\n              \"title\": \"officia qui Excepteur exercitation\"\n            },\n            {\n              \"_type\": \"nisi eu do non\",\n              \"detail\": \"incididunt laboris sint magna ipsum\",\n              \"message\": \"laborum commodo culpa fugiat\",\n              \"title\": \"minim ullamco in\"\n            }\n          ]\n        }\n      ],\n      \"note\": \"<p>a free-form note</p>\",\n      \"amduca\": \"ONLABEL\"\n    }\n  ],\n  \"tags\": [\n    {\n      \"id\": 8,\n      \"color\": \"#516cc6\",\n      \"name\": \"proident nis\",\n      \"fixes\": [\n        {\n          \"_type\": \"nisi\",\n          \"detail\": \"culpa nisi Ut in\",\n          \"message\": \"pariatur proident id\",\n          \"title\": \"sunt nostrud pariatur sit\"\n        },\n        {\n          \"_type\": \"dolor qui\",\n          \"detail\": \"aliqua\",\n          \"message\": \"ut\",\n          \"title\": \"amet ir\"\n        }\n      ]\n    },\n    {\n      \"id\": 8,\n      \"color\": \"#516cc6\",\n      \"name\": \"labore\",\n      \"fixes\": [\n        {\n          \"_type\": \"dolore qui pariatur\",\n          \"detail\": \"est proident\",\n          \"message\": \"minim proident i\",\n          \"title\": \"veniam\"\n        },\n        {\n          \"_type\": \"eiusmod occaecat est quis velit\",\n          \"detail\": \"enim Duis fugiat nisi cillum\",\n          \"message\": \"voluptate deserunt\",\n          \"title\": \"eu sit\"\n        }\n      ]\n    }\n  ],\n  \"diagnoses\": [\n    {\n      \"id\": 8,\n      \"name\": \"Pain/inflammation (musculoskeletal), treatment\"\n    },\n    {\n      \"id\": 8,\n      \"name\": \"Pain/inflammation (musculoskeletal), treatment\"\n    }\n  ],\n  \"eligibilities\": [\n    {\n      \"id\": 1,\n      \"name\": \"Beef Cattle\",\n      \"fdaSpecies\": [\n        \"unidentified\",\n        \"swine\"\n      ]\n    },\n    {\n      \"id\": 1,\n      \"name\": \"Beef Cattle\",\n      \"fdaSpecies\": [\n        \"gamebirds\",\n        \"cats\"\n      ]\n    }\n  ],\n  \"promises\": [\n    {\n      \"_type\": \"models.AffirmationPromise\",\n      \"name\": \"ID promise\",\n      \"when\": \"PT0H\",\n      \"id\": 2345,\n      \"ownerId\": 123,\n      \"descrip\": \"You must give ID for each case enrolled\"\n    },\n    {\n      \"_type\": \"models.AffirmationPromise\",\n      \"name\": \"ID promise\",\n      \"when\": \"PT0H\",\n      \"id\": 2345,\n      \"ownerId\": 123,\n      \"descrip\": \"You must give ID for each case enrolled\"\n    }\n  ],\n  \"metadata\": [\n    {\n      \"key\": \"popularity\",\n      \"value\": \"good 1.2\"\n    },\n    {\n      \"key\": \"popularity\",\n      \"value\": \"good 1.2\"\n    }\n  ]\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "006ab761-49fc-42ee-9c66-abae94f946c9",
                "type": "text/javascript",
                "exec": [
                  "./portman/pm-login.json"
                ]
              }
            }
          ],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        {
          "id": "4128ab83-9019-468c-8bd3-98991413e788",
          "name": "This endpoint validates a protocol without saving it.",
          "request": {
            "name": "This endpoint validates a protocol without saving it.",
            "description": {
              "content": "This endpoint validates a protocol for prescribing without saving it. It should only be called if the user wants to prescribe a protocol without saving changes. The endpoints to save or update protocols automatically include validation.4",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "api",
                "protocols",
                "validate"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "PUT",
            "body": {
              "mode": "raw",
              "raw": "{\n  \"ownerId\": 1,\n  \"name\": \"wip\",\n  \"status\": \"PRESCRIBED\",\n  \"instructions\": {\n    \"considerations\": \"<p>This is just an example, not a real protocol.</p>\",\n    \"restrictions\": \"<p>Not for use on real animals.</p>\",\n    \"dothis\": \"<h3>Examinations to perform</h3>\",\n    \"recordthis\": \"<p>record every step in your notebook.</p>\",\n    \"success\": \"<p>All problems are gone</p>\",\n    \"failure\": \"<p>One or more problems remain</p>\",\n    \"references\": \"<a href=\\\"https://en.wikipedia.org/wiki/Rickrolling\\\">Wikipedia</a>\"\n  },\n  \"id\": 12345,\n  \"shortname\": \"wip\",\n  \"created\": \"1949-03-30T07:12:47.653Z\",\n  \"edited\": \"2005-02-23T22:36:28.790Z\",\n  \"vetNote\": \"consider prescribing protocol x instead\",\n  \"wtMeatHrs\": 22,\n  \"wtMilkHrs\": 5,\n  \"shareAll\": true,\n  \"shareClonable\": true,\n  \"caseDefinition\": {\n    \"requireId\": false,\n    \"requireMor\": false,\n    \"contraindications\": \"\",\n    \"medical\": \"if fever is present, consider Protocol 12345 instead.\",\n    \"economic\": \"\",\n    \"note\": \"\"\n  },\n  \"treatments\": [\n    {\n      \"product\": \"MiracleMed\",\n      \"route\": \"wip\",\n      \"dosage\": {\n        \"doseId\": -82841067\n      },\n      \"sequenceFunction\": {\n        \"_type\": \"models.SeqSingleDose\"\n      },\n      \"sizeFunction\": {\n        \"_type\": \"models.FixedDoseFunction\",\n        \"dose\": {\n          \"quantity\": {\n            \"dimension\": \"Mass\",\n            \"value\": 3,\n            \"symbol\": \"oz\"\n          }\n        }\n      },\n      \"id\": \"B-123\",\n      \"ownerId\": 0,\n      \"description\": \"3.0 ml per kg repeat\",\n      \"eligibilities\": [\n        {\n          \"id\": 1,\n          \"name\": \"Beef Cattle\",\n          \"fdaSpecies\": [\n            \"fish\",\n            \"other\"\n          ]\n        },\n        {\n          \"id\": 1,\n          \"name\": \"Beef Cattle\",\n          \"fdaSpecies\": [\n            \"swine\",\n            \"unidentified\"\n          ]\n        }\n      ],\n      \"_dose\": \"3.0 ml per kg repeat in 6 hours and again in 24 hours\",\n      \"wtMeatHrs\": 10995847,\n      \"wtMilkHrs\": 17838355,\n      \"nada\": \"wip\",\n      \"tags\": [\n        {\n          \"id\": 8,\n          \"color\": \"#516cc6\",\n          \"name\": \"ullamco qui m\",\n          \"fixes\": [\n            {\n              \"_type\": \"Ut in incididunt\",\n              \"detail\": \"dolor Duis\",\n              \"message\": \"ex Excepteur ipsum eu anim\",\n              \"title\": \"nulla Excepteur nisi eu irure\"\n            },\n            {\n              \"_type\": \"Excepteur nostrud reprehenderit consequat\",\n              \"detail\": \"minim incididunt exercitation\",\n              \"message\": \"et Excepteur\",\n              \"title\": \"pariatur dolor exercitation in\"\n            }\n          ]\n        },\n        {\n          \"id\": 8,\n          \"color\": \"#516cc6\",\n          \"name\": \"non E\",\n          \"fixes\": [\n            {\n              \"_type\": \"Excepteur laboris cupidatat\",\n              \"detail\": \"proident dolore Duis aliqua\",\n              \"message\": \"Duis in dolor\",\n              \"title\": \"nisi consequat commodo occaecat dolor\"\n            },\n            {\n              \"_type\": \"laboris nisi dolore ullamco\",\n              \"detail\": \"aliqua proident cillum\",\n              \"message\": \"eu sunt quis\",\n              \"title\": \"adipisicing elit enim\"\n            }\n          ]\n        }\n      ],\n      \"note\": \"<p>a free-form note</p>\",\n      \"amduca\": \"UNIDENTIFIED\"\n    },\n    {\n      \"product\": \"MiracleMed\",\n      \"route\": \"wip\",\n      \"dosage\": {\n        \"doseId\": -24031332\n      },\n      \"sequenceFunction\": {\n        \"_type\": \"models.SeqSingleDose\"\n      },\n      \"sizeFunction\": {\n        \"_type\": \"models.FixedDoseFunction\",\n        \"dose\": {\n          \"quantity\": {\n            \"dimension\": \"Mass\",\n            \"value\": 3,\n            \"symbol\": \"oz\"\n          }\n        }\n      },\n      \"id\": \"B-123\",\n      \"ownerId\": 0,\n      \"description\": \"3.0 ml per kg repeat\",\n      \"eligibilities\": [\n        {\n          \"id\": 1,\n          \"name\": \"Beef Cattle\",\n          \"fdaSpecies\": [\n            \"other\",\n            \"catfish\"\n          ]\n        },\n        {\n          \"id\": 1,\n          \"name\": \"Beef Cattle\",\n          \"fdaSpecies\": [\n            \"other\",\n            \"dogs\"\n          ]\n        }\n      ],\n      \"_dose\": \"3.0 ml per kg repeat in 6 hours and again in 24 hours\",\n      \"wtMeatHrs\": 63539704,\n      \"wtMilkHrs\": 92808235,\n      \"nada\": \"wip\",\n      \"tags\": [\n        {\n          \"id\": 8,\n          \"color\": \"#516cc6\",\n          \"name\": \"commod\",\n          \"fixes\": [\n            {\n              \"_type\": \"ut\",\n              \"detail\": \"Lorem ea proide\",\n              \"message\": \"esse labori\",\n              \"title\": \"elit esse qui sint\"\n            },\n            {\n              \"_type\": \"adipisicing aute Excepteur ullamco\",\n              \"detail\": \"adipisicing deserunt\",\n              \"message\": \"quis fugiat\",\n              \"title\": \"sint in occaecat\"\n            }\n          ]\n        },\n        {\n          \"id\": 8,\n          \"color\": \"#516cc6\",\n          \"name\": \"irure\",\n          \"fixes\": [\n            {\n              \"_type\": \"esse sit occaecat tempor in\",\n              \"detail\": \"aute ut et\",\n              \"message\": \"nulla fugiat eu ex id\",\n              \"title\": \"officia qui Excepteur exercitation\"\n            },\n            {\n              \"_type\": \"nisi eu do non\",\n              \"detail\": \"incididunt laboris sint magna ipsum\",\n              \"message\": \"laborum commodo culpa fugiat\",\n              \"title\": \"minim ullamco in\"\n            }\n          ]\n        }\n      ],\n      \"note\": \"<p>a free-form note</p>\",\n      \"amduca\": \"ONLABEL\"\n    }\n  ],\n  \"tags\": [\n    {\n      \"id\": 8,\n      \"color\": \"#516cc6\",\n      \"name\": \"proident nis\",\n      \"fixes\": [\n        {\n          \"_type\": \"nisi\",\n          \"detail\": \"culpa nisi Ut in\",\n          \"message\": \"pariatur proident id\",\n          \"title\": \"sunt nostrud pariatur sit\"\n        },\n        {\n          \"_type\": \"dolor qui\",\n          \"detail\": \"aliqua\",\n          \"message\": \"ut\",\n          \"title\": \"amet ir\"\n        }\n      ]\n    },\n    {\n      \"id\": 8,\n      \"color\": \"#516cc6\",\n      \"name\": \"labore\",\n      \"fixes\": [\n        {\n          \"_type\": \"dolore qui pariatur\",\n          \"detail\": \"est proident\",\n          \"message\": \"minim proident i\",\n          \"title\": \"veniam\"\n        },\n        {\n          \"_type\": \"eiusmod occaecat est quis velit\",\n          \"detail\": \"enim Duis fugiat nisi cillum\",\n          \"message\": \"voluptate deserunt\",\n          \"title\": \"eu sit\"\n        }\n      ]\n    }\n  ],\n  \"diagnoses\": [\n    {\n      \"id\": 8,\n      \"name\": \"Pain/inflammation (musculoskeletal), treatment\"\n    },\n    {\n      \"id\": 8,\n      \"name\": \"Pain/inflammation (musculoskeletal), treatment\"\n    }\n  ],\n  \"eligibilities\": [\n    {\n      \"id\": 1,\n      \"name\": \"Beef Cattle\",\n      \"fdaSpecies\": [\n        \"unidentified\",\n        \"swine\"\n      ]\n    },\n    {\n      \"id\": 1,\n      \"name\": \"Beef Cattle\",\n      \"fdaSpecies\": [\n        \"gamebirds\",\n        \"cats\"\n      ]\n    }\n  ],\n  \"promises\": [\n    {\n      \"_type\": \"models.AffirmationPromise\",\n      \"name\": \"ID promise\",\n      \"when\": \"PT0H\",\n      \"id\": 2345,\n      \"ownerId\": 123,\n      \"descrip\": \"You must give ID for each case enrolled\"\n    },\n    {\n      \"_type\": \"models.AffirmationPromise\",\n      \"name\": \"ID promise\",\n      \"when\": \"PT0H\",\n      \"id\": 2345,\n      \"ownerId\": 123,\n      \"descrip\": \"You must give ID for each case enrolled\"\n    }\n  ],\n  \"metadata\": [\n    {\n      \"key\": \"popularity\",\n      \"value\": \"good 1.2\"\n    },\n    {\n      \"key\": \"popularity\",\n      \"value\": \"good 1.2\"\n    }\n  ]\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "95bba75a-9214-44c2-990f-a324544a83eb",
                "type": "text/javascript",
                "exec": [
                  "./portman/pm-login.json",
                  "// Validate status 2xx \npm.test(\"[PUT]::/api/protocols/validate - Status code is 2xx\", function () {\n   pm.response.to.be.success;\n});\n"
                ]
              }
            }
          ],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        {
          "id": "63bc7726-2f6c-4f2c-961c-ab6c7f53f5c5",
          "name": "list of all eligibilities",
          "request": {
            "name": "list of all eligibilities",
            "description": {
              "content": "This endpoint returns an array of Eligibilities from which a User may choose. The ID field is authoritative, i.e., is all that is needed to identify a particular Eligibility.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "api",
                "protocols",
                "eligibilities"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "GET"
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "57ae44d5-9368-4750-bb47-d8c1f9526a0b",
                "type": "text/javascript",
                "exec": [
                  "./portman/pm-login.json",
                  "// Validate status 2xx \npm.test(\"[GET]::/api/protocols/eligibilities - Status code is 2xx\", function () {\n   pm.response.to.be.success;\n});\n"
                ]
              }
            }
          ]
        },
        {
          "id": "000cc4c6-3171-4d74-9333-bd77b5b9ee35",
          "name": "list of fda species",
          "request": {
            "name": "list of fda species",
            "description": {
              "content": "\"Species\" is the term FDA uses to describe a class of animals in a label claim.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "api",
                "protocols",
                "eligibilities",
                "fdaspecies"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "GET"
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "c3844fb7-bf39-4245-a96b-25d42077b541",
                "type": "text/javascript",
                "exec": [
                  "./portman/pm-login.json",
                  "// Validate status 2xx \npm.test(\"[GET]::/api/protocols/eligibilities/fdaspecies - Status code is 2xx\", function () {\n   pm.response.to.be.success;\n});\n"
                ]
              }
            }
          ]
        },
        {
          "id": "75413c14-72db-4273-a9d4-47b587025ee1",
          "name": "list of all diagnoses",
          "request": {
            "name": "list of all diagnoses",
            "description": {
              "content": "Returns an array of all coded Diagnoses known to the system.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "api",
                "protocols",
                "diagnoses"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "GET"
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "c8c8820d-1cd4-4400-b2e1-4b47789cd802",
                "type": "text/javascript",
                "exec": [
                  "./portman/pm-login.json",
                  "// Validate status 2xx \npm.test(\"[GET]::/api/protocols/diagnoses - Status code is 2xx\", function () {\n   pm.response.to.be.success;\n});\n"
                ]
              }
            }
          ]
        },
        {
          "id": "df739e81-f09c-4b3d-974b-807eafcc1533",
          "name": "list of library protocols",
          "request": {
            "name": "list of library protocols",
            "description": {
              "content": "This endpoint retrieves all protocols owned by, or shared with, the current User.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "api",
                "protocols",
                "libs"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "GET"
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "3771ce59-7725-4b03-bbbf-2e0520598271",
                "type": "text/javascript",
                "exec": [
                  "./portman/pm-login.json",
                  "// Validate status 2xx \npm.test(\"[GET]::/api/protocols/libs - Status code is 2xx\", function () {\n   pm.response.to.be.success;\n});\n"
                ]
              }
            }
          ]
        },
        {
          "id": "e0c5475e-3f1e-4f46-a18b-5506ebec9799",
          "name": "list of all diagnoses",
          "request": {
            "name": "list of all diagnoses",
            "description": {
              "content": "returns an array of Pxes .",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "api",
                "protocols",
                "exclusivestubs"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "GET"
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "c56ae883-e6b7-4762-baa4-323ab6fdbaf5",
                "type": "text/javascript",
                "exec": [
                  "./portman/pm-login.json",
                  "// Validate status 2xx \npm.test(\"[GET]::/api/protocols/exclusivestubs - Status code is 2xx\", function () {\n   pm.response.to.be.success;\n});\n"
                ]
              }
            }
          ]
        },
        {
          "id": "d8fe451a-7d84-4bbe-86f8-6eba20104d80",
          "name": "validate a structured Dosage",
          "request": {
            "name": "validate a structured Dosage",
            "description": {
              "content": "validate a Dosage with SizeFunction and SequewnceFunction returning an test '_dose\" description.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "api",
                "protocols",
                "dosages"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n  \"sequenceFunction\": {\n    \"_type\": \"models.SeqSingleDose\"\n  },\n  \"sizeFunction\": {\n    \"_type\": \"models.FixedDoseFunction\",\n    \"dose\": {\n      \"quantity\": {\n        \"dimension\": \"Mass\",\n        \"value\": 3,\n        \"symbol\": \"oz\"\n      }\n    }\n  }\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "34e77612-83c9-491b-a31f-759568533112",
                "type": "text/javascript",
                "exec": [
                  "./portman/pm-login.json",
                  "// Validate status 2xx \npm.test(\"[POST]::/api/protocols/dosages - Status code is 2xx\", function () {\n   pm.response.to.be.success;\n});\n"
                ]
              }
            }
          ],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        {
          "id": "a4a98637-9903-451f-bb75-004d774a69f5",
          "name": "list of library pxes",
          "request": {
            "name": "list of library pxes",
            "description": {
              "content": "This endpoint returns all the Protocols owned by, or shared with, the current User.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "api",
                "protocols",
                "libstubs"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "GET"
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "a6c97d94-b6a7-4c58-85b0-ef0e2c2b8832",
                "type": "text/javascript",
                "exec": [
                  "./portman/pm-login.json",
                  "// Validate status 2xx \npm.test(\"[GET]::/api/protocols/libstubs - Status code is 2xx\", function () {\n   pm.response.to.be.success;\n});\n"
                ]
              }
            }
          ]
        },
        {
          "id": "ad4f9dca-a82d-4ce5-8b5b-934b4a421ea0",
          "name": "retrieve protocol by ID",
          "request": {
            "name": "retrieve protocol by ID",
            "description": {
              "content": "This endpoint retrieves a Protocol by `protocol.id`.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "api",
                "protocols",
                ":id"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": [
                {
                  "disabled": false,
                  "description": {
                    "content": "(Required) Protocol ID key",
                    "type": "text/plain"
                  },
                  "type": "any",
                  "value": "7",
                  "key": "id"
                }
              ]
            },
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "GET"
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "a89d4583-e126-4080-9b3b-d17c90f8fd97",
                "type": "text/javascript",
                "exec": [
                  "./portman/pm-login.json",
                  "// Validate status 2xx \npm.test(\"[GET]::/api/protocols/:id - Status code is 2xx\", function () {\n   pm.response.to.be.success;\n});\n"
                ]
              }
            }
          ]
        },
        {
          "id": "602352ac-e20b-44cf-84c4-e2751173244e",
          "name": "delete protocol",
          "request": {
            "name": "delete protocol",
            "description": {
              "content": "Change `protocol.status` to DELETED (this does not actually remove it from the database).",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "api",
                "protocols",
                ":id"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": [
                {
                  "disabled": false,
                  "description": {
                    "content": "(Required) Protocol ID key",
                    "type": "text/plain"
                  },
                  "type": "any",
                  "value": "-74363535",
                  "key": "id"
                }
              ]
            },
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "DELETE"
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "cf9af061-eed7-49bb-921b-8dc9ad77fa78",
                "type": "text/javascript",
                "exec": [
                  "./portman/pm-login.json",
                  "// Validate status 2xx \npm.test(\"[DELETE]::/api/protocols/:id - Status code is 2xx\", function () {\n   pm.response.to.be.success;\n});\n"
                ]
              }
            }
          ]
        },
        {
          "id": "aee628b4-9230-4fc0-a3ab-e55e5b30680d",
          "name": "list of all diagnoses",
          "request": {
            "name": "list of all diagnoses",
            "description": {
              "content": "This",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "api",
                "protocols",
                "prescriptions"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "GET"
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "495069f5-89fa-47fd-b36d-7dc4910eaa58",
                "type": "text/javascript",
                "exec": [
                  "./portman/pm-login.json",
                  "// Validate status 2xx \npm.test(\"[GET]::/api/protocols/prescriptions - Status code is 2xx\", function () {\n   pm.response.to.be.success;\n});\n"
                ]
              }
            }
          ]
        },
        {
          "id": "17443f94-d5db-40ce-835f-eeaefbed8f6e",
          "name": "list of all diagnoses",
          "request": {
            "name": "list of all diagnoses",
            "description": {
              "content": "returns an array of Prescriptions",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "api",
                "protocols",
                ":id",
                "prescriptions"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": [
                {
                  "disabled": false,
                  "description": {
                    "content": "(Required) Protocol ID key",
                    "type": "text/plain"
                  },
                  "type": "any",
                  "value": "-74363535",
                  "key": "id"
                }
              ]
            },
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "GET"
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "56aa7081-0778-4f6d-af3d-d5926a1151a7",
                "type": "text/javascript",
                "exec": [
                  "./portman/pm-login.json",
                  "// Validate status 2xx \npm.test(\"[GET]::/api/protocols/:id/prescriptions - Status code is 2xx\", function () {\n   pm.response.to.be.success;\n});\n"
                ]
              }
            }
          ]
        },
        {
          "id": "e8bd7f39-94c8-4fe6-88f7-ed6d35edb3bc",
          "name": "retrieve prescription by ID",
          "request": {
            "name": "retrieve prescription by ID",
            "description": {
              "content": "Retrieve a Prescription by `prescription.id`.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "api",
                "protocols",
                "prescriptions",
                ":id"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": [
                {
                  "disabled": false,
                  "description": {
                    "content": "(Required) Prescription ID key",
                    "type": "text/plain"
                  },
                  "type": "any",
                  "value": "Vi1y9kbpEj7Upqy7",
                  "key": "id"
                }
              ]
            },
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "GET"
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "f39074ad-14bb-4f04-9590-bd958dceef15",
                "type": "text/javascript",
                "exec": [
                  "./portman/pm-login.json",
                  "// Validate status 2xx \npm.test(\"[GET]::/api/protocols/prescriptions/:id - Status code is 2xx\", function () {\n   pm.response.to.be.success;\n});\n"
                ]
              }
            }
          ]
        },
        {
          "id": "bb8b04a1-17d0-4513-9d1b-40635d76d4cf",
          "name": "list of all labelclaims",
          "request": {
            "name": "list of all labelclaims",
            "description": {
              "content": "This endpoint returns the full array of drug labels.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "api",
                "labels"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "GET"
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "14fa0388-07a2-44c7-b8ad-7bed97285e88",
                "type": "text/javascript",
                "exec": [
                  "./portman/pm-login.json"
                ]
              }
            }
          ]
        },
        {
          "id": "84cb7adb-d6f1-4ff8-a47d-a97ff8fcb67e",
          "name": "labelclaim",
          "request": {
            "name": "labelclaim",
            "description": {
              "content": "Return specified labelclaim.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "api",
                "labels",
                ":id"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": [
                {
                  "disabled": false,
                  "description": {
                    "content": "(Required) labelclaim  ID",
                    "type": "text/plain"
                  },
                  "type": "any",
                  "value": "32",
                  "key": "id"
                }
              ]
            },
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "GET"
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "c4faaf89-94d9-4efe-94fb-c8c77a9aec39",
                "type": "text/javascript",
                "exec": [
                  "./portman/pm-login.json"
                ]
              }
            }
          ]
        },
        {
          "id": "21586f93-5c41-4d9c-8ed6-480c64c5453a",
          "name": "package insert",
          "request": {
            "name": "package insert",
            "description": {
              "content": "Retrieve the product package insert.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "api",
                "labels",
                "inserts",
                ":lxId"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": [
                {
                  "disabled": false,
                  "description": {
                    "content": "(Required) label ID",
                    "type": "text/plain"
                  },
                  "type": "any",
                  "value": "32",
                  "key": "lxId"
                }
              ]
            },
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "GET"
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "0487427d-dad4-4677-9efa-0aacf90d8c8c",
                "type": "text/javascript",
                "exec": [
                  "./portman/pm-login.json"
                ]
              }
            }
          ]
        },
        {
          "id": "e17f26ab-0647-41d7-8e86-bb464e732cf5",
          "name": "get detail of a Greenbook Drug as a link",
          "request": {
            "name": "get detail of a Greenbook Drug as a link",
            "description": {
              "content": "This",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "api",
                "spl",
                ":ndc"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": [
                {
                  "disabled": false,
                  "description": {
                    "content": "(Required) unique hyphenated number with up to 10 digits in 2 or 3 segments as labelerCode-productCode-packageCode. packageCode may not be needed.",
                    "type": "text/plain"
                  },
                  "type": "any",
                  "value": "0010-3832",
                  "key": "ndc"
                }
              ]
            },
            "header": [
              {
                "key": "Accept",
                "value": "text/html"
              }
            ],
            "method": "GET"
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "6a94e0ca-2927-4afd-aae3-16079d75e388",
                "type": "text/javascript",
                "exec": [
                  "./portman/pm-login.json"
                ]
              }
            }
          ]
        },
        {
          "id": "3c3907fd-163f-4285-a085-0e5469b4ee07",
          "name": "get detail of a Greenbook Drug as a link",
          "request": {
            "name": "get detail of a Greenbook Drug as a link",
            "description": {
              "content": "This",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "api",
                "spl",
                ":ndc",
                ":image"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": [
                {
                  "disabled": false,
                  "description": {
                    "content": "(Required) unique hyphenated number with up to 10 digits in 2 or 3 segments as labelerCode-productCode-packageCode. packageCode may not be needed.",
                    "type": "text/plain"
                  },
                  "type": "any",
                  "value": "0010-3495",
                  "key": "ndc"
                },
                {
                  "disabled": false,
                  "description": {
                    "content": "(Required) name of image file",
                    "type": "text/plain"
                  },
                  "type": "any",
                  "value": "601588-image-fake.jpg",
                  "key": "image"
                }
              ]
            },
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "GET"
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "bde408cb-bbd6-44ef-838f-b5f34eb25a50",
                "type": "text/javascript",
                "exec": [
                  "./portman/pm-login.json"
                ]
              }
            }
          ]
        },
        {
          "id": "217ae3f4-8c7f-4533-a0d9-bf0d40905362",
          "name": "retrieve prescription by ID",
          "request": {
            "name": "retrieve prescription by ID",
            "description": {
              "content": "Retrieve a Prescription by `prescription.id`.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "api",
                "prescriptions",
                ":id",
                ""
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": [
                {
                  "disabled": false,
                  "description": {
                    "content": "(Required) Prescription ID key",
                    "type": "text/plain"
                  },
                  "type": "any",
                  "value": "Vi1y9kbpEj7Upqy7",
                  "key": "id"
                }
              ]
            },
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "GET"
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "26009ffb-5466-4400-9b85-4e5091938233",
                "type": "text/javascript",
                "exec": [
                  "./portman/pm-login.json"
                ]
              }
            }
          ]
        },
        {
          "id": "dfb03f9c-e699-4cc6-b883-c1c1cbf96796",
          "name": "recall or decline a prescription",
          "request": {
            "name": "recall or decline a prescription",
            "description": {
              "content": "Prescriptions are immutable except for metadata, and cannot actually be deleted. This endpoint makes a prescription unavailable for use. If called by the VOR, it sets staus to RECALLED. If called by the MOR to whom it is prescribed, it sets status to DECLINED. New cases  cannot be enrolled if either RECALLED or DECLIENED.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "api",
                "prescriptions",
                ":id",
                ""
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": [
                {
                  "disabled": false,
                  "description": {
                    "content": "(Required) Prescription ID key",
                    "type": "text/plain"
                  },
                  "type": "any",
                  "value": "Vi1y9kbpEj7Upqy7",
                  "key": "id"
                }
              ]
            },
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "DELETE"
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "c8fd17e3-7d9f-4498-8405-4744be8b1b7d",
                "type": "text/javascript",
                "exec": [
                  "./portman/pm-login.json"
                ]
              }
            }
          ]
        },
        {
          "id": "a24a62a3-b7a7-4c47-8c5f-a65871dfb67a",
          "name": "enroll case,  deprecated in favor of POST /api/cases2 which will be moved to this path eventually",
          "request": {
            "name": "enroll case,  deprecated in favor of POST /api/cases2 which will be moved to this path eventually",
            "description": {
              "content": "Creates a Case linked to a prescription.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "api",
                "cases"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n  \"id\": 123,\n  \"rxId\": \"gG3pBCR1GCMKm89c\",\n  \"animalId\": \"Bossie34\",\n  \"initiationTime\": \"1984-05-23T13:14:55.293Z\",\n  \"caseData\": {\n    \"_type\": \"models.WeightData\",\n    \"weight\": {\n      \"value\": 50,\n      \"symbol\": \"kg\",\n      \"dimension\": \"Mass\"\n    }\n  },\n  \"note\": \"et incididunt magna\",\n  \"morId\": -55522907\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "ee8b498d-7777-495a-a3ab-724374278075",
                "type": "text/javascript",
                "exec": [
                  "./portman/pm-login.json"
                ]
              }
            }
          ],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        {
          "id": "3e7a0a84-acc4-49fb-ba28-db32c389623b",
          "name": "list of cases",
          "request": {
            "name": "list of cases",
            "description": {
              "content": "Get all current cases for this user",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "api",
                "cases"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "GET"
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "4bce63d0-8d50-4c95-9b88-4165c96d7eb9",
                "type": "text/javascript",
                "exec": [
                  "./portman/pm-login.json"
                ]
              }
            }
          ]
        },
        {
          "id": "bb58355e-e88f-4609-b1bf-61f54b0801cf",
          "name": "enroll Case returning tasks",
          "request": {
            "name": "enroll Case returning tasks",
            "description": {
              "content": "Enrolls a Case from its Prescription and generates DoseTasks, Promise tasks, and Withhold as specified in the Protocol.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "api",
                "cases2"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n  \"id\": 123,\n  \"rxId\": \"gG3pBCR1GCMKm89c\",\n  \"animalId\": \"Bossie34\",\n  \"initiationTime\": \"1984-05-23T13:14:55.293Z\",\n  \"caseData\": {\n    \"_type\": \"models.WeightData\",\n    \"weight\": {\n      \"value\": 50,\n      \"symbol\": \"kg\",\n      \"dimension\": \"Mass\"\n    }\n  },\n  \"note\": \"et incididunt magna\",\n  \"morId\": -55522907\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "8cd1e833-fbed-427c-99b5-18ef331ec149",
                "type": "text/javascript",
                "exec": [
                  "./portman/pm-login.json"
                ]
              }
            }
          ],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        {
          "id": "7a65ff61-2681-4b89-bfbd-5193912861e4",
          "name": "get history for a single Case (with tasks)",
          "request": {
            "name": "get history for a single Case (with tasks)",
            "description": {
              "content": "Case plus tasks generated for the Case plus any data returned on task execution",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "api",
                "cases",
                ":caseId"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": [
                {
                  "disabled": false,
                  "description": {
                    "content": "(Required) ID number of Case",
                    "type": "text/plain"
                  },
                  "type": "any",
                  "value": "-74363535",
                  "key": "caseId"
                }
              ]
            },
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "GET"
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "c6134099-49a1-42e1-9ec5-baa944b24562",
                "type": "text/javascript",
                "exec": [
                  "./portman/pm-login.json"
                ]
              }
            }
          ]
        },
        {
          "id": "d59a846f-fee6-41c7-81cb-a463b7e188af",
          "name": "prescriptions with cases",
          "request": {
            "name": "prescriptions with cases",
            "description": {
              "content": "A filtered list of Prescriptions with Cases enrolled to each.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "api",
                "rx-cases"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": false,
                  "description": {
                    "content": "ID number of prescribing VOR",
                    "type": "text/plain"
                  },
                  "key": "vorId",
                  "value": "-74363535"
                },
                {
                  "disabled": false,
                  "description": {
                    "content": "ID number of MOR prescribed to",
                    "type": "text/plain"
                  },
                  "key": "morId",
                  "value": "-74363535"
                },
                {
                  "disabled": false,
                  "description": {
                    "content": "ID number of protocol prescribed",
                    "type": "text/plain"
                  },
                  "key": "protocolId",
                  "value": "-74363535"
                },
                {
                  "disabled": false,
                  "description": {
                    "content": "last date limit for Case enrollment",
                    "type": "text/plain"
                  },
                  "key": "enrolledBefore",
                  "value": "1975-12-06T14:54:20.277Z"
                },
                {
                  "disabled": false,
                  "description": {
                    "content": "earliest date limit for Case enrollment",
                    "type": "text/plain"
                  },
                  "key": "enrolledAfter",
                  "value": "2006-05-26T01:31:05.815Z"
                },
                {
                  "disabled": false,
                  "description": {
                    "content": "page start",
                    "type": "text/plain"
                  },
                  "key": "offset",
                  "value": "0"
                },
                {
                  "disabled": false,
                  "description": {
                    "content": "maximum page length",
                    "type": "text/plain"
                  },
                  "key": "limit",
                  "value": "20"
                }
              ],
              "variable": []
            },
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "GET"
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "cf362570-b8b8-4efc-8623-4b398debae30",
                "type": "text/javascript",
                "exec": [
                  "./portman/pm-login.json"
                ]
              }
            }
          ]
        },
        {
          "id": "c6aad751-e8b8-40c5-9e06-d2e341afab8b",
          "name": "list  of cases for a rx",
          "request": {
            "name": "list  of cases for a rx",
            "description": {
              "content": "Get all current cases for this prescription and this user",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "api",
                "prescriptions",
                ":rxId",
                "cases"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": [
                {
                  "disabled": false,
                  "description": {
                    "content": "(Required) prescription uuid",
                    "type": "text/plain"
                  },
                  "type": "any",
                  "value": "Vi1y9kbpEj7Upqy7",
                  "key": "rxId"
                }
              ]
            },
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "GET"
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "1b0b5a9f-3c01-4b5e-80e3-aaf61bd0bac4",
                "type": "text/javascript",
                "exec": [
                  "./portman/pm-login.json"
                ]
              }
            }
          ]
        },
        {
          "id": "cac40680-a09c-4b49-9b9a-2efdfcfe7d05",
          "name": "execute task",
          "request": {
            "name": "execute task",
            "description": {
              "content": "Mark task status as completed",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "api",
                "users",
                "tasks"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n  \"_type\": \"amet dolor ad eu\",\n  \"animalId\": \"this\",\n  \"caseId\": 123,\n  \"detail\": \"voluptate in labore\",\n  \"doAt\": \"1946-04-16T22:26:21.483Z\",\n  \"id\": 123,\n  \"morId\": 123,\n  \"status\": \"REQUIRED\",\n  \"vorId\": 123,\n  \"executor\": 123\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "02f95250-47e3-44b7-b111-f273aa7a76de",
                "type": "text/javascript",
                "exec": [
                  "./portman/pm-login.json"
                ]
              }
            }
          ],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        {
          "id": "7457d6e4-d698-46ea-a7b1-e6a77ae695c7",
          "name": "list of cases by Rx",
          "request": {
            "name": "list of cases by Rx",
            "description": {
              "content": "Get all current cases for this Rx",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "api",
                "users",
                "tasks"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "GET"
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "82481d28-a515-454d-8d8f-4f1d75cb35a2",
                "type": "text/javascript",
                "exec": [
                  "./portman/pm-login.json"
                ]
              }
            }
          ]
        },
        {
          "id": "8892006a-bd32-4817-8eff-879b263e40a8",
          "name": "get Greenbook Drug summary by NDC pattern",
          "request": {
            "name": "get Greenbook Drug summary by NDC pattern",
            "description": {
              "content": "This endpoint returns the summary listing of a Greenbook Drug by NDC pattern.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "api",
                "admin",
                "product"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": false,
                  "description": {
                    "content": "first section labeler code of a NDC",
                    "type": "text/plain"
                  },
                  "key": "ndcProd",
                  "value": "-74363535"
                },
                {
                  "disabled": false,
                  "description": {
                    "content": "mid section product code of a NDC",
                    "type": "text/plain"
                  },
                  "key": "ndcLabeler",
                  "value": "-74363535"
                },
                {
                  "disabled": false,
                  "description": {
                    "content": "end section package code of a NDC",
                    "type": "text/plain"
                  },
                  "key": "ndcBrand",
                  "value": "-74363535"
                }
              ],
              "variable": []
            },
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "GET"
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "59ee60cd-eeb6-4f51-9a1d-05100eb7890a",
                "type": "text/javascript",
                "exec": [
                  "./portman/pm-login.json"
                ]
              }
            }
          ]
        },
        {
          "id": "03708c33-17cd-44c5-9c20-00b312a0f0e3",
          "name": "get summary listing of a Greenbook Drug",
          "request": {
            "name": "get summary listing of a Greenbook Drug",
            "description": {
              "content": "This endpoint returns the summary listing of a Greenbook Drug by ndc identifier.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "api",
                "admin",
                "product",
                ":ndc"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": [
                {
                  "disabled": false,
                  "description": {
                    "content": "(Required) unique 10-digit, 3-segment number. labelerCode-productCode-packageCode",
                    "type": "text/plain"
                  },
                  "type": "any",
                  "value": "0061-4321-03",
                  "key": "ndc"
                }
              ]
            },
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "GET"
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "f1568374-0090-4125-b2c9-f0252cdd1602",
                "type": "text/javascript",
                "exec": [
                  "./portman/pm-login.json"
                ]
              }
            }
          ]
        },
        {
          "id": "f9cff029-77d1-4270-be22-77ccbd3e1aef",
          "name": "get SPL",
          "request": {
            "name": "get SPL",
            "description": {
              "type": "text/plain"
            },
            "url": {
              "path": [
                "api",
                "admin",
                "spl",
                ":ndc"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": [
                {
                  "disabled": false,
                  "description": {
                    "content": "(Required) unique 10-digit, 3-segment number. labelerCode-productCode-packageCode",
                    "type": "text/plain"
                  },
                  "type": "any",
                  "value": "0061-4321-03",
                  "key": "ndc"
                }
              ]
            },
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "GET"
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "9f884b9b-1438-4876-93ee-11b898886355",
                "type": "text/javascript",
                "exec": [
                  "./portman/pm-login.json"
                ]
              }
            }
          ]
        },
        {
          "id": "45778857-5bba-4216-b8a2-d383a3fb4db5",
          "name": "record an image",
          "request": {
            "name": "record an image",
            "description": {
              "content": "REcords link for loading an image.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "api",
                "images"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n  \"id\": 888,\n  \"store\": {\n    \"id\": 888,\n    \"uri\": \"incididunt quis exercitation Ut non\",\n    \"name\": \"aliqua\",\n    \"headers\": [\n      {\n        \"key\": \"X-Auth-Token\",\n        \"value\": \"non enim est\"\n      },\n      {\n        \"key\": \"X-Auth-Token\",\n        \"value\": \"Lorem ut sunt\"\n      }\n    ]\n  },\n  \"link\": \"sit dolor in\",\n  \"name\": \"in dolore enim\",\n  \"thumbnail\": \"ut\",\n  \"keywords\": [\n    \"in quis eiusmod\",\n    \"veniam\"\n  ]\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "f2e85f3f-3bfe-46f2-8553-84f639431e95",
                "type": "text/javascript",
                "exec": [
                  "./portman/pm-login.json"
                ]
              }
            }
          ],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        }
      ],
      "event": []
    },
    {
      "id": "c3bfa560-adba-49dd-9e36-ceaaf127150e",
      "name": "MOR",
      "description": {
        "content": "available to farm managers.",
        "type": "text/plain"
      },
      "item": [
        {
          "id": "49d73636-852a-465f-ac8f-9e531021b5f1",
          "name": "load Farm App",
          "request": {
            "name": "load Farm App",
            "description": {
              "content": "load Farm App",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "farm"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Accept",
                "value": "text/html"
              }
            ],
            "method": "GET"
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "1b9295ee-a37d-43da-8bfd-96774e2ca9bf",
                "type": "text/javascript",
                "exec": [
                  "./portman/pm-login.json"
                ]
              }
            }
          ]
        },
        {
          "id": "19e28151-e376-4b99-a73e-639e89cda74c",
          "name": "withholds",
          "request": {
            "name": "withholds",
            "description": {
              "content": "get withholds that include present or future time.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "api",
                "users",
                "withholds"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "GET"
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "61ba07a1-3bea-48f4-963f-b5b8259f3559",
                "type": "text/javascript",
                "exec": [
                  "./portman/pm-login.json"
                ]
              }
            }
          ]
        },
        {
          "id": "d304b215-c0a4-47cf-baca-5a5b2f2236be",
          "name": "send a message to another user",
          "request": {
            "name": "send a message to another user",
            "description": {
              "content": "send a message to another user",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "api",
                "messages"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": false,
                  "description": {
                    "content": "Mode(s) or channel(s) to use in messaging, defaulting to EMAIL",
                    "type": "text/plain"
                  },
                  "key": "modes",
                  "value": "EMAIL|EMAIL"
                }
              ],
              "variable": []
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n  \"_type\": \"models.SimpleMessage\",\n  \"from\": 99,\n  \"to\": 99,\n  \"subject\": \"\",\n  \"message\": \"Hello <b>world</b>\",\n  \"detail\": \"magna\"\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "a8513f46-a4e1-4fc0-9cd6-92f55501e5ec",
                "type": "text/javascript",
                "exec": [
                  "./portman/pm-login.json"
                ]
              }
            }
          ],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        {
          "id": "411a4732-0cd9-4026-b087-dccdff8aadad",
          "name": "recall or decline a prescription",
          "request": {
            "name": "recall or decline a prescription",
            "description": {
              "content": "Prescriptions are immutable except for metadata, and cannot actually be deleted. This endpoint makes a prescription unavailable for use. If called by the VOR, it sets staus to RECALLED. If called by the MOR to whom it is prescribed, it sets status to DECLINED. New cases  cannot be enrolled if either RECALLED or DECLIENED.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "api",
                "prescriptions",
                ":id",
                ""
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": [
                {
                  "disabled": false,
                  "description": {
                    "content": "(Required) Prescription ID key",
                    "type": "text/plain"
                  },
                  "type": "any",
                  "value": "Vi1y9kbpEj7Upqy7",
                  "key": "id"
                }
              ]
            },
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "DELETE"
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "af7d2f49-2685-4b0a-b4df-c99c534724c4",
                "type": "text/javascript",
                "exec": [
                  "./portman/pm-login.json"
                ]
              }
            }
          ]
        },
        {
          "id": "1c56d25d-447f-44d1-96ad-c86b55b66dc7",
          "name": "enroll case,  deprecated in favor of POST /api/cases2 which will be moved to this path eventually",
          "request": {
            "name": "enroll case,  deprecated in favor of POST /api/cases2 which will be moved to this path eventually",
            "description": {
              "content": "Creates a Case linked to a prescription.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "api",
                "cases"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n  \"id\": 123,\n  \"rxId\": \"gG3pBCR1GCMKm89c\",\n  \"animalId\": \"Bossie34\",\n  \"initiationTime\": \"1984-05-23T13:14:55.293Z\",\n  \"caseData\": {\n    \"_type\": \"models.WeightData\",\n    \"weight\": {\n      \"value\": 50,\n      \"symbol\": \"kg\",\n      \"dimension\": \"Mass\"\n    }\n  },\n  \"note\": \"et incididunt magna\",\n  \"morId\": -55522907\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "dd585413-2151-479e-b381-f698f2f65f3f",
                "type": "text/javascript",
                "exec": [
                  "./portman/pm-login.json"
                ]
              }
            }
          ],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        {
          "id": "38e786d4-3d01-4351-91a7-e623e78ba579",
          "name": "enroll Case returning tasks",
          "request": {
            "name": "enroll Case returning tasks",
            "description": {
              "content": "Enrolls a Case from its Prescription and generates DoseTasks, Promise tasks, and Withhold as specified in the Protocol.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "api",
                "cases2"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n  \"id\": 123,\n  \"rxId\": \"gG3pBCR1GCMKm89c\",\n  \"animalId\": \"Bossie34\",\n  \"initiationTime\": \"1984-05-23T13:14:55.293Z\",\n  \"caseData\": {\n    \"_type\": \"models.WeightData\",\n    \"weight\": {\n      \"value\": 50,\n      \"symbol\": \"kg\",\n      \"dimension\": \"Mass\"\n    }\n  },\n  \"note\": \"et incididunt magna\",\n  \"morId\": -55522907\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "ec0941a6-2cdd-4cee-a8fc-cc1d13721da2",
                "type": "text/javascript",
                "exec": [
                  "./portman/pm-login.json"
                ]
              }
            }
          ],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        {
          "id": "088f9a69-0c7c-44bb-a8cb-6a75989e788b",
          "name": "get history for a single Case (with tasks)",
          "request": {
            "name": "get history for a single Case (with tasks)",
            "description": {
              "content": "Case plus tasks generated for the Case plus any data returned on task execution",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "api",
                "cases",
                ":caseId"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": [
                {
                  "disabled": false,
                  "description": {
                    "content": "(Required) ID number of Case",
                    "type": "text/plain"
                  },
                  "type": "any",
                  "value": "-74363535",
                  "key": "caseId"
                }
              ]
            },
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "GET"
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "3d980427-f2d5-492e-b720-33c58db26d03",
                "type": "text/javascript",
                "exec": [
                  "./portman/pm-login.json"
                ]
              }
            }
          ]
        },
        {
          "id": "23a189c0-212e-409c-a2e9-2fdcad8e58c8",
          "name": "prescriptions with cases",
          "request": {
            "name": "prescriptions with cases",
            "description": {
              "content": "A filtered list of Prescriptions with Cases enrolled to each.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "api",
                "rx-cases"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": false,
                  "description": {
                    "content": "ID number of prescribing VOR",
                    "type": "text/plain"
                  },
                  "key": "vorId",
                  "value": "-74363535"
                },
                {
                  "disabled": false,
                  "description": {
                    "content": "ID number of MOR prescribed to",
                    "type": "text/plain"
                  },
                  "key": "morId",
                  "value": "-74363535"
                },
                {
                  "disabled": false,
                  "description": {
                    "content": "ID number of protocol prescribed",
                    "type": "text/plain"
                  },
                  "key": "protocolId",
                  "value": "-74363535"
                },
                {
                  "disabled": false,
                  "description": {
                    "content": "last date limit for Case enrollment",
                    "type": "text/plain"
                  },
                  "key": "enrolledBefore",
                  "value": "1975-12-06T14:54:20.277Z"
                },
                {
                  "disabled": false,
                  "description": {
                    "content": "earliest date limit for Case enrollment",
                    "type": "text/plain"
                  },
                  "key": "enrolledAfter",
                  "value": "2006-05-26T01:31:05.815Z"
                },
                {
                  "disabled": false,
                  "description": {
                    "content": "page start",
                    "type": "text/plain"
                  },
                  "key": "offset",
                  "value": "0"
                },
                {
                  "disabled": false,
                  "description": {
                    "content": "maximum page length",
                    "type": "text/plain"
                  },
                  "key": "limit",
                  "value": "20"
                }
              ],
              "variable": []
            },
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "GET"
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "3773be50-c4d5-4101-af99-3f087d32288f",
                "type": "text/javascript",
                "exec": [
                  "./portman/pm-login.json"
                ]
              }
            }
          ]
        },
        {
          "id": "8101f27d-1bf6-4ef1-bfa7-75a14690ab57",
          "name": "execute task",
          "request": {
            "name": "execute task",
            "description": {
              "content": "Mark task status as completed",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "api",
                "users",
                "tasks"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n  \"_type\": \"amet dolor ad eu\",\n  \"animalId\": \"this\",\n  \"caseId\": 123,\n  \"detail\": \"voluptate in labore\",\n  \"doAt\": \"1946-04-16T22:26:21.483Z\",\n  \"id\": 123,\n  \"morId\": 123,\n  \"status\": \"REQUIRED\",\n  \"vorId\": 123,\n  \"executor\": 123\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "ee62c49a-c2a8-4b03-ad84-99f386f273d0",
                "type": "text/javascript",
                "exec": [
                  "./portman/pm-login.json"
                ]
              }
            }
          ],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        {
          "id": "4c54f5c1-1e67-4d4a-b177-fd1444c22017",
          "name": "get SPL",
          "request": {
            "name": "get SPL",
            "description": {
              "type": "text/plain"
            },
            "url": {
              "path": [
                "api",
                "admin",
                "spl",
                ":ndc"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": [
                {
                  "disabled": false,
                  "description": {
                    "content": "(Required) unique 10-digit, 3-segment number. labelerCode-productCode-packageCode",
                    "type": "text/plain"
                  },
                  "type": "any",
                  "value": "0061-4321-03",
                  "key": "ndc"
                }
              ]
            },
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "GET"
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "02125299-aad8-47ea-b62d-386363419cd8",
                "type": "text/javascript",
                "exec": [
                  "./portman/pm-login.json"
                ]
              }
            }
          ]
        },
        {
          "id": "7e8ae059-37c1-4f10-b3b9-0bbaf214ee53",
          "name": "record an image",
          "request": {
            "name": "record an image",
            "description": {
              "content": "REcords link for loading an image.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "api",
                "images"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n  \"id\": 888,\n  \"store\": {\n    \"id\": 888,\n    \"uri\": \"incididunt quis exercitation Ut non\",\n    \"name\": \"aliqua\",\n    \"headers\": [\n      {\n        \"key\": \"X-Auth-Token\",\n        \"value\": \"non enim est\"\n      },\n      {\n        \"key\": \"X-Auth-Token\",\n        \"value\": \"Lorem ut sunt\"\n      }\n    ]\n  },\n  \"link\": \"sit dolor in\",\n  \"name\": \"in dolore enim\",\n  \"thumbnail\": \"ut\",\n  \"keywords\": [\n    \"in quis eiusmod\",\n    \"veniam\"\n  ]\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "36ba78df-6fbc-4e04-adea-d4a8a22383ec",
                "type": "text/javascript",
                "exec": [
                  "./portman/pm-login.json"
                ]
              }
            }
          ],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        }
      ],
      "event": []
    },
    {
      "id": "ea60190f-2548-48f1-b2ce-91db1a2ea93f",
      "name": "ALL_USERS",
      "description": {
        "content": "available to all users.",
        "type": "text/plain"
      },
      "item": [
        {
          "id": "bd525a35-a110-40c5-b242-dfca80d5e08a",
          "name": "signin",
          "request": {
            "name": "signin",
            "description": {
              "content": "Log in with user credentials",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "signin"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": false,
                  "description": {
                    "content": "After a successful signin, the server will attempt to redirect to this path, if supplied.",
                    "type": "text/plain"
                  },
                  "key": "returnPath",
                  "value": "/spa/editor"
                }
              ],
              "variable": []
            },
            "header": [
              {
                "key": "Accept",
                "value": "text/html"
              }
            ],
            "method": "GET"
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "edd36098-b960-4285-89a1-b51882a26f15",
                "type": "text/javascript",
                "exec": [
                  "./portman/pm-login.json"
                ]
              }
            }
          ]
        },
        {
          "id": "915ceeb1-5660-42cb-9e26-eef8c00e7c5d",
          "name": "update user data",
          "request": {
            "name": "update user data",
            "description": {
              "content": "Users may update their own data. A VOR may also update User data of a User in a `CLIENT` relationship with that VOR. A SAOR may update data of any User.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "api",
                "users"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "PUT",
            "body": {
              "mode": "raw",
              "raw": "{\n  \"user\": {\n    \"uname\": \"exampleUser\",\n    \"userType\": \"VOR\",\n    \"firstname\": \"Example\",\n    \"lastname\": \"User\",\n    \"id\": 99,\n    \"email\": \"exampleUser@email.com\",\n    \"suffix\": \"DVM\"\n  }\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "9de99abf-b99e-4672-9f2d-37ca58046f50",
                "type": "text/javascript",
                "exec": [
                  "./portman/pm-login.json"
                ]
              }
            }
          ],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        {
          "id": "2bd17195-2ed9-4d85-b723-ebd19c5549bd",
          "name": "user login",
          "request": {
            "name": "user login",
            "description": {
              "content": "Authenticate a User and the app requesting a token, returning a token for use in future secured requests.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "api",
                "users",
                "logins"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n  \"apikey\": \"t0CGzpQ4cgu1OBy44sBt\",\n  \"identifier\": \"someUser\",\n  \"password\": \"somePassword\"\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "7a8b3616-e96f-420d-a2f0-f94f884b5bb3",
                "type": "text/javascript",
                "exec": [
                  "./portman/pm-login.json"
                ]
              }
            }
          ],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        {
          "id": "40e27c67-63c1-4415-9ab6-16275e760e67",
          "name": "renew token",
          "request": {
            "name": "renew token",
            "description": {
              "content": "Renews the User's access token for use in future secured requests.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "api",
                "users",
                "logins"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "GET"
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "83d90140-b23b-4241-b204-99fb26f892ab",
                "type": "text/javascript",
                "exec": [
                  "./portman/pm-login.json"
                ]
              }
            }
          ]
        },
        {
          "id": "d2f06d0e-8b46-408a-af47-6c3c3481b724",
          "name": "get user data",
          "request": {
            "name": "get user data",
            "description": {
              "content": "Returns User data as specified by User `id`. Any User may get their own data. A VOR may get User data of Users in a `CLIENT` relationship with that VOR. A SAOR may get data of any User.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "api",
                "users",
                ":id"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": [
                {
                  "disabled": false,
                  "description": {
                    "content": "(Required) User ID key",
                    "type": "text/plain"
                  },
                  "type": "any",
                  "value": "2",
                  "key": "id"
                }
              ]
            },
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "GET"
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "d5045214-95c5-4b33-b90a-b1f00a15de9b",
                "type": "text/javascript",
                "exec": [
                  "./portman/pm-login.json"
                ]
              }
            }
          ]
        },
        {
          "id": "90a70cd7-5c60-4ed2-a69b-0bdd8144402e",
          "name": "list of all",
          "request": {
            "name": "list of all",
            "description": {
              "content": "list of .",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "api",
                "visits",
                ":id"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": [
                {
                  "disabled": false,
                  "description": {
                    "content": "(Required) User ID key",
                    "type": "text/plain"
                  },
                  "type": "any",
                  "value": "2",
                  "key": "id"
                }
              ]
            },
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "GET"
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "172fa18b-79c4-48d4-b4b5-259c52026bf9",
                "type": "text/javascript",
                "exec": [
                  "./portman/pm-login.json"
                ]
              }
            }
          ]
        },
        {
          "id": "ceaa62e2-7aa5-41b4-9fb0-ab56f21a7897",
          "name": "update address",
          "request": {
            "name": "update address",
            "description": {
              "content": "A User may update their own address.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "api",
                "users",
                "addresses"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "PUT",
            "body": {
              "mode": "raw",
              "raw": "{\n  \"user\": {\n    \"uname\": \"exampleUser\",\n    \"userType\": \"VOR\",\n    \"firstname\": \"Example\",\n    \"lastname\": \"User\",\n    \"id\": 99,\n    \"email\": \"exampleUser@email.com\",\n    \"suffix\": \"DVM\"\n  }\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "0e25beac-24dc-4862-9874-1313d209ca51",
                "type": "text/javascript",
                "exec": [
                  "./portman/pm-login.json"
                ]
              }
            }
          ],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        {
          "id": "ab82f3ec-aa78-4380-8d99-1514600ee679",
          "name": "address of user",
          "request": {
            "name": "address of user",
            "description": {
              "content": "Address of user specified by `id`.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "api",
                "users",
                "addresses",
                ":id"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": [
                {
                  "disabled": false,
                  "description": {
                    "content": "(Required) User ID key",
                    "type": "text/plain"
                  },
                  "type": "any",
                  "value": "2",
                  "key": "id"
                }
              ]
            },
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "GET"
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "c1b1f0bb-bf17-4d85-93d5-7adaaefbac5d",
                "type": "text/javascript",
                "exec": [
                  "./portman/pm-login.json"
                ]
              }
            }
          ]
        },
        {
          "id": "73b9cd33-5ef7-4bbb-ae63-1acbadb2ba71",
          "name": "update profile",
          "request": {
            "name": "update profile",
            "description": {
              "content": "A User may update their own profile.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "api",
                "users",
                "profiles"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "PUT",
            "body": {
              "mode": "raw",
              "raw": "{\n  \"user\": {\n    \"address1\": \"123 Main St.\",\n    \"address2\": \"123 Main St.\",\n    \"emailNews\": true,\n    \"emailTips\": true,\n    \"firstname\": \"Example\",\n    \"lastname\": \"User\",\n    \"rxHeader\": \"nisi non \",\n    \"sandboxName\": \"in tempor\",\n    \"state\": \"Any State\",\n    \"town\": \"Anytown\",\n    \"uname\": \"exampleUser\",\n    \"userId\": 21744021,\n    \"userType\": \"VOR\",\n    \"zip\": \"12345-abcd\",\n    \"id\": 99,\n    \"email\": \"exampleUser@email.com\",\n    \"suffix\": \"DVM\",\n    \"busName\": \"testVOR Clinic\",\n    \"country\": \"USA\"\n  }\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "3ee5d284-86dc-44fd-b6b5-f5daecfbd091",
                "type": "text/javascript",
                "exec": [
                  "./portman/pm-login.json"
                ]
              }
            }
          ],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        {
          "id": "9510568f-dd4a-40e9-9461-acc37c6640c6",
          "name": "Profile of user",
          "request": {
            "name": "Profile of user",
            "description": {
              "content": "Profile of user specified by `id`.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "api",
                "users",
                "profiles",
                ":id"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": [
                {
                  "disabled": false,
                  "description": {
                    "content": "(Required) User ID key",
                    "type": "text/plain"
                  },
                  "type": "any",
                  "value": "2",
                  "key": "id"
                }
              ]
            },
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "GET"
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "fc490de1-2283-4069-be95-b0ba882a0907",
                "type": "text/javascript",
                "exec": [
                  "./portman/pm-login.json"
                ]
              }
            }
          ]
        },
        {
          "id": "aaceff3c-1294-4168-9a3a-be018f71b948",
          "name": "confirm Token",
          "request": {
            "name": "confirm Token",
            "description": {
              "content": "used for clickable link to confirm a token sent in email.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "api",
                "users",
                "token",
                ":token"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": [
                {
                  "disabled": false,
                  "description": {
                    "content": "(Required) single-use token required for authentication",
                    "type": "text/plain"
                  },
                  "type": "any",
                  "value": "2frfgjty",
                  "key": "token"
                }
              ]
            },
            "header": [
              {
                "key": "Accept",
                "value": "text/html"
              }
            ],
            "method": "GET"
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "6f1ff96c-4e47-48ec-b8bf-c49cb7bf6613",
                "type": "text/javascript",
                "exec": [
                  "./portman/pm-login.json"
                ]
              }
            }
          ]
        },
        {
          "id": "a2876853-f7fe-478d-bd4a-3fd1e7ddf432",
          "name": "record a User comment",
          "request": {
            "name": "record a User comment",
            "description": {
              "content": "Records a User comment to the database and emails admin. It supports privacy controls.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "api",
                "users",
                "comments"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n  \"comment\": \"some comment\",\n  \"userId\": 1,\n  \"public\": false\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "c3c26b51-0aa1-4c8f-9da0-1941f4b93aa4",
                "type": "text/javascript",
                "exec": [
                  "./portman/pm-login.json"
                ]
              }
            }
          ],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        {
          "id": "2beda3f8-4c59-4c7a-9081-f4ce560c6977",
          "name": "respond to a message identified by token",
          "request": {
            "name": "respond to a message identified by token",
            "description": {
              "content": "Respond to a message according to the content in the message, secured by a token that links the response to a UserMessage. Typically token expires in 48 hr.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "messages",
                "ok",
                ":token",
                ""
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": false,
                  "description": {
                    "content": "A message may include a question requiring a yes-or-no response. For example, an email message could include links for \"confirm\" or decline\" with only the first setting the response parameter to true.",
                    "type": "text/plain"
                  },
                  "key": "response",
                  "value": "false"
                }
              ],
              "variable": [
                {
                  "disabled": false,
                  "description": {
                    "content": "(Required) a token supplied in a message asking for a response. Token typically expires in 48 hr.",
                    "type": "text/plain"
                  },
                  "type": "any",
                  "value": "reprehenderit commodo in laboris",
                  "key": "token"
                }
              ]
            },
            "header": [
              {
                "key": "Accept",
                "value": "text/html"
              }
            ],
            "method": "GET"
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "2c23be8a-e16d-416a-bf4d-9ce53501c5ed",
                "type": "text/javascript",
                "exec": [
                  "./portman/pm-login.json"
                ]
              }
            }
          ]
        },
        {
          "id": "5701bd93-5810-4315-8e68-6f81ed2bdf9a",
          "name": "list of all diagnoses",
          "request": {
            "name": "list of all diagnoses",
            "description": {
              "content": "Returns an array of keys used to identify help messages.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "api",
                "helpkeys"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "GET"
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "ddbe4564-57c9-4d4b-9975-76967c13b12b",
                "type": "text/javascript",
                "exec": [
                  "./portman/pm-login.json"
                ]
              }
            }
          ]
        },
        {
          "id": "69dc81ee-2cc9-45de-8615-8364c6756596",
          "name": "help message",
          "request": {
            "name": "help message",
            "description": {
              "content": "return a help message, normally to be displayed in a popup help screen.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "api",
                "help",
                ":key"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": [
                {
                  "disabled": false,
                  "description": {
                    "content": "(Required) help screen key",
                    "type": "text/plain"
                  },
                  "type": "any",
                  "value": "reprehenderit commodo in laboris",
                  "key": "key"
                }
              ]
            },
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "GET"
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "36130add-f4fd-4753-9800-0b13a2e4980d",
                "type": "text/javascript",
                "exec": [
                  "./portman/pm-login.json"
                ]
              }
            }
          ]
        },
        {
          "id": "f5b3f342-f585-4281-b90a-7602ff747a7b",
          "name": "confirm VOR",
          "request": {
            "name": "confirm VOR",
            "description": {
              "type": "text/plain"
            },
            "url": {
              "path": [
                "api",
                "admin",
                "ConfirmVOR"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": false,
                  "key": "sendEmail",
                  "value": "true"
                }
              ],
              "variable": []
            },
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "PUT"
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "92e9d1ac-1eb7-47e7-9bc8-5416304ec6ad",
                "type": "text/javascript",
                "exec": [
                  "./portman/pm-login.json"
                ]
              }
            }
          ]
        },
        {
          "id": "64e81bb3-4dce-478a-a3d4-0adf5b20d820",
          "name": "get Image",
          "request": {
            "name": "get Image",
            "description": {
              "type": "text/plain"
            },
            "url": {
              "path": [
                "api",
                "images"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": false,
                  "key": "keywords",
                  "value": "pariatur ut dolore qui"
                },
                {
                  "disabled": false,
                  "key": "keywords",
                  "value": "ve"
                },
                {
                  "disabled": false,
                  "key": "productId",
                  "value": "-74363535"
                },
                {
                  "disabled": false,
                  "key": "dx",
                  "value": "-74363535"
                },
                {
                  "disabled": false,
                  "key": "ex",
                  "value": "-74363535"
                }
              ],
              "variable": []
            },
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "GET"
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "45f14cdd-fbc8-45e6-9847-cfe8306825a3",
                "type": "text/javascript",
                "exec": [
                  "./portman/pm-login.json"
                ]
              }
            }
          ]
        },
        {
          "id": "fc51c906-ac92-4622-916a-7f425868ddb9",
          "name": "get Image",
          "request": {
            "name": "get Image",
            "description": {
              "type": "text/plain"
            },
            "url": {
              "path": [
                "api",
                "images",
                ":id"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": [
                {
                  "disabled": false,
                  "description": {
                    "content": "(Required) ",
                    "type": "text/plain"
                  },
                  "type": "any",
                  "value": "reprehenderit commodo in laboris",
                  "key": "id"
                }
              ]
            },
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "GET"
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "b82b0c33-15d7-47e7-a4f2-6bfdfbc93d47",
                "type": "text/javascript",
                "exec": [
                  "./portman/pm-login.json"
                ]
              }
            }
          ]
        },
        {
          "id": "b2550236-9db5-4293-8ff1-530ccf59624b",
          "name": "get Image Keywards",
          "request": {
            "name": "get Image Keywards",
            "description": {
              "type": "text/plain"
            },
            "url": {
              "path": [
                "api",
                "imagekeywords"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "GET"
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "b6b8a6d6-95a7-42ca-afbb-7044b30d5575",
                "type": "text/javascript",
                "exec": [
                  "./portman/pm-login.json"
                ]
              }
            }
          ]
        },
        {
          "id": "fee87e54-fe42-4f45-9881-5de0174e80c9",
          "name": "get Image Stores",
          "request": {
            "name": "get Image Stores",
            "description": {
              "type": "text/plain"
            },
            "url": {
              "path": [
                "api",
                "imagestores"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "GET"
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "a93e6bc7-e9f4-48ba-85cc-0186588e8a57",
                "type": "text/javascript",
                "exec": [
                  "./portman/pm-login.json"
                ]
              }
            }
          ]
        }
      ],
      "event": []
    },
    {
      "id": "03103d8e-47b0-4439-b425-af231709f30d",
      "name": "SAOR",
      "description": {
        "content": "available to system administrators.",
        "type": "text/plain"
      },
      "item": [
        {
          "id": "f8ae4017-62cc-4016-ad45-4af26ba99ed1",
          "name": "load Editor",
          "request": {
            "name": "load Editor",
            "description": {
              "content": "load Protocol Editor",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "editor"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Accept",
                "value": "text/html"
              }
            ],
            "method": "GET"
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "6354babb-52d6-43d8-935f-cf92916a0413",
                "type": "text/javascript",
                "exec": [
                  "./portman/pm-login.json"
                ]
              }
            }
          ]
        },
        {
          "id": "20b7e72b-e991-45fb-9628-2260db2e5087",
          "name": "load Farm App",
          "request": {
            "name": "load Farm App",
            "description": {
              "content": "load Farm App",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "farm"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Accept",
                "value": "text/html"
              }
            ],
            "method": "GET"
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "594fd0c3-8af3-4892-a40b-c5fdd282ff9d",
                "type": "text/javascript",
                "exec": [
                  "./portman/pm-login.json"
                ]
              }
            }
          ]
        },
        {
          "id": "2812abfb-4978-4ab5-a105-4d893a61678a",
          "name": "load Admin App",
          "request": {
            "name": "load Admin App",
            "description": {
              "content": "load Admin app",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "admin"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Accept",
                "value": "text/html"
              }
            ],
            "method": "GET"
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "57df8469-4228-494f-bba4-c2b18cb455ec",
                "type": "text/javascript",
                "exec": [
                  "./portman/pm-login.json"
                ]
              }
            }
          ]
        },
        {
          "id": "428e3f7a-9d92-49de-a0ee-5bb43133635d",
          "name": "delete user",
          "request": {
            "name": "delete user",
            "description": {
              "content": "This endpoint supports the (reversible) \"delete\" of a User by setting user.status to `REMOVED`. Removed Users are not visible in normal queries.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "api",
                "users",
                ":id"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": [
                {
                  "disabled": false,
                  "description": {
                    "content": "(Required) User ID key",
                    "type": "text/plain"
                  },
                  "type": "any",
                  "value": "5",
                  "key": "id"
                }
              ]
            },
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "DELETE"
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "2d1ee89a-ec4f-44ef-8726-71c2aae2b6f8",
                "type": "text/javascript",
                "exec": [
                  "./portman/pm-login.json"
                ]
              }
            }
          ]
        },
        {
          "id": "377c994a-7d82-43b2-8a28-046e000cde48",
          "name": "delete sandboxClient",
          "request": {
            "name": "delete sandboxClient",
            "description": {
              "content": "Delete the User and CLIENT Relation records from the database,  irreversibly removing the sandbocx client, but not any existing Prescriptions.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "api",
                "users",
                "sandboxClient"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "DELETE"
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "ea5a1a13-59e7-4672-9038-c4c7e4f0ae17",
                "type": "text/javascript",
                "exec": [
                  "./portman/pm-login.json"
                ]
              }
            }
          ]
        },
        {
          "id": "c8ff7dc0-a94a-4840-999e-5710a8888d19",
          "name": "create Tag",
          "request": {
            "name": "create Tag",
            "description": {
              "content": "Create a Tag.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "api",
                "protocols",
                "tags"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n  \"id\": 8,\n  \"color\": \"#516cc6\",\n  \"name\": \"ea Duis\",\n  \"fixes\": [\n    {\n      \"_type\": \"anim veniam dolor\",\n      \"detail\": \"id est nostrud nisi\",\n      \"message\": \"aliqua\",\n      \"title\": \"fugiat cillum Lorem\"\n    },\n    {\n      \"_type\": \"ipsum\",\n      \"detail\": \"esse laboris nisi id\",\n      \"message\": \"consectetur fugiat consequat Ut n\",\n      \"title\": \"magna occa\"\n    }\n  ]\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "d6780412-39ee-486f-b801-5f447921bf4e",
                "type": "text/javascript",
                "exec": [
                  "./portman/pm-login.json",
                  "// Validate status 2xx \npm.test(\"[POST]::/api/protocols/tags - Status code is 2xx\", function () {\n   pm.response.to.be.success;\n});\n"
                ]
              }
            }
          ],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        {
          "id": "11666583-2cce-4299-bdf9-1e03bb775c11",
          "name": "Tag",
          "request": {
            "name": "Tag",
            "description": {
              "content": "Delete Tag.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "api",
                "protocols",
                "tags",
                ":id"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": [
                {
                  "disabled": false,
                  "description": {
                    "content": "(Required) ",
                    "type": "text/plain"
                  },
                  "type": "any",
                  "value": "-74363535",
                  "key": "id"
                }
              ]
            },
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "DELETE"
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "2867cc12-078f-45aa-8416-6aee9c6ca5b4",
                "type": "text/javascript",
                "exec": [
                  "./portman/pm-login.json",
                  "// Validate status 2xx \npm.test(\"[DELETE]::/api/protocols/tags/:id - Status code is 2xx\", function () {\n   pm.response.to.be.success;\n});\n"
                ]
              }
            }
          ]
        },
        {
          "id": "67af3185-c4e6-4b12-80ca-720f7ed6122d",
          "name": "create a public Promise",
          "request": {
            "name": "create a public Promise",
            "description": {
              "content": "REcord a Promise type that will be public (available to all VORs)",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "api",
                "protocols",
                "publicPromises"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n  \"_type\": \"models.AffirmationPromise\",\n  \"name\": \"ID promise\",\n  \"when\": \"PT0H\",\n  \"id\": 2345,\n  \"ownerId\": 123,\n  \"descrip\": \"You must give ID for each case enrolled\"\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "2aab5f1d-a289-4a5f-a413-ca238586da95",
                "type": "text/javascript",
                "exec": [
                  "./portman/pm-login.json",
                  "// Validate status 2xx \npm.test(\"[POST]::/api/protocols/publicPromises - Status code is 2xx\", function () {\n   pm.response.to.be.success;\n});\n"
                ]
              }
            }
          ],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        {
          "id": "61812355-7f89-4596-8f0a-7f4fc036c982",
          "name": "send a message to another user",
          "request": {
            "name": "send a message to another user",
            "description": {
              "content": "send a message to another user",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "api",
                "messages"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": false,
                  "description": {
                    "content": "Mode(s) or channel(s) to use in messaging, defaulting to EMAIL",
                    "type": "text/plain"
                  },
                  "key": "modes",
                  "value": "EMAIL|EMAIL"
                }
              ],
              "variable": []
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n  \"_type\": \"models.SimpleMessage\",\n  \"from\": 99,\n  \"to\": 99,\n  \"subject\": \"\",\n  \"message\": \"Hello <b>world</b>\",\n  \"detail\": \"magna\"\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "cf7cbc2a-eb38-4951-bb76-5844bac26406",
                "type": "text/javascript",
                "exec": [
                  "./portman/pm-login.json"
                ]
              }
            }
          ],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        {
          "id": "1fda3856-6806-4240-85e6-246aac5934f4",
          "name": "create Eligibility",
          "request": {
            "name": "create Eligibility",
            "description": {
              "content": "Creation  a Eligibility.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "api",
                "protocols",
                "eligibilities"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n  \"id\": 1,\n  \"name\": \"Beef Cattle\",\n  \"fdaSpecies\": [\n    \"goats\",\n    \"emus\"\n  ]\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "92b1e484-eb0b-4f71-aef2-f0e5e03dfa37",
                "type": "text/javascript",
                "exec": [
                  "./portman/pm-login.json",
                  "// Validate status 2xx \npm.test(\"[POST]::/api/protocols/eligibilities - Status code is 2xx\", function () {\n   pm.response.to.be.success;\n});\n"
                ]
              }
            }
          ],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        {
          "id": "169f1212-5b0b-49d0-a0af-c3d3854b26d0",
          "name": "Eligibility",
          "request": {
            "name": "Eligibility",
            "description": {
              "content": "Delete Eligibility.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "api",
                "protocols",
                "eligibilities",
                "{{id}}}"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "DELETE"
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "6c3ae8c8-6736-4daf-9547-14adacc071f2",
                "type": "text/javascript",
                "exec": [
                  "./portman/pm-login.json"
                ]
              }
            }
          ]
        },
        {
          "id": "8d4cef74-c7c6-42b1-9766-0b6d424b6910",
          "name": "create Eligibility",
          "request": {
            "name": "create Eligibility",
            "description": {
              "content": "Create  a Diagnosis.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "api",
                "protocols",
                "diagnoses"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n  \"id\": 8,\n  \"name\": \"Pain/inflammation (musculoskeletal), treatment\"\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "3f474261-a694-405c-b5cf-faa6afc452a6",
                "type": "text/javascript",
                "exec": [
                  "./portman/pm-login.json",
                  "// Validate status 2xx \npm.test(\"[POST]::/api/protocols/diagnoses - Status code is 2xx\", function () {\n   pm.response.to.be.success;\n});\n"
                ]
              }
            }
          ],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        {
          "id": "24f2d9e7-4c7d-45dc-9105-eb659f8c3768",
          "name": "Diagnosis",
          "request": {
            "name": "Diagnosis",
            "description": {
              "content": "Delete Diagnosis.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "api",
                "protocols",
                "diagnoses",
                ":id"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": [
                {
                  "disabled": false,
                  "description": {
                    "content": "(Required) ",
                    "type": "text/plain"
                  },
                  "type": "any",
                  "value": "-74363535",
                  "key": "id"
                }
              ]
            },
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "DELETE"
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "3ab27db7-799f-4900-b3d4-8df8295f66f5",
                "type": "text/javascript",
                "exec": [
                  "./portman/pm-login.json",
                  "// Validate status 2xx \npm.test(\"[DELETE]::/api/protocols/diagnoses/:id - Status code is 2xx\", function () {\n   pm.response.to.be.success;\n});\n"
                ]
              }
            }
          ]
        },
        {
          "id": "79cf1113-a45d-45a1-a4ad-113e30206666",
          "name": "create help screen",
          "request": {
            "name": "create help screen",
            "description": {
              "content": "Creation  a help screen.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "api",
                "help",
                ":key"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": [
                {
                  "disabled": false,
                  "description": {
                    "content": "(Required) help screen key",
                    "type": "text/plain"
                  },
                  "type": "any",
                  "value": "reprehenderit commodo in laboris",
                  "key": "key"
                }
              ]
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n  \"key\": \"laborum in sunt ea\",\n  \"msg\": \"exercitation et\",\n  \"lang\": \"irure veniam Ut in\"\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "10fd205e-9fd8-45ea-8e2e-71b0664dcb8a",
                "type": "text/javascript",
                "exec": [
                  "./portman/pm-login.json"
                ]
              }
            }
          ],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        {
          "id": "027fc6f9-5e17-4af6-aa05-dff1f27d7ce7",
          "name": "delete help screen",
          "request": {
            "name": "delete help screen",
            "description": {
              "content": "Delete help screen.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "api",
                "help",
                ":key"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": [
                {
                  "disabled": false,
                  "description": {
                    "content": "(Required) help screen key",
                    "type": "text/plain"
                  },
                  "type": "any",
                  "value": "reprehenderit commodo in laboris",
                  "key": "key"
                }
              ]
            },
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "DELETE"
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "2c804aaf-e897-4473-bcfe-98651b5f6a1b",
                "type": "text/javascript",
                "exec": [
                  "./portman/pm-login.json"
                ]
              }
            }
          ]
        },
        {
          "id": "985a6bb2-b605-481d-93b2-470b04640b5b",
          "name": "create labelclaim",
          "request": {
            "name": "create labelclaim",
            "description": {
              "content": "Creation  a labelclaim.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "api",
                "labels"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n  \"id\": 1,\n  \"fdaSpecies\": [\n    \"ChickensBroilers\",\n    \"ChickensBroilers\"\n  ],\n  \"diagnosis\": \"pain (colic), symptomatic treatment\",\n  \"dxId\": 2002,\n  \"product\": \"Prevail™ Flunixin Meglumine Injection\",\n  \"route\": \"intr-corporeal\",\n  \"wtMeatHrs\": 22,\n  \"wtMilkHrs\": 5,\n  \"productId\": 1315018,\n  \"_dose\": \"3.0 ml per kg repeat in 6 hours and again in 24 hours\",\n  \"sequenceFunction\": {\n    \"_type\": \"models.SeqSingleDose\"\n  },\n  \"sizeFunction\": {\n    \"_type\": \"models.FixedDoseFunction\",\n    \"dose\": {\n      \"quantity\": {\n        \"dimension\": \"Mass\",\n        \"value\": 3,\n        \"symbol\": \"oz\"\n      }\n    }\n  },\n  \"doseNote\": \"THis can contain <b>html</b> tags\",\n  \"wtNote\": \"not for dairy animals\",\n  \"ndc\": \"200-308\",\n  \"generic\": \"OXYTETRACYCLINE\"\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "c12f5acc-f0fb-42ca-82c6-55a9a69ac5f4",
                "type": "text/javascript",
                "exec": [
                  "./portman/pm-login.json"
                ]
              }
            }
          ],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        {
          "id": "6299e55f-a6ea-4631-bd37-aa21ca307297",
          "name": "update labelclaim",
          "request": {
            "name": "update labelclaim",
            "description": {
              "content": "update a labelclaim.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "api",
                "labels"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "PUT",
            "body": {
              "mode": "raw",
              "raw": "{\n  \"id\": 1,\n  \"fdaSpecies\": [\n    \"ChickensBroilers\",\n    \"ChickensBroilers\"\n  ],\n  \"diagnosis\": \"pain (colic), symptomatic treatment\",\n  \"dxId\": 2002,\n  \"product\": \"Prevail™ Flunixin Meglumine Injection\",\n  \"route\": \"intr-corporeal\",\n  \"wtMeatHrs\": 22,\n  \"wtMilkHrs\": 5,\n  \"productId\": 1315018,\n  \"_dose\": \"3.0 ml per kg repeat in 6 hours and again in 24 hours\",\n  \"sequenceFunction\": {\n    \"_type\": \"models.SeqSingleDose\"\n  },\n  \"sizeFunction\": {\n    \"_type\": \"models.FixedDoseFunction\",\n    \"dose\": {\n      \"quantity\": {\n        \"dimension\": \"Mass\",\n        \"value\": 3,\n        \"symbol\": \"oz\"\n      }\n    }\n  },\n  \"doseNote\": \"THis can contain <b>html</b> tags\",\n  \"wtNote\": \"not for dairy animals\",\n  \"ndc\": \"200-308\",\n  \"generic\": \"OXYTETRACYCLINE\"\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "e543964c-d64f-4540-ba73-02241a77f281",
                "type": "text/javascript",
                "exec": [
                  "./portman/pm-login.json"
                ]
              }
            }
          ],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        {
          "id": "519674a3-22ad-4d96-b4e7-7a2878ba50e0",
          "name": "get SPL",
          "request": {
            "name": "get SPL",
            "description": {
              "type": "text/plain"
            },
            "url": {
              "path": [
                "api",
                "admin",
                "spl",
                ":ndc"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": [
                {
                  "disabled": false,
                  "description": {
                    "content": "(Required) unique 10-digit, 3-segment number. labelerCode-productCode-packageCode",
                    "type": "text/plain"
                  },
                  "type": "any",
                  "value": "0061-4321-03",
                  "key": "ndc"
                }
              ]
            },
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "GET"
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "95a21194-1434-4f62-abbf-a089ead0cfc7",
                "type": "text/javascript",
                "exec": [
                  "./portman/pm-login.json"
                ]
              }
            }
          ]
        },
        {
          "id": "dc8c1e32-fdc8-440d-8fee-f7cc5b65aba0",
          "name": "greenbook drugs",
          "request": {
            "name": "greenbook drugs",
            "description": {
              "content": "Return GBDs.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "api",
                "admin",
                "gbd"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": false,
                  "description": {
                    "content": "first section labeler code of a NDC",
                    "type": "text/plain"
                  },
                  "key": "ndcProd",
                  "value": "-74363535"
                },
                {
                  "disabled": false,
                  "description": {
                    "content": "mid section product code of a NDC",
                    "type": "text/plain"
                  },
                  "key": "ndcLabeler",
                  "value": "-74363535"
                },
                {
                  "disabled": false,
                  "description": {
                    "content": "starting row number in GBD table",
                    "type": "text/plain"
                  },
                  "key": "ndcBrand",
                  "value": "-74363535"
                },
                {
                  "disabled": false,
                  "description": {
                    "content": "maximum number of rows to return",
                    "type": "text/plain"
                  },
                  "key": "offset",
                  "value": "-74363535"
                },
                {
                  "disabled": false,
                  "description": {
                    "content": "end section package code of a NDC",
                    "type": "text/plain"
                  },
                  "key": "eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJleUp3Y205MmFXUmxja2xFSWpvaVkzSmxaR1Z1ZEdsaGJITWlMQ0p3Y205MmFXUmxja3RsZVNJNkluUmxjM1JXVDFJaWZRPT0iLCJpc3MiOiJwbGF5LXNpbGhvdWV0dGUiLCJle***...",
                  "value": "-74363535"
                }
              ],
              "variable": []
            },
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "GET"
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "5e2551ea-83d1-4ee9-b2b1-2ed29fc6a7c5",
                "type": "text/javascript",
                "exec": [
                  "./portman/pm-login.json"
                ]
              }
            }
          ]
        },
        {
          "id": "9ae46627-3299-4223-8423-a5104926f1aa",
          "name": "update GBD",
          "request": {
            "name": "update GBD",
            "description": {
              "content": "M",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "api",
                "admin",
                "gbd"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "PUT",
            "body": {
              "mode": "raw",
              "raw": "{\n  \"ndc\": \"0010-3495\",\n  \"proprietery\": \"Bio-Mycin 200\",\n  \"nonProp\": \"OXYTETRACYCLINE\",\n  \"ingredients\": \"OXYTETRACYCLINE\",\n  \"labeler\": \"Boehringer Ingelheim Vetmedica, Inc.\",\n  \"productType\": \"OTC ANIMAL DRUG\",\n  \"marketCat\": \"ANADA\",\n  \"appNumber\": \"ANADA200008\",\n  \"link\": \"https://www.accessdata.fda.gov/spl/data/c9491ada-6813-4548-8872-57bb38a58feb/c9491ada-6813-4548-8872-57bb38a58feb.xml\",\n  \"status\": 0,\n  \"lastChanged\": \"1957-03-16T08:16:38.297Z\"\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "73b2bbe7-7723-489c-9f5c-104a267e3071",
                "type": "text/javascript",
                "exec": [
                  "./portman/pm-login.json"
                ]
              }
            }
          ],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        {
          "id": "00cbb0c9-a457-4768-b7c2-4d06144da5c8",
          "name": "get Greenbook Drug",
          "request": {
            "name": "get Greenbook Drug",
            "description": {
              "type": "text/plain"
            },
            "url": {
              "path": [
                "api",
                "admin",
                "gbd",
                ":ndc"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": [
                {
                  "disabled": false,
                  "description": {
                    "content": "(Required) unique 10-digit, 3-segment number. labelerCode-productCode-packageCode",
                    "type": "text/plain"
                  },
                  "type": "any",
                  "value": "0061-4321-03",
                  "key": "ndc"
                }
              ]
            },
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "GET"
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "1616cdcc-f4a0-4bb7-903e-013690f7c9f4",
                "type": "text/javascript",
                "exec": [
                  "./portman/pm-login.json"
                ]
              }
            }
          ]
        }
      ],
      "event": []
    },
    {
      "id": "11e9a633-2e00-4adc-a26f-25aa42bda9ef",
      "name": "TOR",
      "description": {
        "content": "available to farm employees.",
        "type": "text/plain"
      },
      "item": [],
      "event": []
    },
    {
      "id": "63139e5f-2555-48bb-b968-6e43b08fb977",
      "name": "LOR",
      "description": {
        "content": "available to pharmacy curators.",
        "type": "text/plain"
      },
      "item": [],
      "event": []
    },
    {
      "id": "e640a423-1710-4bc7-9350-0bf6b0b49f25",
      "name": "FARM",
      "description": {
        "content": "available to farm accounts.",
        "type": "text/plain"
      },
      "item": [],
      "event": []
    },
    {
      "id": "bb729bb4-fcbd-4094-b221-e0325691757b",
      "name": "CLINIC",
      "description": {
        "content": "available to vet clinic accounts.",
        "type": "text/plain"
      },
      "item": [],
      "event": []
    },
    {
      "id": "2f5d97bb-473c-44f6-868c-f7d38ecd8d7f",
      "name": "User",
      "description": {
        "content": "Endpoints and models related to user management.",
        "type": "text/plain"
      },
      "item": [],
      "event": []
    },
    {
      "id": "152706bb-016d-444f-b963-a8f489bebefc",
      "name": "Protocol",
      "description": {
        "content": "Endpoints and models related to protocol management.",
        "type": "text/plain"
      },
      "item": [],
      "event": []
    },
    {
      "id": "c7eb7f53-1237-48e6-87c0-25cce968ace7",
      "name": "Prescription",
      "description": {
        "content": "Endpoints and models related to prescription management.",
        "type": "text/plain"
      },
      "item": [],
      "event": []
    },
    {
      "id": "22ba1fba-79bb-42cc-b641-bae5ac26d3ce",
      "name": "Case",
      "description": {
        "content": "Endpoints and models related to case management.",
        "type": "text/plain"
      },
      "item": [],
      "event": []
    },
    {
      "id": "b31c77ec-548b-460b-8d4a-aa7b50ddadf7",
      "name": "Promise",
      "description": {
        "content": "Endpoints and models related to promise management.",
        "type": "text/plain"
      },
      "item": [],
      "event": []
    },
    {
      "id": "d13e3492-aac3-4833-8361-df9c0758c8eb",
      "name": "ANY_USER",
      "description": {
        "content": "",
        "type": "text/plain"
      },
      "item": [
        {
          "id": "8d1b364b-c87e-4df8-b06d-33d2ab8847b8",
          "name": "log a message to server",
          "request": {
            "name": "log a message to server",
            "description": {
              "content": "adds a timestamped entry to server logs",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "api",
                "logging"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": false,
                  "description": {
                    "content": "logging level severity, defaulting to INFO",
                    "type": "text/plain"
                  },
                  "key": "severity",
                  "value": "INFO"
                }
              ],
              "variable": []
            },
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "POST"
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "36618b7e-a6a3-4b9d-a74a-9e89cfa77ddb",
                "type": "text/javascript",
                "exec": [
                  "./portman/pm-login.json"
                ]
              }
            }
          ]
        }
      ],
      "event": []
    },
    {
      "id": "1ddc92e1-cb3b-4859-ba9f-9cd33d2f960b",
      "name": "create profile",
      "request": {
        "name": "create profile",
        "description": {
          "content": "Create a User with Address, and UserPrefs.",
          "type": "text/plain"
        },
        "url": {
          "path": [
            "api",
            "users",
            "profiles"
          ],
          "host": [
            "{{baseUrl}}"
          ],
          "query": [],
          "variable": []
        },
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json"
          },
          {
            "key": "Accept",
            "value": "application/json"
          }
        ],
        "method": "POST",
        "body": {
          "mode": "raw",
          "raw": "{\n  \"user\": {\n    \"address1\": \"123 Main St.\",\n    \"address2\": \"123 Main St.\",\n    \"emailNews\": true,\n    \"emailTips\": true,\n    \"firstname\": \"Example\",\n    \"lastname\": \"User\",\n    \"rxHeader\": \"nisi non \",\n    \"sandboxName\": \"in tempor\",\n    \"state\": \"Any State\",\n    \"town\": \"Anytown\",\n    \"uname\": \"exampleUser\",\n    \"userId\": 21744021,\n    \"userType\": \"VOR\",\n    \"zip\": \"12345-abcd\",\n    \"id\": 99,\n    \"email\": \"exampleUser@email.com\",\n    \"suffix\": \"DVM\",\n    \"busName\": \"testVOR Clinic\",\n    \"country\": \"USA\"\n  }\n}",
          "options": {
            "raw": {
              "language": "json"
            }
          }
        }
      },
      "response": [
        {
          "_": {
            "postman_previewlanguage": "json"
          },
          "id": "f30f68be-70de-4ee7-a8ab-05061276ab91",
          "name": "the created Profile",
          "originalRequest": {
            "url": {
              "path": [
                "api",
                "users",
                "profiles"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "description": {
                  "content": "Added as a part of security scheme: apikey",
                  "type": "text/plain"
                },
                "key": "X-APIKEY",
                "value": "<API Key>"
              }
            ],
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n  \"user\": {\n    \"address1\": \"123 Main St.\",\n    \"address2\": \"123 Main St.\",\n    \"emailNews\": true,\n    \"emailTips\": true,\n    \"firstname\": \"Example\",\n    \"lastname\": \"User\",\n    \"rxHeader\": \"nisi non \",\n    \"sandboxName\": \"in tempor\",\n    \"state\": \"Any State\",\n    \"town\": \"Anytown\",\n    \"uname\": \"exampleUser\",\n    \"userId\": 21744021,\n    \"userType\": \"VOR\",\n    \"zip\": \"12345-abcd\",\n    \"id\": 99,\n    \"email\": \"exampleUser@email.com\",\n    \"suffix\": \"DVM\",\n    \"busName\": \"testVOR Clinic\",\n    \"country\": \"USA\"\n  }\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            }
          },
          "status": "OK",
          "code": 200,
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "body": "{\n  \"address1\": \"123 Main St.\",\n  \"address2\": \"123 Main St.\",\n  \"emailNews\": false,\n  \"emailTips\": false,\n  \"firstname\": \"Example\",\n  \"lastname\": \"User\",\n  \"rxHeader\": \"veniam dolo\",\n  \"sandboxName\": \"velit Ut est\",\n  \"state\": \"Any State\",\n  \"town\": \"Anytown\",\n  \"uname\": \"exampleUser\",\n  \"userId\": 55565148,\n  \"userType\": \"VOR\",\n  \"zip\": \"12345-abcd\",\n  \"id\": 99,\n  \"email\": \"exampleUser@email.com\",\n  \"suffix\": \"DVM\",\n  \"busName\": \"testVOR Clinic\",\n  \"country\": \"USA\"\n}",
          "cookie": []
        },
        {
          "_": {
            "postman_previewlanguage": "json"
          },
          "id": "505a7a6e-7ad2-433b-b5f8-d46efc20b4f9",
          "name": "Authorization required",
          "originalRequest": {
            "url": {
              "path": [
                "api",
                "users",
                "profiles"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "description": {
                  "content": "Added as a part of security scheme: apikey",
                  "type": "text/plain"
                },
                "key": "X-APIKEY",
                "value": "<API Key>"
              }
            ],
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n  \"user\": {\n    \"address1\": \"123 Main St.\",\n    \"address2\": \"123 Main St.\",\n    \"emailNews\": true,\n    \"emailTips\": true,\n    \"firstname\": \"Example\",\n    \"lastname\": \"User\",\n    \"rxHeader\": \"nisi non \",\n    \"sandboxName\": \"in tempor\",\n    \"state\": \"Any State\",\n    \"town\": \"Anytown\",\n    \"uname\": \"exampleUser\",\n    \"userId\": 21744021,\n    \"userType\": \"VOR\",\n    \"zip\": \"12345-abcd\",\n    \"id\": 99,\n    \"email\": \"exampleUser@email.com\",\n    \"suffix\": \"DVM\",\n    \"busName\": \"testVOR Clinic\",\n    \"country\": \"USA\"\n  }\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            }
          },
          "status": "Unauthorized",
          "code": 401,
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "body": "{\n  \"title\": \"incorrect username or password\",\n  \"status\": 404,\n  \"errorType\": \"/errors/incorrect-user-pass\",\n  \"detail\": \"Authentication failed due to incorrect username or password.\",\n  \"instance\": \"/login/log/abc123\"\n}",
          "cookie": []
        }
      ],
      "event": [
        {
          "listen": "test",
          "script": {
            "id": "22b7b52b-ca13-49df-be58-dc6c1262e738",
            "type": "text/javascript",
            "exec": [
              "./portman/pm-login.json"
            ]
          }
        }
      ],
      "protocolProfileBehavior": {
        "disableBodyPruning": true
      }
    }
  ],
  "auth": {
    "type": "apikey",
    "apikey": [
      {
        "type": "any",
        "value": "X-APIKEY",
        "key": "key"
      },
      {
        "type": "any",
        "value": "<API Key>",
        "key": "value"
      },
      {
        "type": "any",
        "value": "header",
        "key": "in"
      }
    ]
  },
  "event": [],
  "variable": [
    {
      "type": "string",
      "value": "https://test.vcpr.org",
      "key": "baseUrl"
    },
    {
      "disabled": false,
      "description": {
        "content": "(Required) ",
        "type": "text/plain"
      },
      "type": "any",
      "value": "-74363535",
      "key": "id"
    }
  ],
  "info": {
    "_postman_id": "cda3adc5-8ab5-4270-8caf-c2c18c63eb4b",
    "name": "PublicAPI",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
    "description": {
      "content": "API serving the Veterinary Protocol Manager&trade; application. &copy; DairySight LLC, Argyle NY 2020\n\nContact Support:\n Name: Jim Ehrlich, DVM\n Email: jehrlich@vcpr.org",
      "type": "text/plain"
    }
  }
}
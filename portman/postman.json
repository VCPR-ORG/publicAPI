{
  "_": {
    "postman_id": "4881cc4e-f4e6-4489-bfed-08220d1df2a1"
  },
  "item": [
    {
      "id": "93f8747f-0e35-446d-9080-148df8b16352",
      "name": "VOR",
      "description": {
        "content": "available to veterinarians.",
        "type": "text/plain"
      },
      "item": [
        {
          "id": "8b9e2e3f-8ffa-40b3-a87b-182a232a1af8",
          "name": "list of Users IDs",
          "request": {
            "name": "list of Users IDs",
            "description": {
              "content": "Returns the ID and names of all active Users of the type(s) specified.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "api",
                "users"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": [
                {
                  "disabled": false,
                  "description": {
                    "content": "(Required) User types to include",
                    "type": "text/plain"
                  },
                  "type": "any",
                  "value": "VOR",
                  "key": "usertypes"
                }
              ]
            },
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "GET"
          },
          "response": [],
          "event": []
        },
        {
          "id": "51b262f2-5850-4066-b8af-4f78ca93aeb8",
          "name": "list of VORs",
          "request": {
            "name": "list of VORs",
            "description": {
              "content": "list of VOR users.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "api",
                "users",
                "vors"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "GET"
          },
          "response": [],
          "event": []
        },
        {
          "id": "da2d48d9-5191-45ad-a5e8-68a56b3d99ee",
          "name": "create a sandbox user",
          "request": {
            "name": "create a sandbox user",
            "description": {
              "content": "Create a sandbox user of MOR `UserType` who is a `CLIENT` of logged-in VOR. This allows the VOR to prescribe to the sandbox client, then view prescriptions from the client's point of view using the Farm App.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "api",
                "users",
                "sandboxClient"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "\"ex esse ipsum\"",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            }
          },
          "response": [],
          "event": [],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        {
          "id": "98a8fcee-5a49-476b-94ec-1fbf8e01d570",
          "name": "add a relationship",
          "request": {
            "name": "add a relationship",
            "description": {
              "content": "adds a relationship of the type specified by `name` to the current User, who must be a VOR. Defaults to CLIENT relationship.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "api",
                "users",
                "relations"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "\"CLIENT\"",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            }
          },
          "response": [],
          "event": [],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        {
          "id": "22853919-0c8b-4ff7-8e9e-936f600b44f1",
          "name": "get my right-related users",
          "request": {
            "name": "get my right-related users",
            "description": {
              "content": "get my right-related users",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "api",
                "users",
                "my-right-relations"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": false,
                  "key": "relationship",
                  "value": "CLIENT"
                },
                {
                  "disabled": false,
                  "description": {
                    "content": "whether to return user's addresses too",
                    "type": "text/plain"
                  },
                  "key": "withAddress",
                  "value": "false"
                }
              ],
              "variable": []
            },
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "GET"
          },
          "response": [],
          "event": []
        },
        {
          "id": "96b17da8-7b41-4edf-a3a4-5c3185c3baeb",
          "name": "add a User with relationship",
          "request": {
            "name": "add a User with relationship",
            "description": {
              "content": "This endpoint adds a User and a relationship of the type specified by `name` to the current User, who must be a VOR. Defaults to CLIENT relationship.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "api",
                "users",
                "my-right-relations"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": false,
                  "description": {
                    "content": "(Required) ",
                    "type": "text/plain"
                  },
                  "key": "relationship",
                  "value": "CLIENT"
                },
                {
                  "disabled": false,
                  "description": {
                    "content": "(Required) ",
                    "type": "text/plain"
                  },
                  "key": "usertype",
                  "value": "VOR"
                }
              ],
              "variable": []
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n  \"id\": 1,\n  \"uname\": \"exampleUser\",\n  \"userType\": \"VOR\",\n  \"firstname\": \"Example\",\n  \"lastname\": \"User\",\n  \"email\": \"exampleUser@email.com\",\n  \"suffix\": \"DVM\"\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            }
          },
          "response": [],
          "event": [],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        {
          "id": "ef6c879f-ab6f-4c33-8271-d364ffdd99f4",
          "name": "get my prescriptions",
          "request": {
            "name": "get my prescriptions",
            "description": {
              "content": "get prescriptions prescribed by the current User.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "api",
                "protocols",
                "prescriptions",
                "by"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "GET"
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "42b19702-ff07-4de2-9f7f-3c9aa3fc6813",
                "type": "text/javascript",
                "exec": [
                  "// Validate status 2xx \npm.test(\"[GET]::/api/protocols/prescriptions/by - Status code is 2xx\", function () {\n   pm.response.to.be.success;\n});\n"
                ]
              }
            }
          ]
        },
        {
          "id": "b4777f6b-22ad-4f40-a4bc-98fc8557cbc7",
          "name": "get my prescriptions",
          "request": {
            "name": "get my prescriptions",
            "description": {
              "content": "get prescriptions prescribed to the current User.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "api",
                "protocols",
                "prescriptions",
                "to"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "GET"
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "8708c040-0887-4bec-95b2-02b7ffd5925f",
                "type": "text/javascript",
                "exec": [
                  "// Validate status 2xx \npm.test(\"[GET]::/api/protocols/prescriptions/to - Status code is 2xx\", function () {\n   pm.response.to.be.success;\n});\n"
                ]
              }
            }
          ]
        },
        {
          "id": "6082e400-e47d-44ec-b6c1-7aa53537b9b6",
          "name": "get my protocol shares",
          "request": {
            "name": "get my protocol shares",
            "description": {
              "content": "This endpoint retrieves a User's Protocol shares, optionally filtered by Protocol and recipient.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "api",
                "protocols",
                "shares"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": false,
                  "description": {
                    "content": "select only shares of this Protocol ID",
                    "type": "text/plain"
                  },
                  "key": "pxFilter",
                  "value": "55339818"
                },
                {
                  "disabled": false,
                  "description": {
                    "content": "select only shares to this VOR User",
                    "type": "text/plain"
                  },
                  "key": "toFilter",
                  "value": "55339818"
                }
              ],
              "variable": []
            },
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "GET"
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "ecb12f77-5295-403e-883c-769e536b1db2",
                "type": "text/javascript",
                "exec": [
                  "// Validate status 2xx \npm.test(\"[GET]::/api/protocols/shares - Status code is 2xx\", function () {\n   pm.response.to.be.success;\n});\n"
                ]
              }
            }
          ]
        },
        {
          "id": "06a0e989-4386-486e-a5e2-465607f4eb4a",
          "name": "create protocol share",
          "request": {
            "name": "create protocol share",
            "description": {
              "content": "This endpoint shares a protocol with another VOR User.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "api",
                "protocols",
                "shares"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n  \"px-id\": 1,\n  \"share-to\": 2,\n  \"clonable\": true\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "7326680b-5ccc-4757-b404-258227c406b0",
                "type": "text/javascript",
                "exec": [
                  "// Validate status 2xx \npm.test(\"[POST]::/api/protocols/shares - Status code is 2xx\", function () {\n   pm.response.to.be.success;\n});\n"
                ]
              }
            }
          ],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        {
          "id": "63dafa5f-a331-463f-9a49-ed0790e7b8a7",
          "name": "delete protocol share",
          "request": {
            "name": "delete protocol share",
            "description": {
              "content": "This endpoint retracts a Protocol share with another VOR User.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "api",
                "protocols",
                "shares"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": false,
                  "description": {
                    "content": "(Required) Protocol ID",
                    "type": "text/plain"
                  },
                  "key": "pxId",
                  "value": "55339818"
                },
                {
                  "disabled": false,
                  "description": {
                    "content": "(Required) ID of VOR to whom Protocol was shared",
                    "type": "text/plain"
                  },
                  "key": "toVor",
                  "value": "55339818"
                }
              ],
              "variable": []
            },
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "DELETE"
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "e9dfbd45-045f-493c-848c-071a650b8798",
                "type": "text/javascript",
                "exec": [
                  "// Validate status 2xx \npm.test(\"[DELETE]::/api/protocols/shares - Status code is 2xx\", function () {\n   pm.response.to.be.success;\n});\n"
                ]
              }
            }
          ]
        },
        {
          "id": "f1463039-fda1-404c-8eed-f2f9fb4013af",
          "name": "list of User's shared protocols",
          "request": {
            "name": "list of User's shared protocols",
            "description": {
              "content": "This endpoint retrieves a list of User's protocols shared to all VORs.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "api",
                "protocols",
                "sharesToAll",
                ""
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "GET"
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "736d6363-1809-41c8-ad46-914a080d28d6",
                "type": "text/javascript",
                "exec": [
                  "// Validate status 2xx \npm.test(\"[GET]::/api/protocols/sharesToAll/ - Status code is 2xx\", function () {\n   pm.response.to.be.success;\n});\n"
                ]
              }
            }
          ]
        },
        {
          "id": "ced634e8-2c54-4c30-9a28-00a855805582",
          "name": "share Protocol with all VOR Users",
          "request": {
            "name": "share Protocol with all VOR Users",
            "description": {
              "content": "This endpoint shares a User's protocol with all VOR Users.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "api",
                "protocols",
                "sharesToAll",
                ":pxId"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": false,
                  "key": "clonable",
                  "value": "false"
                }
              ],
              "variable": [
                {
                  "disabled": false,
                  "description": {
                    "content": "(Required) ID of Protocol to be shared",
                    "type": "text/plain"
                  },
                  "type": "any",
                  "value": "55339818",
                  "key": "pxId"
                }
              ]
            },
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "POST"
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "bcffda93-8059-4367-a666-af27a4b6a76f",
                "type": "text/javascript",
                "exec": [
                  "// Validate status 2xx \npm.test(\"[POST]::/api/protocols/sharesToAll/:pxId - Status code is 2xx\", function () {\n   pm.response.to.be.success;\n});\n"
                ]
              }
            }
          ]
        },
        {
          "id": "5d4c1f22-6399-429a-9330-cda5fffb45c0",
          "name": "cancel sharing",
          "request": {
            "name": "cancel sharing",
            "description": {
              "content": "wip -- This endpoint probably unshares protocols to all.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "api",
                "protocols",
                "sharesToAll",
                ":pxId"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": [
                {
                  "disabled": false,
                  "description": {
                    "content": "(Required) ID of Protocol",
                    "type": "text/plain"
                  },
                  "type": "any",
                  "value": "1",
                  "key": "pxId"
                }
              ]
            },
            "method": "DELETE"
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "d88a6596-ae7d-4dd6-86c2-727a5d1a70a1",
                "type": "text/javascript",
                "exec": [
                  "// Validate status 2xx \npm.test(\"[DELETE]::/api/protocols/sharesToAll/:pxId - Status code is 2xx\", function () {\n   pm.response.to.be.success;\n});\n"
                ]
              }
            }
          ]
        },
        {
          "id": "5fe9b792-ad51-41db-8339-8adc0af797bf",
          "name": "AMDUCA-tag protocol",
          "request": {
            "name": "AMDUCA-tag protocol",
            "description": {
              "content": "add tags to protocol per AMDUCA rules",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "api",
                "protocols",
                "amducatags"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "PUT",
            "body": {
              "mode": "raw",
              "raw": "{\n  \"ownerId\": 1,\n  \"name\": \"wip\",\n  \"status\": \"PRESCRIBED\",\n  \"instructions\": {\n    \"considerations\": \"<p>This is just an example, not a real protocol.</p>\",\n    \"restrictions\": \"<p>Not for use on real animals.</p>\",\n    \"dothis\": \"<h3>Examinations to perform</h3>\",\n    \"recordthis\": \"<p>record every step in your notebook.</p>\",\n    \"success\": \"<p>All problems are gone</p>\",\n    \"failure\": \"<p>One or more problems remain</p>\",\n    \"references\": \"<a href=\\\"https://en.wikipedia.org/wiki/Rickrolling\\\">Wikipedia</a>\"\n  },\n  \"id\": 12345,\n  \"shortname\": \"wip\",\n  \"created\": \"2020-01-10T10:30:37Z\",\n  \"edited\": \"2020-02-10T10:30:37Z\",\n  \"vetNote\": \"consider prescribing protocol x instead\",\n  \"wtMeatHrs\": 22,\n  \"wtMilkHrs\": 5,\n  \"shareAll\": true,\n  \"shareClonable\": true,\n  \"caseDefinition\": {\n    \"requireId\": false,\n    \"requireMor\": false,\n    \"contraindications\": \"\",\n    \"medical\": \"if fever is present, consider Protocol 12345 instead.\",\n    \"economic\": \"\",\n    \"note\": \"\"\n  },\n  \"treatments\": [\n    {\n      \"product\": \"MiracleMed\",\n      \"route\": \"wip\",\n      \"dosage\": {\n        \"doseId\": 54848636\n      },\n      \"sequenceFunction\": {\n        \"_type\": \"models.SeqSingleDose\"\n      },\n      \"sizeFunction\": {\n        \"_type\": \"models.FixedDoseFunction\",\n        \"dose\": {\n          \"quantity\": {\n            \"dimension\": \"Mass\",\n            \"value\": 3,\n            \"symbol\": \"oz\"\n          }\n        }\n      },\n      \"id\": \"B-123\",\n      \"ownerId\": 0,\n      \"description\": \"3.0 ml per kg repeat\",\n      \"eligibilities\": [\n        {\n          \"id\": 1,\n          \"name\": \"Beef Cattle\",\n          \"fdaSpecies\": [\n            \"dairy_cattle\",\n            \"salmon\"\n          ]\n        },\n        {\n          \"id\": 1,\n          \"name\": \"Beef Cattle\",\n          \"fdaSpecies\": [\n            \"dogs\",\n            \"cats\"\n          ]\n        }\n      ],\n      \"_dose\": \"3.0 ml per kg repeat in 6 hours and again in 24 hours\",\n      \"wtMeatHrs\": 63517726,\n      \"wtMilkHrs\": -47698303,\n      \"nada\": \"wip\",\n      \"tags\": [\n        {\n          \"id\": 8,\n          \"color\": \"#516cc6\",\n          \"name\": \"adipisicing\",\n          \"fixes\": [\n            {\n              \"_type\": \"dolore in in Ut culpa\",\n              \"detail\": \"culpa fugiat\",\n              \"message\": \"cupidatat dolor\",\n              \"title\": \"nisi\"\n            },\n            {\n              \"_type\": \"cillum id nisi ve\",\n              \"detail\": \"dolore in\",\n              \"message\": \"ut irure deserunt ipsum\",\n              \"title\": \"fugiat officia\"\n            }\n          ]\n        },\n        {\n          \"id\": 8,\n          \"color\": \"#516cc6\",\n          \"name\": \"cupi\",\n          \"fixes\": [\n            {\n              \"_type\": \"id aliquip\",\n              \"detail\": \"qui non tempor irure adipisicing\",\n              \"message\": \"dolore\",\n              \"title\": \"incididunt est sint pariatur\"\n            },\n            {\n              \"_type\": \"exercitation Duis esse\",\n              \"detail\": \"mollit laborum cillum dese\",\n              \"message\": \"sunt cupidatat do\",\n              \"title\": \"Duis irure ex\"\n            }\n          ]\n        }\n      ],\n      \"note\": \"<p>a free-form note</p>\",\n      \"amduca\": \"UNIDENTIFIED\"\n    },\n    {\n      \"product\": \"MiracleMed\",\n      \"route\": \"wip\",\n      \"dosage\": {\n        \"doseId\": 88682049\n      },\n      \"sequenceFunction\": {\n        \"_type\": \"models.SeqSingleDose\"\n      },\n      \"sizeFunction\": {\n        \"_type\": \"models.FixedDoseFunction\",\n        \"dose\": {\n          \"quantity\": {\n            \"dimension\": \"Mass\",\n            \"value\": 3,\n            \"symbol\": \"oz\"\n          }\n        }\n      },\n      \"id\": \"B-123\",\n      \"ownerId\": 0,\n      \"description\": \"3.0 ml per kg repeat\",\n      \"eligibilities\": [\n        {\n          \"id\": 1,\n          \"name\": \"Beef Cattle\",\n          \"fdaSpecies\": [\n            \"veal\",\n            \"dogs\"\n          ]\n        },\n        {\n          \"id\": 1,\n          \"name\": \"Beef Cattle\",\n          \"fdaSpecies\": [\n            \"swine\",\n            \"llamas\"\n          ]\n        }\n      ],\n      \"_dose\": \"3.0 ml per kg repeat in 6 hours and again in 24 hours\",\n      \"wtMeatHrs\": 35469571,\n      \"wtMilkHrs\": -31339958,\n      \"nada\": \"wip\",\n      \"tags\": [\n        {\n          \"id\": 8,\n          \"color\": \"#516cc6\",\n          \"name\": \"Duis velit\",\n          \"fixes\": [\n            {\n              \"_type\": \"tempor consectetur ut elit\",\n              \"detail\": \"laborum minim tempor Duis\",\n              \"message\": \"aliquip magna ullamco consequat nulla\",\n              \"title\": \"in ad\"\n            },\n            {\n              \"_type\": \"reprehenderit\",\n              \"detail\": \"ea id culpa\",\n              \"message\": \"in dolore quis\",\n              \"title\": \"ad proident\"\n            }\n          ]\n        },\n        {\n          \"id\": 8,\n          \"color\": \"#516cc6\",\n          \"name\": \"ut eu incidi\",\n          \"fixes\": [\n            {\n              \"_type\": \"deserunt Ut\",\n              \"detail\": \"amet anim tempor\",\n              \"message\": \"eu esse Excepteur dolor\",\n              \"title\": \"amet irure dolor ea\"\n            },\n            {\n              \"_type\": \"dolor in labore mollit nisi\",\n              \"detail\": \"eiusmod pariatur ut cupidatat\",\n              \"message\": \"ut consectetur\",\n              \"title\": \"in\"\n            }\n          ]\n        }\n      ],\n      \"note\": \"<p>a free-form note</p>\",\n      \"amduca\": \"ONLABEL\"\n    }\n  ],\n  \"tags\": [\n    {\n      \"id\": 8,\n      \"color\": \"#516cc6\",\n      \"name\": \"aute minim\",\n      \"fixes\": [\n        {\n          \"_type\": \"amet do velit sit\",\n          \"detail\": \"in consequat fugiat\",\n          \"message\": \"dolor cillum in\",\n          \"title\": \"nisi esse do Lorem\"\n        },\n        {\n          \"_type\": \"amet sit ut laborum\",\n          \"detail\": \"ani\",\n          \"message\": \"sunt non deserunt veniam sint\",\n          \"title\": \"aliqua consequat aliquip esse\"\n        }\n      ]\n    },\n    {\n      \"id\": 8,\n      \"color\": \"#516cc6\",\n      \"name\": \"ei\",\n      \"fixes\": [\n        {\n          \"_type\": \"ulla\",\n          \"detail\": \"proident esse ipsum Duis\",\n          \"message\": \"eu voluptate nisi\",\n          \"title\": \"Ut esse consequat anim nulla\"\n        },\n        {\n          \"_type\": \"consequat proident exercitation adipisicing\",\n          \"detail\": \"ex Lorem ad\",\n          \"message\": \"incididunt ipsum dolore voluptate\",\n          \"title\": \"esse occaecat reprehenderit laborum\"\n        }\n      ]\n    }\n  ],\n  \"diagnoses\": [\n    {\n      \"id\": 8,\n      \"name\": \"Pain/inflammation (musculoskeletal), treatment\"\n    },\n    {\n      \"id\": 8,\n      \"name\": \"Pain/inflammation (musculoskeletal), treatment\"\n    }\n  ],\n  \"eligibilities\": [\n    {\n      \"id\": 1,\n      \"name\": \"Beef Cattle\",\n      \"fdaSpecies\": [\n        \"dairy_cattle\",\n        \"veal\"\n      ]\n    },\n    {\n      \"id\": 1,\n      \"name\": \"Beef Cattle\",\n      \"fdaSpecies\": [\n        \"unidentified\",\n        \"gamebirds\"\n      ]\n    }\n  ],\n  \"promises\": [\n    {\n      \"_type\": \"models.IdPromise\",\n      \"name\": \"ID promise\",\n      \"descrip\": \"You must give ID for each case enrolled\",\n      \"query\": \"What is the animal's name or number?\",\n      \"when\": \"PT0H\",\n      \"id\": 2345\n    },\n    {\n      \"_type\": \"models.IdPromise\",\n      \"name\": \"ID promise\",\n      \"descrip\": \"You must give ID for each case enrolled\",\n      \"query\": \"What is the animal's name or number?\",\n      \"when\": \"PT0H\",\n      \"id\": 2345\n    }\n  ],\n  \"metadata\": [\n    {\n      \"key\": \"popularity\",\n      \"value\": \"good 1.2\"\n    },\n    {\n      \"key\": \"popularity\",\n      \"value\": \"good 1.2\"\n    }\n  ]\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "bb4d0a9b-871b-47ee-8ea4-d4e4e5c2bf52",
                "type": "text/javascript",
                "exec": [
                  "// Validate status 2xx \npm.test(\"[PUT]::/api/protocols/amducatags - Status code is 2xx\", function () {\n   pm.response.to.be.success;\n});\n"
                ]
              }
            }
          ],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        {
          "id": "b3eff6af-d3ce-4844-bdc8-12062e9c1ed4",
          "name": "list of all Tags",
          "request": {
            "name": "list of all Tags",
            "description": {
              "content": "Returns the full array of tags for protocols and treatments.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "api",
                "protocols",
                "tags"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "GET"
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "e4d6a72e-db4b-43ff-949b-7beed533fe22",
                "type": "text/javascript",
                "exec": [
                  "// Validate status 2xx \npm.test(\"[GET]::/api/protocols/tags - Status code is 2xx\", function () {\n   pm.response.to.be.success;\n});\n"
                ]
              }
            }
          ]
        },
        {
          "id": "140231d3-c688-45fa-b75c-06d6ed5958ca",
          "name": "execute Remedy",
          "request": {
            "name": "execute Remedy",
            "description": {
              "content": "Apply a Remedy to a Protocol, returning the fixed Protocol.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "api",
                "protocols",
                "tags",
                "remedies"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "PUT",
            "body": {
              "mode": "raw",
              "raw": "{\n  \"protocol\": {\n    \"ownerId\": 1,\n    \"name\": \"wip\",\n    \"status\": \"PRESCRIBED\",\n    \"instructions\": {\n      \"considerations\": \"<p>This is just an example, not a real protocol.</p>\",\n      \"restrictions\": \"<p>Not for use on real animals.</p>\",\n      \"dothis\": \"<h3>Examinations to perform</h3>\",\n      \"recordthis\": \"<p>record every step in your notebook.</p>\",\n      \"success\": \"<p>All problems are gone</p>\",\n      \"failure\": \"<p>One or more problems remain</p>\",\n      \"references\": \"<a href=\\\"https://en.wikipedia.org/wiki/Rickrolling\\\">Wikipedia</a>\"\n    },\n    \"id\": 12345,\n    \"shortname\": \"wip\",\n    \"created\": \"2020-01-10T10:30:37Z\",\n    \"edited\": \"2020-02-10T10:30:37Z\",\n    \"vetNote\": \"consider prescribing protocol x instead\",\n    \"wtMeatHrs\": 22,\n    \"wtMilkHrs\": 5,\n    \"shareAll\": true,\n    \"shareClonable\": true,\n    \"caseDefinition\": {\n      \"requireId\": false,\n      \"requireMor\": false,\n      \"contraindications\": \"\",\n      \"medical\": \"if fever is present, consider Protocol 12345 instead.\",\n      \"economic\": \"\",\n      \"note\": \"\"\n    },\n    \"treatments\": [\n      {\n        \"product\": \"MiracleMed\",\n        \"route\": \"wip\",\n        \"dosage\": {\n          \"doseId\": -46997519\n        },\n        \"sequenceFunction\": {\n          \"_type\": \"models.SeqSingleDose\"\n        },\n        \"sizeFunction\": {\n          \"_type\": \"models.FixedDoseFunction\",\n          \"dose\": {\n            \"quantity\": {\n              \"dimension\": \"Mass\",\n              \"value\": 3,\n              \"symbol\": \"oz\"\n            }\n          }\n        },\n        \"id\": \"B-123\",\n        \"ownerId\": 0,\n        \"description\": \"3.0 ml per kg repeat\",\n        \"eligibilities\": [\n          {\n            \"id\": 1,\n            \"name\": \"Beef Cattle\",\n            \"fdaSpecies\": [\n              \"veal\",\n              \"llamas\"\n            ]\n          },\n          {\n            \"id\": 1,\n            \"name\": \"Beef Cattle\",\n            \"fdaSpecies\": [\n              \"dogs\",\n              \"unidentified\"\n            ]\n          }\n        ],\n        \"_dose\": \"3.0 ml per kg repeat in 6 hours and again in 24 hours\",\n        \"wtMeatHrs\": 92616832,\n        \"wtMilkHrs\": -23588189,\n        \"nada\": \"wip\",\n        \"tags\": [\n          {\n            \"id\": 8,\n            \"color\": \"#516cc6\",\n            \"name\": \"incidid\",\n            \"fixes\": [\n              {\n                \"_type\": {\n                  \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"detail\": {\n                  \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"message\": {\n                  \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"title\": {\n                  \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                }\n              },\n              {\n                \"_type\": {\n                  \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"detail\": {\n                  \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"message\": {\n                  \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"title\": {\n                  \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                }\n              }\n            ]\n          },\n          {\n            \"id\": 8,\n            \"color\": \"#516cc6\",\n            \"name\": \"et \",\n            \"fixes\": [\n              {\n                \"_type\": {\n                  \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"detail\": {\n                  \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"message\": {\n                  \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"title\": {\n                  \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                }\n              },\n              {\n                \"_type\": {\n                  \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"detail\": {\n                  \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"message\": {\n                  \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"title\": {\n                  \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                }\n              }\n            ]\n          }\n        ],\n        \"note\": \"<p>a free-form note</p>\",\n        \"amduca\": \"ONLABEL\"\n      },\n      {\n        \"product\": \"MiracleMed\",\n        \"route\": \"wip\",\n        \"dosage\": {\n          \"doseId\": 19346211\n        },\n        \"sequenceFunction\": {\n          \"_type\": \"models.SeqSingleDose\"\n        },\n        \"sizeFunction\": {\n          \"_type\": \"models.FixedDoseFunction\",\n          \"dose\": {\n            \"quantity\": {\n              \"dimension\": \"Mass\",\n              \"value\": 3,\n              \"symbol\": \"oz\"\n            }\n          }\n        },\n        \"id\": \"B-123\",\n        \"ownerId\": 0,\n        \"description\": \"3.0 ml per kg repeat\",\n        \"eligibilities\": [\n          {\n            \"id\": 1,\n            \"name\": \"Beef Cattle\",\n            \"fdaSpecies\": [\n              \"swine\",\n              \"gamebirds\"\n            ]\n          },\n          {\n            \"id\": 1,\n            \"name\": \"Beef Cattle\",\n            \"fdaSpecies\": [\n              \"horses\",\n              \"dogs\"\n            ]\n          }\n        ],\n        \"_dose\": \"3.0 ml per kg repeat in 6 hours and again in 24 hours\",\n        \"wtMeatHrs\": -20335899,\n        \"wtMilkHrs\": 20362132,\n        \"nada\": \"wip\",\n        \"tags\": [\n          {\n            \"id\": 8,\n            \"color\": \"#516cc6\",\n            \"name\": \"s\",\n            \"fixes\": [\n              {\n                \"_type\": {\n                  \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"detail\": {\n                  \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"message\": {\n                  \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"title\": {\n                  \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                }\n              },\n              {\n                \"_type\": {\n                  \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"detail\": {\n                  \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"message\": {\n                  \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"title\": {\n                  \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                }\n              }\n            ]\n          },\n          {\n            \"id\": 8,\n            \"color\": \"#516cc6\",\n            \"name\": \"veniam\",\n            \"fixes\": [\n              {\n                \"_type\": {\n                  \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"detail\": {\n                  \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"message\": {\n                  \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"title\": {\n                  \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                }\n              },\n              {\n                \"_type\": {\n                  \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"detail\": {\n                  \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"message\": {\n                  \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"title\": {\n                  \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                }\n              }\n            ]\n          }\n        ],\n        \"note\": \"<p>a free-form note</p>\",\n        \"amduca\": \"UNIDENTIFIED\"\n      }\n    ],\n    \"tags\": [\n      {\n        \"id\": 8,\n        \"color\": \"#516cc6\",\n        \"name\": \"ve\",\n        \"fixes\": [\n          {\n            \"_type\": \"minim sed dolore sint\",\n            \"detail\": \"Excepteur sit ipsum velit\",\n            \"message\": \"occaecat commodo consectetur\",\n            \"title\": \"officia in labore\"\n          },\n          {\n            \"_type\": \"dolor Ut consequat\",\n            \"detail\": \"in dolore\",\n            \"message\": \"fugiat\",\n            \"title\": \"ad nisi et\"\n          }\n        ]\n      },\n      {\n        \"id\": 8,\n        \"color\": \"#516cc6\",\n        \"name\": \"occaecat\",\n        \"fixes\": [\n          {\n            \"_type\": \"officia labore Excepteur ut dolor\",\n            \"detail\": \"dolor exercitation Lorem\",\n            \"message\": \"ea veniam\",\n            \"title\": \"nostrud commodo amet Duis\"\n          },\n          {\n            \"_type\": \"do est tempor\",\n            \"detail\": \"et consequat\",\n            \"message\": \"cillum anim commodo laboris enim\",\n            \"title\": \"ex Lorem\"\n          }\n        ]\n      }\n    ],\n    \"diagnoses\": [\n      {\n        \"id\": 8,\n        \"name\": \"Pain/inflammation (musculoskeletal), treatment\"\n      },\n      {\n        \"id\": 8,\n        \"name\": \"Pain/inflammation (musculoskeletal), treatment\"\n      }\n    ],\n    \"eligibilities\": [\n      {\n        \"id\": 1,\n        \"name\": \"Beef Cattle\",\n        \"fdaSpecies\": [\n          \"chickens\",\n          \"gamebirds\"\n        ]\n      },\n      {\n        \"id\": 1,\n        \"name\": \"Beef Cattle\",\n        \"fdaSpecies\": [\n          \"cats\",\n          \"llamas\"\n        ]\n      }\n    ],\n    \"promises\": [\n      {\n        \"_type\": \"models.IdPromise\",\n        \"name\": \"ID promise\",\n        \"descrip\": \"You must give ID for each case enrolled\",\n        \"query\": \"What is the animal's name or number?\",\n        \"when\": \"PT0H\",\n        \"id\": 2345\n      },\n      {\n        \"_type\": \"models.IdPromise\",\n        \"name\": \"ID promise\",\n        \"descrip\": \"You must give ID for each case enrolled\",\n        \"query\": \"What is the animal's name or number?\",\n        \"when\": \"PT0H\",\n        \"id\": 2345\n      }\n    ],\n    \"metadata\": [\n      {\n        \"key\": \"popularity\",\n        \"value\": \"good 1.2\"\n      },\n      {\n        \"key\": \"popularity\",\n        \"value\": \"good 1.2\"\n      }\n    ]\n  },\n  \"remedy\": {\n    \"_type\": \"in mollit id ut tempor\",\n    \"detail\": \"Duis in veniam anim\",\n    \"message\": \"aliquip reprehenderit nulla adipisicing\",\n    \"title\": \"consectetur veniam anim dolore\"\n  }\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "41fb5218-f78a-423d-a892-0c753a9714ea",
                "type": "text/javascript",
                "exec": [
                  "// Validate status 2xx \npm.test(\"[PUT]::/api/protocols/tags/remedies - Status code is 2xx\", function () {\n   pm.response.to.be.success;\n});\n"
                ]
              }
            }
          ],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        {
          "id": "ba050600-281d-431f-894c-a9caf7847be4",
          "name": "list of all Promises",
          "request": {
            "name": "list of all Promises",
            "description": {
              "content": "This endpoint returns the full array of available Promises.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "api",
                "protocols",
                "promises"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "GET"
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "04a77f4e-4a76-478a-996a-c5481b1a277e",
                "type": "text/javascript",
                "exec": [
                  "// Validate status 2xx \npm.test(\"[GET]::/api/protocols/promises - Status code is 2xx\", function () {\n   pm.response.to.be.success;\n});\n"
                ]
              }
            }
          ]
        },
        {
          "id": "e77f7ef7-a862-40f3-b940-9377abd8f66d",
          "name": "Promises in a Protocol",
          "request": {
            "name": "Promises in a Protocol",
            "description": {
              "content": "Return Promises contained within a Protocol.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "api",
                "protocols",
                "promises",
                ":id"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": [
                {
                  "disabled": false,
                  "description": {
                    "content": "(Required) protocol  ID",
                    "type": "text/plain"
                  },
                  "type": "any",
                  "value": "32",
                  "key": "id"
                }
              ]
            },
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "GET"
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "135fc018-30d8-4faf-87b7-a2e9dfae3e55",
                "type": "text/javascript",
                "exec": [
                  "// Validate status 2xx \npm.test(\"[GET]::/api/protocols/promises/:id - Status code is 2xx\", function () {\n   pm.response.to.be.success;\n});\n"
                ]
              }
            }
          ]
        },
        {
          "id": "35415074-1f50-4261-b691-044674e48d79",
          "name": "protocols owned by user",
          "request": {
            "name": "protocols owned by user",
            "description": {
              "content": "Retrieve all Protocols owned by, or shared with, the current User. The default excludes deleted (status DEPRECATED) protocols.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "api",
                "protocols"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": false,
                  "description": {
                    "content": "filter Protocols to include only Protocols with listed statuses. If this parameter is omitted, the query defaults to all status values **except** DEPRECATED.",
                    "type": "text/plain"
                  },
                  "key": "status",
                  "value": "PRESCRIBED|PRESCRIBED"
                }
              ],
              "variable": []
            },
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "GET"
          },
          "response": [],
          "event": []
        },
        {
          "id": "ccb91ee4-dd8c-4bb7-b0ed-914223dc26c8",
          "name": "record and validate aprotocol",
          "request": {
            "name": "record and validate aprotocol",
            "description": {
              "content": "This endpoint saves and validates a Protocol.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "api",
                "protocols"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n  \"ownerId\": 1,\n  \"name\": \"wip\",\n  \"status\": \"PRESCRIBED\",\n  \"instructions\": {\n    \"considerations\": \"<p>This is just an example, not a real protocol.</p>\",\n    \"restrictions\": \"<p>Not for use on real animals.</p>\",\n    \"dothis\": \"<h3>Examinations to perform</h3>\",\n    \"recordthis\": \"<p>record every step in your notebook.</p>\",\n    \"success\": \"<p>All problems are gone</p>\",\n    \"failure\": \"<p>One or more problems remain</p>\",\n    \"references\": \"<a href=\\\"https://en.wikipedia.org/wiki/Rickrolling\\\">Wikipedia</a>\"\n  },\n  \"id\": 12345,\n  \"shortname\": \"wip\",\n  \"created\": \"2020-01-10T10:30:37Z\",\n  \"edited\": \"2020-02-10T10:30:37Z\",\n  \"vetNote\": \"consider prescribing protocol x instead\",\n  \"wtMeatHrs\": 22,\n  \"wtMilkHrs\": 5,\n  \"shareAll\": true,\n  \"shareClonable\": true,\n  \"caseDefinition\": {\n    \"requireId\": false,\n    \"requireMor\": false,\n    \"contraindications\": \"\",\n    \"medical\": \"if fever is present, consider Protocol 12345 instead.\",\n    \"economic\": \"\",\n    \"note\": \"\"\n  },\n  \"treatments\": [\n    {\n      \"product\": \"MiracleMed\",\n      \"route\": \"wip\",\n      \"dosage\": {\n        \"doseId\": 54848636\n      },\n      \"sequenceFunction\": {\n        \"_type\": \"models.SeqSingleDose\"\n      },\n      \"sizeFunction\": {\n        \"_type\": \"models.FixedDoseFunction\",\n        \"dose\": {\n          \"quantity\": {\n            \"dimension\": \"Mass\",\n            \"value\": 3,\n            \"symbol\": \"oz\"\n          }\n        }\n      },\n      \"id\": \"B-123\",\n      \"ownerId\": 0,\n      \"description\": \"3.0 ml per kg repeat\",\n      \"eligibilities\": [\n        {\n          \"id\": 1,\n          \"name\": \"Beef Cattle\",\n          \"fdaSpecies\": [\n            \"dairy_cattle\",\n            \"salmon\"\n          ]\n        },\n        {\n          \"id\": 1,\n          \"name\": \"Beef Cattle\",\n          \"fdaSpecies\": [\n            \"dogs\",\n            \"cats\"\n          ]\n        }\n      ],\n      \"_dose\": \"3.0 ml per kg repeat in 6 hours and again in 24 hours\",\n      \"wtMeatHrs\": 63517726,\n      \"wtMilkHrs\": -47698303,\n      \"nada\": \"wip\",\n      \"tags\": [\n        {\n          \"id\": 8,\n          \"color\": \"#516cc6\",\n          \"name\": \"adipisicing\",\n          \"fixes\": [\n            {\n              \"_type\": \"dolore in in Ut culpa\",\n              \"detail\": \"culpa fugiat\",\n              \"message\": \"cupidatat dolor\",\n              \"title\": \"nisi\"\n            },\n            {\n              \"_type\": \"cillum id nisi ve\",\n              \"detail\": \"dolore in\",\n              \"message\": \"ut irure deserunt ipsum\",\n              \"title\": \"fugiat officia\"\n            }\n          ]\n        },\n        {\n          \"id\": 8,\n          \"color\": \"#516cc6\",\n          \"name\": \"cupi\",\n          \"fixes\": [\n            {\n              \"_type\": \"id aliquip\",\n              \"detail\": \"qui non tempor irure adipisicing\",\n              \"message\": \"dolore\",\n              \"title\": \"incididunt est sint pariatur\"\n            },\n            {\n              \"_type\": \"exercitation Duis esse\",\n              \"detail\": \"mollit laborum cillum dese\",\n              \"message\": \"sunt cupidatat do\",\n              \"title\": \"Duis irure ex\"\n            }\n          ]\n        }\n      ],\n      \"note\": \"<p>a free-form note</p>\",\n      \"amduca\": \"UNIDENTIFIED\"\n    },\n    {\n      \"product\": \"MiracleMed\",\n      \"route\": \"wip\",\n      \"dosage\": {\n        \"doseId\": 88682049\n      },\n      \"sequenceFunction\": {\n        \"_type\": \"models.SeqSingleDose\"\n      },\n      \"sizeFunction\": {\n        \"_type\": \"models.FixedDoseFunction\",\n        \"dose\": {\n          \"quantity\": {\n            \"dimension\": \"Mass\",\n            \"value\": 3,\n            \"symbol\": \"oz\"\n          }\n        }\n      },\n      \"id\": \"B-123\",\n      \"ownerId\": 0,\n      \"description\": \"3.0 ml per kg repeat\",\n      \"eligibilities\": [\n        {\n          \"id\": 1,\n          \"name\": \"Beef Cattle\",\n          \"fdaSpecies\": [\n            \"veal\",\n            \"dogs\"\n          ]\n        },\n        {\n          \"id\": 1,\n          \"name\": \"Beef Cattle\",\n          \"fdaSpecies\": [\n            \"swine\",\n            \"llamas\"\n          ]\n        }\n      ],\n      \"_dose\": \"3.0 ml per kg repeat in 6 hours and again in 24 hours\",\n      \"wtMeatHrs\": 35469571,\n      \"wtMilkHrs\": -31339958,\n      \"nada\": \"wip\",\n      \"tags\": [\n        {\n          \"id\": 8,\n          \"color\": \"#516cc6\",\n          \"name\": \"Duis velit\",\n          \"fixes\": [\n            {\n              \"_type\": \"tempor consectetur ut elit\",\n              \"detail\": \"laborum minim tempor Duis\",\n              \"message\": \"aliquip magna ullamco consequat nulla\",\n              \"title\": \"in ad\"\n            },\n            {\n              \"_type\": \"reprehenderit\",\n              \"detail\": \"ea id culpa\",\n              \"message\": \"in dolore quis\",\n              \"title\": \"ad proident\"\n            }\n          ]\n        },\n        {\n          \"id\": 8,\n          \"color\": \"#516cc6\",\n          \"name\": \"ut eu incidi\",\n          \"fixes\": [\n            {\n              \"_type\": \"deserunt Ut\",\n              \"detail\": \"amet anim tempor\",\n              \"message\": \"eu esse Excepteur dolor\",\n              \"title\": \"amet irure dolor ea\"\n            },\n            {\n              \"_type\": \"dolor in labore mollit nisi\",\n              \"detail\": \"eiusmod pariatur ut cupidatat\",\n              \"message\": \"ut consectetur\",\n              \"title\": \"in\"\n            }\n          ]\n        }\n      ],\n      \"note\": \"<p>a free-form note</p>\",\n      \"amduca\": \"ONLABEL\"\n    }\n  ],\n  \"tags\": [\n    {\n      \"id\": 8,\n      \"color\": \"#516cc6\",\n      \"name\": \"aute minim\",\n      \"fixes\": [\n        {\n          \"_type\": \"amet do velit sit\",\n          \"detail\": \"in consequat fugiat\",\n          \"message\": \"dolor cillum in\",\n          \"title\": \"nisi esse do Lorem\"\n        },\n        {\n          \"_type\": \"amet sit ut laborum\",\n          \"detail\": \"ani\",\n          \"message\": \"sunt non deserunt veniam sint\",\n          \"title\": \"aliqua consequat aliquip esse\"\n        }\n      ]\n    },\n    {\n      \"id\": 8,\n      \"color\": \"#516cc6\",\n      \"name\": \"ei\",\n      \"fixes\": [\n        {\n          \"_type\": \"ulla\",\n          \"detail\": \"proident esse ipsum Duis\",\n          \"message\": \"eu voluptate nisi\",\n          \"title\": \"Ut esse consequat anim nulla\"\n        },\n        {\n          \"_type\": \"consequat proident exercitation adipisicing\",\n          \"detail\": \"ex Lorem ad\",\n          \"message\": \"incididunt ipsum dolore voluptate\",\n          \"title\": \"esse occaecat reprehenderit laborum\"\n        }\n      ]\n    }\n  ],\n  \"diagnoses\": [\n    {\n      \"id\": 8,\n      \"name\": \"Pain/inflammation (musculoskeletal), treatment\"\n    },\n    {\n      \"id\": 8,\n      \"name\": \"Pain/inflammation (musculoskeletal), treatment\"\n    }\n  ],\n  \"eligibilities\": [\n    {\n      \"id\": 1,\n      \"name\": \"Beef Cattle\",\n      \"fdaSpecies\": [\n        \"dairy_cattle\",\n        \"veal\"\n      ]\n    },\n    {\n      \"id\": 1,\n      \"name\": \"Beef Cattle\",\n      \"fdaSpecies\": [\n        \"unidentified\",\n        \"gamebirds\"\n      ]\n    }\n  ],\n  \"promises\": [\n    {\n      \"_type\": \"models.IdPromise\",\n      \"name\": \"ID promise\",\n      \"descrip\": \"You must give ID for each case enrolled\",\n      \"query\": \"What is the animal's name or number?\",\n      \"when\": \"PT0H\",\n      \"id\": 2345\n    },\n    {\n      \"_type\": \"models.IdPromise\",\n      \"name\": \"ID promise\",\n      \"descrip\": \"You must give ID for each case enrolled\",\n      \"query\": \"What is the animal's name or number?\",\n      \"when\": \"PT0H\",\n      \"id\": 2345\n    }\n  ],\n  \"metadata\": [\n    {\n      \"key\": \"popularity\",\n      \"value\": \"good 1.2\"\n    },\n    {\n      \"key\": \"popularity\",\n      \"value\": \"good 1.2\"\n    }\n  ]\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            }
          },
          "response": [],
          "event": [],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        {
          "id": "404c5652-25bf-44e4-9bae-d1deda7a72da",
          "name": "update protocol",
          "request": {
            "name": "update protocol",
            "description": {
              "content": "This endpoint updates and validates a Protocol.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "api",
                "protocols"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "PUT",
            "body": {
              "mode": "raw",
              "raw": "{\n  \"ownerId\": 1,\n  \"name\": \"wip\",\n  \"status\": \"PRESCRIBED\",\n  \"instructions\": {\n    \"considerations\": \"<p>This is just an example, not a real protocol.</p>\",\n    \"restrictions\": \"<p>Not for use on real animals.</p>\",\n    \"dothis\": \"<h3>Examinations to perform</h3>\",\n    \"recordthis\": \"<p>record every step in your notebook.</p>\",\n    \"success\": \"<p>All problems are gone</p>\",\n    \"failure\": \"<p>One or more problems remain</p>\",\n    \"references\": \"<a href=\\\"https://en.wikipedia.org/wiki/Rickrolling\\\">Wikipedia</a>\"\n  },\n  \"id\": 12345,\n  \"shortname\": \"wip\",\n  \"created\": \"2020-01-10T10:30:37Z\",\n  \"edited\": \"2020-02-10T10:30:37Z\",\n  \"vetNote\": \"consider prescribing protocol x instead\",\n  \"wtMeatHrs\": 22,\n  \"wtMilkHrs\": 5,\n  \"shareAll\": true,\n  \"shareClonable\": true,\n  \"caseDefinition\": {\n    \"requireId\": false,\n    \"requireMor\": false,\n    \"contraindications\": \"\",\n    \"medical\": \"if fever is present, consider Protocol 12345 instead.\",\n    \"economic\": \"\",\n    \"note\": \"\"\n  },\n  \"treatments\": [\n    {\n      \"product\": \"MiracleMed\",\n      \"route\": \"wip\",\n      \"dosage\": {\n        \"doseId\": 54848636\n      },\n      \"sequenceFunction\": {\n        \"_type\": \"models.SeqSingleDose\"\n      },\n      \"sizeFunction\": {\n        \"_type\": \"models.FixedDoseFunction\",\n        \"dose\": {\n          \"quantity\": {\n            \"dimension\": \"Mass\",\n            \"value\": 3,\n            \"symbol\": \"oz\"\n          }\n        }\n      },\n      \"id\": \"B-123\",\n      \"ownerId\": 0,\n      \"description\": \"3.0 ml per kg repeat\",\n      \"eligibilities\": [\n        {\n          \"id\": 1,\n          \"name\": \"Beef Cattle\",\n          \"fdaSpecies\": [\n            \"dairy_cattle\",\n            \"salmon\"\n          ]\n        },\n        {\n          \"id\": 1,\n          \"name\": \"Beef Cattle\",\n          \"fdaSpecies\": [\n            \"dogs\",\n            \"cats\"\n          ]\n        }\n      ],\n      \"_dose\": \"3.0 ml per kg repeat in 6 hours and again in 24 hours\",\n      \"wtMeatHrs\": 63517726,\n      \"wtMilkHrs\": -47698303,\n      \"nada\": \"wip\",\n      \"tags\": [\n        {\n          \"id\": 8,\n          \"color\": \"#516cc6\",\n          \"name\": \"adipisicing\",\n          \"fixes\": [\n            {\n              \"_type\": \"dolore in in Ut culpa\",\n              \"detail\": \"culpa fugiat\",\n              \"message\": \"cupidatat dolor\",\n              \"title\": \"nisi\"\n            },\n            {\n              \"_type\": \"cillum id nisi ve\",\n              \"detail\": \"dolore in\",\n              \"message\": \"ut irure deserunt ipsum\",\n              \"title\": \"fugiat officia\"\n            }\n          ]\n        },\n        {\n          \"id\": 8,\n          \"color\": \"#516cc6\",\n          \"name\": \"cupi\",\n          \"fixes\": [\n            {\n              \"_type\": \"id aliquip\",\n              \"detail\": \"qui non tempor irure adipisicing\",\n              \"message\": \"dolore\",\n              \"title\": \"incididunt est sint pariatur\"\n            },\n            {\n              \"_type\": \"exercitation Duis esse\",\n              \"detail\": \"mollit laborum cillum dese\",\n              \"message\": \"sunt cupidatat do\",\n              \"title\": \"Duis irure ex\"\n            }\n          ]\n        }\n      ],\n      \"note\": \"<p>a free-form note</p>\",\n      \"amduca\": \"UNIDENTIFIED\"\n    },\n    {\n      \"product\": \"MiracleMed\",\n      \"route\": \"wip\",\n      \"dosage\": {\n        \"doseId\": 88682049\n      },\n      \"sequenceFunction\": {\n        \"_type\": \"models.SeqSingleDose\"\n      },\n      \"sizeFunction\": {\n        \"_type\": \"models.FixedDoseFunction\",\n        \"dose\": {\n          \"quantity\": {\n            \"dimension\": \"Mass\",\n            \"value\": 3,\n            \"symbol\": \"oz\"\n          }\n        }\n      },\n      \"id\": \"B-123\",\n      \"ownerId\": 0,\n      \"description\": \"3.0 ml per kg repeat\",\n      \"eligibilities\": [\n        {\n          \"id\": 1,\n          \"name\": \"Beef Cattle\",\n          \"fdaSpecies\": [\n            \"veal\",\n            \"dogs\"\n          ]\n        },\n        {\n          \"id\": 1,\n          \"name\": \"Beef Cattle\",\n          \"fdaSpecies\": [\n            \"swine\",\n            \"llamas\"\n          ]\n        }\n      ],\n      \"_dose\": \"3.0 ml per kg repeat in 6 hours and again in 24 hours\",\n      \"wtMeatHrs\": 35469571,\n      \"wtMilkHrs\": -31339958,\n      \"nada\": \"wip\",\n      \"tags\": [\n        {\n          \"id\": 8,\n          \"color\": \"#516cc6\",\n          \"name\": \"Duis velit\",\n          \"fixes\": [\n            {\n              \"_type\": \"tempor consectetur ut elit\",\n              \"detail\": \"laborum minim tempor Duis\",\n              \"message\": \"aliquip magna ullamco consequat nulla\",\n              \"title\": \"in ad\"\n            },\n            {\n              \"_type\": \"reprehenderit\",\n              \"detail\": \"ea id culpa\",\n              \"message\": \"in dolore quis\",\n              \"title\": \"ad proident\"\n            }\n          ]\n        },\n        {\n          \"id\": 8,\n          \"color\": \"#516cc6\",\n          \"name\": \"ut eu incidi\",\n          \"fixes\": [\n            {\n              \"_type\": \"deserunt Ut\",\n              \"detail\": \"amet anim tempor\",\n              \"message\": \"eu esse Excepteur dolor\",\n              \"title\": \"amet irure dolor ea\"\n            },\n            {\n              \"_type\": \"dolor in labore mollit nisi\",\n              \"detail\": \"eiusmod pariatur ut cupidatat\",\n              \"message\": \"ut consectetur\",\n              \"title\": \"in\"\n            }\n          ]\n        }\n      ],\n      \"note\": \"<p>a free-form note</p>\",\n      \"amduca\": \"ONLABEL\"\n    }\n  ],\n  \"tags\": [\n    {\n      \"id\": 8,\n      \"color\": \"#516cc6\",\n      \"name\": \"aute minim\",\n      \"fixes\": [\n        {\n          \"_type\": \"amet do velit sit\",\n          \"detail\": \"in consequat fugiat\",\n          \"message\": \"dolor cillum in\",\n          \"title\": \"nisi esse do Lorem\"\n        },\n        {\n          \"_type\": \"amet sit ut laborum\",\n          \"detail\": \"ani\",\n          \"message\": \"sunt non deserunt veniam sint\",\n          \"title\": \"aliqua consequat aliquip esse\"\n        }\n      ]\n    },\n    {\n      \"id\": 8,\n      \"color\": \"#516cc6\",\n      \"name\": \"ei\",\n      \"fixes\": [\n        {\n          \"_type\": \"ulla\",\n          \"detail\": \"proident esse ipsum Duis\",\n          \"message\": \"eu voluptate nisi\",\n          \"title\": \"Ut esse consequat anim nulla\"\n        },\n        {\n          \"_type\": \"consequat proident exercitation adipisicing\",\n          \"detail\": \"ex Lorem ad\",\n          \"message\": \"incididunt ipsum dolore voluptate\",\n          \"title\": \"esse occaecat reprehenderit laborum\"\n        }\n      ]\n    }\n  ],\n  \"diagnoses\": [\n    {\n      \"id\": 8,\n      \"name\": \"Pain/inflammation (musculoskeletal), treatment\"\n    },\n    {\n      \"id\": 8,\n      \"name\": \"Pain/inflammation (musculoskeletal), treatment\"\n    }\n  ],\n  \"eligibilities\": [\n    {\n      \"id\": 1,\n      \"name\": \"Beef Cattle\",\n      \"fdaSpecies\": [\n        \"dairy_cattle\",\n        \"veal\"\n      ]\n    },\n    {\n      \"id\": 1,\n      \"name\": \"Beef Cattle\",\n      \"fdaSpecies\": [\n        \"unidentified\",\n        \"gamebirds\"\n      ]\n    }\n  ],\n  \"promises\": [\n    {\n      \"_type\": \"models.IdPromise\",\n      \"name\": \"ID promise\",\n      \"descrip\": \"You must give ID for each case enrolled\",\n      \"query\": \"What is the animal's name or number?\",\n      \"when\": \"PT0H\",\n      \"id\": 2345\n    },\n    {\n      \"_type\": \"models.IdPromise\",\n      \"name\": \"ID promise\",\n      \"descrip\": \"You must give ID for each case enrolled\",\n      \"query\": \"What is the animal's name or number?\",\n      \"when\": \"PT0H\",\n      \"id\": 2345\n    }\n  ],\n  \"metadata\": [\n    {\n      \"key\": \"popularity\",\n      \"value\": \"good 1.2\"\n    },\n    {\n      \"key\": \"popularity\",\n      \"value\": \"good 1.2\"\n    }\n  ]\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            }
          },
          "response": [],
          "event": [],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        {
          "id": "9a98e7c8-76aa-48bc-9077-e8043bcaedb9",
          "name": "This endpoint validates a protocol without saving it.",
          "request": {
            "name": "This endpoint validates a protocol without saving it.",
            "description": {
              "content": "This endpoint validates a protocol for prescribing without saving it. It should only be called if the user wants to prescribe a protocol without saving changes. The endpoints to save or update protocols automatically include validation.4",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "api",
                "protocols",
                "validate"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "PUT",
            "body": {
              "mode": "raw",
              "raw": "{\n  \"ownerId\": 1,\n  \"name\": \"wip\",\n  \"status\": \"PRESCRIBED\",\n  \"instructions\": {\n    \"considerations\": \"<p>This is just an example, not a real protocol.</p>\",\n    \"restrictions\": \"<p>Not for use on real animals.</p>\",\n    \"dothis\": \"<h3>Examinations to perform</h3>\",\n    \"recordthis\": \"<p>record every step in your notebook.</p>\",\n    \"success\": \"<p>All problems are gone</p>\",\n    \"failure\": \"<p>One or more problems remain</p>\",\n    \"references\": \"<a href=\\\"https://en.wikipedia.org/wiki/Rickrolling\\\">Wikipedia</a>\"\n  },\n  \"id\": 12345,\n  \"shortname\": \"wip\",\n  \"created\": \"2020-01-10T10:30:37Z\",\n  \"edited\": \"2020-02-10T10:30:37Z\",\n  \"vetNote\": \"consider prescribing protocol x instead\",\n  \"wtMeatHrs\": 22,\n  \"wtMilkHrs\": 5,\n  \"shareAll\": true,\n  \"shareClonable\": true,\n  \"caseDefinition\": {\n    \"requireId\": false,\n    \"requireMor\": false,\n    \"contraindications\": \"\",\n    \"medical\": \"if fever is present, consider Protocol 12345 instead.\",\n    \"economic\": \"\",\n    \"note\": \"\"\n  },\n  \"treatments\": [\n    {\n      \"product\": \"MiracleMed\",\n      \"route\": \"wip\",\n      \"dosage\": {\n        \"doseId\": 54848636\n      },\n      \"sequenceFunction\": {\n        \"_type\": \"models.SeqSingleDose\"\n      },\n      \"sizeFunction\": {\n        \"_type\": \"models.FixedDoseFunction\",\n        \"dose\": {\n          \"quantity\": {\n            \"dimension\": \"Mass\",\n            \"value\": 3,\n            \"symbol\": \"oz\"\n          }\n        }\n      },\n      \"id\": \"B-123\",\n      \"ownerId\": 0,\n      \"description\": \"3.0 ml per kg repeat\",\n      \"eligibilities\": [\n        {\n          \"id\": 1,\n          \"name\": \"Beef Cattle\",\n          \"fdaSpecies\": [\n            \"dairy_cattle\",\n            \"salmon\"\n          ]\n        },\n        {\n          \"id\": 1,\n          \"name\": \"Beef Cattle\",\n          \"fdaSpecies\": [\n            \"dogs\",\n            \"cats\"\n          ]\n        }\n      ],\n      \"_dose\": \"3.0 ml per kg repeat in 6 hours and again in 24 hours\",\n      \"wtMeatHrs\": 63517726,\n      \"wtMilkHrs\": -47698303,\n      \"nada\": \"wip\",\n      \"tags\": [\n        {\n          \"id\": 8,\n          \"color\": \"#516cc6\",\n          \"name\": \"adipisicing\",\n          \"fixes\": [\n            {\n              \"_type\": \"dolore in in Ut culpa\",\n              \"detail\": \"culpa fugiat\",\n              \"message\": \"cupidatat dolor\",\n              \"title\": \"nisi\"\n            },\n            {\n              \"_type\": \"cillum id nisi ve\",\n              \"detail\": \"dolore in\",\n              \"message\": \"ut irure deserunt ipsum\",\n              \"title\": \"fugiat officia\"\n            }\n          ]\n        },\n        {\n          \"id\": 8,\n          \"color\": \"#516cc6\",\n          \"name\": \"cupi\",\n          \"fixes\": [\n            {\n              \"_type\": \"id aliquip\",\n              \"detail\": \"qui non tempor irure adipisicing\",\n              \"message\": \"dolore\",\n              \"title\": \"incididunt est sint pariatur\"\n            },\n            {\n              \"_type\": \"exercitation Duis esse\",\n              \"detail\": \"mollit laborum cillum dese\",\n              \"message\": \"sunt cupidatat do\",\n              \"title\": \"Duis irure ex\"\n            }\n          ]\n        }\n      ],\n      \"note\": \"<p>a free-form note</p>\",\n      \"amduca\": \"UNIDENTIFIED\"\n    },\n    {\n      \"product\": \"MiracleMed\",\n      \"route\": \"wip\",\n      \"dosage\": {\n        \"doseId\": 88682049\n      },\n      \"sequenceFunction\": {\n        \"_type\": \"models.SeqSingleDose\"\n      },\n      \"sizeFunction\": {\n        \"_type\": \"models.FixedDoseFunction\",\n        \"dose\": {\n          \"quantity\": {\n            \"dimension\": \"Mass\",\n            \"value\": 3,\n            \"symbol\": \"oz\"\n          }\n        }\n      },\n      \"id\": \"B-123\",\n      \"ownerId\": 0,\n      \"description\": \"3.0 ml per kg repeat\",\n      \"eligibilities\": [\n        {\n          \"id\": 1,\n          \"name\": \"Beef Cattle\",\n          \"fdaSpecies\": [\n            \"veal\",\n            \"dogs\"\n          ]\n        },\n        {\n          \"id\": 1,\n          \"name\": \"Beef Cattle\",\n          \"fdaSpecies\": [\n            \"swine\",\n            \"llamas\"\n          ]\n        }\n      ],\n      \"_dose\": \"3.0 ml per kg repeat in 6 hours and again in 24 hours\",\n      \"wtMeatHrs\": 35469571,\n      \"wtMilkHrs\": -31339958,\n      \"nada\": \"wip\",\n      \"tags\": [\n        {\n          \"id\": 8,\n          \"color\": \"#516cc6\",\n          \"name\": \"Duis velit\",\n          \"fixes\": [\n            {\n              \"_type\": \"tempor consectetur ut elit\",\n              \"detail\": \"laborum minim tempor Duis\",\n              \"message\": \"aliquip magna ullamco consequat nulla\",\n              \"title\": \"in ad\"\n            },\n            {\n              \"_type\": \"reprehenderit\",\n              \"detail\": \"ea id culpa\",\n              \"message\": \"in dolore quis\",\n              \"title\": \"ad proident\"\n            }\n          ]\n        },\n        {\n          \"id\": 8,\n          \"color\": \"#516cc6\",\n          \"name\": \"ut eu incidi\",\n          \"fixes\": [\n            {\n              \"_type\": \"deserunt Ut\",\n              \"detail\": \"amet anim tempor\",\n              \"message\": \"eu esse Excepteur dolor\",\n              \"title\": \"amet irure dolor ea\"\n            },\n            {\n              \"_type\": \"dolor in labore mollit nisi\",\n              \"detail\": \"eiusmod pariatur ut cupidatat\",\n              \"message\": \"ut consectetur\",\n              \"title\": \"in\"\n            }\n          ]\n        }\n      ],\n      \"note\": \"<p>a free-form note</p>\",\n      \"amduca\": \"ONLABEL\"\n    }\n  ],\n  \"tags\": [\n    {\n      \"id\": 8,\n      \"color\": \"#516cc6\",\n      \"name\": \"aute minim\",\n      \"fixes\": [\n        {\n          \"_type\": \"amet do velit sit\",\n          \"detail\": \"in consequat fugiat\",\n          \"message\": \"dolor cillum in\",\n          \"title\": \"nisi esse do Lorem\"\n        },\n        {\n          \"_type\": \"amet sit ut laborum\",\n          \"detail\": \"ani\",\n          \"message\": \"sunt non deserunt veniam sint\",\n          \"title\": \"aliqua consequat aliquip esse\"\n        }\n      ]\n    },\n    {\n      \"id\": 8,\n      \"color\": \"#516cc6\",\n      \"name\": \"ei\",\n      \"fixes\": [\n        {\n          \"_type\": \"ulla\",\n          \"detail\": \"proident esse ipsum Duis\",\n          \"message\": \"eu voluptate nisi\",\n          \"title\": \"Ut esse consequat anim nulla\"\n        },\n        {\n          \"_type\": \"consequat proident exercitation adipisicing\",\n          \"detail\": \"ex Lorem ad\",\n          \"message\": \"incididunt ipsum dolore voluptate\",\n          \"title\": \"esse occaecat reprehenderit laborum\"\n        }\n      ]\n    }\n  ],\n  \"diagnoses\": [\n    {\n      \"id\": 8,\n      \"name\": \"Pain/inflammation (musculoskeletal), treatment\"\n    },\n    {\n      \"id\": 8,\n      \"name\": \"Pain/inflammation (musculoskeletal), treatment\"\n    }\n  ],\n  \"eligibilities\": [\n    {\n      \"id\": 1,\n      \"name\": \"Beef Cattle\",\n      \"fdaSpecies\": [\n        \"dairy_cattle\",\n        \"veal\"\n      ]\n    },\n    {\n      \"id\": 1,\n      \"name\": \"Beef Cattle\",\n      \"fdaSpecies\": [\n        \"unidentified\",\n        \"gamebirds\"\n      ]\n    }\n  ],\n  \"promises\": [\n    {\n      \"_type\": \"models.IdPromise\",\n      \"name\": \"ID promise\",\n      \"descrip\": \"You must give ID for each case enrolled\",\n      \"query\": \"What is the animal's name or number?\",\n      \"when\": \"PT0H\",\n      \"id\": 2345\n    },\n    {\n      \"_type\": \"models.IdPromise\",\n      \"name\": \"ID promise\",\n      \"descrip\": \"You must give ID for each case enrolled\",\n      \"query\": \"What is the animal's name or number?\",\n      \"when\": \"PT0H\",\n      \"id\": 2345\n    }\n  ],\n  \"metadata\": [\n    {\n      \"key\": \"popularity\",\n      \"value\": \"good 1.2\"\n    },\n    {\n      \"key\": \"popularity\",\n      \"value\": \"good 1.2\"\n    }\n  ]\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "241b7f43-cbb5-4949-8df5-4c0f18977ccf",
                "type": "text/javascript",
                "exec": [
                  "// Validate status 2xx \npm.test(\"[PUT]::/api/protocols/validate - Status code is 2xx\", function () {\n   pm.response.to.be.success;\n});\n"
                ]
              }
            }
          ],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        {
          "id": "81c74739-73fb-4cfc-8ad8-bd28d2982614",
          "name": "list of all eligibilities",
          "request": {
            "name": "list of all eligibilities",
            "description": {
              "content": "This endpoint returns an array of Eligibilities from which a User may choose. The ID field is authoritative, i.e., is all that is needed to identify a particular Eligibility.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "api",
                "protocols",
                "eligibilities"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "GET"
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "8f198087-6fa1-45c1-88a3-003f62af6b18",
                "type": "text/javascript",
                "exec": [
                  "// Validate status 2xx \npm.test(\"[GET]::/api/protocols/eligibilities - Status code is 2xx\", function () {\n   pm.response.to.be.success;\n});\n"
                ]
              }
            }
          ]
        },
        {
          "id": "b1c85dba-0b7b-4a7c-a6d4-ef430046c37c",
          "name": "list of fda species",
          "request": {
            "name": "list of fda species",
            "description": {
              "content": "\"Species\" is the term FDA uses to describe a class of animals in a label claim.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "api",
                "protocols",
                "eligibilities",
                "fdaspecies"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "GET"
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "5cea292e-9228-474c-8c5e-91a21392cab5",
                "type": "text/javascript",
                "exec": [
                  "// Validate status 2xx \npm.test(\"[GET]::/api/protocols/eligibilities/fdaspecies - Status code is 2xx\", function () {\n   pm.response.to.be.success;\n});\n"
                ]
              }
            }
          ]
        },
        {
          "id": "af2d85aa-e1c8-426d-9563-5ad0727b4223",
          "name": "list of all diagnoses",
          "request": {
            "name": "list of all diagnoses",
            "description": {
              "content": "Returns an array of all coded Diagnoses known to the system.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "api",
                "protocols",
                "diagnoses"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "GET"
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "b03c9c3c-c75f-4bc0-9c61-06bc8552ec68",
                "type": "text/javascript",
                "exec": [
                  "// Validate status 2xx \npm.test(\"[GET]::/api/protocols/diagnoses - Status code is 2xx\", function () {\n   pm.response.to.be.success;\n});\n"
                ]
              }
            }
          ]
        },
        {
          "id": "4bbe1b93-0882-426b-886f-9394d221aed4",
          "name": "list of library protocols",
          "request": {
            "name": "list of library protocols",
            "description": {
              "content": "This endpoint retrieves all protocols owned by, or shared with, the current User.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "api",
                "protocols",
                "libs"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "GET"
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "8d9540f6-fbb7-4393-bbe9-5248332468cc",
                "type": "text/javascript",
                "exec": [
                  "// Validate status 2xx \npm.test(\"[GET]::/api/protocols/libs - Status code is 2xx\", function () {\n   pm.response.to.be.success;\n});\n"
                ]
              }
            }
          ]
        },
        {
          "id": "38b7dd94-57b6-4b18-9d53-8c20ee5a0ce9",
          "name": "list of all diagnoses",
          "request": {
            "name": "list of all diagnoses",
            "description": {
              "content": "returns an array of Pxes .",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "api",
                "protocols",
                "exclusivestubs"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "GET"
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "e38752d4-3f52-4b39-b0c2-4c5476f29619",
                "type": "text/javascript",
                "exec": [
                  "// Validate status 2xx \npm.test(\"[GET]::/api/protocols/exclusivestubs - Status code is 2xx\", function () {\n   pm.response.to.be.success;\n});\n"
                ]
              }
            }
          ]
        },
        {
          "id": "373f8176-67a4-4674-b761-a1d0d95197b0",
          "name": "validate a structured Dosage",
          "request": {
            "name": "validate a structured Dosage",
            "description": {
              "content": "validate a Dosage with SizeFunction and SequewnceFunction returning an test '_dose\" description.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "api",
                "protocols",
                "dosages"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n  \"sequenceFunction\": {\n    \"_type\": \"models.SeqSingleDose\"\n  },\n  \"sizeFunction\": {\n    \"_type\": \"models.FixedDoseFunction\",\n    \"dose\": {\n      \"quantity\": {\n        \"dimension\": \"Mass\",\n        \"value\": 3,\n        \"symbol\": \"oz\"\n      }\n    }\n  }\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "54627fda-055b-40de-a4fd-5f409adafec7",
                "type": "text/javascript",
                "exec": [
                  "// Validate status 2xx \npm.test(\"[POST]::/api/protocols/dosages - Status code is 2xx\", function () {\n   pm.response.to.be.success;\n});\n"
                ]
              }
            }
          ],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        {
          "id": "0f3bb16f-d164-4c39-8684-a592a208be29",
          "name": "list of library pxes",
          "request": {
            "name": "list of library pxes",
            "description": {
              "content": "This endpoint returns all the Protocols owned by, or shared with, the current User.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "api",
                "protocols",
                "libstubs"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "GET"
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "4752cfd8-fcf5-46f6-80c1-18fc4d19d9ee",
                "type": "text/javascript",
                "exec": [
                  "// Validate status 2xx \npm.test(\"[GET]::/api/protocols/libstubs - Status code is 2xx\", function () {\n   pm.response.to.be.success;\n});\n"
                ]
              }
            }
          ]
        },
        {
          "id": "c814bf49-f84f-4766-a17a-263de658c79a",
          "name": "retrieve protocol by ID",
          "request": {
            "name": "retrieve protocol by ID",
            "description": {
              "content": "This endpoint retrieves a Protocol by `protocol.id`.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "api",
                "protocols",
                ":id"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": [
                {
                  "disabled": false,
                  "description": {
                    "content": "(Required) Protocol ID key",
                    "type": "text/plain"
                  },
                  "type": "any",
                  "value": "7",
                  "key": "id"
                }
              ]
            },
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "GET"
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "a32221ee-596a-47bc-a2c4-50d72c3db87d",
                "type": "text/javascript",
                "exec": [
                  "// Validate status 2xx \npm.test(\"[GET]::/api/protocols/:id - Status code is 2xx\", function () {\n   pm.response.to.be.success;\n});\n"
                ]
              }
            }
          ]
        },
        {
          "id": "b098df6e-b404-4fc2-935e-a0dd0e437079",
          "name": "delete protocol",
          "request": {
            "name": "delete protocol",
            "description": {
              "content": "Change `protocol.status` to DELETED (this does not actually remove it from the database).",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "api",
                "protocols",
                ":id"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": [
                {
                  "disabled": false,
                  "description": {
                    "content": "(Required) Protocol ID key",
                    "type": "text/plain"
                  },
                  "type": "any",
                  "value": "55339818",
                  "key": "id"
                }
              ]
            },
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "DELETE"
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "7bdfd4bb-9de4-4546-8b33-278bf708036c",
                "type": "text/javascript",
                "exec": [
                  "// Validate status 2xx \npm.test(\"[DELETE]::/api/protocols/:id - Status code is 2xx\", function () {\n   pm.response.to.be.success;\n});\n"
                ]
              }
            }
          ]
        },
        {
          "id": "16ac5607-158d-482f-9902-207fbc3a1cd5",
          "name": "list of all diagnoses",
          "request": {
            "name": "list of all diagnoses",
            "description": {
              "content": "This",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "api",
                "protocols",
                "prescriptions"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "GET"
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "aff28c9b-9f82-44d6-bfc2-7526f675e6a0",
                "type": "text/javascript",
                "exec": [
                  "// Validate status 2xx \npm.test(\"[GET]::/api/protocols/prescriptions - Status code is 2xx\", function () {\n   pm.response.to.be.success;\n});\n"
                ]
              }
            }
          ]
        },
        {
          "id": "9a7cd296-0422-4fb8-a038-a50eb62f097b",
          "name": "list of all diagnoses",
          "request": {
            "name": "list of all diagnoses",
            "description": {
              "content": "returns an array of Prescriptions",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "api",
                "protocols",
                ":id",
                "prescriptions"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": [
                {
                  "disabled": false,
                  "description": {
                    "content": "(Required) Protocol ID key",
                    "type": "text/plain"
                  },
                  "type": "any",
                  "value": "55339818",
                  "key": "id"
                }
              ]
            },
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "GET"
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "db4f8d66-01a9-462a-ac79-78991d80b353",
                "type": "text/javascript",
                "exec": [
                  "// Validate status 2xx \npm.test(\"[GET]::/api/protocols/:id/prescriptions - Status code is 2xx\", function () {\n   pm.response.to.be.success;\n});\n"
                ]
              }
            }
          ]
        },
        {
          "id": "6afae7ba-be52-46c4-9ede-38b687a6d43c",
          "name": "retrieve prescription by ID",
          "request": {
            "name": "retrieve prescription by ID",
            "description": {
              "content": "Retrieve a Prescription by `prescription.id`.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "api",
                "protocols",
                "prescriptions",
                ":id"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": [
                {
                  "disabled": false,
                  "description": {
                    "content": "(Required) Prescription ID key",
                    "type": "text/plain"
                  },
                  "type": "any",
                  "value": "Vi1y9kbpEj7Upqy7",
                  "key": "id"
                }
              ]
            },
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "GET"
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "3a5c09df-e6c7-49bb-a639-2b27a154d615",
                "type": "text/javascript",
                "exec": [
                  "// Validate status 2xx \npm.test(\"[GET]::/api/protocols/prescriptions/:id - Status code is 2xx\", function () {\n   pm.response.to.be.success;\n});\n"
                ]
              }
            }
          ]
        },
        {
          "id": "e80770bb-12e2-4412-aa80-0a741b886447",
          "name": "list of all labelclaims",
          "request": {
            "name": "list of all labelclaims",
            "description": {
              "content": "This endpoint returns the full array of drug labels.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "api",
                "labels"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "GET"
          },
          "response": [],
          "event": []
        },
        {
          "id": "d5e236ed-c322-4417-ab1e-05ac71d0a115",
          "name": "labelclaim",
          "request": {
            "name": "labelclaim",
            "description": {
              "content": "Return specified labelclaim.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "api",
                "labels",
                ":id"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": [
                {
                  "disabled": false,
                  "description": {
                    "content": "(Required) labelclaim  ID",
                    "type": "text/plain"
                  },
                  "type": "any",
                  "value": "32",
                  "key": "id"
                }
              ]
            },
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "GET"
          },
          "response": [],
          "event": []
        },
        {
          "id": "cd1fad50-bdbb-44b5-90d2-dbe5b92a74fc",
          "name": "package insert",
          "request": {
            "name": "package insert",
            "description": {
              "content": "Retrieve the product package insert.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "api",
                "labels",
                "inserts",
                ":lxId"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": [
                {
                  "disabled": false,
                  "description": {
                    "content": "(Required) label ID",
                    "type": "text/plain"
                  },
                  "type": "any",
                  "value": "32",
                  "key": "lxId"
                }
              ]
            },
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "GET"
          },
          "response": [],
          "event": []
        },
        {
          "id": "116abb66-61de-4492-a4d2-7279f6748302",
          "name": "get detail of a Greenbook Drug as a link",
          "request": {
            "name": "get detail of a Greenbook Drug as a link",
            "description": {
              "content": "This",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "api",
                "spl",
                ":ndc"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": [
                {
                  "disabled": false,
                  "description": {
                    "content": "(Required) unique hyphenated number with up to 10 digits in 2 or 3 segments as labelerCode-productCode-packageCode. packageCode may not be needed.",
                    "type": "text/plain"
                  },
                  "type": "any",
                  "value": "0010-3832",
                  "key": "ndc"
                }
              ]
            },
            "header": [
              {
                "key": "Accept",
                "value": "text/html"
              }
            ],
            "method": "GET"
          },
          "response": [],
          "event": []
        },
        {
          "id": "3fb68ae5-b69f-4135-ba1c-ebdd8d7e52c0",
          "name": "get detail of a Greenbook Drug as a link",
          "request": {
            "name": "get detail of a Greenbook Drug as a link",
            "description": {
              "content": "This",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "api",
                "spl",
                ":ndc",
                ":image"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": [
                {
                  "disabled": false,
                  "description": {
                    "content": "(Required) unique hyphenated number with up to 10 digits in 2 or 3 segments as labelerCode-productCode-packageCode. packageCode may not be needed.",
                    "type": "text/plain"
                  },
                  "type": "any",
                  "value": "0010-3495",
                  "key": "ndc"
                },
                {
                  "disabled": false,
                  "description": {
                    "content": "(Required) name of image file",
                    "type": "text/plain"
                  },
                  "type": "any",
                  "value": "601588-image-fake.jpg",
                  "key": "image"
                }
              ]
            },
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "GET"
          },
          "response": [],
          "event": []
        },
        {
          "id": "8b2bf2da-9846-4dc0-8923-a002515ab6e6",
          "name": "retrieve prescription by ID",
          "request": {
            "name": "retrieve prescription by ID",
            "description": {
              "content": "Retrieve a Prescription by `prescription.id`.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "api",
                "prescriptions",
                ":id",
                ""
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": [
                {
                  "disabled": false,
                  "description": {
                    "content": "(Required) Prescription ID key",
                    "type": "text/plain"
                  },
                  "type": "any",
                  "value": "Vi1y9kbpEj7Upqy7",
                  "key": "id"
                }
              ]
            },
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "GET"
          },
          "response": [],
          "event": []
        },
        {
          "id": "502397d9-465c-497b-b6d5-d36c48097730",
          "name": "list of cases",
          "request": {
            "name": "list of cases",
            "description": {
              "content": "Get all current cases for this user",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "api",
                "cases"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "GET"
          },
          "response": [],
          "event": []
        },
        {
          "id": "fc29b348-4e13-424d-aa7c-12ff6bbaa12a",
          "name": "list  of cases for a rx",
          "request": {
            "name": "list  of cases for a rx",
            "description": {
              "content": "Get all current cases for this prescription and this user",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "api",
                "prescriptions",
                ":rxId",
                "cases"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": [
                {
                  "disabled": false,
                  "description": {
                    "content": "(Required) prescription uuid",
                    "type": "text/plain"
                  },
                  "type": "any",
                  "value": "Vi1y9kbpEj7Upqy7",
                  "key": "rxId"
                }
              ]
            },
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "GET"
          },
          "response": [],
          "event": []
        },
        {
          "id": "aecb612e-4f9c-43a3-a324-3ecd761bafeb",
          "name": "list of cases by Rx",
          "request": {
            "name": "list of cases by Rx",
            "description": {
              "content": "Get all current cases for this Rx",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "api",
                "users",
                "tasks"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "GET"
          },
          "response": [],
          "event": []
        },
        {
          "id": "2595d39d-e2e5-44f2-92cc-04e84f34dfa6",
          "name": "get Greenbook Drug summary by NDC pattern",
          "request": {
            "name": "get Greenbook Drug summary by NDC pattern",
            "description": {
              "content": "This endpoint returns the summary listing of a Greenbook Drug by NDC pattern.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "api",
                "admin",
                "product"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": false,
                  "description": {
                    "content": "first section labeler code of a NDC",
                    "type": "text/plain"
                  },
                  "key": "ndcProd",
                  "value": "55339818"
                },
                {
                  "disabled": false,
                  "description": {
                    "content": "mid section product code of a NDC",
                    "type": "text/plain"
                  },
                  "key": "ndcLabeler",
                  "value": "55339818"
                },
                {
                  "disabled": false,
                  "description": {
                    "content": "end section package code of a NDC",
                    "type": "text/plain"
                  },
                  "key": "ndcBrand",
                  "value": "55339818"
                }
              ],
              "variable": []
            },
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "GET"
          },
          "response": [],
          "event": []
        },
        {
          "id": "1f94d7f6-6783-43ae-ac32-1637c5a13da6",
          "name": "get summary listing of a Greenbook Drug",
          "request": {
            "name": "get summary listing of a Greenbook Drug",
            "description": {
              "content": "This endpoint returns the summary listing of a Greenbook Drug by ndc identifier.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "api",
                "admin",
                "product",
                ":ndc"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": [
                {
                  "disabled": false,
                  "description": {
                    "content": "(Required) unique 10-digit, 3-segment number. labelerCode-productCode-packageCode",
                    "type": "text/plain"
                  },
                  "type": "any",
                  "value": "0061-4321-03",
                  "key": "ndc"
                }
              ]
            },
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "GET"
          },
          "response": [],
          "event": []
        }
      ],
      "event": []
    },
    {
      "id": "3ebed78c-ba69-4592-bc8b-3a15eb18c8c5",
      "name": "ALL_USERS",
      "description": {
        "content": "available to all users.",
        "type": "text/plain"
      },
      "item": [
        {
          "id": "5dba004c-6963-4a34-b569-c610e949da5f",
          "name": "update user data",
          "request": {
            "name": "update user data",
            "description": {
              "content": "Users may update their own data. A VOR may also update User data of a User in a `CLIENT` relationship with that VOR. A SAOR may update data of any User.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "api",
                "users"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "PUT",
            "body": {
              "mode": "raw",
              "raw": "{\n  \"user\": {\n    \"id\": 1,\n    \"uname\": \"exampleUser\",\n    \"userType\": \"VOR\",\n    \"firstname\": \"Example\",\n    \"lastname\": \"User\",\n    \"email\": \"exampleUser@email.com\",\n    \"suffix\": \"DVM\"\n  }\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            }
          },
          "response": [],
          "event": [],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        {
          "id": "899e8f6b-e382-42fd-ae6d-181f252fdc4d",
          "name": "user login",
          "request": {
            "name": "user login",
            "description": {
              "content": "Authenticate a User and the app requesting a token, returning a token for use in future secured requests.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "api",
                "users",
                "logins"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n  \"apikey\": \"t0CGzpQ4cgu1OBy44sBt\",\n  \"identifier\": \"someUser\",\n  \"password\": \"somePassword\"\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            }
          },
          "response": [],
          "event": [],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        {
          "id": "4f641e1c-1af9-44ad-bf26-913dc0f69e86",
          "name": "renew token",
          "request": {
            "name": "renew token",
            "description": {
              "content": "Renews the User's access token for use in future secured requests.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "api",
                "users",
                "logins"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "GET"
          },
          "response": [],
          "event": []
        },
        {
          "id": "cbb2c2a2-3cc3-45d1-a8e6-61f2539dfddf",
          "name": "get user data",
          "request": {
            "name": "get user data",
            "description": {
              "content": "Returns User data as specified by User `id`. Any User may get their own data. A VOR may get User data of Users in a `CLIENT` relationship with that VOR. A SAOR may get data of any User.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "api",
                "users",
                ":id"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": [
                {
                  "disabled": false,
                  "description": {
                    "content": "(Required) User ID key",
                    "type": "text/plain"
                  },
                  "type": "any",
                  "value": "2",
                  "key": "id"
                }
              ]
            },
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "GET"
          },
          "response": [],
          "event": []
        },
        {
          "id": "2ff7531f-8096-4722-8c2c-9f58cc81fc76",
          "name": "list of all",
          "request": {
            "name": "list of all",
            "description": {
              "content": "list of .",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "api",
                "visits",
                ":id"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": [
                {
                  "disabled": false,
                  "description": {
                    "content": "(Required) User ID key",
                    "type": "text/plain"
                  },
                  "type": "any",
                  "value": "2",
                  "key": "id"
                }
              ]
            },
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "GET"
          },
          "response": [],
          "event": []
        },
        {
          "id": "c587a2d5-e4a4-454b-800f-e2514a034143",
          "name": "update address",
          "request": {
            "name": "update address",
            "description": {
              "content": "A User may update their own address.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "api",
                "users",
                "addresses"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "PUT",
            "body": {
              "mode": "raw",
              "raw": "{\n  \"user\": {\n    \"id\": 1,\n    \"uname\": \"exampleUser\",\n    \"userType\": \"VOR\",\n    \"firstname\": \"Example\",\n    \"lastname\": \"User\",\n    \"email\": \"exampleUser@email.com\",\n    \"suffix\": \"DVM\"\n  }\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            }
          },
          "response": [],
          "event": [],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        {
          "id": "b4d4edeb-2e42-433f-8f41-fa39b060b342",
          "name": "address of user",
          "request": {
            "name": "address of user",
            "description": {
              "content": "Address of user specified by `id`.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "api",
                "users",
                "addresses",
                ":id"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": [
                {
                  "disabled": false,
                  "description": {
                    "content": "(Required) User ID key",
                    "type": "text/plain"
                  },
                  "type": "any",
                  "value": "2",
                  "key": "id"
                }
              ]
            },
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "GET"
          },
          "response": [],
          "event": []
        },
        {
          "id": "c39f5e5a-a6cd-4ff0-b72c-4e1cf51bd94b",
          "name": "update profile",
          "request": {
            "name": "update profile",
            "description": {
              "content": "A User may update their own profile.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "api",
                "users",
                "profiles"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "PUT",
            "body": {
              "mode": "raw",
              "raw": "{\n  \"user\": {\n    \"address1\": \"123 Main St.\",\n    \"address2\": \"123 Main St.\",\n    \"emailNews\": true,\n    \"emailTips\": true,\n    \"firstname\": \"Example\",\n    \"id\": 1,\n    \"lastname\": \"User\",\n    \"rxHeader\": \"officia aliqua\",\n    \"sandboxName\": \"consequat aliqua ut\",\n    \"state\": \"Any State\",\n    \"town\": \"Anytown\",\n    \"uname\": \"exampleUser\",\n    \"userId\": -30818080,\n    \"userType\": \"VOR\",\n    \"zip\": \"12345-abcd\",\n    \"email\": \"exampleUser@email.com\",\n    \"suffix\": \"DVM\",\n    \"busName\": \"testVOR Clinic\",\n    \"country\": \"USA\"\n  }\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            }
          },
          "response": [],
          "event": [],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        {
          "id": "91535400-678d-4d36-8f23-7436c101aa37",
          "name": "Profile of user",
          "request": {
            "name": "Profile of user",
            "description": {
              "content": "Profile of user specified by `id`.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "api",
                "users",
                "profiles",
                ":id"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": [
                {
                  "disabled": false,
                  "description": {
                    "content": "(Required) User ID key",
                    "type": "text/plain"
                  },
                  "type": "any",
                  "value": "2",
                  "key": "id"
                }
              ]
            },
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "GET"
          },
          "response": [],
          "event": []
        },
        {
          "id": "1b2cf379-049e-48d2-8abb-854232893b14",
          "name": "confirm Token",
          "request": {
            "name": "confirm Token",
            "description": {
              "content": "used for clickable link to confirm a token sent in email.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "api",
                "users",
                "token",
                ":token"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Accept",
                "value": "text/html"
              }
            ],
            "method": "GET"
          },
          "response": [],
          "event": []
        },
        {
          "id": "4c85b612-4cc2-47bc-8880-7bf1484f6f6d",
          "name": "record a User comment",
          "request": {
            "name": "record a User comment",
            "description": {
              "content": "Records a User comment to the database and emails admin. It supports privacy controls.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "api",
                "users",
                "comments"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n  \"comment\": \"some comment\",\n  \"userId\": 1,\n  \"public\": false\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            }
          },
          "response": [],
          "event": [],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        {
          "id": "7d9b8852-2091-4b28-b87a-d3cbfb6dae85",
          "name": "list of all diagnoses",
          "request": {
            "name": "list of all diagnoses",
            "description": {
              "content": "Returns an array of keys used to identify help messages.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "api",
                "helpkeys"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "GET"
          },
          "response": [],
          "event": []
        },
        {
          "id": "edcd9777-a481-4a87-ad34-8a36dfad473d",
          "name": "help message",
          "request": {
            "name": "help message",
            "description": {
              "content": "return a help message, normally to be displayed in a popup help screen.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "api",
                "help",
                ":key"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": [
                {
                  "disabled": false,
                  "description": {
                    "content": "(Required) help screen key",
                    "type": "text/plain"
                  },
                  "type": "any",
                  "value": "occaecat velit aliqua",
                  "key": "key"
                }
              ]
            },
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "GET"
          },
          "response": [],
          "event": []
        },
        {
          "id": "b2cc45c3-ced1-4451-9056-4454e6379c23",
          "name": "confirm VOR",
          "request": {
            "name": "confirm VOR",
            "description": {
              "type": "text/plain"
            },
            "url": {
              "path": [
                "api",
                "admin",
                "ConfirmVOR"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": false,
                  "key": "sendEmail",
                  "value": "true"
                }
              ],
              "variable": []
            },
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "PUT"
          },
          "response": [],
          "event": []
        }
      ],
      "event": []
    },
    {
      "id": "111885aa-12ca-4b7b-aca6-8724dceee3f8",
      "name": "TOR",
      "description": {
        "content": "available to farm employees.",
        "type": "text/plain"
      },
      "item": [],
      "event": []
    },
    {
      "id": "a0e7ed90-a8f3-4d5c-bfc2-5edeb7171a1f",
      "name": "LOR",
      "description": {
        "content": "available to pharmacy curators.",
        "type": "text/plain"
      },
      "item": [],
      "event": []
    },
    {
      "id": "98e21600-81ce-4daf-8ff0-7174883fc808",
      "name": "FARM",
      "description": {
        "content": "available to farm accounts.",
        "type": "text/plain"
      },
      "item": [],
      "event": []
    },
    {
      "id": "12bca40b-ba11-4049-b657-5e5575495855",
      "name": "CLINIC",
      "description": {
        "content": "available to vet clinic accounts.",
        "type": "text/plain"
      },
      "item": [],
      "event": []
    },
    {
      "id": "bf737985-579d-4ae5-9d19-df885ed2a73e",
      "name": "User",
      "description": {
        "content": "Endpoints and models related to user management.",
        "type": "text/plain"
      },
      "item": [],
      "event": []
    },
    {
      "id": "05b2e1b9-ceef-4342-b0ea-89765e27379f",
      "name": "Protocol",
      "description": {
        "content": "Endpoints and models related to protocol management.",
        "type": "text/plain"
      },
      "item": [],
      "event": []
    },
    {
      "id": "9bad5d8f-8267-4449-a162-4b0881efa59e",
      "name": "Prescription",
      "description": {
        "content": "Endpoints and models related to prescription management.",
        "type": "text/plain"
      },
      "item": [],
      "event": []
    },
    {
      "id": "49400f21-90a4-41f3-9e31-674f0cc38b24",
      "name": "Case",
      "description": {
        "content": "Endpoints and models related to case management.",
        "type": "text/plain"
      },
      "item": [],
      "event": []
    },
    {
      "id": "f7f65b73-305d-4de5-ac39-6ecac7fb9b70",
      "name": "Promise",
      "description": {
        "content": "Endpoints and models related to promise management.",
        "type": "text/plain"
      },
      "item": [],
      "event": []
    },
    {
      "id": "69ee5897-27e8-4f0f-8817-cd339c3ed9d5",
      "name": "create profile",
      "request": {
        "name": "create profile",
        "description": {
          "content": "Create a User with Address, and UserPrefs.",
          "type": "text/plain"
        },
        "url": {
          "path": [
            "api",
            "users",
            "profiles"
          ],
          "host": [
            "{{baseUrl}}"
          ],
          "query": [],
          "variable": []
        },
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json"
          },
          {
            "key": "Accept",
            "value": "application/json"
          }
        ],
        "method": "POST",
        "body": {
          "mode": "raw",
          "raw": "{\n  \"user\": {\n    \"address1\": \"123 Main St.\",\n    \"address2\": \"123 Main St.\",\n    \"emailNews\": true,\n    \"emailTips\": true,\n    \"firstname\": \"Example\",\n    \"id\": 1,\n    \"lastname\": \"User\",\n    \"rxHeader\": \"officia aliqua\",\n    \"sandboxName\": \"consequat aliqua ut\",\n    \"state\": \"Any State\",\n    \"town\": \"Anytown\",\n    \"uname\": \"exampleUser\",\n    \"userId\": -30818080,\n    \"userType\": \"VOR\",\n    \"zip\": \"12345-abcd\",\n    \"email\": \"exampleUser@email.com\",\n    \"suffix\": \"DVM\",\n    \"busName\": \"testVOR Clinic\",\n    \"country\": \"USA\"\n  }\n}",
          "options": {
            "raw": {
              "language": "json"
            }
          }
        }
      },
      "response": [
        {
          "_": {
            "postman_previewlanguage": "json"
          },
          "id": "ca1b206a-8258-4e90-ac85-c831661532b5",
          "name": "the created Profile",
          "originalRequest": {
            "url": {
              "path": [
                "api",
                "users",
                "profiles"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "description": {
                  "content": "Added as a part of security scheme: apikey",
                  "type": "text/plain"
                },
                "key": "X-Auth-Token",
                "value": "<API Key>"
              }
            ],
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n  \"user\": {\n    \"address1\": \"123 Main St.\",\n    \"address2\": \"123 Main St.\",\n    \"emailNews\": true,\n    \"emailTips\": true,\n    \"firstname\": \"Example\",\n    \"id\": 1,\n    \"lastname\": \"User\",\n    \"rxHeader\": \"officia aliqua\",\n    \"sandboxName\": \"consequat aliqua ut\",\n    \"state\": \"Any State\",\n    \"town\": \"Anytown\",\n    \"uname\": \"exampleUser\",\n    \"userId\": -30818080,\n    \"userType\": \"VOR\",\n    \"zip\": \"12345-abcd\",\n    \"email\": \"exampleUser@email.com\",\n    \"suffix\": \"DVM\",\n    \"busName\": \"testVOR Clinic\",\n    \"country\": \"USA\"\n  }\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            }
          },
          "status": "OK",
          "code": 200,
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "body": "{\n  \"address1\": \"123 Main St.\",\n  \"address2\": \"123 Main St.\",\n  \"emailNews\": true,\n  \"emailTips\": true,\n  \"firstname\": \"Example\",\n  \"id\": 1,\n  \"lastname\": \"User\",\n  \"rxHeader\": \"sunt velit\",\n  \"sandboxName\": \"voluptate labore\",\n  \"state\": \"Any State\",\n  \"town\": \"Anytown\",\n  \"uname\": \"exampleUser\",\n  \"userId\": 89957863,\n  \"userType\": \"VOR\",\n  \"zip\": \"12345-abcd\",\n  \"email\": \"exampleUser@email.com\",\n  \"suffix\": \"DVM\",\n  \"busName\": \"testVOR Clinic\",\n  \"country\": \"USA\"\n}",
          "cookie": []
        },
        {
          "_": {
            "postman_previewlanguage": "text"
          },
          "id": "b6ca4232-8d97-469f-b60f-1b612fdd9dd8",
          "name": "Authorization required",
          "originalRequest": {
            "url": {
              "path": [
                "api",
                "users",
                "profiles"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "description": {
                  "content": "Added as a part of security scheme: apikey",
                  "type": "text/plain"
                },
                "key": "X-Auth-Token",
                "value": "<API Key>"
              }
            ],
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n  \"user\": {\n    \"address1\": \"123 Main St.\",\n    \"address2\": \"123 Main St.\",\n    \"emailNews\": true,\n    \"emailTips\": true,\n    \"firstname\": \"Example\",\n    \"id\": 1,\n    \"lastname\": \"User\",\n    \"rxHeader\": \"officia aliqua\",\n    \"sandboxName\": \"consequat aliqua ut\",\n    \"state\": \"Any State\",\n    \"town\": \"Anytown\",\n    \"uname\": \"exampleUser\",\n    \"userId\": -30818080,\n    \"userType\": \"VOR\",\n    \"zip\": \"12345-abcd\",\n    \"email\": \"exampleUser@email.com\",\n    \"suffix\": \"DVM\",\n    \"busName\": \"testVOR Clinic\",\n    \"country\": \"USA\"\n  }\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            }
          },
          "status": "Unauthorized",
          "code": 401,
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "body": "",
          "cookie": []
        }
      ],
      "event": [],
      "protocolProfileBehavior": {
        "disableBodyPruning": true
      }
    }
  ],
  "auth": {
    "type": "apikey",
    "apikey": [
      {
        "type": "any",
        "value": "X-Auth-Token",
        "key": "key"
      },
      {
        "type": "any",
        "value": "<API Key>",
        "key": "value"
      },
      {
        "type": "any",
        "value": "header",
        "key": "in"
      }
    ]
  },
  "event": [],
  "variable": [
    {
      "type": "string",
      "value": "https://test.vcpr.org",
      "key": "baseUrl"
    }
  ],
  "info": {
    "_postman_id": "4881cc4e-f4e6-4489-bfed-08220d1df2a1",
    "name": "PublicAPI",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
    "description": {
      "content": "API serving the Veterinary Protocol Manager&trade; application. &copy; DairySight LLC, Argyle NY 2020\n\nContact Support:\n Name: Jim Ehrlich, DVM\n Email: jehrlich@vcpr.org",
      "type": "text/plain"
    }
  }
}
{
  "_": {
    "postman_id": "9f7aaa3e-43fa-4bca-8a32-e23f3f441606"
  },
  "item": [
    {
      "id": "ec0125b7-ebe6-4824-8a57-90086505e8aa",
      "name": "VOR",
      "description": {
        "content": "available to veterinarians.",
        "type": "text/plain"
      },
      "item": [
        {
          "id": "c7e18415-3bbb-4214-be93-e8ed1f52724d",
          "name": "load Editor",
          "request": {
            "name": "load Editor",
            "description": {
              "content": "load Protocol Editor",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "editor"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Accept",
                "value": "text/html"
              }
            ],
            "method": "GET"
          },
          "response": [],
          "event": []
        },
        {
          "id": "cc5677ab-b428-44e1-b69f-a7c6766a1ee6",
          "name": "load Farm App",
          "request": {
            "name": "load Farm App",
            "description": {
              "content": "load Farm App",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "farm"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Accept",
                "value": "text/html"
              }
            ],
            "method": "GET"
          },
          "response": [],
          "event": []
        },
        {
          "id": "e62c0971-b579-4a08-b8f4-321b40c8cce0",
          "name": "list of Users IDs",
          "request": {
            "name": "list of Users IDs",
            "description": {
              "content": "Returns the ID and names of all active Users of the type(s) specified.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "api",
                "users"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": [
                {
                  "disabled": false,
                  "description": {
                    "content": "(Required) User types to include",
                    "type": "text/plain"
                  },
                  "type": "any",
                  "value": "VOR",
                  "key": "usertypes"
                }
              ]
            },
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "GET"
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "8c06ce68-4666-45e1-9c2f-b0a94ebaebf3",
                "type": "text/javascript",
                "exec": [
                  "// Validate status 2xx \npm.test(\"[GET]::/api/users - Status code is 2xx\", function () {\n   pm.response.to.be.success;\n});\n",
                  "// Validate response time \npm.test(\"[GET]::/api/users - Response time is less than 300ms\", function () {\n    pm.expect(pm.response.responseTime).to.be.below(300);\n});\n",
                  "// Validate if response header has matching content-type\npm.test(\"[GET]::/api/users - Content-Type is application/json\", function () {\n   pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"application/json\");\n});\n",
                  "// Validate if response has JSON Body \npm.test(\"[GET]::/api/users - Response has JSON Body\", function () {\n    pm.response.to.have.jsonBody();\n});\n",
                  "// Response Validation\nconst schema = {\"type\":\"object\",\"properties\":{\"vors\":{\"type\":\"array\",\"items\":{\"type\":\"object\",\"properties\":{\"users\":{\"type\":\"integer\",\"description\":\"User's ID\"}}}}}}\n\n// Validate if response matches JSON schema \npm.test(\"[GET]::/api/users - Schema is valid\", function() {\n    pm.response.to.have.jsonSchema(schema,{unknownFormats: [\"int32\", \"int64\", \"float\", \"double\"]});\n});\n"
                ]
              }
            }
          ]
        },
        {
          "id": "6992284e-07ad-4b1a-899f-80f378406302",
          "name": "list of VORs",
          "request": {
            "name": "list of VORs",
            "description": {
              "content": "list of VOR users.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "api",
                "users",
                "vors"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "GET"
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "73cdf161-6acb-402b-9042-8c1627c1af42",
                "type": "text/javascript",
                "exec": [
                  "// Validate status 2xx \npm.test(\"[GET]::/api/users/vors - Status code is 2xx\", function () {\n   pm.response.to.be.success;\n});\n",
                  "// Validate response time \npm.test(\"[GET]::/api/users/vors - Response time is less than 300ms\", function () {\n    pm.expect(pm.response.responseTime).to.be.below(300);\n});\n",
                  "// Validate if response header has matching content-type\npm.test(\"[GET]::/api/users/vors - Content-Type is application/json\", function () {\n   pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"application/json\");\n});\n",
                  "// Validate if response has JSON Body \npm.test(\"[GET]::/api/users/vors - Response has JSON Body\", function () {\n    pm.response.to.have.jsonBody();\n});\n",
                  "// Response Validation\nconst schema = {\"properties\":{\"vors\":{\"type\":\"array\",\"items\":{\"type\":\"object\",\"properties\":{\"id\":{\"type\":\"integer\",\"description\":\"User's ID\"},\"name\":{\"type\":\"string\",\"description\":\"User's Name\"}}}}},\"type\":\"object\"}\n\n// Validate if response matches JSON schema \npm.test(\"[GET]::/api/users/vors - Schema is valid\", function() {\n    pm.response.to.have.jsonSchema(schema,{unknownFormats: [\"int32\", \"int64\", \"float\", \"double\"]});\n});\n"
                ]
              }
            }
          ]
        },
        {
          "id": "5bb7782e-a679-4f84-b493-06835332f749",
          "name": "delete user",
          "request": {
            "name": "delete user",
            "description": {
              "content": "This endpoint supports the (reversible) \"delete\" of a User by setting user.status to `REMOVED`. Removed Users are not visible in normal queries.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "api",
                "users",
                ":id"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": [
                {
                  "disabled": false,
                  "description": {
                    "content": "(Required) User ID key",
                    "type": "text/plain"
                  },
                  "type": "any",
                  "value": "5",
                  "key": "id"
                }
              ]
            },
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "DELETE"
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "4d7896aa-2177-4bc5-94dd-b834404d0973",
                "type": "text/javascript",
                "exec": [
                  "// Validate status 2xx \npm.test(\"[DELETE]::/api/users/:id - Status code is 2xx\", function () {\n   pm.response.to.be.success;\n});\n",
                  "// Validate response time \npm.test(\"[DELETE]::/api/users/:id - Response time is less than 300ms\", function () {\n    pm.expect(pm.response.responseTime).to.be.below(300);\n});\n",
                  "// Validate if response header has matching content-type\npm.test(\"[DELETE]::/api/users/:id - Content-Type is application/json\", function () {\n   pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"application/json\");\n});\n",
                  "// Validate if response has JSON Body \npm.test(\"[DELETE]::/api/users/:id - Response has JSON Body\", function () {\n    pm.response.to.have.jsonBody();\n});\n",
                  "// Response Validation\nconst schema = {\"type\":\"object\",\"properties\":{\"deleted\":{\"type\":\"integer\",\"description\":\"number of Users deleted\"}}}\n\n// Validate if response matches JSON schema \npm.test(\"[DELETE]::/api/users/:id - Schema is valid\", function() {\n    pm.response.to.have.jsonSchema(schema,{unknownFormats: [\"int32\", \"int64\", \"float\", \"double\"]});\n});\n"
                ]
              }
            }
          ]
        },
        {
          "id": "03e4ab63-b47a-45b9-8fc6-d438532576b8",
          "name": "create a sandbox user",
          "request": {
            "name": "create a sandbox user",
            "description": {
              "content": "Create a sandbox user of MOR `UserType` who is a `CLIENT` of logged-in VOR. This allows the VOR to prescribe to the sandbox client, then view prescriptions from the client's point of view using the Farm App.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "api",
                "users",
                "sandboxClient"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "\"qui velit in\"",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "6b4554b1-1667-45bc-b514-50a196c17a70",
                "type": "text/javascript",
                "exec": [
                  "// Validate status 2xx \npm.test(\"[POST]::/api/users/sandboxClient - Status code is 2xx\", function () {\n   pm.response.to.be.success;\n});\n",
                  "// Validate response time \npm.test(\"[POST]::/api/users/sandboxClient - Response time is less than 300ms\", function () {\n    pm.expect(pm.response.responseTime).to.be.below(300);\n});\n",
                  "// Validate if response header has matching content-type\npm.test(\"[POST]::/api/users/sandboxClient - Content-Type is application/json\", function () {\n   pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"application/json\");\n});\n",
                  "// Validate if response has JSON Body \npm.test(\"[POST]::/api/users/sandboxClient - Response has JSON Body\", function () {\n    pm.response.to.have.jsonBody();\n});\n",
                  "// Response Validation\nconst schema = {\"type\":\"object\",\"properties\":{\"sandboxClient\":{\"type\":\"string\",\"description\":\"username of sandbox client\"}}}\n\n// Validate if response matches JSON schema \npm.test(\"[POST]::/api/users/sandboxClient - Schema is valid\", function() {\n    pm.response.to.have.jsonSchema(schema,{unknownFormats: [\"int32\", \"int64\", \"float\", \"double\"]});\n});\n"
                ]
              }
            }
          ],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        {
          "id": "30986c4e-82a6-4889-b69e-bcc89d1e3143",
          "name": "delete sandboxClient",
          "request": {
            "name": "delete sandboxClient",
            "description": {
              "content": "Delete the User and CLIENT Relation records from the database,  irreversibly removing the sandbocx client, but not any existing Prescriptions.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "api",
                "users",
                "sandboxClient"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "DELETE"
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "e656f131-6e06-4c7f-a24d-d458dd254af8",
                "type": "text/javascript",
                "exec": [
                  "// Validate status 2xx \npm.test(\"[DELETE]::/api/users/sandboxClient - Status code is 2xx\", function () {\n   pm.response.to.be.success;\n});\n",
                  "// Validate response time \npm.test(\"[DELETE]::/api/users/sandboxClient - Response time is less than 300ms\", function () {\n    pm.expect(pm.response.responseTime).to.be.below(300);\n});\n",
                  "// Validate if response header has matching content-type\npm.test(\"[DELETE]::/api/users/sandboxClient - Content-Type is application/json\", function () {\n   pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"application/json\");\n});\n",
                  "// Validate if response has JSON Body \npm.test(\"[DELETE]::/api/users/sandboxClient - Response has JSON Body\", function () {\n    pm.response.to.have.jsonBody();\n});\n",
                  "// Response Validation\nconst schema = {\"type\":\"object\",\"properties\":{\"deleted\":{\"type\":\"integer\",\"description\":\"number of Users deleted\"}}}\n\n// Validate if response matches JSON schema \npm.test(\"[DELETE]::/api/users/sandboxClient - Schema is valid\", function() {\n    pm.response.to.have.jsonSchema(schema,{unknownFormats: [\"int32\", \"int64\", \"float\", \"double\"]});\n});\n"
                ]
              }
            }
          ]
        },
        {
          "id": "376e181c-ca11-4f4a-aca7-792aaa5ce379",
          "name": "add a relationship",
          "request": {
            "name": "add a relationship",
            "description": {
              "content": "adds a relationship of the type specified by `name` to the current User, who must be a VOR. Defaults to CLIENT relationship.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "api",
                "users",
                "relations"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "\"CLIENT\"",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "b7ec8726-d800-482b-a68c-7ce001bdb9dc",
                "type": "text/javascript",
                "exec": [
                  "// Validate status 2xx \npm.test(\"[POST]::/api/users/relations - Status code is 2xx\", function () {\n   pm.response.to.be.success;\n});\n",
                  "// Validate response time \npm.test(\"[POST]::/api/users/relations - Response time is less than 300ms\", function () {\n    pm.expect(pm.response.responseTime).to.be.below(300);\n});\n",
                  "// Validate if response header has matching content-type\npm.test(\"[POST]::/api/users/relations - Content-Type is application/json\", function () {\n   pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"application/json\");\n});\n",
                  "// Validate if response has JSON Body \npm.test(\"[POST]::/api/users/relations - Response has JSON Body\", function () {\n    pm.response.to.have.jsonBody();\n});\n",
                  "// Response Validation\nconst schema = {\"type\":\"string\"}\n\n// Validate if response matches JSON schema \npm.test(\"[POST]::/api/users/relations - Schema is valid\", function() {\n    pm.response.to.have.jsonSchema(schema,{unknownFormats: [\"int32\", \"int64\", \"float\", \"double\"]});\n});\n"
                ]
              }
            }
          ],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        {
          "id": "c728f271-a850-4f65-9659-267d9543ace3",
          "name": "get my right-related users",
          "request": {
            "name": "get my right-related users",
            "description": {
              "content": "get my right-related users",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "api",
                "users",
                "my-right-relations"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": false,
                  "key": "relationship",
                  "value": "CLIENT"
                },
                {
                  "disabled": false,
                  "description": {
                    "content": "whether to return user's addresses too",
                    "type": "text/plain"
                  },
                  "key": "withAddress",
                  "value": "false"
                }
              ],
              "variable": []
            },
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "GET"
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "bf9324f1-418f-4dfd-ba43-58797497a251",
                "type": "text/javascript",
                "exec": [
                  "// Validate status 2xx \npm.test(\"[GET]::/api/users/my-right-relations - Status code is 2xx\", function () {\n   pm.response.to.be.success;\n});\n",
                  "// Validate response time \npm.test(\"[GET]::/api/users/my-right-relations - Response time is less than 300ms\", function () {\n    pm.expect(pm.response.responseTime).to.be.below(300);\n});\n",
                  "// Validate if response header has matching content-type\npm.test(\"[GET]::/api/users/my-right-relations - Content-Type is application/json\", function () {\n   pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"application/json\");\n});\n",
                  "// Validate if response has JSON Body \npm.test(\"[GET]::/api/users/my-right-relations - Response has JSON Body\", function () {\n    pm.response.to.have.jsonBody();\n});\n",
                  "// Response Validation\nconst schema = {\"description\":\"array of Users\",\"properties\":{\"prescriptions\":{\"type\":\"array\",\"items\":{\"oneOf\":[{\"description\":\"a User of a `UserType` class\",\"type\":\"object\",\"properties\":{\"id\":{\"type\":\"integer\",\"description\":\"User ID number\",\"example\":1},\"uname\":{\"description\":\"username\",\"type\":\"string\",\"example\":\"exampleUser\"},\"userType\":{\"type\":\"string\",\"description\":\"an ordered list of User types associated with privilege levels: <br>\\n* SAOR: a system administrator with top level privileges\\n* VOR: a veterinarian who may create and prescribe protocols\\n* MOR: a farm manager to whom protocols may be prescribed, and who may create Cases in a protocol\\n* TOR: a farm technician who may execute assigned protocols for assigned cases\\n* FARM: an account aggregating MOR and TOR Users\\n* CLINIC: an account aggregating multiple VOR Users who work together\\n* UNCONFIRMED: an account that has been requested but not confirmed by the owner\\n* UNVOR: a User who requests VOR status, with neither email or admin approval\\n* UNMOR: a User who requests MOR status but email not yet confirmed\\n* PREVOR: a confirmed User who requests VOR status but still lacks either email confirmation or approval by admin\\n* REMOVED: the record of a User who is no longer active and may not log in\\n\",\"enum\":[\"SAOR\",\"VOR\",\"MOR\",\"TOR\",\"FARM\",\"CLINIC\",\"UNCONFIRMED\",\"PREVOR\",\"UNVOR\",\"UNMOR\",\"REMOVED\"],\"example\":\"VOR\"},\"email\":{\"type\":\"string\",\"format\":\"email\",\"description\":\"email address\",\"example\":\"exampleUser@email.com\"},\"firstname\":{\"type\":\"string\",\"description\":\"first name\",\"example\":\"Example\"},\"lastname\":{\"type\":\"string\",\"description\":\"last name\",\"example\":\"User\"},\"suffix\":{\"type\":\"string\",\"description\":\"degree or qualifier following the name\",\"example\":\"DVM\"}},\"required\":[\"id\",\"uname\",\"userType\",\"firstname\",\"lastname\"]},{\"description\":\"User data including Address and preferences\",\"type\":\"object\",\"allOf\":[{\"description\":\"a User of a `UserType` class\",\"type\":\"object\",\"properties\":{\"id\":{\"type\":\"integer\",\"description\":\"User ID number\",\"example\":1},\"uname\":{\"description\":\"username\",\"type\":\"string\",\"example\":\"exampleUser\"},\"userType\":{\"type\":\"string\",\"description\":\"an ordered list of User types associated with privilege levels: <br>\\n* SAOR: a system administrator with top level privileges\\n* VOR: a veterinarian who may create and prescribe protocols\\n* MOR: a farm manager to whom protocols may be prescribed, and who may create Cases in a protocol\\n* TOR: a farm technician who may execute assigned protocols for assigned cases\\n* FARM: an account aggregating MOR and TOR Users\\n* CLINIC: an account aggregating multiple VOR Users who work together\\n* UNCONFIRMED: an account that has been requested but not confirmed by the owner\\n* UNVOR: a User who requests VOR status, with neither email or admin approval\\n* UNMOR: a User who requests MOR status but email not yet confirmed\\n* PREVOR: a confirmed User who requests VOR status but still lacks either email confirmation or approval by admin\\n* REMOVED: the record of a User who is no longer active and may not log in\\n\",\"enum\":[\"SAOR\",\"VOR\",\"MOR\",\"TOR\",\"FARM\",\"CLINIC\",\"UNCONFIRMED\",\"PREVOR\",\"UNVOR\",\"UNMOR\",\"REMOVED\"],\"example\":\"VOR\"},\"email\":{\"type\":\"string\",\"format\":\"email\",\"description\":\"email address\",\"example\":\"exampleUser@email.com\"},\"firstname\":{\"type\":\"string\",\"description\":\"first name\",\"example\":\"Example\"},\"lastname\":{\"type\":\"string\",\"description\":\"last name\",\"example\":\"User\"},\"suffix\":{\"type\":\"string\",\"description\":\"degree or qualifier following the name\",\"example\":\"DVM\"}},\"required\":[\"id\",\"uname\",\"userType\",\"firstname\",\"lastname\"]},{\"description\":\"a mailing address\",\"type\":\"object\",\"properties\":{\"userId\":{\"type\":\"integer\"},\"busName\":{\"description\":\"business name, if appropriate\",\"type\":\"string\",\"example\":\"testVOR Clinic\"},\"address1\":{\"description\":\"first line or street address\",\"type\":\"string\",\"example\":\"123 Main St.\"},\"address2\":{\"description\":\"second line of address, if needed\",\"type\":\"string\",\"example\":\"123 Main St.\"},\"town\":{\"description\":\"town or city\",\"type\":\"string\",\"example\":\"Anytown\"},\"state\":{\"description\":\"state or province\",\"type\":\"string\",\"example\":\"Any State\"},\"zip\":{\"type\":\"string\",\"description\":\"zip or postal code\",\"example\":\"12345-abcd\"},\"country\":{\"type\":\"string\",\"description\":\"country\",\"example\":\"USA\"}},\"required\":[\"userId\",\"address1\",\"address2\",\"town\",\"state\",\"zip\"]},{\"description\":\"values a user may set to customize performance\",\"type\":\"object\",\"properties\":{\"userId\":{\"type\":\"integer\"},\"sandboxName\":{\"type\":\"string\"},\"emailTips\":{\"type\":\"boolean\"},\"emailNews\":{\"type\":\"boolean\"},\"rxHeader\":{\"type\":\"string\"}},\"required\":[\"userId\",\"sandboxName\",\"emailTips\",\"emailNews\",\"rxHeader\"]}],\"required\":[\"id\",\"uname\",\"userType\",\"email\",\"firstname\",\"lastname\",\"suffix\"]}]}}},\"type\":\"object\"}\n\n// Validate if response matches JSON schema \npm.test(\"[GET]::/api/users/my-right-relations - Schema is valid\", function() {\n    pm.response.to.have.jsonSchema(schema,{unknownFormats: [\"int32\", \"int64\", \"float\", \"double\"]});\n});\n"
                ]
              }
            }
          ]
        },
        {
          "id": "fd414a88-fe10-43bd-abc7-c9f3ac0dd357",
          "name": "add a User with relationship",
          "request": {
            "name": "add a User with relationship",
            "description": {
              "content": "This endpoint adds a User and a relationship of the type specified by `name` to the current User, who must be a VOR. Defaults to CLIENT relationship.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "api",
                "users",
                "my-right-relations"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": false,
                  "description": {
                    "content": "(Required) ",
                    "type": "text/plain"
                  },
                  "key": "relationship",
                  "value": "CLIENT"
                },
                {
                  "disabled": false,
                  "description": {
                    "content": "(Required) ",
                    "type": "text/plain"
                  },
                  "key": "usertype",
                  "value": "VOR"
                }
              ],
              "variable": []
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n  \"id\": 1,\n  \"uname\": \"exampleUser\",\n  \"userType\": \"VOR\",\n  \"firstname\": \"Example\",\n  \"lastname\": \"User\",\n  \"email\": \"exampleUser@email.com\",\n  \"suffix\": \"DVM\"\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "56ab12a5-50a4-443c-90f0-bd6d0080af05",
                "type": "text/javascript",
                "exec": [
                  "// Validate status 2xx \npm.test(\"[POST]::/api/users/my-right-relations - Status code is 2xx\", function () {\n   pm.response.to.be.success;\n});\n",
                  "// Validate response time \npm.test(\"[POST]::/api/users/my-right-relations - Response time is less than 300ms\", function () {\n    pm.expect(pm.response.responseTime).to.be.below(300);\n});\n",
                  "// Validate if response header has matching content-type\npm.test(\"[POST]::/api/users/my-right-relations - Content-Type is application/json\", function () {\n   pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"application/json\");\n});\n",
                  "// Validate if response has JSON Body \npm.test(\"[POST]::/api/users/my-right-relations - Response has JSON Body\", function () {\n    pm.response.to.have.jsonBody();\n});\n",
                  "// Response Validation\nconst schema = {\"type\":\"object\",\"properties\":{\"user\":{\"description\":\"a User of a `UserType` class\",\"type\":\"object\",\"properties\":{\"id\":{\"type\":\"integer\",\"description\":\"User ID number\",\"example\":1},\"uname\":{\"description\":\"username\",\"type\":\"string\",\"example\":\"exampleUser\"},\"userType\":{\"type\":\"string\",\"description\":\"an ordered list of User types associated with privilege levels: <br>\\n* SAOR: a system administrator with top level privileges\\n* VOR: a veterinarian who may create and prescribe protocols\\n* MOR: a farm manager to whom protocols may be prescribed, and who may create Cases in a protocol\\n* TOR: a farm technician who may execute assigned protocols for assigned cases\\n* FARM: an account aggregating MOR and TOR Users\\n* CLINIC: an account aggregating multiple VOR Users who work together\\n* UNCONFIRMED: an account that has been requested but not confirmed by the owner\\n* UNVOR: a User who requests VOR status, with neither email or admin approval\\n* UNMOR: a User who requests MOR status but email not yet confirmed\\n* PREVOR: a confirmed User who requests VOR status but still lacks either email confirmation or approval by admin\\n* REMOVED: the record of a User who is no longer active and may not log in\\n\",\"enum\":[\"SAOR\",\"VOR\",\"MOR\",\"TOR\",\"FARM\",\"CLINIC\",\"UNCONFIRMED\",\"PREVOR\",\"UNVOR\",\"UNMOR\",\"REMOVED\"],\"example\":\"VOR\"},\"email\":{\"type\":\"string\",\"format\":\"email\",\"description\":\"email address\",\"example\":\"exampleUser@email.com\"},\"firstname\":{\"type\":\"string\",\"description\":\"first name\",\"example\":\"Example\"},\"lastname\":{\"type\":\"string\",\"description\":\"last name\",\"example\":\"User\"},\"suffix\":{\"type\":\"string\",\"description\":\"degree or qualifier following the name\",\"example\":\"DVM\"}},\"required\":[\"id\",\"uname\",\"userType\",\"firstname\",\"lastname\"]}}}\n\n// Validate if response matches JSON schema \npm.test(\"[POST]::/api/users/my-right-relations - Schema is valid\", function() {\n    pm.response.to.have.jsonSchema(schema,{unknownFormats: [\"int32\", \"int64\", \"float\", \"double\"]});\n});\n"
                ]
              }
            }
          ],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        {
          "id": "0b961b54-2924-4de6-b2f3-6c4b07037561",
          "name": "get my prescriptions",
          "request": {
            "name": "get my prescriptions",
            "description": {
              "content": "get prescriptions prescribed by the current User.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "api",
                "protocols",
                "prescriptions",
                "by"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "GET"
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "3330265a-37e5-46d7-879b-ad5932096895",
                "type": "text/javascript",
                "exec": [
                  "// Validate status 2xx \npm.test(\"[GET]::/api/protocols/prescriptions/by - Status code is 2xx\", function () {\n   pm.response.to.be.success;\n});\n"
                ]
              }
            }
          ]
        },
        {
          "id": "d9196ed1-6d26-44b7-8ce5-227ea733f322",
          "name": "get my prescriptions",
          "request": {
            "name": "get my prescriptions",
            "description": {
              "content": "get prescriptions prescribed to the current User.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "api",
                "protocols",
                "prescriptions",
                "to"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "GET"
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "ad04e2ee-1ba3-43de-a608-21736c641599",
                "type": "text/javascript",
                "exec": [
                  "// Validate status 2xx \npm.test(\"[GET]::/api/protocols/prescriptions/to - Status code is 2xx\", function () {\n   pm.response.to.be.success;\n});\n"
                ]
              }
            }
          ]
        },
        {
          "id": "39a62ca0-2a8f-4c6b-8027-5c8e2cbfc3fc",
          "name": "get my protocol shares",
          "request": {
            "name": "get my protocol shares",
            "description": {
              "content": "This endpoint retrieves a User's Protocol shares, optionally filtered by Protocol and recipient.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "api",
                "protocols",
                "shares"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": false,
                  "description": {
                    "content": "select only shares of this Protocol ID",
                    "type": "text/plain"
                  },
                  "key": "pxFilter",
                  "value": "-16056297"
                },
                {
                  "disabled": false,
                  "description": {
                    "content": "select only shares to this VOR User",
                    "type": "text/plain"
                  },
                  "key": "toFilter",
                  "value": "-16056297"
                }
              ],
              "variable": []
            },
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "GET"
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "7ad6f4f1-9326-4779-b6ca-fe1064b69acf",
                "type": "text/javascript",
                "exec": [
                  "// Validate status 2xx \npm.test(\"[GET]::/api/protocols/shares - Status code is 2xx\", function () {\n   pm.response.to.be.success;\n});\n"
                ]
              }
            }
          ]
        },
        {
          "id": "3d05665b-5824-4c47-9a7a-04bc929e4c8a",
          "name": "create protocol share",
          "request": {
            "name": "create protocol share",
            "description": {
              "content": "This endpoint shares a protocol with another VOR User.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "api",
                "protocols",
                "shares"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n  \"px-id\": 1,\n  \"share-to\": 2,\n  \"clonable\": true\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "52c1ef27-c17a-4828-bb27-1bf8c3f95ad3",
                "type": "text/javascript",
                "exec": [
                  "// Validate status 2xx \npm.test(\"[POST]::/api/protocols/shares - Status code is 2xx\", function () {\n   pm.response.to.be.success;\n});\n"
                ]
              }
            }
          ],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        {
          "id": "b475081f-9268-45a9-babe-e8daf343b719",
          "name": "delete protocol share",
          "request": {
            "name": "delete protocol share",
            "description": {
              "content": "This endpoint retracts a Protocol share with another VOR User.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "api",
                "protocols",
                "shares"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": false,
                  "description": {
                    "content": "(Required) Protocol ID",
                    "type": "text/plain"
                  },
                  "key": "pxId",
                  "value": "-16056297"
                },
                {
                  "disabled": false,
                  "description": {
                    "content": "(Required) ID of VOR to whom Protocol was shared",
                    "type": "text/plain"
                  },
                  "key": "toVor",
                  "value": "-16056297"
                }
              ],
              "variable": []
            },
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "DELETE"
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "945b6457-75b1-4dbd-bf5e-87e1c9873657",
                "type": "text/javascript",
                "exec": [
                  "// Validate status 2xx \npm.test(\"[DELETE]::/api/protocols/shares - Status code is 2xx\", function () {\n   pm.response.to.be.success;\n});\n"
                ]
              }
            }
          ]
        },
        {
          "id": "e767617c-a80c-4614-9dce-0a31ebab5f82",
          "name": "list of User's shared protocols",
          "request": {
            "name": "list of User's shared protocols",
            "description": {
              "content": "This endpoint retrieves a list of User's protocols shared to all VORs.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "api",
                "protocols",
                "sharesToAll",
                ""
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "GET"
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "23d43fd8-0a8b-4181-af56-0fae77e4c740",
                "type": "text/javascript",
                "exec": [
                  "// Validate status 2xx \npm.test(\"[GET]::/api/protocols/sharesToAll/ - Status code is 2xx\", function () {\n   pm.response.to.be.success;\n});\n"
                ]
              }
            }
          ]
        },
        {
          "id": "75af43e3-f82e-4493-907c-dcd4687c8618",
          "name": "share Protocol with all VOR Users",
          "request": {
            "name": "share Protocol with all VOR Users",
            "description": {
              "content": "This endpoint shares a User's protocol with all VOR Users.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "api",
                "protocols",
                "sharesToAll",
                ":pxId"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": false,
                  "key": "clonable",
                  "value": "false"
                }
              ],
              "variable": [
                {
                  "disabled": false,
                  "description": {
                    "content": "(Required) ID of Protocol to be shared",
                    "type": "text/plain"
                  },
                  "type": "any",
                  "value": "-16056297",
                  "key": "pxId"
                }
              ]
            },
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "POST"
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "b1c80b7b-6124-4925-ab13-2124103cd70c",
                "type": "text/javascript",
                "exec": [
                  "// Validate status 2xx \npm.test(\"[POST]::/api/protocols/sharesToAll/:pxId - Status code is 2xx\", function () {\n   pm.response.to.be.success;\n});\n"
                ]
              }
            }
          ]
        },
        {
          "id": "7c53c94d-09d9-4cda-a037-47aec331917a",
          "name": "cancel sharing",
          "request": {
            "name": "cancel sharing",
            "description": {
              "content": "wip -- This endpoint probably unshares protocols to all.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "api",
                "protocols",
                "sharesToAll",
                ":pxId"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": [
                {
                  "disabled": false,
                  "description": {
                    "content": "(Required) ID of Protocol",
                    "type": "text/plain"
                  },
                  "type": "any",
                  "value": "1",
                  "key": "pxId"
                }
              ]
            },
            "method": "DELETE"
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "024fe7be-4a95-4eaa-b1e8-a54716afd293",
                "type": "text/javascript",
                "exec": [
                  "// Validate status 2xx \npm.test(\"[DELETE]::/api/protocols/sharesToAll/:pxId - Status code is 2xx\", function () {\n   pm.response.to.be.success;\n});\n"
                ]
              }
            }
          ]
        },
        {
          "id": "506a03c5-6555-4ae2-b990-19cd911dfab2",
          "name": "AMDUCA-tag protocol",
          "request": {
            "name": "AMDUCA-tag protocol",
            "description": {
              "content": "add tags to protocol per AMDUCA rules",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "api",
                "protocols",
                "amducatags"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "PUT",
            "body": {
              "mode": "raw",
              "raw": "{\n  \"ownerId\": 1,\n  \"name\": \"wip\",\n  \"status\": \"PRESCRIBED\",\n  \"instructions\": {\n    \"considerations\": \"<p>This is just an example, not a real protocol.</p>\",\n    \"restrictions\": \"<p>Not for use on real animals.</p>\",\n    \"dothis\": \"<h3>Examinations to perform</h3>\",\n    \"recordthis\": \"<p>record every step in your notebook.</p>\",\n    \"success\": \"<p>All problems are gone</p>\",\n    \"failure\": \"<p>One or more problems remain</p>\",\n    \"references\": \"<a href=\\\"https://en.wikipedia.org/wiki/Rickrolling\\\">Wikipedia</a>\"\n  },\n  \"id\": 12345,\n  \"shortname\": \"wip\",\n  \"created\": \"1954-09-03T01:14:10.920Z\",\n  \"edited\": \"1946-02-18T21:46:27.309Z\",\n  \"vetNote\": \"consider prescribing protocol x instead\",\n  \"wtMeatHrs\": 22,\n  \"wtMilkHrs\": 5,\n  \"shareAll\": true,\n  \"shareClonable\": true,\n  \"caseDefinition\": {\n    \"requireId\": false,\n    \"requireMor\": false,\n    \"contraindications\": \"\",\n    \"medical\": \"if fever is present, consider Protocol 12345 instead.\",\n    \"economic\": \"\",\n    \"note\": \"\"\n  },\n  \"treatments\": [\n    {\n      \"product\": \"MiracleMed\",\n      \"route\": \"wip\",\n      \"dosage\": {\n        \"doseId\": -94573140\n      },\n      \"sequenceFunction\": {\n        \"_type\": \"models.SeqSingleDose\"\n      },\n      \"sizeFunction\": {\n        \"_type\": \"models.FixedDoseFunction\",\n        \"dose\": {\n          \"quantity\": {\n            \"dimension\": \"Mass\",\n            \"value\": 3,\n            \"symbol\": \"oz\"\n          }\n        }\n      },\n      \"id\": \"B-123\",\n      \"ownerId\": 0,\n      \"description\": \"3.0 ml per kg repeat\",\n      \"eligibilities\": [\n        {\n          \"id\": 1,\n          \"name\": \"Beef Cattle\",\n          \"fdaSpecies\": [\n            \"unidentified\",\n            \"emus\"\n          ]\n        },\n        {\n          \"id\": 1,\n          \"name\": \"Beef Cattle\",\n          \"fdaSpecies\": [\n            \"turkeys\",\n            \"turkeys\"\n          ]\n        }\n      ],\n      \"_dose\": \"3.0 ml per kg repeat in 6 hours and again in 24 hours\",\n      \"wtMeatHrs\": 6920425,\n      \"wtMilkHrs\": 67882662,\n      \"nada\": \"wip\",\n      \"tags\": [\n        {\n          \"id\": 8,\n          \"color\": \"#516cc6\",\n          \"name\": \"nulla c\",\n          \"fixes\": [\n            {\n              \"_type\": \"ad consectetur reprehenderit sed aliquip\",\n              \"detail\": \"adipisicing cillum aliquip fugiat\",\n              \"message\": \"pariatur irure\",\n              \"title\": \"et elit Lorem\"\n            },\n            {\n              \"_type\": \"dolor ut veniam\",\n              \"detail\": \"tempor\",\n              \"message\": \"amet fugiat ex\",\n              \"title\": \"amet dolor in\"\n            }\n          ]\n        },\n        {\n          \"id\": 8,\n          \"color\": \"#516cc6\",\n          \"name\": \"quis deser\",\n          \"fixes\": [\n            {\n              \"_type\": \"et\",\n              \"detail\": \"pariatur dolor\",\n              \"message\": \"esse minim\",\n              \"title\": \"a\"\n            },\n            {\n              \"_type\": \"est deserunt culpa dolore laboris\",\n              \"detail\": \"ea d\",\n              \"message\": \"sit do\",\n              \"title\": \"velit eiusmod dolore an\"\n            }\n          ]\n        }\n      ],\n      \"note\": \"<p>a free-form note</p>\",\n      \"amduca\": \"OFFLABEL\"\n    },\n    {\n      \"product\": \"MiracleMed\",\n      \"route\": \"wip\",\n      \"dosage\": {\n        \"doseId\": -62042340\n      },\n      \"sequenceFunction\": {\n        \"_type\": \"models.SeqSingleDose\"\n      },\n      \"sizeFunction\": {\n        \"_type\": \"models.FixedDoseFunction\",\n        \"dose\": {\n          \"quantity\": {\n            \"dimension\": \"Mass\",\n            \"value\": 3,\n            \"symbol\": \"oz\"\n          }\n        }\n      },\n      \"id\": \"B-123\",\n      \"ownerId\": 0,\n      \"description\": \"3.0 ml per kg repeat\",\n      \"eligibilities\": [\n        {\n          \"id\": 1,\n          \"name\": \"Beef Cattle\",\n          \"fdaSpecies\": [\n            \"veal\",\n            \"llamas\"\n          ]\n        },\n        {\n          \"id\": 1,\n          \"name\": \"Beef Cattle\",\n          \"fdaSpecies\": [\n            \"veal\",\n            \"turkeys\"\n          ]\n        }\n      ],\n      \"_dose\": \"3.0 ml per kg repeat in 6 hours and again in 24 hours\",\n      \"wtMeatHrs\": -98282409,\n      \"wtMilkHrs\": 79014527,\n      \"nada\": \"wip\",\n      \"tags\": [\n        {\n          \"id\": 8,\n          \"color\": \"#516cc6\",\n          \"name\": \"ut aliq\",\n          \"fixes\": [\n            {\n              \"_type\": \"incididunt aute enim eu moll\",\n              \"detail\": \"ad tempor sed commodo\",\n              \"message\": \"amet\",\n              \"title\": \"in eiusmod cillum aliquip\"\n            },\n            {\n              \"_type\": \"deserunt amet nisi\",\n              \"detail\": \"ex eiusmod ut consequat officia\",\n              \"message\": \"dolor occaecat\",\n              \"title\": \"cillum eiusmod\"\n            }\n          ]\n        },\n        {\n          \"id\": 8,\n          \"color\": \"#516cc6\",\n          \"name\": \"proident no\",\n          \"fixes\": [\n            {\n              \"_type\": \"ea Ut Duis sint\",\n              \"detail\": \"commodo magna non enim\",\n              \"message\": \"mollit Excepteur anim incididunt\",\n              \"title\": \"proident elit sunt Duis\"\n            },\n            {\n              \"_type\": \"magna\",\n              \"detail\": \"cupi\",\n              \"message\": \"anim nulla eiusmod elit\",\n              \"title\": \"labore sunt exercitation se\"\n            }\n          ]\n        }\n      ],\n      \"note\": \"<p>a free-form note</p>\",\n      \"amduca\": \"ONLABEL\"\n    }\n  ],\n  \"tags\": [\n    {\n      \"id\": 8,\n      \"color\": \"#516cc6\",\n      \"name\": \"nulla\",\n      \"fixes\": [\n        {\n          \"_type\": \"adipisicing est\",\n          \"detail\": \"voluptate eiusmod\",\n          \"message\": \"laborum ex sint\",\n          \"title\": \"est\"\n        },\n        {\n          \"_type\": \"veniam commodo Duis eu aliquip\",\n          \"detail\": \"Duis cillum laboris sit\",\n          \"message\": \"fugiat nisi Duis adipisicing aute\",\n          \"title\": \"occaecat minim proident mollit labore\"\n        }\n      ]\n    },\n    {\n      \"id\": 8,\n      \"color\": \"#516cc6\",\n      \"name\": \"vel\",\n      \"fixes\": [\n        {\n          \"_type\": \"dolor Ut anim tempor\",\n          \"detail\": \"officia labore ipsum adipisicing eiusmod\",\n          \"message\": \"sunt aliquip cupidatat veniam sit\",\n          \"title\": \"sunt laboris\"\n        },\n        {\n          \"_type\": \"officia Ut exercit\",\n          \"detail\": \"ea ad\",\n          \"message\": \"adipisici\",\n          \"title\": \"Duis ipsum eu qui\"\n        }\n      ]\n    }\n  ],\n  \"diagnoses\": [\n    {\n      \"id\": 8,\n      \"name\": \"Pain/inflammation (musculoskeletal), treatment\"\n    },\n    {\n      \"id\": 8,\n      \"name\": \"Pain/inflammation (musculoskeletal), treatment\"\n    }\n  ],\n  \"eligibilities\": [\n    {\n      \"id\": 1,\n      \"name\": \"Beef Cattle\",\n      \"fdaSpecies\": [\n        \"catfish\",\n        \"goats\"\n      ]\n    },\n    {\n      \"id\": 1,\n      \"name\": \"Beef Cattle\",\n      \"fdaSpecies\": [\n        \"unidentified\",\n        \"beef_cattle\"\n      ]\n    }\n  ],\n  \"promises\": [\n    {\n      \"_type\": \"models.IdPromise\",\n      \"name\": \"ID promise\",\n      \"descrip\": \"You must give ID for each case enrolled\",\n      \"query\": \"What is the animal's name or number?\",\n      \"when\": \"PT0H\",\n      \"id\": 2345\n    },\n    {\n      \"_type\": \"models.IdPromise\",\n      \"name\": \"ID promise\",\n      \"descrip\": \"You must give ID for each case enrolled\",\n      \"query\": \"What is the animal's name or number?\",\n      \"when\": \"PT0H\",\n      \"id\": 2345\n    }\n  ],\n  \"metadata\": [\n    {\n      \"key\": \"popularity\",\n      \"value\": \"good 1.2\"\n    },\n    {\n      \"key\": \"popularity\",\n      \"value\": \"good 1.2\"\n    }\n  ]\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "3bfc0bbc-b986-466f-b192-3ae374b4a6ca",
                "type": "text/javascript",
                "exec": [
                  "// Validate status 2xx \npm.test(\"[PUT]::/api/protocols/amducatags - Status code is 2xx\", function () {\n   pm.response.to.be.success;\n});\n"
                ]
              }
            }
          ],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        {
          "id": "8978b196-6a71-42bd-add8-d04f52abb87c",
          "name": "list of all Tags",
          "request": {
            "name": "list of all Tags",
            "description": {
              "content": "Returns the full array of tags for protocols and treatments.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "api",
                "protocols",
                "tags"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "GET"
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "0da01fe1-e0db-497b-9476-fa387c112440",
                "type": "text/javascript",
                "exec": [
                  "// Validate status 2xx \npm.test(\"[GET]::/api/protocols/tags - Status code is 2xx\", function () {\n   pm.response.to.be.success;\n});\n"
                ]
              }
            }
          ]
        },
        {
          "id": "8b2fef67-ff27-415d-9351-49e27713f93c",
          "name": "execute Remedy",
          "request": {
            "name": "execute Remedy",
            "description": {
              "content": "Apply a Remedy to a Protocol, returning the fixed Protocol.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "api",
                "protocols",
                "tags",
                "remedies"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "PUT",
            "body": {
              "mode": "raw",
              "raw": "{\n  \"protocol\": {\n    \"ownerId\": 1,\n    \"name\": \"wip\",\n    \"status\": \"PRESCRIBED\",\n    \"instructions\": {\n      \"considerations\": \"<p>This is just an example, not a real protocol.</p>\",\n      \"restrictions\": \"<p>Not for use on real animals.</p>\",\n      \"dothis\": \"<h3>Examinations to perform</h3>\",\n      \"recordthis\": \"<p>record every step in your notebook.</p>\",\n      \"success\": \"<p>All problems are gone</p>\",\n      \"failure\": \"<p>One or more problems remain</p>\",\n      \"references\": \"<a href=\\\"https://en.wikipedia.org/wiki/Rickrolling\\\">Wikipedia</a>\"\n    },\n    \"id\": 12345,\n    \"shortname\": \"wip\",\n    \"created\": \"1971-09-30T17:21:48.051Z\",\n    \"edited\": \"1989-07-05T10:47:54.917Z\",\n    \"vetNote\": \"consider prescribing protocol x instead\",\n    \"wtMeatHrs\": 22,\n    \"wtMilkHrs\": 5,\n    \"shareAll\": true,\n    \"shareClonable\": true,\n    \"caseDefinition\": {\n      \"requireId\": false,\n      \"requireMor\": false,\n      \"contraindications\": \"\",\n      \"medical\": \"if fever is present, consider Protocol 12345 instead.\",\n      \"economic\": \"\",\n      \"note\": \"\"\n    },\n    \"treatments\": [\n      {\n        \"product\": \"MiracleMed\",\n        \"route\": \"wip\",\n        \"dosage\": {\n          \"doseId\": 63052558\n        },\n        \"sequenceFunction\": {\n          \"_type\": \"models.SeqSingleDose\"\n        },\n        \"sizeFunction\": {\n          \"_type\": \"models.FixedDoseFunction\",\n          \"dose\": {\n            \"quantity\": {\n              \"dimension\": \"Mass\",\n              \"value\": 3,\n              \"symbol\": \"oz\"\n            }\n          }\n        },\n        \"id\": \"B-123\",\n        \"ownerId\": 0,\n        \"description\": \"3.0 ml per kg repeat\",\n        \"eligibilities\": [\n          {\n            \"id\": 1,\n            \"name\": \"Beef Cattle\",\n            \"fdaSpecies\": [\n              \"emus\",\n              \"fish\"\n            ]\n          },\n          {\n            \"id\": 1,\n            \"name\": \"Beef Cattle\",\n            \"fdaSpecies\": [\n              \"unidentified\",\n              \"gamebirds\"\n            ]\n          }\n        ],\n        \"_dose\": \"3.0 ml per kg repeat in 6 hours and again in 24 hours\",\n        \"wtMeatHrs\": -65887408,\n        \"wtMilkHrs\": -96991469,\n        \"nada\": \"wip\",\n        \"tags\": [\n          {\n            \"id\": 8,\n            \"color\": \"#516cc6\",\n            \"name\": \"in \",\n            \"fixes\": [\n              {\n                \"_type\": {\n                  \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"detail\": {\n                  \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"message\": {\n                  \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"title\": {\n                  \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                }\n              },\n              {\n                \"_type\": {\n                  \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"detail\": {\n                  \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"message\": {\n                  \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"title\": {\n                  \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                }\n              }\n            ]\n          },\n          {\n            \"id\": 8,\n            \"color\": \"#516cc6\",\n            \"name\": \"d\",\n            \"fixes\": [\n              {\n                \"_type\": {\n                  \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"detail\": {\n                  \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"message\": {\n                  \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"title\": {\n                  \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                }\n              },\n              {\n                \"_type\": {\n                  \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"detail\": {\n                  \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"message\": {\n                  \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"title\": {\n                  \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                }\n              }\n            ]\n          }\n        ],\n        \"note\": \"<p>a free-form note</p>\",\n        \"amduca\": \"ONLABEL\"\n      },\n      {\n        \"product\": \"MiracleMed\",\n        \"route\": \"wip\",\n        \"dosage\": {\n          \"doseId\": -95456730\n        },\n        \"sequenceFunction\": {\n          \"_type\": \"models.SeqSingleDose\"\n        },\n        \"sizeFunction\": {\n          \"_type\": \"models.FixedDoseFunction\",\n          \"dose\": {\n            \"quantity\": {\n              \"dimension\": \"Mass\",\n              \"value\": 3,\n              \"symbol\": \"oz\"\n            }\n          }\n        },\n        \"id\": \"B-123\",\n        \"ownerId\": 0,\n        \"description\": \"3.0 ml per kg repeat\",\n        \"eligibilities\": [\n          {\n            \"id\": 1,\n            \"name\": \"Beef Cattle\",\n            \"fdaSpecies\": [\n              \"horses\",\n              \"gamebirds\"\n            ]\n          },\n          {\n            \"id\": 1,\n            \"name\": \"Beef Cattle\",\n            \"fdaSpecies\": [\n              \"chickens\",\n              \"emus\"\n            ]\n          }\n        ],\n        \"_dose\": \"3.0 ml per kg repeat in 6 hours and again in 24 hours\",\n        \"wtMeatHrs\": 3166598,\n        \"wtMilkHrs\": -95561623,\n        \"nada\": \"wip\",\n        \"tags\": [\n          {\n            \"id\": 8,\n            \"color\": \"#516cc6\",\n            \"name\": \"commodo do \",\n            \"fixes\": [\n              {\n                \"_type\": {\n                  \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"detail\": {\n                  \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"message\": {\n                  \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"title\": {\n                  \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                }\n              },\n              {\n                \"_type\": {\n                  \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"detail\": {\n                  \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"message\": {\n                  \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"title\": {\n                  \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                }\n              }\n            ]\n          },\n          {\n            \"id\": 8,\n            \"color\": \"#516cc6\",\n            \"name\": \"magna reprehend\",\n            \"fixes\": [\n              {\n                \"_type\": {\n                  \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"detail\": {\n                  \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"message\": {\n                  \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"title\": {\n                  \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                }\n              },\n              {\n                \"_type\": {\n                  \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"detail\": {\n                  \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"message\": {\n                  \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"title\": {\n                  \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                }\n              }\n            ]\n          }\n        ],\n        \"note\": \"<p>a free-form note</p>\",\n        \"amduca\": \"OFFLABEL\"\n      }\n    ],\n    \"tags\": [\n      {\n        \"id\": 8,\n        \"color\": \"#516cc6\",\n        \"name\": \"commod\",\n        \"fixes\": [\n          {\n            \"_type\": \"aliquip culpa\",\n            \"detail\": \"aliquip irure ea\",\n            \"message\": \"minim ullamco\",\n            \"title\": \"aliquip adipisicing\"\n          },\n          {\n            \"_type\": \"eiusmod consectetur cillum sed deserunt\",\n            \"detail\": \"in voluptate\",\n            \"message\": \"aliqua quis deserunt Excepteur\",\n            \"title\": \"in irure dolor\"\n          }\n        ]\n      },\n      {\n        \"id\": 8,\n        \"color\": \"#516cc6\",\n        \"name\": \"dolore ni\",\n        \"fixes\": [\n          {\n            \"_type\": \"labore eiusmod sunt minim dolor\",\n            \"detail\": \"dolor proident ut id anim\",\n            \"message\": \"in cillum pariatur aliqua\",\n            \"title\": \"eu laborum dolore\"\n          },\n          {\n            \"_type\": \"sed qui tempor consequat\",\n            \"detail\": \"amet anim\",\n            \"message\": \"elit in\",\n            \"title\": \"consequat ex aute velit\"\n          }\n        ]\n      }\n    ],\n    \"diagnoses\": [\n      {\n        \"id\": 8,\n        \"name\": \"Pain/inflammation (musculoskeletal), treatment\"\n      },\n      {\n        \"id\": 8,\n        \"name\": \"Pain/inflammation (musculoskeletal), treatment\"\n      }\n    ],\n    \"eligibilities\": [\n      {\n        \"id\": 1,\n        \"name\": \"Beef Cattle\",\n        \"fdaSpecies\": [\n          \"llamas\",\n          \"gamebirds\"\n        ]\n      },\n      {\n        \"id\": 1,\n        \"name\": \"Beef Cattle\",\n        \"fdaSpecies\": [\n          \"unidentified\",\n          \"swine\"\n        ]\n      }\n    ],\n    \"promises\": [\n      {\n        \"_type\": \"models.IdPromise\",\n        \"name\": \"ID promise\",\n        \"descrip\": \"You must give ID for each case enrolled\",\n        \"query\": \"What is the animal's name or number?\",\n        \"when\": \"PT0H\",\n        \"id\": 2345\n      },\n      {\n        \"_type\": \"models.IdPromise\",\n        \"name\": \"ID promise\",\n        \"descrip\": \"You must give ID for each case enrolled\",\n        \"query\": \"What is the animal's name or number?\",\n        \"when\": \"PT0H\",\n        \"id\": 2345\n      }\n    ],\n    \"metadata\": [\n      {\n        \"key\": \"popularity\",\n        \"value\": \"good 1.2\"\n      },\n      {\n        \"key\": \"popularity\",\n        \"value\": \"good 1.2\"\n      }\n    ]\n  },\n  \"remedy\": {\n    \"_type\": \"ex laboris veniam quis sint\",\n    \"detail\": \"quis id et\",\n    \"message\": \"occaecat ea reprehenderit velit\",\n    \"title\": \"pariatur\"\n  }\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "ff96fb00-23d7-47ae-b8e2-3fc19e6b779a",
                "type": "text/javascript",
                "exec": [
                  "// Validate status 2xx \npm.test(\"[PUT]::/api/protocols/tags/remedies - Status code is 2xx\", function () {\n   pm.response.to.be.success;\n});\n"
                ]
              }
            }
          ],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        {
          "id": "da5e9496-d7b3-480d-87a4-d55c46656fea",
          "name": "list of all Promises",
          "request": {
            "name": "list of all Promises",
            "description": {
              "content": "This endpoint returns the full array of available Promises.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "api",
                "protocols",
                "promises"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "GET"
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "09b6edee-bbb8-48c7-8088-6573343f7f1c",
                "type": "text/javascript",
                "exec": [
                  "// Validate status 2xx \npm.test(\"[GET]::/api/protocols/promises - Status code is 2xx\", function () {\n   pm.response.to.be.success;\n});\n"
                ]
              }
            }
          ]
        },
        {
          "id": "127c4aba-3644-44af-ad16-076b0ff9e4fa",
          "name": "Promises in a Protocol",
          "request": {
            "name": "Promises in a Protocol",
            "description": {
              "content": "Return Promises contained within a Protocol.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "api",
                "protocols",
                "promises",
                ":id"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": [
                {
                  "disabled": false,
                  "description": {
                    "content": "(Required) protocol  ID",
                    "type": "text/plain"
                  },
                  "type": "any",
                  "value": "32",
                  "key": "id"
                }
              ]
            },
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "GET"
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "99ee99ad-2a7f-4fb2-aaef-288956946ba7",
                "type": "text/javascript",
                "exec": [
                  "// Validate status 2xx \npm.test(\"[GET]::/api/protocols/promises/:id - Status code is 2xx\", function () {\n   pm.response.to.be.success;\n});\n"
                ]
              }
            }
          ]
        },
        {
          "id": "95dc1feb-f20c-40f7-b032-41e600d72339",
          "name": "protocols owned by user",
          "request": {
            "name": "protocols owned by user",
            "description": {
              "content": "Retrieve all Protocols owned by, or shared with, the current User. The default excludes deleted (status DEPRECATED) protocols.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "api",
                "protocols"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": false,
                  "description": {
                    "content": "filter Protocols to include only Protocols with listed statuses. If this parameter is omitted, the query defaults to all status values **except** DEPRECATED.",
                    "type": "text/plain"
                  },
                  "key": "status",
                  "value": "PRESCRIBED|PRESCRIBED"
                }
              ],
              "variable": []
            },
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "GET"
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "768487ba-83c0-4517-a85f-e22501543020",
                "type": "text/javascript",
                "exec": [
                  "// Validate status 2xx \npm.test(\"[GET]::/api/protocols - Status code is 2xx\", function () {\n   pm.response.to.be.success;\n});\n"
                ]
              }
            }
          ]
        },
        {
          "id": "a5adb8e4-825a-4eb4-9460-7c2410dcf375",
          "name": "record and validate aprotocol",
          "request": {
            "name": "record and validate aprotocol",
            "description": {
              "content": "This endpoint saves and validates a Protocol.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "api",
                "protocols"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n  \"ownerId\": 1,\n  \"name\": \"wip\",\n  \"status\": \"PRESCRIBED\",\n  \"instructions\": {\n    \"considerations\": \"<p>This is just an example, not a real protocol.</p>\",\n    \"restrictions\": \"<p>Not for use on real animals.</p>\",\n    \"dothis\": \"<h3>Examinations to perform</h3>\",\n    \"recordthis\": \"<p>record every step in your notebook.</p>\",\n    \"success\": \"<p>All problems are gone</p>\",\n    \"failure\": \"<p>One or more problems remain</p>\",\n    \"references\": \"<a href=\\\"https://en.wikipedia.org/wiki/Rickrolling\\\">Wikipedia</a>\"\n  },\n  \"id\": 12345,\n  \"shortname\": \"wip\",\n  \"created\": \"1954-09-03T01:14:10.920Z\",\n  \"edited\": \"1946-02-18T21:46:27.309Z\",\n  \"vetNote\": \"consider prescribing protocol x instead\",\n  \"wtMeatHrs\": 22,\n  \"wtMilkHrs\": 5,\n  \"shareAll\": true,\n  \"shareClonable\": true,\n  \"caseDefinition\": {\n    \"requireId\": false,\n    \"requireMor\": false,\n    \"contraindications\": \"\",\n    \"medical\": \"if fever is present, consider Protocol 12345 instead.\",\n    \"economic\": \"\",\n    \"note\": \"\"\n  },\n  \"treatments\": [\n    {\n      \"product\": \"MiracleMed\",\n      \"route\": \"wip\",\n      \"dosage\": {\n        \"doseId\": -94573140\n      },\n      \"sequenceFunction\": {\n        \"_type\": \"models.SeqSingleDose\"\n      },\n      \"sizeFunction\": {\n        \"_type\": \"models.FixedDoseFunction\",\n        \"dose\": {\n          \"quantity\": {\n            \"dimension\": \"Mass\",\n            \"value\": 3,\n            \"symbol\": \"oz\"\n          }\n        }\n      },\n      \"id\": \"B-123\",\n      \"ownerId\": 0,\n      \"description\": \"3.0 ml per kg repeat\",\n      \"eligibilities\": [\n        {\n          \"id\": 1,\n          \"name\": \"Beef Cattle\",\n          \"fdaSpecies\": [\n            \"unidentified\",\n            \"emus\"\n          ]\n        },\n        {\n          \"id\": 1,\n          \"name\": \"Beef Cattle\",\n          \"fdaSpecies\": [\n            \"turkeys\",\n            \"turkeys\"\n          ]\n        }\n      ],\n      \"_dose\": \"3.0 ml per kg repeat in 6 hours and again in 24 hours\",\n      \"wtMeatHrs\": 6920425,\n      \"wtMilkHrs\": 67882662,\n      \"nada\": \"wip\",\n      \"tags\": [\n        {\n          \"id\": 8,\n          \"color\": \"#516cc6\",\n          \"name\": \"nulla c\",\n          \"fixes\": [\n            {\n              \"_type\": \"ad consectetur reprehenderit sed aliquip\",\n              \"detail\": \"adipisicing cillum aliquip fugiat\",\n              \"message\": \"pariatur irure\",\n              \"title\": \"et elit Lorem\"\n            },\n            {\n              \"_type\": \"dolor ut veniam\",\n              \"detail\": \"tempor\",\n              \"message\": \"amet fugiat ex\",\n              \"title\": \"amet dolor in\"\n            }\n          ]\n        },\n        {\n          \"id\": 8,\n          \"color\": \"#516cc6\",\n          \"name\": \"quis deser\",\n          \"fixes\": [\n            {\n              \"_type\": \"et\",\n              \"detail\": \"pariatur dolor\",\n              \"message\": \"esse minim\",\n              \"title\": \"a\"\n            },\n            {\n              \"_type\": \"est deserunt culpa dolore laboris\",\n              \"detail\": \"ea d\",\n              \"message\": \"sit do\",\n              \"title\": \"velit eiusmod dolore an\"\n            }\n          ]\n        }\n      ],\n      \"note\": \"<p>a free-form note</p>\",\n      \"amduca\": \"OFFLABEL\"\n    },\n    {\n      \"product\": \"MiracleMed\",\n      \"route\": \"wip\",\n      \"dosage\": {\n        \"doseId\": -62042340\n      },\n      \"sequenceFunction\": {\n        \"_type\": \"models.SeqSingleDose\"\n      },\n      \"sizeFunction\": {\n        \"_type\": \"models.FixedDoseFunction\",\n        \"dose\": {\n          \"quantity\": {\n            \"dimension\": \"Mass\",\n            \"value\": 3,\n            \"symbol\": \"oz\"\n          }\n        }\n      },\n      \"id\": \"B-123\",\n      \"ownerId\": 0,\n      \"description\": \"3.0 ml per kg repeat\",\n      \"eligibilities\": [\n        {\n          \"id\": 1,\n          \"name\": \"Beef Cattle\",\n          \"fdaSpecies\": [\n            \"veal\",\n            \"llamas\"\n          ]\n        },\n        {\n          \"id\": 1,\n          \"name\": \"Beef Cattle\",\n          \"fdaSpecies\": [\n            \"veal\",\n            \"turkeys\"\n          ]\n        }\n      ],\n      \"_dose\": \"3.0 ml per kg repeat in 6 hours and again in 24 hours\",\n      \"wtMeatHrs\": -98282409,\n      \"wtMilkHrs\": 79014527,\n      \"nada\": \"wip\",\n      \"tags\": [\n        {\n          \"id\": 8,\n          \"color\": \"#516cc6\",\n          \"name\": \"ut aliq\",\n          \"fixes\": [\n            {\n              \"_type\": \"incididunt aute enim eu moll\",\n              \"detail\": \"ad tempor sed commodo\",\n              \"message\": \"amet\",\n              \"title\": \"in eiusmod cillum aliquip\"\n            },\n            {\n              \"_type\": \"deserunt amet nisi\",\n              \"detail\": \"ex eiusmod ut consequat officia\",\n              \"message\": \"dolor occaecat\",\n              \"title\": \"cillum eiusmod\"\n            }\n          ]\n        },\n        {\n          \"id\": 8,\n          \"color\": \"#516cc6\",\n          \"name\": \"proident no\",\n          \"fixes\": [\n            {\n              \"_type\": \"ea Ut Duis sint\",\n              \"detail\": \"commodo magna non enim\",\n              \"message\": \"mollit Excepteur anim incididunt\",\n              \"title\": \"proident elit sunt Duis\"\n            },\n            {\n              \"_type\": \"magna\",\n              \"detail\": \"cupi\",\n              \"message\": \"anim nulla eiusmod elit\",\n              \"title\": \"labore sunt exercitation se\"\n            }\n          ]\n        }\n      ],\n      \"note\": \"<p>a free-form note</p>\",\n      \"amduca\": \"ONLABEL\"\n    }\n  ],\n  \"tags\": [\n    {\n      \"id\": 8,\n      \"color\": \"#516cc6\",\n      \"name\": \"nulla\",\n      \"fixes\": [\n        {\n          \"_type\": \"adipisicing est\",\n          \"detail\": \"voluptate eiusmod\",\n          \"message\": \"laborum ex sint\",\n          \"title\": \"est\"\n        },\n        {\n          \"_type\": \"veniam commodo Duis eu aliquip\",\n          \"detail\": \"Duis cillum laboris sit\",\n          \"message\": \"fugiat nisi Duis adipisicing aute\",\n          \"title\": \"occaecat minim proident mollit labore\"\n        }\n      ]\n    },\n    {\n      \"id\": 8,\n      \"color\": \"#516cc6\",\n      \"name\": \"vel\",\n      \"fixes\": [\n        {\n          \"_type\": \"dolor Ut anim tempor\",\n          \"detail\": \"officia labore ipsum adipisicing eiusmod\",\n          \"message\": \"sunt aliquip cupidatat veniam sit\",\n          \"title\": \"sunt laboris\"\n        },\n        {\n          \"_type\": \"officia Ut exercit\",\n          \"detail\": \"ea ad\",\n          \"message\": \"adipisici\",\n          \"title\": \"Duis ipsum eu qui\"\n        }\n      ]\n    }\n  ],\n  \"diagnoses\": [\n    {\n      \"id\": 8,\n      \"name\": \"Pain/inflammation (musculoskeletal), treatment\"\n    },\n    {\n      \"id\": 8,\n      \"name\": \"Pain/inflammation (musculoskeletal), treatment\"\n    }\n  ],\n  \"eligibilities\": [\n    {\n      \"id\": 1,\n      \"name\": \"Beef Cattle\",\n      \"fdaSpecies\": [\n        \"catfish\",\n        \"goats\"\n      ]\n    },\n    {\n      \"id\": 1,\n      \"name\": \"Beef Cattle\",\n      \"fdaSpecies\": [\n        \"unidentified\",\n        \"beef_cattle\"\n      ]\n    }\n  ],\n  \"promises\": [\n    {\n      \"_type\": \"models.IdPromise\",\n      \"name\": \"ID promise\",\n      \"descrip\": \"You must give ID for each case enrolled\",\n      \"query\": \"What is the animal's name or number?\",\n      \"when\": \"PT0H\",\n      \"id\": 2345\n    },\n    {\n      \"_type\": \"models.IdPromise\",\n      \"name\": \"ID promise\",\n      \"descrip\": \"You must give ID for each case enrolled\",\n      \"query\": \"What is the animal's name or number?\",\n      \"when\": \"PT0H\",\n      \"id\": 2345\n    }\n  ],\n  \"metadata\": [\n    {\n      \"key\": \"popularity\",\n      \"value\": \"good 1.2\"\n    },\n    {\n      \"key\": \"popularity\",\n      \"value\": \"good 1.2\"\n    }\n  ]\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "5ab682a5-237f-46fc-8a3c-973770f401eb",
                "type": "text/javascript",
                "exec": [
                  "// Validate status 2xx \npm.test(\"[POST]::/api/protocols - Status code is 2xx\", function () {\n   pm.response.to.be.success;\n});\n"
                ]
              }
            }
          ],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        {
          "id": "ac40c4de-31ed-4126-b1dd-0c32d467b032",
          "name": "update protocol",
          "request": {
            "name": "update protocol",
            "description": {
              "content": "This endpoint updates and validates a Protocol.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "api",
                "protocols"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "PUT",
            "body": {
              "mode": "raw",
              "raw": "{\n  \"ownerId\": 1,\n  \"name\": \"wip\",\n  \"status\": \"PRESCRIBED\",\n  \"instructions\": {\n    \"considerations\": \"<p>This is just an example, not a real protocol.</p>\",\n    \"restrictions\": \"<p>Not for use on real animals.</p>\",\n    \"dothis\": \"<h3>Examinations to perform</h3>\",\n    \"recordthis\": \"<p>record every step in your notebook.</p>\",\n    \"success\": \"<p>All problems are gone</p>\",\n    \"failure\": \"<p>One or more problems remain</p>\",\n    \"references\": \"<a href=\\\"https://en.wikipedia.org/wiki/Rickrolling\\\">Wikipedia</a>\"\n  },\n  \"id\": 12345,\n  \"shortname\": \"wip\",\n  \"created\": \"1954-09-03T01:14:10.920Z\",\n  \"edited\": \"1946-02-18T21:46:27.309Z\",\n  \"vetNote\": \"consider prescribing protocol x instead\",\n  \"wtMeatHrs\": 22,\n  \"wtMilkHrs\": 5,\n  \"shareAll\": true,\n  \"shareClonable\": true,\n  \"caseDefinition\": {\n    \"requireId\": false,\n    \"requireMor\": false,\n    \"contraindications\": \"\",\n    \"medical\": \"if fever is present, consider Protocol 12345 instead.\",\n    \"economic\": \"\",\n    \"note\": \"\"\n  },\n  \"treatments\": [\n    {\n      \"product\": \"MiracleMed\",\n      \"route\": \"wip\",\n      \"dosage\": {\n        \"doseId\": -94573140\n      },\n      \"sequenceFunction\": {\n        \"_type\": \"models.SeqSingleDose\"\n      },\n      \"sizeFunction\": {\n        \"_type\": \"models.FixedDoseFunction\",\n        \"dose\": {\n          \"quantity\": {\n            \"dimension\": \"Mass\",\n            \"value\": 3,\n            \"symbol\": \"oz\"\n          }\n        }\n      },\n      \"id\": \"B-123\",\n      \"ownerId\": 0,\n      \"description\": \"3.0 ml per kg repeat\",\n      \"eligibilities\": [\n        {\n          \"id\": 1,\n          \"name\": \"Beef Cattle\",\n          \"fdaSpecies\": [\n            \"unidentified\",\n            \"emus\"\n          ]\n        },\n        {\n          \"id\": 1,\n          \"name\": \"Beef Cattle\",\n          \"fdaSpecies\": [\n            \"turkeys\",\n            \"turkeys\"\n          ]\n        }\n      ],\n      \"_dose\": \"3.0 ml per kg repeat in 6 hours and again in 24 hours\",\n      \"wtMeatHrs\": 6920425,\n      \"wtMilkHrs\": 67882662,\n      \"nada\": \"wip\",\n      \"tags\": [\n        {\n          \"id\": 8,\n          \"color\": \"#516cc6\",\n          \"name\": \"nulla c\",\n          \"fixes\": [\n            {\n              \"_type\": \"ad consectetur reprehenderit sed aliquip\",\n              \"detail\": \"adipisicing cillum aliquip fugiat\",\n              \"message\": \"pariatur irure\",\n              \"title\": \"et elit Lorem\"\n            },\n            {\n              \"_type\": \"dolor ut veniam\",\n              \"detail\": \"tempor\",\n              \"message\": \"amet fugiat ex\",\n              \"title\": \"amet dolor in\"\n            }\n          ]\n        },\n        {\n          \"id\": 8,\n          \"color\": \"#516cc6\",\n          \"name\": \"quis deser\",\n          \"fixes\": [\n            {\n              \"_type\": \"et\",\n              \"detail\": \"pariatur dolor\",\n              \"message\": \"esse minim\",\n              \"title\": \"a\"\n            },\n            {\n              \"_type\": \"est deserunt culpa dolore laboris\",\n              \"detail\": \"ea d\",\n              \"message\": \"sit do\",\n              \"title\": \"velit eiusmod dolore an\"\n            }\n          ]\n        }\n      ],\n      \"note\": \"<p>a free-form note</p>\",\n      \"amduca\": \"OFFLABEL\"\n    },\n    {\n      \"product\": \"MiracleMed\",\n      \"route\": \"wip\",\n      \"dosage\": {\n        \"doseId\": -62042340\n      },\n      \"sequenceFunction\": {\n        \"_type\": \"models.SeqSingleDose\"\n      },\n      \"sizeFunction\": {\n        \"_type\": \"models.FixedDoseFunction\",\n        \"dose\": {\n          \"quantity\": {\n            \"dimension\": \"Mass\",\n            \"value\": 3,\n            \"symbol\": \"oz\"\n          }\n        }\n      },\n      \"id\": \"B-123\",\n      \"ownerId\": 0,\n      \"description\": \"3.0 ml per kg repeat\",\n      \"eligibilities\": [\n        {\n          \"id\": 1,\n          \"name\": \"Beef Cattle\",\n          \"fdaSpecies\": [\n            \"veal\",\n            \"llamas\"\n          ]\n        },\n        {\n          \"id\": 1,\n          \"name\": \"Beef Cattle\",\n          \"fdaSpecies\": [\n            \"veal\",\n            \"turkeys\"\n          ]\n        }\n      ],\n      \"_dose\": \"3.0 ml per kg repeat in 6 hours and again in 24 hours\",\n      \"wtMeatHrs\": -98282409,\n      \"wtMilkHrs\": 79014527,\n      \"nada\": \"wip\",\n      \"tags\": [\n        {\n          \"id\": 8,\n          \"color\": \"#516cc6\",\n          \"name\": \"ut aliq\",\n          \"fixes\": [\n            {\n              \"_type\": \"incididunt aute enim eu moll\",\n              \"detail\": \"ad tempor sed commodo\",\n              \"message\": \"amet\",\n              \"title\": \"in eiusmod cillum aliquip\"\n            },\n            {\n              \"_type\": \"deserunt amet nisi\",\n              \"detail\": \"ex eiusmod ut consequat officia\",\n              \"message\": \"dolor occaecat\",\n              \"title\": \"cillum eiusmod\"\n            }\n          ]\n        },\n        {\n          \"id\": 8,\n          \"color\": \"#516cc6\",\n          \"name\": \"proident no\",\n          \"fixes\": [\n            {\n              \"_type\": \"ea Ut Duis sint\",\n              \"detail\": \"commodo magna non enim\",\n              \"message\": \"mollit Excepteur anim incididunt\",\n              \"title\": \"proident elit sunt Duis\"\n            },\n            {\n              \"_type\": \"magna\",\n              \"detail\": \"cupi\",\n              \"message\": \"anim nulla eiusmod elit\",\n              \"title\": \"labore sunt exercitation se\"\n            }\n          ]\n        }\n      ],\n      \"note\": \"<p>a free-form note</p>\",\n      \"amduca\": \"ONLABEL\"\n    }\n  ],\n  \"tags\": [\n    {\n      \"id\": 8,\n      \"color\": \"#516cc6\",\n      \"name\": \"nulla\",\n      \"fixes\": [\n        {\n          \"_type\": \"adipisicing est\",\n          \"detail\": \"voluptate eiusmod\",\n          \"message\": \"laborum ex sint\",\n          \"title\": \"est\"\n        },\n        {\n          \"_type\": \"veniam commodo Duis eu aliquip\",\n          \"detail\": \"Duis cillum laboris sit\",\n          \"message\": \"fugiat nisi Duis adipisicing aute\",\n          \"title\": \"occaecat minim proident mollit labore\"\n        }\n      ]\n    },\n    {\n      \"id\": 8,\n      \"color\": \"#516cc6\",\n      \"name\": \"vel\",\n      \"fixes\": [\n        {\n          \"_type\": \"dolor Ut anim tempor\",\n          \"detail\": \"officia labore ipsum adipisicing eiusmod\",\n          \"message\": \"sunt aliquip cupidatat veniam sit\",\n          \"title\": \"sunt laboris\"\n        },\n        {\n          \"_type\": \"officia Ut exercit\",\n          \"detail\": \"ea ad\",\n          \"message\": \"adipisici\",\n          \"title\": \"Duis ipsum eu qui\"\n        }\n      ]\n    }\n  ],\n  \"diagnoses\": [\n    {\n      \"id\": 8,\n      \"name\": \"Pain/inflammation (musculoskeletal), treatment\"\n    },\n    {\n      \"id\": 8,\n      \"name\": \"Pain/inflammation (musculoskeletal), treatment\"\n    }\n  ],\n  \"eligibilities\": [\n    {\n      \"id\": 1,\n      \"name\": \"Beef Cattle\",\n      \"fdaSpecies\": [\n        \"catfish\",\n        \"goats\"\n      ]\n    },\n    {\n      \"id\": 1,\n      \"name\": \"Beef Cattle\",\n      \"fdaSpecies\": [\n        \"unidentified\",\n        \"beef_cattle\"\n      ]\n    }\n  ],\n  \"promises\": [\n    {\n      \"_type\": \"models.IdPromise\",\n      \"name\": \"ID promise\",\n      \"descrip\": \"You must give ID for each case enrolled\",\n      \"query\": \"What is the animal's name or number?\",\n      \"when\": \"PT0H\",\n      \"id\": 2345\n    },\n    {\n      \"_type\": \"models.IdPromise\",\n      \"name\": \"ID promise\",\n      \"descrip\": \"You must give ID for each case enrolled\",\n      \"query\": \"What is the animal's name or number?\",\n      \"when\": \"PT0H\",\n      \"id\": 2345\n    }\n  ],\n  \"metadata\": [\n    {\n      \"key\": \"popularity\",\n      \"value\": \"good 1.2\"\n    },\n    {\n      \"key\": \"popularity\",\n      \"value\": \"good 1.2\"\n    }\n  ]\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "2614a6b0-dd03-455b-a70f-df81d231b104",
                "type": "text/javascript",
                "exec": [
                  "// Validate status 2xx \npm.test(\"[PUT]::/api/protocols - Status code is 2xx\", function () {\n   pm.response.to.be.success;\n});\n"
                ]
              }
            }
          ],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        {
          "id": "21476bf9-fcd5-4c0f-9d78-98f85da48e82",
          "name": "This endpoint validates a protocol without saving it.",
          "request": {
            "name": "This endpoint validates a protocol without saving it.",
            "description": {
              "content": "This endpoint validates a protocol for prescribing without saving it. It should only be called if the user wants to prescribe a protocol without saving changes. The endpoints to save or update protocols automatically include validation.4",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "api",
                "protocols",
                "validate"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "PUT",
            "body": {
              "mode": "raw",
              "raw": "{\n  \"ownerId\": 1,\n  \"name\": \"wip\",\n  \"status\": \"PRESCRIBED\",\n  \"instructions\": {\n    \"considerations\": \"<p>This is just an example, not a real protocol.</p>\",\n    \"restrictions\": \"<p>Not for use on real animals.</p>\",\n    \"dothis\": \"<h3>Examinations to perform</h3>\",\n    \"recordthis\": \"<p>record every step in your notebook.</p>\",\n    \"success\": \"<p>All problems are gone</p>\",\n    \"failure\": \"<p>One or more problems remain</p>\",\n    \"references\": \"<a href=\\\"https://en.wikipedia.org/wiki/Rickrolling\\\">Wikipedia</a>\"\n  },\n  \"id\": 12345,\n  \"shortname\": \"wip\",\n  \"created\": \"1954-09-03T01:14:10.920Z\",\n  \"edited\": \"1946-02-18T21:46:27.309Z\",\n  \"vetNote\": \"consider prescribing protocol x instead\",\n  \"wtMeatHrs\": 22,\n  \"wtMilkHrs\": 5,\n  \"shareAll\": true,\n  \"shareClonable\": true,\n  \"caseDefinition\": {\n    \"requireId\": false,\n    \"requireMor\": false,\n    \"contraindications\": \"\",\n    \"medical\": \"if fever is present, consider Protocol 12345 instead.\",\n    \"economic\": \"\",\n    \"note\": \"\"\n  },\n  \"treatments\": [\n    {\n      \"product\": \"MiracleMed\",\n      \"route\": \"wip\",\n      \"dosage\": {\n        \"doseId\": -94573140\n      },\n      \"sequenceFunction\": {\n        \"_type\": \"models.SeqSingleDose\"\n      },\n      \"sizeFunction\": {\n        \"_type\": \"models.FixedDoseFunction\",\n        \"dose\": {\n          \"quantity\": {\n            \"dimension\": \"Mass\",\n            \"value\": 3,\n            \"symbol\": \"oz\"\n          }\n        }\n      },\n      \"id\": \"B-123\",\n      \"ownerId\": 0,\n      \"description\": \"3.0 ml per kg repeat\",\n      \"eligibilities\": [\n        {\n          \"id\": 1,\n          \"name\": \"Beef Cattle\",\n          \"fdaSpecies\": [\n            \"unidentified\",\n            \"emus\"\n          ]\n        },\n        {\n          \"id\": 1,\n          \"name\": \"Beef Cattle\",\n          \"fdaSpecies\": [\n            \"turkeys\",\n            \"turkeys\"\n          ]\n        }\n      ],\n      \"_dose\": \"3.0 ml per kg repeat in 6 hours and again in 24 hours\",\n      \"wtMeatHrs\": 6920425,\n      \"wtMilkHrs\": 67882662,\n      \"nada\": \"wip\",\n      \"tags\": [\n        {\n          \"id\": 8,\n          \"color\": \"#516cc6\",\n          \"name\": \"nulla c\",\n          \"fixes\": [\n            {\n              \"_type\": \"ad consectetur reprehenderit sed aliquip\",\n              \"detail\": \"adipisicing cillum aliquip fugiat\",\n              \"message\": \"pariatur irure\",\n              \"title\": \"et elit Lorem\"\n            },\n            {\n              \"_type\": \"dolor ut veniam\",\n              \"detail\": \"tempor\",\n              \"message\": \"amet fugiat ex\",\n              \"title\": \"amet dolor in\"\n            }\n          ]\n        },\n        {\n          \"id\": 8,\n          \"color\": \"#516cc6\",\n          \"name\": \"quis deser\",\n          \"fixes\": [\n            {\n              \"_type\": \"et\",\n              \"detail\": \"pariatur dolor\",\n              \"message\": \"esse minim\",\n              \"title\": \"a\"\n            },\n            {\n              \"_type\": \"est deserunt culpa dolore laboris\",\n              \"detail\": \"ea d\",\n              \"message\": \"sit do\",\n              \"title\": \"velit eiusmod dolore an\"\n            }\n          ]\n        }\n      ],\n      \"note\": \"<p>a free-form note</p>\",\n      \"amduca\": \"OFFLABEL\"\n    },\n    {\n      \"product\": \"MiracleMed\",\n      \"route\": \"wip\",\n      \"dosage\": {\n        \"doseId\": -62042340\n      },\n      \"sequenceFunction\": {\n        \"_type\": \"models.SeqSingleDose\"\n      },\n      \"sizeFunction\": {\n        \"_type\": \"models.FixedDoseFunction\",\n        \"dose\": {\n          \"quantity\": {\n            \"dimension\": \"Mass\",\n            \"value\": 3,\n            \"symbol\": \"oz\"\n          }\n        }\n      },\n      \"id\": \"B-123\",\n      \"ownerId\": 0,\n      \"description\": \"3.0 ml per kg repeat\",\n      \"eligibilities\": [\n        {\n          \"id\": 1,\n          \"name\": \"Beef Cattle\",\n          \"fdaSpecies\": [\n            \"veal\",\n            \"llamas\"\n          ]\n        },\n        {\n          \"id\": 1,\n          \"name\": \"Beef Cattle\",\n          \"fdaSpecies\": [\n            \"veal\",\n            \"turkeys\"\n          ]\n        }\n      ],\n      \"_dose\": \"3.0 ml per kg repeat in 6 hours and again in 24 hours\",\n      \"wtMeatHrs\": -98282409,\n      \"wtMilkHrs\": 79014527,\n      \"nada\": \"wip\",\n      \"tags\": [\n        {\n          \"id\": 8,\n          \"color\": \"#516cc6\",\n          \"name\": \"ut aliq\",\n          \"fixes\": [\n            {\n              \"_type\": \"incididunt aute enim eu moll\",\n              \"detail\": \"ad tempor sed commodo\",\n              \"message\": \"amet\",\n              \"title\": \"in eiusmod cillum aliquip\"\n            },\n            {\n              \"_type\": \"deserunt amet nisi\",\n              \"detail\": \"ex eiusmod ut consequat officia\",\n              \"message\": \"dolor occaecat\",\n              \"title\": \"cillum eiusmod\"\n            }\n          ]\n        },\n        {\n          \"id\": 8,\n          \"color\": \"#516cc6\",\n          \"name\": \"proident no\",\n          \"fixes\": [\n            {\n              \"_type\": \"ea Ut Duis sint\",\n              \"detail\": \"commodo magna non enim\",\n              \"message\": \"mollit Excepteur anim incididunt\",\n              \"title\": \"proident elit sunt Duis\"\n            },\n            {\n              \"_type\": \"magna\",\n              \"detail\": \"cupi\",\n              \"message\": \"anim nulla eiusmod elit\",\n              \"title\": \"labore sunt exercitation se\"\n            }\n          ]\n        }\n      ],\n      \"note\": \"<p>a free-form note</p>\",\n      \"amduca\": \"ONLABEL\"\n    }\n  ],\n  \"tags\": [\n    {\n      \"id\": 8,\n      \"color\": \"#516cc6\",\n      \"name\": \"nulla\",\n      \"fixes\": [\n        {\n          \"_type\": \"adipisicing est\",\n          \"detail\": \"voluptate eiusmod\",\n          \"message\": \"laborum ex sint\",\n          \"title\": \"est\"\n        },\n        {\n          \"_type\": \"veniam commodo Duis eu aliquip\",\n          \"detail\": \"Duis cillum laboris sit\",\n          \"message\": \"fugiat nisi Duis adipisicing aute\",\n          \"title\": \"occaecat minim proident mollit labore\"\n        }\n      ]\n    },\n    {\n      \"id\": 8,\n      \"color\": \"#516cc6\",\n      \"name\": \"vel\",\n      \"fixes\": [\n        {\n          \"_type\": \"dolor Ut anim tempor\",\n          \"detail\": \"officia labore ipsum adipisicing eiusmod\",\n          \"message\": \"sunt aliquip cupidatat veniam sit\",\n          \"title\": \"sunt laboris\"\n        },\n        {\n          \"_type\": \"officia Ut exercit\",\n          \"detail\": \"ea ad\",\n          \"message\": \"adipisici\",\n          \"title\": \"Duis ipsum eu qui\"\n        }\n      ]\n    }\n  ],\n  \"diagnoses\": [\n    {\n      \"id\": 8,\n      \"name\": \"Pain/inflammation (musculoskeletal), treatment\"\n    },\n    {\n      \"id\": 8,\n      \"name\": \"Pain/inflammation (musculoskeletal), treatment\"\n    }\n  ],\n  \"eligibilities\": [\n    {\n      \"id\": 1,\n      \"name\": \"Beef Cattle\",\n      \"fdaSpecies\": [\n        \"catfish\",\n        \"goats\"\n      ]\n    },\n    {\n      \"id\": 1,\n      \"name\": \"Beef Cattle\",\n      \"fdaSpecies\": [\n        \"unidentified\",\n        \"beef_cattle\"\n      ]\n    }\n  ],\n  \"promises\": [\n    {\n      \"_type\": \"models.IdPromise\",\n      \"name\": \"ID promise\",\n      \"descrip\": \"You must give ID for each case enrolled\",\n      \"query\": \"What is the animal's name or number?\",\n      \"when\": \"PT0H\",\n      \"id\": 2345\n    },\n    {\n      \"_type\": \"models.IdPromise\",\n      \"name\": \"ID promise\",\n      \"descrip\": \"You must give ID for each case enrolled\",\n      \"query\": \"What is the animal's name or number?\",\n      \"when\": \"PT0H\",\n      \"id\": 2345\n    }\n  ],\n  \"metadata\": [\n    {\n      \"key\": \"popularity\",\n      \"value\": \"good 1.2\"\n    },\n    {\n      \"key\": \"popularity\",\n      \"value\": \"good 1.2\"\n    }\n  ]\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "d553f979-9e2b-48e1-9ad3-4fddfd441401",
                "type": "text/javascript",
                "exec": [
                  "// Validate status 2xx \npm.test(\"[PUT]::/api/protocols/validate - Status code is 2xx\", function () {\n   pm.response.to.be.success;\n});\n"
                ]
              }
            }
          ],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        {
          "id": "598f9af9-8a0b-4cba-b07f-eb9c68a92fec",
          "name": "list of all eligibilities",
          "request": {
            "name": "list of all eligibilities",
            "description": {
              "content": "This endpoint returns an array of Eligibilities from which a User may choose. The ID field is authoritative, i.e., is all that is needed to identify a particular Eligibility.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "api",
                "protocols",
                "eligibilities"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "GET"
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "9d96ca6f-5858-4603-a04a-d4d172386f5e",
                "type": "text/javascript",
                "exec": [
                  "// Validate status 2xx \npm.test(\"[GET]::/api/protocols/eligibilities - Status code is 2xx\", function () {\n   pm.response.to.be.success;\n});\n"
                ]
              }
            }
          ]
        },
        {
          "id": "a47e3683-7e8e-4a54-bbad-0dfa8b9899d3",
          "name": "list of fda species",
          "request": {
            "name": "list of fda species",
            "description": {
              "content": "\"Species\" is the term FDA uses to describe a class of animals in a label claim.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "api",
                "protocols",
                "eligibilities",
                "fdaspecies"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "GET"
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "878647dd-d993-42ef-9a57-f2ddf2498b80",
                "type": "text/javascript",
                "exec": [
                  "// Validate status 2xx \npm.test(\"[GET]::/api/protocols/eligibilities/fdaspecies - Status code is 2xx\", function () {\n   pm.response.to.be.success;\n});\n"
                ]
              }
            }
          ]
        },
        {
          "id": "26189427-e48c-48f5-b9d2-9e25029d8939",
          "name": "list of all diagnoses",
          "request": {
            "name": "list of all diagnoses",
            "description": {
              "content": "Returns an array of all coded Diagnoses known to the system.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "api",
                "protocols",
                "diagnoses"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "GET"
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "9761755e-97d5-4702-93c2-4090c1db298b",
                "type": "text/javascript",
                "exec": [
                  "// Validate status 2xx \npm.test(\"[GET]::/api/protocols/diagnoses - Status code is 2xx\", function () {\n   pm.response.to.be.success;\n});\n"
                ]
              }
            }
          ]
        },
        {
          "id": "a38c968c-fbb5-4ac2-b5c8-bd9d1ea37f6c",
          "name": "list of library protocols",
          "request": {
            "name": "list of library protocols",
            "description": {
              "content": "This endpoint retrieves all protocols owned by, or shared with, the current User.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "api",
                "protocols",
                "libs"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "GET"
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "76d21d95-41bb-4aad-9ac4-d6077d5f37e4",
                "type": "text/javascript",
                "exec": [
                  "// Validate status 2xx \npm.test(\"[GET]::/api/protocols/libs - Status code is 2xx\", function () {\n   pm.response.to.be.success;\n});\n"
                ]
              }
            }
          ]
        },
        {
          "id": "2f5440af-3cd6-47da-8251-013a8e063156",
          "name": "list of all diagnoses",
          "request": {
            "name": "list of all diagnoses",
            "description": {
              "content": "returns an array of Pxes .",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "api",
                "protocols",
                "exclusivestubs"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "GET"
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "814413df-5110-42e4-8fc3-5178ec5989b9",
                "type": "text/javascript",
                "exec": [
                  "// Validate status 2xx \npm.test(\"[GET]::/api/protocols/exclusivestubs - Status code is 2xx\", function () {\n   pm.response.to.be.success;\n});\n"
                ]
              }
            }
          ]
        },
        {
          "id": "a6acb3ce-4bea-4b65-b017-662727dba501",
          "name": "validate a structured Dosage",
          "request": {
            "name": "validate a structured Dosage",
            "description": {
              "content": "validate a Dosage with SizeFunction and SequewnceFunction returning an test '_dose\" description.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "api",
                "protocols",
                "dosages"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n  \"sequenceFunction\": {\n    \"_type\": \"models.SeqSingleDose\"\n  },\n  \"sizeFunction\": {\n    \"_type\": \"models.FixedDoseFunction\",\n    \"dose\": {\n      \"quantity\": {\n        \"dimension\": \"Mass\",\n        \"value\": 3,\n        \"symbol\": \"oz\"\n      }\n    }\n  }\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "d1ebd79b-51e9-4f54-8a56-37d0f1b009cf",
                "type": "text/javascript",
                "exec": [
                  "// Validate status 2xx \npm.test(\"[POST]::/api/protocols/dosages - Status code is 2xx\", function () {\n   pm.response.to.be.success;\n});\n"
                ]
              }
            }
          ],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        {
          "id": "daad637b-057c-455e-8311-4bef1131a380",
          "name": "list of library pxes",
          "request": {
            "name": "list of library pxes",
            "description": {
              "content": "This endpoint returns all the Protocols owned by, or shared with, the current User.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "api",
                "protocols",
                "libstubs"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "GET"
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "2db52449-c6fc-484d-839a-9d7a3860acf5",
                "type": "text/javascript",
                "exec": [
                  "// Validate status 2xx \npm.test(\"[GET]::/api/protocols/libstubs - Status code is 2xx\", function () {\n   pm.response.to.be.success;\n});\n"
                ]
              }
            }
          ]
        },
        {
          "id": "92d39fcb-1ae7-4cdc-adc4-798c5bd83497",
          "name": "retrieve protocol by ID",
          "request": {
            "name": "retrieve protocol by ID",
            "description": {
              "content": "This endpoint retrieves a Protocol by `protocol.id`.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "api",
                "protocols",
                ":id"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": [
                {
                  "disabled": false,
                  "description": {
                    "content": "(Required) Protocol ID key",
                    "type": "text/plain"
                  },
                  "type": "any",
                  "value": "7",
                  "key": "id"
                }
              ]
            },
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "GET"
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "1f943a13-9e50-4fa5-808e-2942e8c4108c",
                "type": "text/javascript",
                "exec": [
                  "// Validate status 2xx \npm.test(\"[GET]::/api/protocols/:id - Status code is 2xx\", function () {\n   pm.response.to.be.success;\n});\n"
                ]
              }
            }
          ]
        },
        {
          "id": "b421bd19-ed07-4d60-b7f0-9346bc8e05bf",
          "name": "delete protocol",
          "request": {
            "name": "delete protocol",
            "description": {
              "content": "Change `protocol.status` to DELETED (this does not actually remove it from the database).",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "api",
                "protocols",
                ":id"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": [
                {
                  "disabled": false,
                  "description": {
                    "content": "(Required) Protocol ID key",
                    "type": "text/plain"
                  },
                  "type": "any",
                  "value": "-16056297",
                  "key": "id"
                }
              ]
            },
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "DELETE"
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "af0964bc-0812-4f65-97ac-c5c523ada01b",
                "type": "text/javascript",
                "exec": [
                  "// Validate status 2xx \npm.test(\"[DELETE]::/api/protocols/:id - Status code is 2xx\", function () {\n   pm.response.to.be.success;\n});\n"
                ]
              }
            }
          ]
        },
        {
          "id": "dcd0e714-70ae-4b2c-826a-329a1bc616dd",
          "name": "list of all diagnoses",
          "request": {
            "name": "list of all diagnoses",
            "description": {
              "content": "This",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "api",
                "protocols",
                "prescriptions"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "GET"
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "c30ede15-5078-422c-a22a-849befff3da2",
                "type": "text/javascript",
                "exec": [
                  "// Validate status 2xx \npm.test(\"[GET]::/api/protocols/prescriptions - Status code is 2xx\", function () {\n   pm.response.to.be.success;\n});\n"
                ]
              }
            }
          ]
        },
        {
          "id": "29534307-b591-4bdf-b315-faf568524cf0",
          "name": "list of all diagnoses",
          "request": {
            "name": "list of all diagnoses",
            "description": {
              "content": "returns an array of Prescriptions",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "api",
                "protocols",
                ":id",
                "prescriptions"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": [
                {
                  "disabled": false,
                  "description": {
                    "content": "(Required) Protocol ID key",
                    "type": "text/plain"
                  },
                  "type": "any",
                  "value": "-16056297",
                  "key": "id"
                }
              ]
            },
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "GET"
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "cb368e1b-4531-4792-977e-f6c12be8f4f9",
                "type": "text/javascript",
                "exec": [
                  "// Validate status 2xx \npm.test(\"[GET]::/api/protocols/:id/prescriptions - Status code is 2xx\", function () {\n   pm.response.to.be.success;\n});\n"
                ]
              }
            }
          ]
        },
        {
          "id": "c886a170-3d0b-4630-9623-a95b5f70e66f",
          "name": "retrieve prescription by ID",
          "request": {
            "name": "retrieve prescription by ID",
            "description": {
              "content": "Retrieve a Prescription by `prescription.id`.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "api",
                "protocols",
                "prescriptions",
                ":id"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": [
                {
                  "disabled": false,
                  "description": {
                    "content": "(Required) Prescription ID key",
                    "type": "text/plain"
                  },
                  "type": "any",
                  "value": "Vi1y9kbpEj7Upqy7",
                  "key": "id"
                }
              ]
            },
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "GET"
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "56324df0-b07e-49a8-9be2-5656fd5bea9c",
                "type": "text/javascript",
                "exec": [
                  "// Validate status 2xx \npm.test(\"[GET]::/api/protocols/prescriptions/:id - Status code is 2xx\", function () {\n   pm.response.to.be.success;\n});\n"
                ]
              }
            }
          ]
        },
        {
          "id": "602643b4-e382-48d5-b503-8e999ccdb1ed",
          "name": "list of all labelclaims",
          "request": {
            "name": "list of all labelclaims",
            "description": {
              "content": "This endpoint returns the full array of drug labels.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "api",
                "labels"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "GET"
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "45b827ca-b3c9-47f8-b8f2-f91610de023c",
                "type": "text/javascript",
                "exec": [
                  "// Validate status 2xx \npm.test(\"[GET]::/api/labels - Status code is 2xx\", function () {\n   pm.response.to.be.success;\n});\n"
                ]
              }
            }
          ]
        },
        {
          "id": "d487420f-f3ca-4058-bd7c-8ee1919d968d",
          "name": "labelclaim",
          "request": {
            "name": "labelclaim",
            "description": {
              "content": "Return specified labelclaim.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "api",
                "labels",
                ":id"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": [
                {
                  "disabled": false,
                  "description": {
                    "content": "(Required) labelclaim  ID",
                    "type": "text/plain"
                  },
                  "type": "any",
                  "value": "32",
                  "key": "id"
                }
              ]
            },
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "GET"
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "8e822cbe-1222-4e42-bcf9-d2d795831537",
                "type": "text/javascript",
                "exec": [
                  "// Validate status 2xx \npm.test(\"[GET]::/api/labels/:id - Status code is 2xx\", function () {\n   pm.response.to.be.success;\n});\n"
                ]
              }
            }
          ]
        },
        {
          "id": "ba4435bc-ed36-4046-8145-bae8a2643d82",
          "name": "package insert",
          "request": {
            "name": "package insert",
            "description": {
              "content": "Retrieve the product package insert.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "api",
                "labels",
                "inserts",
                ":lxId"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": [
                {
                  "disabled": false,
                  "description": {
                    "content": "(Required) label ID",
                    "type": "text/plain"
                  },
                  "type": "any",
                  "value": "32",
                  "key": "lxId"
                }
              ]
            },
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "GET"
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "4eae0e03-21a7-4b50-ae80-d67e2ac44c17",
                "type": "text/javascript",
                "exec": [
                  "// Validate status 2xx \npm.test(\"[GET]::/api/labels/inserts/:lxId - Status code is 2xx\", function () {\n   pm.response.to.be.success;\n});\n"
                ]
              }
            }
          ]
        },
        {
          "id": "6e8ea0c2-6b06-4c13-9912-6b198b7a2ad2",
          "name": "get detail of a Greenbook Drug as a link",
          "request": {
            "name": "get detail of a Greenbook Drug as a link",
            "description": {
              "content": "This",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "api",
                "spl",
                ":ndc"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": [
                {
                  "disabled": false,
                  "description": {
                    "content": "(Required) unique hyphenated number with up to 10 digits in 2 or 3 segments as labelerCode-productCode-packageCode. packageCode may not be needed.",
                    "type": "text/plain"
                  },
                  "type": "any",
                  "value": "0010-3832",
                  "key": "ndc"
                }
              ]
            },
            "header": [
              {
                "key": "Accept",
                "value": "text/html"
              }
            ],
            "method": "GET"
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "9191902a-b08b-497d-b9dc-51766ddfda9a",
                "type": "text/javascript",
                "exec": [
                  "// Validate status 2xx \npm.test(\"[GET]::/api/spl/:ndc - Status code is 2xx\", function () {\n   pm.response.to.be.success;\n});\n"
                ]
              }
            }
          ]
        },
        {
          "id": "3db584a3-f417-43d5-a1be-169d5518a335",
          "name": "get detail of a Greenbook Drug as a link",
          "request": {
            "name": "get detail of a Greenbook Drug as a link",
            "description": {
              "content": "This",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "api",
                "spl",
                ":ndc",
                ":image"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": [
                {
                  "disabled": false,
                  "description": {
                    "content": "(Required) unique hyphenated number with up to 10 digits in 2 or 3 segments as labelerCode-productCode-packageCode. packageCode may not be needed.",
                    "type": "text/plain"
                  },
                  "type": "any",
                  "value": "0010-3495",
                  "key": "ndc"
                },
                {
                  "disabled": false,
                  "description": {
                    "content": "(Required) name of image file",
                    "type": "text/plain"
                  },
                  "type": "any",
                  "value": "601588-image-fake.jpg",
                  "key": "image"
                }
              ]
            },
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "GET"
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "d0fa418e-5384-4e8c-bbc1-bc2dec03d6f7",
                "type": "text/javascript",
                "exec": [
                  "// Validate status 2xx \npm.test(\"[GET]::/api/spl/:ndc/:image - Status code is 2xx\", function () {\n   pm.response.to.be.success;\n});\n"
                ]
              }
            }
          ]
        },
        {
          "id": "bb85d8ab-a199-49e7-bdc9-eaffba5d2cf8",
          "name": "retrieve prescription by ID",
          "request": {
            "name": "retrieve prescription by ID",
            "description": {
              "content": "Retrieve a Prescription by `prescription.id`.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "api",
                "prescriptions",
                ":id",
                ""
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": [
                {
                  "disabled": false,
                  "description": {
                    "content": "(Required) Prescription ID key",
                    "type": "text/plain"
                  },
                  "type": "any",
                  "value": "Vi1y9kbpEj7Upqy7",
                  "key": "id"
                }
              ]
            },
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "GET"
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "babd1ce3-f293-4c74-a4e5-cc9a940e10a3",
                "type": "text/javascript",
                "exec": [
                  "// Validate status 2xx \npm.test(\"[GET]::/api/prescriptions/:id/ - Status code is 2xx\", function () {\n   pm.response.to.be.success;\n});\n"
                ]
              }
            }
          ]
        },
        {
          "id": "805aee93-d0da-4072-97f1-2d40e1766414",
          "name": "recall or decline a prescription",
          "request": {
            "name": "recall or decline a prescription",
            "description": {
              "content": "Prescriptions are immutable except for metadata, and cannot actually be deleted. This endpoint makes a prescription unavailable for use. If called by the VOR, it sets staus to RECALLED. If called by the MOR to whom it is prescribed, it sets status to DECLINED. New cases  cannot be enrolled if either RECALLED or DECLIENED.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "api",
                "prescriptions",
                ":id",
                ""
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": [
                {
                  "disabled": false,
                  "description": {
                    "content": "(Required) Prescription identifier",
                    "type": "text/plain"
                  },
                  "type": "any",
                  "value": "pariatur non irure in",
                  "key": "key"
                }
              ]
            },
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "DELETE"
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "2238d65f-91c7-436d-a37c-b4f86cbd7a9f",
                "type": "text/javascript",
                "exec": [
                  "// Validate status 2xx \npm.test(\"[DELETE]::/api/prescriptions/:id/ - Status code is 2xx\", function () {\n   pm.response.to.be.success;\n});\n"
                ]
              }
            }
          ]
        },
        {
          "id": "350b31c2-b7d8-4f12-8ab4-5fa53e7da1d3",
          "name": "enroll case",
          "request": {
            "name": "enroll case",
            "description": {
              "content": "Creates a Case linked to a prescription.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "api",
                "cases"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n  \"id\": 123,\n  \"rxId\": \"gG3pBCR1GCMKm89c\",\n  \"caseData\": {\n    \"id\": 0,\n    \"rxId\": \"gG3pBCR1GCMKm89c\",\n    \"caseData\": {\n      \"_type\": \"models.IdData\",\n      \"animalId\": \"Bossie\",\n      \"initiationTime\": \"1953-02-13T17:28:27.415Z\"\n    }\n  },\n  \"promiseData\": [\n    {\n      \"_type\": \"models.IdPromise\",\n      \"name\": \"ID promise\",\n      \"descrip\": \"You must give ID for each case enrolled\",\n      \"query\": \"What is the animal's name or number?\",\n      \"when\": \"PT0H\",\n      \"id\": 2345\n    },\n    {\n      \"_type\": \"models.IdPromise\",\n      \"name\": \"ID promise\",\n      \"descrip\": \"You must give ID for each case enrolled\",\n      \"query\": \"What is the animal's name or number?\",\n      \"when\": \"PT0H\",\n      \"id\": 2345\n    }\n  ]\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "08ce2766-2eb2-4a99-bb06-80b965f8fc42",
                "type": "text/javascript",
                "exec": [
                  "// Validate status 2xx \npm.test(\"[POST]::/api/cases - Status code is 2xx\", function () {\n   pm.response.to.be.success;\n});\n"
                ]
              }
            }
          ],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        {
          "id": "995a8d1c-9295-45c8-9a48-08587162bfbf",
          "name": "list of cases",
          "request": {
            "name": "list of cases",
            "description": {
              "content": "Get all current cases for this user",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "api",
                "cases"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "GET"
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "41286f80-b504-40ee-ad2e-2991ad5f9d9c",
                "type": "text/javascript",
                "exec": [
                  "// Validate status 2xx \npm.test(\"[GET]::/api/cases - Status code is 2xx\", function () {\n   pm.response.to.be.success;\n});\n"
                ]
              }
            }
          ]
        },
        {
          "id": "245a89af-32f3-43c9-ae21-55c293185e7d",
          "name": "list  of cases for a rx",
          "request": {
            "name": "list  of cases for a rx",
            "description": {
              "content": "Get all current cases for this prescription and this user",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "api",
                "prescriptions",
                ":rxId",
                "cases"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": [
                {
                  "disabled": false,
                  "description": {
                    "content": "(Required) prescription uuid",
                    "type": "text/plain"
                  },
                  "type": "any",
                  "value": "Vi1y9kbpEj7Upqy7",
                  "key": "rxId"
                }
              ]
            },
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "GET"
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "007c97f8-0bb3-400a-ba5c-5cdc1c41d4fd",
                "type": "text/javascript",
                "exec": [
                  "// Validate status 2xx \npm.test(\"[GET]::/api/prescriptions/:rxId/cases - Status code is 2xx\", function () {\n   pm.response.to.be.success;\n});\n"
                ]
              }
            }
          ]
        },
        {
          "id": "a2cfae38-1fa0-4573-8926-537b0223346b",
          "name": "execute task",
          "request": {
            "name": "execute task",
            "description": {
              "content": "Mark task status as completed",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "api",
                "users",
                "tasks"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n  \"_type\": \"Ut voluptate\",\n  \"animalId\": \"this\",\n  \"caseId\": 123,\n  \"detail\": \"do veniam elit fugiat id\",\n  \"doAt\": \"1958-04-22T08:21:27.084Z\",\n  \"id\": 123,\n  \"morId\": 123,\n  \"status\": \"REQUIRED\",\n  \"vorId\": 123,\n  \"executor\": 123\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "443773e3-471b-4955-bea9-21f149fc6522",
                "type": "text/javascript",
                "exec": [
                  "// Validate status 2xx \npm.test(\"[POST]::/api/users/tasks - Status code is 2xx\", function () {\n   pm.response.to.be.success;\n});\n",
                  "// Validate response time \npm.test(\"[POST]::/api/users/tasks - Response time is less than 300ms\", function () {\n    pm.expect(pm.response.responseTime).to.be.below(300);\n});\n",
                  "// Validate if response header has matching content-type\npm.test(\"[POST]::/api/users/tasks - Content-Type is application/json\", function () {\n   pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"application/json\");\n});\n",
                  "// Validate if response has JSON Body \npm.test(\"[POST]::/api/users/tasks - Response has JSON Body\", function () {\n    pm.response.to.have.jsonBody();\n});\n",
                  "// Response Validation\nconst schema = {\"type\":\"object\",\"properties\":{\"case\":{\"description\":\"A **_Case_** records use of a **_Prescription_** on an individual animal or group\",\"type\":\"object\",\"required\":[\"id\",\"rxId\",\"caseData\",\"promiseData\"],\"properties\":{\"id\":{\"description\":\"Case ID number\",\"type\":\"integer\",\"format\":\"int64\",\"default\":null,\"example\":123},\"rxId\":{\"type\":\"string\",\"description\":\"UUID identifying the prescription\",\"example\":\"gG3pBCR1GCMKm89c\"},\"caseData\":{\"description\":\"data for an individual Case\",\"type\":\"object\",\"properties\":{\"id\":{\"type\":\"integer\",\"example\":0,\"description\":\"ID number for the **_Case_**\"},\"rxId\":{\"type\":\"string\",\"description\":\"UUID identifying the prescription\",\"example\":\"gG3pBCR1GCMKm89c\"},\"caseData\":{\"oneOf\":[{\"type\":\"object\",\"description\":\"identifies animal or group treated in the **_Case_**\",\"properties\":{\"_type\":{\"type\":\"string\",\"description\":\"Class of CaseData\",\"enum\":[\"models.IdData\"],\"example\":\"models.IdData\"},\"animalId\":{\"type\":\"string\",\"description\":\"text description identifying the animal or group\",\"example\":\"Bossie\"},\"initiationTime\":{\"type\":\"string\",\"format\":\"date-time\",\"example\":\"2020-01-10T10:30:37.000Z\",\"description\":\"when the **_Case_** is initiated\"}}},{\"type\":\"object\",\"description\":\"specifies animal's weight\",\"properties\":{\"_type\":{\"type\":\"string\",\"description\":\"identifies subtype of CaseData\",\"enum\":[\"models.WeightData\"],\"example\":\"models.WeightData\"},\"animalId\":{\"type\":\"string\",\"description\":\"text description identifying the animal or group\",\"example\":\"Bossie\"},\"weight\":{\"type\":\"object\",\"required\":[\"value\",\"symbol\"],\"properties\":{\"dimension\":{\"type\":\"string\",\"enum\":[\"Mass\"],\"description\":\"must be Mass\",\"example\":\"Mass\"},\"value\":{\"type\":\"number\",\"description\":\"number of units\",\"default\":1,\"example\":50},\"symbol\":{\"description\":\"unit of mass or weight\",\"type\":\"string\",\"enum\":[\"lb\",\"t\",\"dwt\",\"gr\",\"mg\",\"mcg\",\"oz\",\"g\",\"kg\"],\"example\":\"kg\"}}},\"initiationTime\":{\"type\":\"string\",\"format\":\"date-time\",\"description\":\"when the **_Case_** is initiated\",\"example\":\"2020-01-10T10:30:37.000Z\"}}},{\"description\":\"animal identity and preferred dose\",\"type\":\"object\",\"required\":[\"animalId\",\"initiationTime\",\"preferredDose\"],\"properties\":{\"_type\":{\"description\":\"Class of CaseData\",\"type\":\"string\",\"enum\":[\"models.PreferredDoseData\"],\"example\":\"models.PrefDoseRateData\"},\"animalId\":{\"type\":\"string\",\"description\":\"text description identifying the animal or group\",\"example\":\"Bossie\"},\"preferredDose\":{\"type\":\"object\",\"required\":[\"quantity\"],\"properties\":{\"quantity\":{\"oneOf\":[{\"type\":\"object\",\"required\":[\"value\",\"symbol\"],\"properties\":{\"dimension\":{\"type\":\"string\",\"enum\":[\"Mass\"],\"description\":\"must be Mass\",\"example\":\"Mass\"},\"value\":{\"type\":\"number\",\"description\":\"number of units\",\"default\":1,\"example\":50},\"symbol\":{\"description\":\"unit of mass or weight\",\"type\":\"string\",\"enum\":[\"lb\",\"t\",\"dwt\",\"gr\",\"mg\",\"mcg\",\"oz\",\"g\",\"kg\"],\"example\":\"kg\"}}},{\"type\":\"object\",\"required\":[\"value\",\"symbol\"],\"properties\":{\"dimension\":{\"type\":\"string\",\"description\":\"must be Volume\",\"example\":\"Volume\",\"enum\":[\"Volume\"]},\"value\":{\"type\":\"number\",\"description\":\"number of units\",\"example\":3},\"symbol\":{\"description\":\"unit of Volume\",\"type\":\"string\",\"example\":\"ml\",\"enum\":[\"pt\",\"tbsp\",\"µl\",\"nl\",\"oz\",\"dl\",\"ml\",\"qt\",\"L\",\"gal\",\"c\",\"tsp\"]}}},{\"type\":\"object\",\"required\":[\"value\",\"symbol\"],\"properties\":{\"dimension\":{\"type\":\"string\",\"description\":\"must be Dimensionless\",\"example\":\"Dimensionless\",\"enum\":[\"Dimensionless\"]},\"value\":{\"type\":\"number\",\"description\":\"number of units\",\"example\":3},\"symbol\":{\"description\":\"dimensionless unit (each)\",\"type\":\"string\",\"enum\":[\"ea\",\"%\",\"dz\"],\"example\":\"ea\"}}}]}},\"example\":{\"quantity\":{\"dimension\":\"Mass\",\"value\":3,\"symbol\":\"oz\"}}},\"initiationTime\":{\"type\":\"string\",\"format\":\"date-time\",\"description\":\"when the **_Case_** is initiated\",\"example\":\"2020-04-10T10:30:37.000Z\"}}},{\"description\":\"weight of animal and preferred dose\",\"type\":\"object\",\"required\":[\"animalId\",\"initiationTime\",\"preferredDose\",\"weight\"],\"properties\":{\"_type\":{\"type\":\"string\",\"description\":\"identifies subtype of CaseData\",\"enum\":[\"models.PrefDoseRateData\"],\"example\":\"models.PrefDoseRateData\"},\"animalId\":{\"description\":\"text description identifying the animal or group\",\"type\":\"integer\",\"default\":null,\"example\":123},\"initiationTime\":{\"description\":\"when the **_Case_** is initiated\",\"type\":\"string\",\"format\":\"date-time\",\"example\":\"2020-01-10T10:30:37.000Z\"},\"weight\":{\"type\":\"object\",\"required\":[\"value\",\"symbol\"],\"properties\":{\"dimension\":{\"type\":\"string\",\"enum\":[\"Mass\"],\"description\":\"must be Mass\",\"example\":\"Mass\"},\"value\":{\"type\":\"number\",\"description\":\"number of units\",\"default\":1,\"example\":50},\"symbol\":{\"description\":\"unit of mass or weight\",\"type\":\"string\",\"enum\":[\"lb\",\"t\",\"dwt\",\"gr\",\"mg\",\"mcg\",\"oz\",\"g\",\"kg\"],\"example\":\"kg\"}}},\"preferredDose\":{\"type\":\"object\",\"required\":[\"quantity\"],\"properties\":{\"quantity\":{\"oneOf\":[{\"type\":\"object\",\"required\":[\"value\",\"symbol\"],\"properties\":{\"dimension\":{\"type\":\"string\",\"enum\":[\"Mass\"],\"description\":\"must be Mass\",\"example\":\"Mass\"},\"value\":{\"type\":\"number\",\"description\":\"number of units\",\"default\":1,\"example\":50},\"symbol\":{\"description\":\"unit of mass or weight\",\"type\":\"string\",\"enum\":[\"lb\",\"t\",\"dwt\",\"gr\",\"mg\",\"mcg\",\"oz\",\"g\",\"kg\"],\"example\":\"kg\"}}},{\"type\":\"object\",\"required\":[\"value\",\"symbol\"],\"properties\":{\"dimension\":{\"type\":\"string\",\"description\":\"must be Volume\",\"example\":\"Volume\",\"enum\":[\"Volume\"]},\"value\":{\"type\":\"number\",\"description\":\"number of units\",\"example\":3},\"symbol\":{\"description\":\"unit of Volume\",\"type\":\"string\",\"example\":\"ml\",\"enum\":[\"pt\",\"tbsp\",\"µl\",\"nl\",\"oz\",\"dl\",\"ml\",\"qt\",\"L\",\"gal\",\"c\",\"tsp\"]}}},{\"type\":\"object\",\"required\":[\"value\",\"symbol\"],\"properties\":{\"dimension\":{\"type\":\"string\",\"description\":\"must be Dimensionless\",\"example\":\"Dimensionless\",\"enum\":[\"Dimensionless\"]},\"value\":{\"type\":\"number\",\"description\":\"number of units\",\"example\":3},\"symbol\":{\"description\":\"dimensionless unit (each)\",\"type\":\"string\",\"enum\":[\"ea\",\"%\",\"dz\"],\"example\":\"ea\"}}}]}},\"example\":{\"quantity\":{\"dimension\":\"Mass\",\"value\":3,\"symbol\":\"oz\"}}}}},{\"description\":\"data for a class of animals\",\"type\":\"object\",\"required\":[\"animalId\",\"initiationTime\",\"animalClass\"],\"properties\":{\"_type\":{\"description\":\"Class of CaseData\",\"type\":\"string\",\"enum\":[\"models.AnimalClassData\"],\"example\":\"models.AnimalClassData\"},\"animalId\":{\"description\":\"text description identifying the animal or group\",\"type\":\"integer\",\"default\":null,\"example\":123},\"initiationTime\":{\"description\":\"when the **_Case_** is initiated\",\"type\":\"string\",\"format\":\"date-time\",\"example\":\"2020-01-10T10:30:37.000Z\"},\"animalClass\":{\"description\":\"a class of animals and a SizeFunction for dosing that class\",\"type\":\"object\",\"required\":[\"animalClass\",\"sizeFunction\"],\"properties\":{\"animalClass\":{\"type\":\"string\",\"description\":\"descrip\",\"example\":\"Jabberwocks\"},\"sizeFunction\":{\"description\":\"function to calculate dose size\",\"oneOf\":[{\"type\":\"object\",\"description\":\"a fixed quantity expressed in any available unit\",\"required\":[\"_type\",\"dose\"],\"properties\":{\"_type\":{\"type\":\"string\",\"description\":\"class of Dose Function\",\"enum\":[\"models.FixedDoseFunction\"],\"example\":\"models.FixedDoseFunction\"},\"dose\":{\"type\":\"object\",\"required\":[\"quantity\"],\"properties\":{\"quantity\":{\"oneOf\":[{\"type\":\"object\",\"required\":[\"value\",\"symbol\"],\"properties\":{\"dimension\":{\"type\":\"string\",\"enum\":[\"Mass\"],\"description\":\"must be Mass\",\"example\":\"Mass\"},\"value\":{\"type\":\"number\",\"description\":\"number of units\",\"default\":1,\"example\":50},\"symbol\":{\"description\":\"unit of mass or weight\",\"type\":\"string\",\"enum\":[\"lb\",\"t\",\"dwt\",\"gr\",\"mg\",\"mcg\",\"oz\",\"g\",\"kg\"],\"example\":\"kg\"}}},{\"type\":\"object\",\"required\":[\"value\",\"symbol\"],\"properties\":{\"dimension\":{\"type\":\"string\",\"description\":\"must be Volume\",\"example\":\"Volume\",\"enum\":[\"Volume\"]},\"value\":{\"type\":\"number\",\"description\":\"number of units\",\"example\":3},\"symbol\":{\"description\":\"unit of Volume\",\"type\":\"string\",\"example\":\"ml\",\"enum\":[\"pt\",\"tbsp\",\"µl\",\"nl\",\"oz\",\"dl\",\"ml\",\"qt\",\"L\",\"gal\",\"c\",\"tsp\"]}}},{\"type\":\"object\",\"required\":[\"value\",\"symbol\"],\"properties\":{\"dimension\":{\"type\":\"string\",\"description\":\"must be Dimensionless\",\"example\":\"Dimensionless\",\"enum\":[\"Dimensionless\"]},\"value\":{\"type\":\"number\",\"description\":\"number of units\",\"example\":3},\"symbol\":{\"description\":\"dimensionless unit (each)\",\"type\":\"string\",\"enum\":[\"ea\",\"%\",\"dz\"],\"example\":\"ea\"}}}]}},\"example\":{\"quantity\":{\"dimension\":\"Mass\",\"value\":3,\"symbol\":\"oz\"}}}},\"example\":{\"dose\":{\"quantity\":{\"dimension\":\"Volume\",\"value\":3,\"symbol\":\"ml\"}},\"_type\":\"models.FixedDoseFunction\"}},{\"type\":\"object\",\"description\":\"dose is specified as a quantity per unit of animal weight\",\"required\":[\"_type\",\"dose\",\"perUnit\"],\"properties\":{\"_type\":{\"type\":\"string\",\"description\":\"class of Dose Function\",\"example\":\"models.DoseByWeightFunction\",\"enum\":[\"models.DoseByWeightFunction\"]},\"dose\":{\"type\":\"object\",\"required\":[\"quantity\"],\"properties\":{\"quantity\":{\"oneOf\":[{\"type\":\"object\",\"required\":[\"value\",\"symbol\"],\"properties\":{\"dimension\":{\"type\":\"string\",\"enum\":[\"Mass\"],\"description\":\"must be Mass\",\"example\":\"Mass\"},\"value\":{\"type\":\"number\",\"description\":\"number of units\",\"default\":1,\"example\":50},\"symbol\":{\"description\":\"unit of mass or weight\",\"type\":\"string\",\"enum\":[\"lb\",\"t\",\"dwt\",\"gr\",\"mg\",\"mcg\",\"oz\",\"g\",\"kg\"],\"example\":\"kg\"}}},{\"type\":\"object\",\"required\":[\"value\",\"symbol\"],\"properties\":{\"dimension\":{\"type\":\"string\",\"description\":\"must be Volume\",\"example\":\"Volume\",\"enum\":[\"Volume\"]},\"value\":{\"type\":\"number\",\"description\":\"number of units\",\"example\":3},\"symbol\":{\"description\":\"unit of Volume\",\"type\":\"string\",\"example\":\"ml\",\"enum\":[\"pt\",\"tbsp\",\"µl\",\"nl\",\"oz\",\"dl\",\"ml\",\"qt\",\"L\",\"gal\",\"c\",\"tsp\"]}}},{\"type\":\"object\",\"required\":[\"value\",\"symbol\"],\"properties\":{\"dimension\":{\"type\":\"string\",\"description\":\"must be Dimensionless\",\"example\":\"Dimensionless\",\"enum\":[\"Dimensionless\"]},\"value\":{\"type\":\"number\",\"description\":\"number of units\",\"example\":3},\"symbol\":{\"description\":\"dimensionless unit (each)\",\"type\":\"string\",\"enum\":[\"ea\",\"%\",\"dz\"],\"example\":\"ea\"}}}]}},\"example\":{\"quantity\":{\"dimension\":\"Mass\",\"value\":3,\"symbol\":\"oz\"}}},\"perUnit\":{\"type\":\"object\",\"required\":[\"value\",\"symbol\"],\"properties\":{\"dimension\":{\"type\":\"string\",\"enum\":[\"Mass\"],\"description\":\"must be Mass\",\"example\":\"Mass\"},\"value\":{\"type\":\"number\",\"description\":\"number of units\",\"default\":1,\"example\":50},\"symbol\":{\"description\":\"unit of mass or weight\",\"type\":\"string\",\"enum\":[\"lb\",\"t\",\"dwt\",\"gr\",\"mg\",\"mcg\",\"oz\",\"g\",\"kg\"],\"example\":\"kg\"}}}},\"example\":{\"dose\":{\"quantity\":{\"dimension\":\"Volume\",\"value\":3,\"symbol\":\"ml\"}},\"perUnit\":{\"dimension\":\"Mass\",\"value\":1,\"symbol\":\"kg\"},\"_type\":\"models.DoseByWeightFunction\"}},{\"type\":\"object\",\"description\":\"dose is specified as first (loading) dose and following doses per unit of animal weight\",\"required\":[\"_type\",\"firstDose\",\"followDose\",\"perUnit\"],\"properties\":{\"_type\":{\"type\":\"string\",\"description\":\"class of Dose Function\",\"example\":\"DoseByWeightFunction\",\"enum\":[\"models.DoseByWeightFunction\"]},\"firstDose\":{\"type\":\"object\",\"required\":[\"quantity\"],\"properties\":{\"quantity\":{\"oneOf\":[{\"type\":\"object\",\"required\":[\"value\",\"symbol\"],\"properties\":{\"dimension\":{\"type\":\"string\",\"enum\":[\"Mass\"],\"description\":\"must be Mass\",\"example\":\"Mass\"},\"value\":{\"type\":\"number\",\"description\":\"number of units\",\"default\":1,\"example\":50},\"symbol\":{\"description\":\"unit of mass or weight\",\"type\":\"string\",\"enum\":[\"lb\",\"t\",\"dwt\",\"gr\",\"mg\",\"mcg\",\"oz\",\"g\",\"kg\"],\"example\":\"kg\"}}},{\"type\":\"object\",\"required\":[\"value\",\"symbol\"],\"properties\":{\"dimension\":{\"type\":\"string\",\"description\":\"must be Volume\",\"example\":\"Volume\",\"enum\":[\"Volume\"]},\"value\":{\"type\":\"number\",\"description\":\"number of units\",\"example\":3},\"symbol\":{\"description\":\"unit of Volume\",\"type\":\"string\",\"example\":\"ml\",\"enum\":[\"pt\",\"tbsp\",\"µl\",\"nl\",\"oz\",\"dl\",\"ml\",\"qt\",\"L\",\"gal\",\"c\",\"tsp\"]}}},{\"type\":\"object\",\"required\":[\"value\",\"symbol\"],\"properties\":{\"dimension\":{\"type\":\"string\",\"description\":\"must be Dimensionless\",\"example\":\"Dimensionless\",\"enum\":[\"Dimensionless\"]},\"value\":{\"type\":\"number\",\"description\":\"number of units\",\"example\":3},\"symbol\":{\"description\":\"dimensionless unit (each)\",\"type\":\"string\",\"enum\":[\"ea\",\"%\",\"dz\"],\"example\":\"ea\"}}}]}},\"example\":{\"quantity\":{\"dimension\":\"Mass\",\"value\":3,\"symbol\":\"oz\"}}},\"followDose\":{\"type\":\"object\",\"required\":[\"quantity\"],\"properties\":{\"quantity\":{\"oneOf\":[{\"type\":\"object\",\"required\":[\"value\",\"symbol\"],\"properties\":{\"dimension\":{\"type\":\"string\",\"enum\":[\"Mass\"],\"description\":\"must be Mass\",\"example\":\"Mass\"},\"value\":{\"type\":\"number\",\"description\":\"number of units\",\"default\":1,\"example\":50},\"symbol\":{\"description\":\"unit of mass or weight\",\"type\":\"string\",\"enum\":[\"lb\",\"t\",\"dwt\",\"gr\",\"mg\",\"mcg\",\"oz\",\"g\",\"kg\"],\"example\":\"kg\"}}},{\"type\":\"object\",\"required\":[\"value\",\"symbol\"],\"properties\":{\"dimension\":{\"type\":\"string\",\"description\":\"must be Volume\",\"example\":\"Volume\",\"enum\":[\"Volume\"]},\"value\":{\"type\":\"number\",\"description\":\"number of units\",\"example\":3},\"symbol\":{\"description\":\"unit of Volume\",\"type\":\"string\",\"example\":\"ml\",\"enum\":[\"pt\",\"tbsp\",\"µl\",\"nl\",\"oz\",\"dl\",\"ml\",\"qt\",\"L\",\"gal\",\"c\",\"tsp\"]}}},{\"type\":\"object\",\"required\":[\"value\",\"symbol\"],\"properties\":{\"dimension\":{\"type\":\"string\",\"description\":\"must be Dimensionless\",\"example\":\"Dimensionless\",\"enum\":[\"Dimensionless\"]},\"value\":{\"type\":\"number\",\"description\":\"number of units\",\"example\":3},\"symbol\":{\"description\":\"dimensionless unit (each)\",\"type\":\"string\",\"enum\":[\"ea\",\"%\",\"dz\"],\"example\":\"ea\"}}}]}},\"example\":{\"quantity\":{\"dimension\":\"Mass\",\"value\":3,\"symbol\":\"oz\"}}},\"perUnit\":{\"type\":\"object\",\"required\":[\"value\",\"symbol\"],\"properties\":{\"dimension\":{\"type\":\"string\",\"enum\":[\"Mass\"],\"description\":\"must be Mass\",\"example\":\"Mass\"},\"value\":{\"type\":\"number\",\"description\":\"number of units\",\"default\":1,\"example\":50},\"symbol\":{\"description\":\"unit of mass or weight\",\"type\":\"string\",\"enum\":[\"lb\",\"t\",\"dwt\",\"gr\",\"mg\",\"mcg\",\"oz\",\"g\",\"kg\"],\"example\":\"kg\"}}}},\"example\":{\"perUnit\":{\"dimension\":\"mass\",\"value\":1,\"symbol\":\"kg\"},\"followDose\":{\"quantity\":{\"dimension\":\"volume\",\"value\":3,\"symbol\":\"ml\"}},\"_type\":\"models.LoadingDoseByWeightFunction\",\"firstDose\":{\"quantity\":{\"dimension\":\"volume\",\"value\":6,\"symbol\":\"ml\"}}}},{\"type\":\"object\",\"description\":\"a range of permissible dose size. The User may select any value within the range (inclusive).\",\"required\":[\"_type\",\"range\"],\"properties\":{\"_type\":{\"type\":\"string\",\"enum\":[\"models.DoseRangeFunction\"],\"description\":\"class of Dose Function\",\"example\":\"models.DoseRangeFunction\"},\"range\":{\"type\":\"object\",\"required\":[\"min\",\"max\"],\"properties\":{\"min\":{\"type\":\"object\",\"required\":[\"quantity\"],\"properties\":{\"quantity\":{\"oneOf\":[{\"type\":\"object\",\"required\":[\"value\",\"symbol\"],\"properties\":{\"dimension\":{\"type\":\"string\",\"enum\":[\"Mass\"],\"description\":\"must be Mass\",\"example\":\"Mass\"},\"value\":{\"type\":\"number\",\"description\":\"number of units\",\"default\":1,\"example\":50},\"symbol\":{\"description\":\"unit of mass or weight\",\"type\":\"string\",\"enum\":[\"lb\",\"t\",\"dwt\",\"gr\",\"mg\",\"mcg\",\"oz\",\"g\",\"kg\"],\"example\":\"kg\"}}},{\"type\":\"object\",\"required\":[\"value\",\"symbol\"],\"properties\":{\"dimension\":{\"type\":\"string\",\"description\":\"must be Volume\",\"example\":\"Volume\",\"enum\":[\"Volume\"]},\"value\":{\"type\":\"number\",\"description\":\"number of units\",\"example\":3},\"symbol\":{\"description\":\"unit of Volume\",\"type\":\"string\",\"example\":\"ml\",\"enum\":[\"pt\",\"tbsp\",\"µl\",\"nl\",\"oz\",\"dl\",\"ml\",\"qt\",\"L\",\"gal\",\"c\",\"tsp\"]}}},{\"type\":\"object\",\"required\":[\"value\",\"symbol\"],\"properties\":{\"dimension\":{\"type\":\"string\",\"description\":\"must be Dimensionless\",\"example\":\"Dimensionless\",\"enum\":[\"Dimensionless\"]},\"value\":{\"type\":\"number\",\"description\":\"number of units\",\"example\":3},\"symbol\":{\"description\":\"dimensionless unit (each)\",\"type\":\"string\",\"enum\":[\"ea\",\"%\",\"dz\"],\"example\":\"ea\"}}}]}},\"example\":{\"quantity\":{\"dimension\":\"Mass\",\"value\":3,\"symbol\":\"oz\"}}},\"max\":{\"type\":\"object\",\"required\":[\"quantity\"],\"properties\":{\"quantity\":{\"oneOf\":[{\"type\":\"object\",\"required\":[\"value\",\"symbol\"],\"properties\":{\"dimension\":{\"type\":\"string\",\"enum\":[\"Mass\"],\"description\":\"must be Mass\",\"example\":\"Mass\"},\"value\":{\"type\":\"number\",\"description\":\"number of units\",\"default\":1,\"example\":50},\"symbol\":{\"description\":\"unit of mass or weight\",\"type\":\"string\",\"enum\":[\"lb\",\"t\",\"dwt\",\"gr\",\"mg\",\"mcg\",\"oz\",\"g\",\"kg\"],\"example\":\"kg\"}}},{\"type\":\"object\",\"required\":[\"value\",\"symbol\"],\"properties\":{\"dimension\":{\"type\":\"string\",\"description\":\"must be Volume\",\"example\":\"Volume\",\"enum\":[\"Volume\"]},\"value\":{\"type\":\"number\",\"description\":\"number of units\",\"example\":3},\"symbol\":{\"description\":\"unit of Volume\",\"type\":\"string\",\"example\":\"ml\",\"enum\":[\"pt\",\"tbsp\",\"µl\",\"nl\",\"oz\",\"dl\",\"ml\",\"qt\",\"L\",\"gal\",\"c\",\"tsp\"]}}},{\"type\":\"object\",\"required\":[\"value\",\"symbol\"],\"properties\":{\"dimension\":{\"type\":\"string\",\"description\":\"must be Dimensionless\",\"example\":\"Dimensionless\",\"enum\":[\"Dimensionless\"]},\"value\":{\"type\":\"number\",\"description\":\"number of units\",\"example\":3},\"symbol\":{\"description\":\"dimensionless unit (each)\",\"type\":\"string\",\"enum\":[\"ea\",\"%\",\"dz\"],\"example\":\"ea\"}}}]}},\"example\":{\"quantity\":{\"dimension\":\"Mass\",\"value\":3,\"symbol\":\"oz\"}}}},\"example\":{\"min\":{\"quantity\":{\"dimension\":\"Volume\",\"value\":3,\"symbol\":\"ml\"}},\"max\":{\"quantity\":{\"dimension\":\"Volume\",\"value\":345,\"symbol\":\"ml\"}}}}}},{\"type\":\"object\",\"description\":\"dose is specified as a range per unit of animal weight. The User may select any value within the range (inclusive).\",\"required\":[\"_type\",\"range\",\"perUnit\"],\"properties\":{\"_type\":{\"type\":\"string\",\"enum\":[\"models.DoseRangeByWeightFunction\"],\"description\":\"class of Dose Function\",\"example\":\"models.DoseRangeByWeightFunction\"},\"range\":{\"type\":\"object\",\"required\":[\"min\",\"max\"],\"properties\":{\"min\":{\"type\":\"object\",\"required\":[\"quantity\"],\"properties\":{\"quantity\":{\"oneOf\":[{\"type\":\"object\",\"required\":[\"value\",\"symbol\"],\"properties\":{\"dimension\":{\"type\":\"string\",\"enum\":[\"Mass\"],\"description\":\"must be Mass\",\"example\":\"Mass\"},\"value\":{\"type\":\"number\",\"description\":\"number of units\",\"default\":1,\"example\":50},\"symbol\":{\"description\":\"unit of mass or weight\",\"type\":\"string\",\"enum\":[\"lb\",\"t\",\"dwt\",\"gr\",\"mg\",\"mcg\",\"oz\",\"g\",\"kg\"],\"example\":\"kg\"}}},{\"type\":\"object\",\"required\":[\"value\",\"symbol\"],\"properties\":{\"dimension\":{\"type\":\"string\",\"description\":\"must be Volume\",\"example\":\"Volume\",\"enum\":[\"Volume\"]},\"value\":{\"type\":\"number\",\"description\":\"number of units\",\"example\":3},\"symbol\":{\"description\":\"unit of Volume\",\"type\":\"string\",\"example\":\"ml\",\"enum\":[\"pt\",\"tbsp\",\"µl\",\"nl\",\"oz\",\"dl\",\"ml\",\"qt\",\"L\",\"gal\",\"c\",\"tsp\"]}}},{\"type\":\"object\",\"required\":[\"value\",\"symbol\"],\"properties\":{\"dimension\":{\"type\":\"string\",\"description\":\"must be Dimensionless\",\"example\":\"Dimensionless\",\"enum\":[\"Dimensionless\"]},\"value\":{\"type\":\"number\",\"description\":\"number of units\",\"example\":3},\"symbol\":{\"description\":\"dimensionless unit (each)\",\"type\":\"string\",\"enum\":[\"ea\",\"%\",\"dz\"],\"example\":\"ea\"}}}]}},\"example\":{\"quantity\":{\"dimension\":\"Mass\",\"value\":3,\"symbol\":\"oz\"}}},\"max\":{\"type\":\"object\",\"required\":[\"quantity\"],\"properties\":{\"quantity\":{\"oneOf\":[{\"type\":\"object\",\"required\":[\"value\",\"symbol\"],\"properties\":{\"dimension\":{\"type\":\"string\",\"enum\":[\"Mass\"],\"description\":\"must be Mass\",\"example\":\"Mass\"},\"value\":{\"type\":\"number\",\"description\":\"number of units\",\"default\":1,\"example\":50},\"symbol\":{\"description\":\"unit of mass or weight\",\"type\":\"string\",\"enum\":[\"lb\",\"t\",\"dwt\",\"gr\",\"mg\",\"mcg\",\"oz\",\"g\",\"kg\"],\"example\":\"kg\"}}},{\"type\":\"object\",\"required\":[\"value\",\"symbol\"],\"properties\":{\"dimension\":{\"type\":\"string\",\"description\":\"must be Volume\",\"example\":\"Volume\",\"enum\":[\"Volume\"]},\"value\":{\"type\":\"number\",\"description\":\"number of units\",\"example\":3},\"symbol\":{\"description\":\"unit of Volume\",\"type\":\"string\",\"example\":\"ml\",\"enum\":[\"pt\",\"tbsp\",\"µl\",\"nl\",\"oz\",\"dl\",\"ml\",\"qt\",\"L\",\"gal\",\"c\",\"tsp\"]}}},{\"type\":\"object\",\"required\":[\"value\",\"symbol\"],\"properties\":{\"dimension\":{\"type\":\"string\",\"description\":\"must be Dimensionless\",\"example\":\"Dimensionless\",\"enum\":[\"Dimensionless\"]},\"value\":{\"type\":\"number\",\"description\":\"number of units\",\"example\":3},\"symbol\":{\"description\":\"dimensionless unit (each)\",\"type\":\"string\",\"enum\":[\"ea\",\"%\",\"dz\"],\"example\":\"ea\"}}}]}},\"example\":{\"quantity\":{\"dimension\":\"Mass\",\"value\":3,\"symbol\":\"oz\"}}}},\"example\":{\"min\":{\"quantity\":{\"dimension\":\"Volume\",\"value\":3,\"symbol\":\"ml\"}},\"max\":{\"quantity\":{\"dimension\":\"Volume\",\"value\":345,\"symbol\":\"ml\"}}}},\"perUnit\":{\"type\":\"object\",\"required\":[\"value\",\"symbol\"],\"properties\":{\"dimension\":{\"type\":\"string\",\"enum\":[\"Mass\"],\"description\":\"must be Mass\",\"example\":\"Mass\"},\"value\":{\"type\":\"number\",\"description\":\"number of units\",\"default\":1,\"example\":50},\"symbol\":{\"description\":\"unit of mass or weight\",\"type\":\"string\",\"enum\":[\"lb\",\"t\",\"dwt\",\"gr\",\"mg\",\"mcg\",\"oz\",\"g\",\"kg\"],\"example\":\"kg\"}}}},\"example\":{\"perUnit\":{\"dimension\":\"Mass\",\"value\":1,\"symbol\":\"kg\"},\"_type\":\"models.DoseRangeByWeightFunction\",\"range\":{\"min\":{\"quantity\":{\"dimension\":\"volume\",\"value\":3,\"symbol\":\"ml\"}},\"max\":{\"quantity\":{\"dimension\":\"volume\",\"value\":2,\"symbol\":\"ml\"}}}}}],\"discriminator\":{\"propertyName\":\"_type\",\"mapping\":{\"models.FixedDoseFunction\":\"#/components/schemas/FixedDoseFunction\",\"models.DoseByWeightFunction\":\"#/components/schemas/DoseByWeightFunction\",\"models.LoadingDoseByWeightFunction\":\"#/components/schemas/LoadingDoseByWeightFunction\",\"models.DoseRangeFunction\":\"#/components/schemas/DoseRangeFunction\",\"models.DoseRangeByWeightFunction\":\"#/components/schemas/SeqSeries\"}}}}}}}]}},\"discriminator\":{\"propertyName\":\"_type\",\"mapping\":{\"models.IdData\":\"#/components/schemas/IdData\",\"models.WeightData\":\"#/components/schemas/WeightData\",\"models.PreferredDoseData\":\"#/components/schemas/PreferredDoseData\",\"models.PrefDoseRateData\":\"#/components/schemas/PrefDoseRateData\",\"models.AnimalClassData\":\"#/components/schemas/AnimalClassData\"}}},\"promiseData\":{\"description\":\"promises attached to this case\",\"type\":\"array\",\"items\":{\"description\":\"An act which must be executed on or after enrollment of a Case to a Prescription\",\"type\":\"object\",\"required\":[\"_type\",\"name\",\"descrip\",\"query\",\"when\"],\"properties\":{\"_type\":{\"description\":\"Class of Promise\",\"type\":\"string\",\"example\":\"models.IdPromise\",\"enum\":[\"models.IdPromise\",\"models.AffirmationPromise\",\"models.BooleanPromise\",\"models.StringPromise\",\"models.MassPromise\",\"models.CategoryPromise\"]},\"id\":{\"description\":\"Promise ID number\",\"type\":\"integer\",\"example\":2345},\"name\":{\"description\":\"promise name for the doctor\",\"type\":\"string\",\"example\":\"ID promise\"},\"descrip\":{\"description\":\"promise description for the client\",\"type\":\"string\",\"example\":\"You must give ID for each case enrolled\"},\"query\":{\"description\":\"question to be answered by client\",\"type\":\"string\",\"format\":\"html\",\"example\":\"What is the animal's name or number?\"},\"when\":{\"description\":\"ISO-8601 duration from initiation when promise must be fulfilled\",\"type\":\"string\",\"format\":\"duration\",\"default\":\"PT0H\",\"example\":\"PT24H\"}},\"example\":\"promise\"}}}}}}\n\n// Validate if response matches JSON schema \npm.test(\"[POST]::/api/users/tasks - Schema is valid\", function() {\n    pm.response.to.have.jsonSchema(schema,{unknownFormats: [\"int32\", \"int64\", \"float\", \"double\"]});\n});\n"
                ]
              }
            }
          ],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        {
          "id": "175c31dc-c429-4cac-97e6-cd365a1489c0",
          "name": "list of cases by Rx",
          "request": {
            "name": "list of cases by Rx",
            "description": {
              "content": "Get all current cases for this Rx",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "api",
                "users",
                "tasks"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "GET"
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "347836a6-f3fc-463a-8697-1d369b7cd0b0",
                "type": "text/javascript",
                "exec": [
                  "// Validate status 2xx \npm.test(\"[GET]::/api/users/tasks - Status code is 2xx\", function () {\n   pm.response.to.be.success;\n});\n",
                  "// Validate response time \npm.test(\"[GET]::/api/users/tasks - Response time is less than 300ms\", function () {\n    pm.expect(pm.response.responseTime).to.be.below(300);\n});\n",
                  "// Validate if response header has matching content-type\npm.test(\"[GET]::/api/users/tasks - Content-Type is application/json\", function () {\n   pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"application/json\");\n});\n",
                  "// Validate if response has JSON Body \npm.test(\"[GET]::/api/users/tasks - Response has JSON Body\", function () {\n    pm.response.to.have.jsonBody();\n});\n",
                  "// Response Validation\nconst schema = {\"properties\":{\"cases\":{\"type\":\"array\",\"items\":{\"description\":\"A **_Case_** records use of a **_Prescription_** on an individual animal or group\",\"type\":\"object\",\"required\":[\"id\",\"rxId\",\"caseData\",\"promiseData\"],\"properties\":{\"id\":{\"description\":\"Case ID number\",\"type\":\"integer\",\"format\":\"int64\",\"default\":null,\"example\":123},\"rxId\":{\"type\":\"string\",\"description\":\"UUID identifying the prescription\",\"example\":\"gG3pBCR1GCMKm89c\"},\"caseData\":{\"description\":\"data for an individual Case\",\"type\":\"object\",\"properties\":{\"id\":{\"type\":\"integer\",\"example\":0,\"description\":\"ID number for the **_Case_**\"},\"rxId\":{\"type\":\"string\",\"description\":\"UUID identifying the prescription\",\"example\":\"gG3pBCR1GCMKm89c\"},\"caseData\":{\"oneOf\":[{\"type\":\"object\",\"description\":\"identifies animal or group treated in the **_Case_**\",\"properties\":{\"_type\":{\"type\":\"string\",\"description\":\"Class of CaseData\",\"enum\":[\"models.IdData\"],\"example\":\"models.IdData\"},\"animalId\":{\"type\":\"string\",\"description\":\"text description identifying the animal or group\",\"example\":\"Bossie\"},\"initiationTime\":{\"type\":\"string\",\"format\":\"date-time\",\"example\":\"2020-01-10T10:30:37.000Z\",\"description\":\"when the **_Case_** is initiated\"}}},{\"type\":\"object\",\"description\":\"specifies animal's weight\",\"properties\":{\"_type\":{\"type\":\"string\",\"description\":\"identifies subtype of CaseData\",\"enum\":[\"models.WeightData\"],\"example\":\"models.WeightData\"},\"animalId\":{\"type\":\"string\",\"description\":\"text description identifying the animal or group\",\"example\":\"Bossie\"},\"weight\":{\"type\":\"object\",\"required\":[\"value\",\"symbol\"],\"properties\":{\"dimension\":{\"type\":\"string\",\"enum\":[\"Mass\"],\"description\":\"must be Mass\",\"example\":\"Mass\"},\"value\":{\"type\":\"number\",\"description\":\"number of units\",\"default\":1,\"example\":50},\"symbol\":{\"description\":\"unit of mass or weight\",\"type\":\"string\",\"enum\":[\"lb\",\"t\",\"dwt\",\"gr\",\"mg\",\"mcg\",\"oz\",\"g\",\"kg\"],\"example\":\"kg\"}}},\"initiationTime\":{\"type\":\"string\",\"format\":\"date-time\",\"description\":\"when the **_Case_** is initiated\",\"example\":\"2020-01-10T10:30:37.000Z\"}}},{\"description\":\"animal identity and preferred dose\",\"type\":\"object\",\"required\":[\"animalId\",\"initiationTime\",\"preferredDose\"],\"properties\":{\"_type\":{\"description\":\"Class of CaseData\",\"type\":\"string\",\"enum\":[\"models.PreferredDoseData\"],\"example\":\"models.PrefDoseRateData\"},\"animalId\":{\"type\":\"string\",\"description\":\"text description identifying the animal or group\",\"example\":\"Bossie\"},\"preferredDose\":{\"type\":\"object\",\"required\":[\"quantity\"],\"properties\":{\"quantity\":{\"oneOf\":[{\"type\":\"object\",\"required\":[\"value\",\"symbol\"],\"properties\":{\"dimension\":{\"type\":\"string\",\"enum\":[\"Mass\"],\"description\":\"must be Mass\",\"example\":\"Mass\"},\"value\":{\"type\":\"number\",\"description\":\"number of units\",\"default\":1,\"example\":50},\"symbol\":{\"description\":\"unit of mass or weight\",\"type\":\"string\",\"enum\":[\"lb\",\"t\",\"dwt\",\"gr\",\"mg\",\"mcg\",\"oz\",\"g\",\"kg\"],\"example\":\"kg\"}}},{\"type\":\"object\",\"required\":[\"value\",\"symbol\"],\"properties\":{\"dimension\":{\"type\":\"string\",\"description\":\"must be Volume\",\"example\":\"Volume\",\"enum\":[\"Volume\"]},\"value\":{\"type\":\"number\",\"description\":\"number of units\",\"example\":3},\"symbol\":{\"description\":\"unit of Volume\",\"type\":\"string\",\"example\":\"ml\",\"enum\":[\"pt\",\"tbsp\",\"µl\",\"nl\",\"oz\",\"dl\",\"ml\",\"qt\",\"L\",\"gal\",\"c\",\"tsp\"]}}},{\"type\":\"object\",\"required\":[\"value\",\"symbol\"],\"properties\":{\"dimension\":{\"type\":\"string\",\"description\":\"must be Dimensionless\",\"example\":\"Dimensionless\",\"enum\":[\"Dimensionless\"]},\"value\":{\"type\":\"number\",\"description\":\"number of units\",\"example\":3},\"symbol\":{\"description\":\"dimensionless unit (each)\",\"type\":\"string\",\"enum\":[\"ea\",\"%\",\"dz\"],\"example\":\"ea\"}}}]}},\"example\":{\"quantity\":{\"dimension\":\"Mass\",\"value\":3,\"symbol\":\"oz\"}}},\"initiationTime\":{\"type\":\"string\",\"format\":\"date-time\",\"description\":\"when the **_Case_** is initiated\",\"example\":\"2020-04-10T10:30:37.000Z\"}}},{\"description\":\"weight of animal and preferred dose\",\"type\":\"object\",\"required\":[\"animalId\",\"initiationTime\",\"preferredDose\",\"weight\"],\"properties\":{\"_type\":{\"type\":\"string\",\"description\":\"identifies subtype of CaseData\",\"enum\":[\"models.PrefDoseRateData\"],\"example\":\"models.PrefDoseRateData\"},\"animalId\":{\"description\":\"text description identifying the animal or group\",\"type\":\"integer\",\"default\":null,\"example\":123},\"initiationTime\":{\"description\":\"when the **_Case_** is initiated\",\"type\":\"string\",\"format\":\"date-time\",\"example\":\"2020-01-10T10:30:37.000Z\"},\"weight\":{\"type\":\"object\",\"required\":[\"value\",\"symbol\"],\"properties\":{\"dimension\":{\"type\":\"string\",\"enum\":[\"Mass\"],\"description\":\"must be Mass\",\"example\":\"Mass\"},\"value\":{\"type\":\"number\",\"description\":\"number of units\",\"default\":1,\"example\":50},\"symbol\":{\"description\":\"unit of mass or weight\",\"type\":\"string\",\"enum\":[\"lb\",\"t\",\"dwt\",\"gr\",\"mg\",\"mcg\",\"oz\",\"g\",\"kg\"],\"example\":\"kg\"}}},\"preferredDose\":{\"type\":\"object\",\"required\":[\"quantity\"],\"properties\":{\"quantity\":{\"oneOf\":[{\"type\":\"object\",\"required\":[\"value\",\"symbol\"],\"properties\":{\"dimension\":{\"type\":\"string\",\"enum\":[\"Mass\"],\"description\":\"must be Mass\",\"example\":\"Mass\"},\"value\":{\"type\":\"number\",\"description\":\"number of units\",\"default\":1,\"example\":50},\"symbol\":{\"description\":\"unit of mass or weight\",\"type\":\"string\",\"enum\":[\"lb\",\"t\",\"dwt\",\"gr\",\"mg\",\"mcg\",\"oz\",\"g\",\"kg\"],\"example\":\"kg\"}}},{\"type\":\"object\",\"required\":[\"value\",\"symbol\"],\"properties\":{\"dimension\":{\"type\":\"string\",\"description\":\"must be Volume\",\"example\":\"Volume\",\"enum\":[\"Volume\"]},\"value\":{\"type\":\"number\",\"description\":\"number of units\",\"example\":3},\"symbol\":{\"description\":\"unit of Volume\",\"type\":\"string\",\"example\":\"ml\",\"enum\":[\"pt\",\"tbsp\",\"µl\",\"nl\",\"oz\",\"dl\",\"ml\",\"qt\",\"L\",\"gal\",\"c\",\"tsp\"]}}},{\"type\":\"object\",\"required\":[\"value\",\"symbol\"],\"properties\":{\"dimension\":{\"type\":\"string\",\"description\":\"must be Dimensionless\",\"example\":\"Dimensionless\",\"enum\":[\"Dimensionless\"]},\"value\":{\"type\":\"number\",\"description\":\"number of units\",\"example\":3},\"symbol\":{\"description\":\"dimensionless unit (each)\",\"type\":\"string\",\"enum\":[\"ea\",\"%\",\"dz\"],\"example\":\"ea\"}}}]}},\"example\":{\"quantity\":{\"dimension\":\"Mass\",\"value\":3,\"symbol\":\"oz\"}}}}},{\"description\":\"data for a class of animals\",\"type\":\"object\",\"required\":[\"animalId\",\"initiationTime\",\"animalClass\"],\"properties\":{\"_type\":{\"description\":\"Class of CaseData\",\"type\":\"string\",\"enum\":[\"models.AnimalClassData\"],\"example\":\"models.AnimalClassData\"},\"animalId\":{\"description\":\"text description identifying the animal or group\",\"type\":\"integer\",\"default\":null,\"example\":123},\"initiationTime\":{\"description\":\"when the **_Case_** is initiated\",\"type\":\"string\",\"format\":\"date-time\",\"example\":\"2020-01-10T10:30:37.000Z\"},\"animalClass\":{\"description\":\"a class of animals and a SizeFunction for dosing that class\",\"type\":\"object\",\"required\":[\"animalClass\",\"sizeFunction\"],\"properties\":{\"animalClass\":{\"type\":\"string\",\"description\":\"descrip\",\"example\":\"Jabberwocks\"},\"sizeFunction\":{\"description\":\"function to calculate dose size\",\"oneOf\":[{\"type\":\"object\",\"description\":\"a fixed quantity expressed in any available unit\",\"required\":[\"_type\",\"dose\"],\"properties\":{\"_type\":{\"type\":\"string\",\"description\":\"class of Dose Function\",\"enum\":[\"models.FixedDoseFunction\"],\"example\":\"models.FixedDoseFunction\"},\"dose\":{\"type\":\"object\",\"required\":[\"quantity\"],\"properties\":{\"quantity\":{\"oneOf\":[{\"type\":\"object\",\"required\":[\"value\",\"symbol\"],\"properties\":{\"dimension\":{\"type\":\"string\",\"enum\":[\"Mass\"],\"description\":\"must be Mass\",\"example\":\"Mass\"},\"value\":{\"type\":\"number\",\"description\":\"number of units\",\"default\":1,\"example\":50},\"symbol\":{\"description\":\"unit of mass or weight\",\"type\":\"string\",\"enum\":[\"lb\",\"t\",\"dwt\",\"gr\",\"mg\",\"mcg\",\"oz\",\"g\",\"kg\"],\"example\":\"kg\"}}},{\"type\":\"object\",\"required\":[\"value\",\"symbol\"],\"properties\":{\"dimension\":{\"type\":\"string\",\"description\":\"must be Volume\",\"example\":\"Volume\",\"enum\":[\"Volume\"]},\"value\":{\"type\":\"number\",\"description\":\"number of units\",\"example\":3},\"symbol\":{\"description\":\"unit of Volume\",\"type\":\"string\",\"example\":\"ml\",\"enum\":[\"pt\",\"tbsp\",\"µl\",\"nl\",\"oz\",\"dl\",\"ml\",\"qt\",\"L\",\"gal\",\"c\",\"tsp\"]}}},{\"type\":\"object\",\"required\":[\"value\",\"symbol\"],\"properties\":{\"dimension\":{\"type\":\"string\",\"description\":\"must be Dimensionless\",\"example\":\"Dimensionless\",\"enum\":[\"Dimensionless\"]},\"value\":{\"type\":\"number\",\"description\":\"number of units\",\"example\":3},\"symbol\":{\"description\":\"dimensionless unit (each)\",\"type\":\"string\",\"enum\":[\"ea\",\"%\",\"dz\"],\"example\":\"ea\"}}}]}},\"example\":{\"quantity\":{\"dimension\":\"Mass\",\"value\":3,\"symbol\":\"oz\"}}}},\"example\":{\"dose\":{\"quantity\":{\"dimension\":\"Volume\",\"value\":3,\"symbol\":\"ml\"}},\"_type\":\"models.FixedDoseFunction\"}},{\"type\":\"object\",\"description\":\"dose is specified as a quantity per unit of animal weight\",\"required\":[\"_type\",\"dose\",\"perUnit\"],\"properties\":{\"_type\":{\"type\":\"string\",\"description\":\"class of Dose Function\",\"example\":\"models.DoseByWeightFunction\",\"enum\":[\"models.DoseByWeightFunction\"]},\"dose\":{\"type\":\"object\",\"required\":[\"quantity\"],\"properties\":{\"quantity\":{\"oneOf\":[{\"type\":\"object\",\"required\":[\"value\",\"symbol\"],\"properties\":{\"dimension\":{\"type\":\"string\",\"enum\":[\"Mass\"],\"description\":\"must be Mass\",\"example\":\"Mass\"},\"value\":{\"type\":\"number\",\"description\":\"number of units\",\"default\":1,\"example\":50},\"symbol\":{\"description\":\"unit of mass or weight\",\"type\":\"string\",\"enum\":[\"lb\",\"t\",\"dwt\",\"gr\",\"mg\",\"mcg\",\"oz\",\"g\",\"kg\"],\"example\":\"kg\"}}},{\"type\":\"object\",\"required\":[\"value\",\"symbol\"],\"properties\":{\"dimension\":{\"type\":\"string\",\"description\":\"must be Volume\",\"example\":\"Volume\",\"enum\":[\"Volume\"]},\"value\":{\"type\":\"number\",\"description\":\"number of units\",\"example\":3},\"symbol\":{\"description\":\"unit of Volume\",\"type\":\"string\",\"example\":\"ml\",\"enum\":[\"pt\",\"tbsp\",\"µl\",\"nl\",\"oz\",\"dl\",\"ml\",\"qt\",\"L\",\"gal\",\"c\",\"tsp\"]}}},{\"type\":\"object\",\"required\":[\"value\",\"symbol\"],\"properties\":{\"dimension\":{\"type\":\"string\",\"description\":\"must be Dimensionless\",\"example\":\"Dimensionless\",\"enum\":[\"Dimensionless\"]},\"value\":{\"type\":\"number\",\"description\":\"number of units\",\"example\":3},\"symbol\":{\"description\":\"dimensionless unit (each)\",\"type\":\"string\",\"enum\":[\"ea\",\"%\",\"dz\"],\"example\":\"ea\"}}}]}},\"example\":{\"quantity\":{\"dimension\":\"Mass\",\"value\":3,\"symbol\":\"oz\"}}},\"perUnit\":{\"type\":\"object\",\"required\":[\"value\",\"symbol\"],\"properties\":{\"dimension\":{\"type\":\"string\",\"enum\":[\"Mass\"],\"description\":\"must be Mass\",\"example\":\"Mass\"},\"value\":{\"type\":\"number\",\"description\":\"number of units\",\"default\":1,\"example\":50},\"symbol\":{\"description\":\"unit of mass or weight\",\"type\":\"string\",\"enum\":[\"lb\",\"t\",\"dwt\",\"gr\",\"mg\",\"mcg\",\"oz\",\"g\",\"kg\"],\"example\":\"kg\"}}}},\"example\":{\"dose\":{\"quantity\":{\"dimension\":\"Volume\",\"value\":3,\"symbol\":\"ml\"}},\"perUnit\":{\"dimension\":\"Mass\",\"value\":1,\"symbol\":\"kg\"},\"_type\":\"models.DoseByWeightFunction\"}},{\"type\":\"object\",\"description\":\"dose is specified as first (loading) dose and following doses per unit of animal weight\",\"required\":[\"_type\",\"firstDose\",\"followDose\",\"perUnit\"],\"properties\":{\"_type\":{\"type\":\"string\",\"description\":\"class of Dose Function\",\"example\":\"DoseByWeightFunction\",\"enum\":[\"models.DoseByWeightFunction\"]},\"firstDose\":{\"type\":\"object\",\"required\":[\"quantity\"],\"properties\":{\"quantity\":{\"oneOf\":[{\"type\":\"object\",\"required\":[\"value\",\"symbol\"],\"properties\":{\"dimension\":{\"type\":\"string\",\"enum\":[\"Mass\"],\"description\":\"must be Mass\",\"example\":\"Mass\"},\"value\":{\"type\":\"number\",\"description\":\"number of units\",\"default\":1,\"example\":50},\"symbol\":{\"description\":\"unit of mass or weight\",\"type\":\"string\",\"enum\":[\"lb\",\"t\",\"dwt\",\"gr\",\"mg\",\"mcg\",\"oz\",\"g\",\"kg\"],\"example\":\"kg\"}}},{\"type\":\"object\",\"required\":[\"value\",\"symbol\"],\"properties\":{\"dimension\":{\"type\":\"string\",\"description\":\"must be Volume\",\"example\":\"Volume\",\"enum\":[\"Volume\"]},\"value\":{\"type\":\"number\",\"description\":\"number of units\",\"example\":3},\"symbol\":{\"description\":\"unit of Volume\",\"type\":\"string\",\"example\":\"ml\",\"enum\":[\"pt\",\"tbsp\",\"µl\",\"nl\",\"oz\",\"dl\",\"ml\",\"qt\",\"L\",\"gal\",\"c\",\"tsp\"]}}},{\"type\":\"object\",\"required\":[\"value\",\"symbol\"],\"properties\":{\"dimension\":{\"type\":\"string\",\"description\":\"must be Dimensionless\",\"example\":\"Dimensionless\",\"enum\":[\"Dimensionless\"]},\"value\":{\"type\":\"number\",\"description\":\"number of units\",\"example\":3},\"symbol\":{\"description\":\"dimensionless unit (each)\",\"type\":\"string\",\"enum\":[\"ea\",\"%\",\"dz\"],\"example\":\"ea\"}}}]}},\"example\":{\"quantity\":{\"dimension\":\"Mass\",\"value\":3,\"symbol\":\"oz\"}}},\"followDose\":{\"type\":\"object\",\"required\":[\"quantity\"],\"properties\":{\"quantity\":{\"oneOf\":[{\"type\":\"object\",\"required\":[\"value\",\"symbol\"],\"properties\":{\"dimension\":{\"type\":\"string\",\"enum\":[\"Mass\"],\"description\":\"must be Mass\",\"example\":\"Mass\"},\"value\":{\"type\":\"number\",\"description\":\"number of units\",\"default\":1,\"example\":50},\"symbol\":{\"description\":\"unit of mass or weight\",\"type\":\"string\",\"enum\":[\"lb\",\"t\",\"dwt\",\"gr\",\"mg\",\"mcg\",\"oz\",\"g\",\"kg\"],\"example\":\"kg\"}}},{\"type\":\"object\",\"required\":[\"value\",\"symbol\"],\"properties\":{\"dimension\":{\"type\":\"string\",\"description\":\"must be Volume\",\"example\":\"Volume\",\"enum\":[\"Volume\"]},\"value\":{\"type\":\"number\",\"description\":\"number of units\",\"example\":3},\"symbol\":{\"description\":\"unit of Volume\",\"type\":\"string\",\"example\":\"ml\",\"enum\":[\"pt\",\"tbsp\",\"µl\",\"nl\",\"oz\",\"dl\",\"ml\",\"qt\",\"L\",\"gal\",\"c\",\"tsp\"]}}},{\"type\":\"object\",\"required\":[\"value\",\"symbol\"],\"properties\":{\"dimension\":{\"type\":\"string\",\"description\":\"must be Dimensionless\",\"example\":\"Dimensionless\",\"enum\":[\"Dimensionless\"]},\"value\":{\"type\":\"number\",\"description\":\"number of units\",\"example\":3},\"symbol\":{\"description\":\"dimensionless unit (each)\",\"type\":\"string\",\"enum\":[\"ea\",\"%\",\"dz\"],\"example\":\"ea\"}}}]}},\"example\":{\"quantity\":{\"dimension\":\"Mass\",\"value\":3,\"symbol\":\"oz\"}}},\"perUnit\":{\"type\":\"object\",\"required\":[\"value\",\"symbol\"],\"properties\":{\"dimension\":{\"type\":\"string\",\"enum\":[\"Mass\"],\"description\":\"must be Mass\",\"example\":\"Mass\"},\"value\":{\"type\":\"number\",\"description\":\"number of units\",\"default\":1,\"example\":50},\"symbol\":{\"description\":\"unit of mass or weight\",\"type\":\"string\",\"enum\":[\"lb\",\"t\",\"dwt\",\"gr\",\"mg\",\"mcg\",\"oz\",\"g\",\"kg\"],\"example\":\"kg\"}}}},\"example\":{\"perUnit\":{\"dimension\":\"mass\",\"value\":1,\"symbol\":\"kg\"},\"followDose\":{\"quantity\":{\"dimension\":\"volume\",\"value\":3,\"symbol\":\"ml\"}},\"_type\":\"models.LoadingDoseByWeightFunction\",\"firstDose\":{\"quantity\":{\"dimension\":\"volume\",\"value\":6,\"symbol\":\"ml\"}}}},{\"type\":\"object\",\"description\":\"a range of permissible dose size. The User may select any value within the range (inclusive).\",\"required\":[\"_type\",\"range\"],\"properties\":{\"_type\":{\"type\":\"string\",\"enum\":[\"models.DoseRangeFunction\"],\"description\":\"class of Dose Function\",\"example\":\"models.DoseRangeFunction\"},\"range\":{\"type\":\"object\",\"required\":[\"min\",\"max\"],\"properties\":{\"min\":{\"type\":\"object\",\"required\":[\"quantity\"],\"properties\":{\"quantity\":{\"oneOf\":[{\"type\":\"object\",\"required\":[\"value\",\"symbol\"],\"properties\":{\"dimension\":{\"type\":\"string\",\"enum\":[\"Mass\"],\"description\":\"must be Mass\",\"example\":\"Mass\"},\"value\":{\"type\":\"number\",\"description\":\"number of units\",\"default\":1,\"example\":50},\"symbol\":{\"description\":\"unit of mass or weight\",\"type\":\"string\",\"enum\":[\"lb\",\"t\",\"dwt\",\"gr\",\"mg\",\"mcg\",\"oz\",\"g\",\"kg\"],\"example\":\"kg\"}}},{\"type\":\"object\",\"required\":[\"value\",\"symbol\"],\"properties\":{\"dimension\":{\"type\":\"string\",\"description\":\"must be Volume\",\"example\":\"Volume\",\"enum\":[\"Volume\"]},\"value\":{\"type\":\"number\",\"description\":\"number of units\",\"example\":3},\"symbol\":{\"description\":\"unit of Volume\",\"type\":\"string\",\"example\":\"ml\",\"enum\":[\"pt\",\"tbsp\",\"µl\",\"nl\",\"oz\",\"dl\",\"ml\",\"qt\",\"L\",\"gal\",\"c\",\"tsp\"]}}},{\"type\":\"object\",\"required\":[\"value\",\"symbol\"],\"properties\":{\"dimension\":{\"type\":\"string\",\"description\":\"must be Dimensionless\",\"example\":\"Dimensionless\",\"enum\":[\"Dimensionless\"]},\"value\":{\"type\":\"number\",\"description\":\"number of units\",\"example\":3},\"symbol\":{\"description\":\"dimensionless unit (each)\",\"type\":\"string\",\"enum\":[\"ea\",\"%\",\"dz\"],\"example\":\"ea\"}}}]}},\"example\":{\"quantity\":{\"dimension\":\"Mass\",\"value\":3,\"symbol\":\"oz\"}}},\"max\":{\"type\":\"object\",\"required\":[\"quantity\"],\"properties\":{\"quantity\":{\"oneOf\":[{\"type\":\"object\",\"required\":[\"value\",\"symbol\"],\"properties\":{\"dimension\":{\"type\":\"string\",\"enum\":[\"Mass\"],\"description\":\"must be Mass\",\"example\":\"Mass\"},\"value\":{\"type\":\"number\",\"description\":\"number of units\",\"default\":1,\"example\":50},\"symbol\":{\"description\":\"unit of mass or weight\",\"type\":\"string\",\"enum\":[\"lb\",\"t\",\"dwt\",\"gr\",\"mg\",\"mcg\",\"oz\",\"g\",\"kg\"],\"example\":\"kg\"}}},{\"type\":\"object\",\"required\":[\"value\",\"symbol\"],\"properties\":{\"dimension\":{\"type\":\"string\",\"description\":\"must be Volume\",\"example\":\"Volume\",\"enum\":[\"Volume\"]},\"value\":{\"type\":\"number\",\"description\":\"number of units\",\"example\":3},\"symbol\":{\"description\":\"unit of Volume\",\"type\":\"string\",\"example\":\"ml\",\"enum\":[\"pt\",\"tbsp\",\"µl\",\"nl\",\"oz\",\"dl\",\"ml\",\"qt\",\"L\",\"gal\",\"c\",\"tsp\"]}}},{\"type\":\"object\",\"required\":[\"value\",\"symbol\"],\"properties\":{\"dimension\":{\"type\":\"string\",\"description\":\"must be Dimensionless\",\"example\":\"Dimensionless\",\"enum\":[\"Dimensionless\"]},\"value\":{\"type\":\"number\",\"description\":\"number of units\",\"example\":3},\"symbol\":{\"description\":\"dimensionless unit (each)\",\"type\":\"string\",\"enum\":[\"ea\",\"%\",\"dz\"],\"example\":\"ea\"}}}]}},\"example\":{\"quantity\":{\"dimension\":\"Mass\",\"value\":3,\"symbol\":\"oz\"}}}},\"example\":{\"min\":{\"quantity\":{\"dimension\":\"Volume\",\"value\":3,\"symbol\":\"ml\"}},\"max\":{\"quantity\":{\"dimension\":\"Volume\",\"value\":345,\"symbol\":\"ml\"}}}}}},{\"type\":\"object\",\"description\":\"dose is specified as a range per unit of animal weight. The User may select any value within the range (inclusive).\",\"required\":[\"_type\",\"range\",\"perUnit\"],\"properties\":{\"_type\":{\"type\":\"string\",\"enum\":[\"models.DoseRangeByWeightFunction\"],\"description\":\"class of Dose Function\",\"example\":\"models.DoseRangeByWeightFunction\"},\"range\":{\"type\":\"object\",\"required\":[\"min\",\"max\"],\"properties\":{\"min\":{\"type\":\"object\",\"required\":[\"quantity\"],\"properties\":{\"quantity\":{\"oneOf\":[{\"type\":\"object\",\"required\":[\"value\",\"symbol\"],\"properties\":{\"dimension\":{\"type\":\"string\",\"enum\":[\"Mass\"],\"description\":\"must be Mass\",\"example\":\"Mass\"},\"value\":{\"type\":\"number\",\"description\":\"number of units\",\"default\":1,\"example\":50},\"symbol\":{\"description\":\"unit of mass or weight\",\"type\":\"string\",\"enum\":[\"lb\",\"t\",\"dwt\",\"gr\",\"mg\",\"mcg\",\"oz\",\"g\",\"kg\"],\"example\":\"kg\"}}},{\"type\":\"object\",\"required\":[\"value\",\"symbol\"],\"properties\":{\"dimension\":{\"type\":\"string\",\"description\":\"must be Volume\",\"example\":\"Volume\",\"enum\":[\"Volume\"]},\"value\":{\"type\":\"number\",\"description\":\"number of units\",\"example\":3},\"symbol\":{\"description\":\"unit of Volume\",\"type\":\"string\",\"example\":\"ml\",\"enum\":[\"pt\",\"tbsp\",\"µl\",\"nl\",\"oz\",\"dl\",\"ml\",\"qt\",\"L\",\"gal\",\"c\",\"tsp\"]}}},{\"type\":\"object\",\"required\":[\"value\",\"symbol\"],\"properties\":{\"dimension\":{\"type\":\"string\",\"description\":\"must be Dimensionless\",\"example\":\"Dimensionless\",\"enum\":[\"Dimensionless\"]},\"value\":{\"type\":\"number\",\"description\":\"number of units\",\"example\":3},\"symbol\":{\"description\":\"dimensionless unit (each)\",\"type\":\"string\",\"enum\":[\"ea\",\"%\",\"dz\"],\"example\":\"ea\"}}}]}},\"example\":{\"quantity\":{\"dimension\":\"Mass\",\"value\":3,\"symbol\":\"oz\"}}},\"max\":{\"type\":\"object\",\"required\":[\"quantity\"],\"properties\":{\"quantity\":{\"oneOf\":[{\"type\":\"object\",\"required\":[\"value\",\"symbol\"],\"properties\":{\"dimension\":{\"type\":\"string\",\"enum\":[\"Mass\"],\"description\":\"must be Mass\",\"example\":\"Mass\"},\"value\":{\"type\":\"number\",\"description\":\"number of units\",\"default\":1,\"example\":50},\"symbol\":{\"description\":\"unit of mass or weight\",\"type\":\"string\",\"enum\":[\"lb\",\"t\",\"dwt\",\"gr\",\"mg\",\"mcg\",\"oz\",\"g\",\"kg\"],\"example\":\"kg\"}}},{\"type\":\"object\",\"required\":[\"value\",\"symbol\"],\"properties\":{\"dimension\":{\"type\":\"string\",\"description\":\"must be Volume\",\"example\":\"Volume\",\"enum\":[\"Volume\"]},\"value\":{\"type\":\"number\",\"description\":\"number of units\",\"example\":3},\"symbol\":{\"description\":\"unit of Volume\",\"type\":\"string\",\"example\":\"ml\",\"enum\":[\"pt\",\"tbsp\",\"µl\",\"nl\",\"oz\",\"dl\",\"ml\",\"qt\",\"L\",\"gal\",\"c\",\"tsp\"]}}},{\"type\":\"object\",\"required\":[\"value\",\"symbol\"],\"properties\":{\"dimension\":{\"type\":\"string\",\"description\":\"must be Dimensionless\",\"example\":\"Dimensionless\",\"enum\":[\"Dimensionless\"]},\"value\":{\"type\":\"number\",\"description\":\"number of units\",\"example\":3},\"symbol\":{\"description\":\"dimensionless unit (each)\",\"type\":\"string\",\"enum\":[\"ea\",\"%\",\"dz\"],\"example\":\"ea\"}}}]}},\"example\":{\"quantity\":{\"dimension\":\"Mass\",\"value\":3,\"symbol\":\"oz\"}}}},\"example\":{\"min\":{\"quantity\":{\"dimension\":\"Volume\",\"value\":3,\"symbol\":\"ml\"}},\"max\":{\"quantity\":{\"dimension\":\"Volume\",\"value\":345,\"symbol\":\"ml\"}}}},\"perUnit\":{\"type\":\"object\",\"required\":[\"value\",\"symbol\"],\"properties\":{\"dimension\":{\"type\":\"string\",\"enum\":[\"Mass\"],\"description\":\"must be Mass\",\"example\":\"Mass\"},\"value\":{\"type\":\"number\",\"description\":\"number of units\",\"default\":1,\"example\":50},\"symbol\":{\"description\":\"unit of mass or weight\",\"type\":\"string\",\"enum\":[\"lb\",\"t\",\"dwt\",\"gr\",\"mg\",\"mcg\",\"oz\",\"g\",\"kg\"],\"example\":\"kg\"}}}},\"example\":{\"perUnit\":{\"dimension\":\"Mass\",\"value\":1,\"symbol\":\"kg\"},\"_type\":\"models.DoseRangeByWeightFunction\",\"range\":{\"min\":{\"quantity\":{\"dimension\":\"volume\",\"value\":3,\"symbol\":\"ml\"}},\"max\":{\"quantity\":{\"dimension\":\"volume\",\"value\":2,\"symbol\":\"ml\"}}}}}],\"discriminator\":{\"propertyName\":\"_type\",\"mapping\":{\"models.FixedDoseFunction\":\"#/components/schemas/FixedDoseFunction\",\"models.DoseByWeightFunction\":\"#/components/schemas/DoseByWeightFunction\",\"models.LoadingDoseByWeightFunction\":\"#/components/schemas/LoadingDoseByWeightFunction\",\"models.DoseRangeFunction\":\"#/components/schemas/DoseRangeFunction\",\"models.DoseRangeByWeightFunction\":\"#/components/schemas/SeqSeries\"}}}}}}}]}},\"discriminator\":{\"propertyName\":\"_type\",\"mapping\":{\"models.IdData\":\"#/components/schemas/IdData\",\"models.WeightData\":\"#/components/schemas/WeightData\",\"models.PreferredDoseData\":\"#/components/schemas/PreferredDoseData\",\"models.PrefDoseRateData\":\"#/components/schemas/PrefDoseRateData\",\"models.AnimalClassData\":\"#/components/schemas/AnimalClassData\"}}},\"promiseData\":{\"description\":\"promises attached to this case\",\"type\":\"array\",\"items\":{\"description\":\"An act which must be executed on or after enrollment of a Case to a Prescription\",\"type\":\"object\",\"required\":[\"_type\",\"name\",\"descrip\",\"query\",\"when\"],\"properties\":{\"_type\":{\"description\":\"Class of Promise\",\"type\":\"string\",\"example\":\"models.IdPromise\",\"enum\":[\"models.IdPromise\",\"models.AffirmationPromise\",\"models.BooleanPromise\",\"models.StringPromise\",\"models.MassPromise\",\"models.CategoryPromise\"]},\"id\":{\"description\":\"Promise ID number\",\"type\":\"integer\",\"example\":2345},\"name\":{\"description\":\"promise name for the doctor\",\"type\":\"string\",\"example\":\"ID promise\"},\"descrip\":{\"description\":\"promise description for the client\",\"type\":\"string\",\"example\":\"You must give ID for each case enrolled\"},\"query\":{\"description\":\"question to be answered by client\",\"type\":\"string\",\"format\":\"html\",\"example\":\"What is the animal's name or number?\"},\"when\":{\"description\":\"ISO-8601 duration from initiation when promise must be fulfilled\",\"type\":\"string\",\"format\":\"duration\",\"default\":\"PT0H\",\"example\":\"PT24H\"}},\"example\":\"promise\"}}}}}},\"type\":\"object\"}\n\n// Validate if response matches JSON schema \npm.test(\"[GET]::/api/users/tasks - Schema is valid\", function() {\n    pm.response.to.have.jsonSchema(schema,{unknownFormats: [\"int32\", \"int64\", \"float\", \"double\"]});\n});\n"
                ]
              }
            }
          ]
        },
        {
          "id": "227296c2-f768-419d-be07-c043b500c6a7",
          "name": "get Greenbook Drug summary by NDC pattern",
          "request": {
            "name": "get Greenbook Drug summary by NDC pattern",
            "description": {
              "content": "This endpoint returns the summary listing of a Greenbook Drug by NDC pattern.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "api",
                "admin",
                "product"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": false,
                  "description": {
                    "content": "first section labeler code of a NDC",
                    "type": "text/plain"
                  },
                  "key": "ndcProd",
                  "value": "-16056297"
                },
                {
                  "disabled": false,
                  "description": {
                    "content": "mid section product code of a NDC",
                    "type": "text/plain"
                  },
                  "key": "ndcLabeler",
                  "value": "-16056297"
                },
                {
                  "disabled": false,
                  "description": {
                    "content": "end section package code of a NDC",
                    "type": "text/plain"
                  },
                  "key": "ndcBrand",
                  "value": "-16056297"
                }
              ],
              "variable": []
            },
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "GET"
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "45aeeb08-2cf8-466b-81ce-9ef4421fc40f",
                "type": "text/javascript",
                "exec": [
                  "// Validate status 2xx \npm.test(\"[GET]::/api/admin/product - Status code is 2xx\", function () {\n   pm.response.to.be.success;\n});\n"
                ]
              }
            }
          ]
        },
        {
          "id": "5153a54d-b544-416c-b5b4-67424b32fb48",
          "name": "get summary listing of a Greenbook Drug",
          "request": {
            "name": "get summary listing of a Greenbook Drug",
            "description": {
              "content": "This endpoint returns the summary listing of a Greenbook Drug by ndc identifier.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "api",
                "admin",
                "product",
                ":ndc"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": [
                {
                  "disabled": false,
                  "description": {
                    "content": "(Required) unique 10-digit, 3-segment number. labelerCode-productCode-packageCode",
                    "type": "text/plain"
                  },
                  "type": "any",
                  "value": "0061-4321-03",
                  "key": "ndc"
                }
              ]
            },
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "GET"
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "7731ee24-4174-44f0-8dd1-a034c1a9064f",
                "type": "text/javascript",
                "exec": [
                  "// Validate status 2xx \npm.test(\"[GET]::/api/admin/product/:ndc - Status code is 2xx\", function () {\n   pm.response.to.be.success;\n});\n"
                ]
              }
            }
          ]
        }
      ],
      "event": []
    },
    {
      "id": "7dd286ea-a227-4933-b4d6-994f8c1bad19",
      "name": "MOR",
      "description": {
        "content": "available to farm managers.",
        "type": "text/plain"
      },
      "item": [
        {
          "id": "10fd1b7b-50a4-4f4b-83ac-5fb1cf11637f",
          "name": "load Farm App",
          "request": {
            "name": "load Farm App",
            "description": {
              "content": "load Farm App",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "farm"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Accept",
                "value": "text/html"
              }
            ],
            "method": "GET"
          },
          "response": [],
          "event": []
        },
        {
          "id": "1b30cc94-8fef-4708-90fb-631b702e5212",
          "name": "withholds",
          "request": {
            "name": "withholds",
            "description": {
              "content": "get withholds that include present or future time.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "api",
                "users",
                "withholds"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "GET"
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "91563f29-2cb0-40f1-8498-13d7af6ce8b7",
                "type": "text/javascript",
                "exec": [
                  "// Validate status 2xx \npm.test(\"[GET]::/api/users/withholds - Status code is 2xx\", function () {\n   pm.response.to.be.success;\n});\n",
                  "// Validate response time \npm.test(\"[GET]::/api/users/withholds - Response time is less than 300ms\", function () {\n    pm.expect(pm.response.responseTime).to.be.below(300);\n});\n",
                  "// Validate if response header has matching content-type\npm.test(\"[GET]::/api/users/withholds - Content-Type is application/json\", function () {\n   pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"application/json\");\n});\n",
                  "// Validate if response has JSON Body \npm.test(\"[GET]::/api/users/withholds - Response has JSON Body\", function () {\n    pm.response.to.have.jsonBody();\n});\n",
                  "// Response Validation\nconst schema = {\"properties\":{\"labels\":{\"type\":\"array\",\"items\":{\"description\":\"a time before which meat or milk may not be sold.\",\"type\":\"object\",\"required\":[\"id\",\"caseId\",\"animalId\",\"initiated\",\"wtMeatUntil\",\"wtMilkUntil\"],\"properties\":{\"id\":{\"type\":\"integer\",\"description\":\"key for withhold\"},\"caseId\":{\"type\":\"integer\",\"description\":\"key identifying Case\"},\"animalId\":{\"type\":\"string\",\"description\":\"key identifying animal or group\",\"example\":\"Bossie\"},\"initiated\":{\"type\":\"string\",\"format\":\"date-time\",\"description\":\"when the Withhold was initiated\"},\"wtMeatUntil\":{\"type\":\"string\",\"format\":\"date-time\",\"description\":\"when the Withhold ends for meat products\"},\"wtMilkUntil\":{\"type\":\"string\",\"format\":\"date-time\",\"description\":\"when the Withhold ends for milk\"},\"note\":{\"type\":\"string\",\"description\":\"note\"}}}}},\"type\":\"object\"}\n\n// Validate if response matches JSON schema \npm.test(\"[GET]::/api/users/withholds - Schema is valid\", function() {\n    pm.response.to.have.jsonSchema(schema,{unknownFormats: [\"int32\", \"int64\", \"float\", \"double\"]});\n});\n"
                ]
              }
            }
          ]
        },
        {
          "id": "580a08f3-cfb3-43af-b880-976409b7ac55",
          "name": "recall or decline a prescription",
          "request": {
            "name": "recall or decline a prescription",
            "description": {
              "content": "Prescriptions are immutable except for metadata, and cannot actually be deleted. This endpoint makes a prescription unavailable for use. If called by the VOR, it sets staus to RECALLED. If called by the MOR to whom it is prescribed, it sets status to DECLINED. New cases  cannot be enrolled if either RECALLED or DECLIENED.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "api",
                "prescriptions",
                ":id",
                ""
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": [
                {
                  "disabled": false,
                  "description": {
                    "content": "(Required) Prescription identifier",
                    "type": "text/plain"
                  },
                  "type": "any",
                  "value": "pariatur non irure in",
                  "key": "key"
                }
              ]
            },
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "DELETE"
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "39be7bbd-0de5-4e45-b4ac-080f7b2ef34c",
                "type": "text/javascript",
                "exec": [
                  "// Validate status 2xx \npm.test(\"[DELETE]::/api/prescriptions/:id/ - Status code is 2xx\", function () {\n   pm.response.to.be.success;\n});\n"
                ]
              }
            }
          ]
        },
        {
          "id": "2562987b-107a-4743-b68a-dd3721439a8a",
          "name": "enroll case",
          "request": {
            "name": "enroll case",
            "description": {
              "content": "Creates a Case linked to a prescription.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "api",
                "cases"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n  \"id\": 123,\n  \"rxId\": \"gG3pBCR1GCMKm89c\",\n  \"caseData\": {\n    \"id\": 0,\n    \"rxId\": \"gG3pBCR1GCMKm89c\",\n    \"caseData\": {\n      \"_type\": \"models.IdData\",\n      \"animalId\": \"Bossie\",\n      \"initiationTime\": \"1964-09-02T17:57:02.876Z\"\n    }\n  },\n  \"promiseData\": [\n    {\n      \"_type\": \"models.IdPromise\",\n      \"name\": \"ID promise\",\n      \"descrip\": \"You must give ID for each case enrolled\",\n      \"query\": \"What is the animal's name or number?\",\n      \"when\": \"PT0H\",\n      \"id\": 2345\n    },\n    {\n      \"_type\": \"models.IdPromise\",\n      \"name\": \"ID promise\",\n      \"descrip\": \"You must give ID for each case enrolled\",\n      \"query\": \"What is the animal's name or number?\",\n      \"when\": \"PT0H\",\n      \"id\": 2345\n    }\n  ]\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "1d259770-8058-4eaa-884f-2ac58d7850e8",
                "type": "text/javascript",
                "exec": [
                  "// Validate status 2xx \npm.test(\"[POST]::/api/cases - Status code is 2xx\", function () {\n   pm.response.to.be.success;\n});\n"
                ]
              }
            }
          ],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        {
          "id": "1e9ba1a4-1075-4b2b-ad83-7de96ab85986",
          "name": "execute task",
          "request": {
            "name": "execute task",
            "description": {
              "content": "Mark task status as completed",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "api",
                "users",
                "tasks"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n  \"_type\": \"Ut voluptate\",\n  \"animalId\": \"this\",\n  \"caseId\": 123,\n  \"detail\": \"do veniam elit fugiat id\",\n  \"doAt\": \"1958-04-22T08:21:27.084Z\",\n  \"id\": 123,\n  \"morId\": 123,\n  \"status\": \"REQUIRED\",\n  \"vorId\": 123,\n  \"executor\": 123\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "cf11214b-0d2c-4891-95dc-775f8e7eb229",
                "type": "text/javascript",
                "exec": [
                  "// Validate status 2xx \npm.test(\"[POST]::/api/users/tasks - Status code is 2xx\", function () {\n   pm.response.to.be.success;\n});\n",
                  "// Validate response time \npm.test(\"[POST]::/api/users/tasks - Response time is less than 300ms\", function () {\n    pm.expect(pm.response.responseTime).to.be.below(300);\n});\n",
                  "// Validate if response header has matching content-type\npm.test(\"[POST]::/api/users/tasks - Content-Type is application/json\", function () {\n   pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"application/json\");\n});\n",
                  "// Validate if response has JSON Body \npm.test(\"[POST]::/api/users/tasks - Response has JSON Body\", function () {\n    pm.response.to.have.jsonBody();\n});\n",
                  "// Response Validation\nconst schema = {\"type\":\"object\",\"properties\":{\"case\":{\"description\":\"A **_Case_** records use of a **_Prescription_** on an individual animal or group\",\"type\":\"object\",\"required\":[\"id\",\"rxId\",\"caseData\",\"promiseData\"],\"properties\":{\"id\":{\"description\":\"Case ID number\",\"type\":\"integer\",\"format\":\"int64\",\"default\":null,\"example\":123},\"rxId\":{\"type\":\"string\",\"description\":\"UUID identifying the prescription\",\"example\":\"gG3pBCR1GCMKm89c\"},\"caseData\":{\"description\":\"data for an individual Case\",\"type\":\"object\",\"properties\":{\"id\":{\"type\":\"integer\",\"example\":0,\"description\":\"ID number for the **_Case_**\"},\"rxId\":{\"type\":\"string\",\"description\":\"UUID identifying the prescription\",\"example\":\"gG3pBCR1GCMKm89c\"},\"caseData\":{\"oneOf\":[{\"type\":\"object\",\"description\":\"identifies animal or group treated in the **_Case_**\",\"properties\":{\"_type\":{\"type\":\"string\",\"description\":\"Class of CaseData\",\"enum\":[\"models.IdData\"],\"example\":\"models.IdData\"},\"animalId\":{\"type\":\"string\",\"description\":\"text description identifying the animal or group\",\"example\":\"Bossie\"},\"initiationTime\":{\"type\":\"string\",\"format\":\"date-time\",\"example\":\"2020-01-10T10:30:37.000Z\",\"description\":\"when the **_Case_** is initiated\"}}},{\"type\":\"object\",\"description\":\"specifies animal's weight\",\"properties\":{\"_type\":{\"type\":\"string\",\"description\":\"identifies subtype of CaseData\",\"enum\":[\"models.WeightData\"],\"example\":\"models.WeightData\"},\"animalId\":{\"type\":\"string\",\"description\":\"text description identifying the animal or group\",\"example\":\"Bossie\"},\"weight\":{\"type\":\"object\",\"required\":[\"value\",\"symbol\"],\"properties\":{\"dimension\":{\"type\":\"string\",\"enum\":[\"Mass\"],\"description\":\"must be Mass\",\"example\":\"Mass\"},\"value\":{\"type\":\"number\",\"description\":\"number of units\",\"default\":1,\"example\":50},\"symbol\":{\"description\":\"unit of mass or weight\",\"type\":\"string\",\"enum\":[\"lb\",\"t\",\"dwt\",\"gr\",\"mg\",\"mcg\",\"oz\",\"g\",\"kg\"],\"example\":\"kg\"}}},\"initiationTime\":{\"type\":\"string\",\"format\":\"date-time\",\"description\":\"when the **_Case_** is initiated\",\"example\":\"2020-01-10T10:30:37.000Z\"}}},{\"description\":\"animal identity and preferred dose\",\"type\":\"object\",\"required\":[\"animalId\",\"initiationTime\",\"preferredDose\"],\"properties\":{\"_type\":{\"description\":\"Class of CaseData\",\"type\":\"string\",\"enum\":[\"models.PreferredDoseData\"],\"example\":\"models.PrefDoseRateData\"},\"animalId\":{\"type\":\"string\",\"description\":\"text description identifying the animal or group\",\"example\":\"Bossie\"},\"preferredDose\":{\"type\":\"object\",\"required\":[\"quantity\"],\"properties\":{\"quantity\":{\"oneOf\":[{\"type\":\"object\",\"required\":[\"value\",\"symbol\"],\"properties\":{\"dimension\":{\"type\":\"string\",\"enum\":[\"Mass\"],\"description\":\"must be Mass\",\"example\":\"Mass\"},\"value\":{\"type\":\"number\",\"description\":\"number of units\",\"default\":1,\"example\":50},\"symbol\":{\"description\":\"unit of mass or weight\",\"type\":\"string\",\"enum\":[\"lb\",\"t\",\"dwt\",\"gr\",\"mg\",\"mcg\",\"oz\",\"g\",\"kg\"],\"example\":\"kg\"}}},{\"type\":\"object\",\"required\":[\"value\",\"symbol\"],\"properties\":{\"dimension\":{\"type\":\"string\",\"description\":\"must be Volume\",\"example\":\"Volume\",\"enum\":[\"Volume\"]},\"value\":{\"type\":\"number\",\"description\":\"number of units\",\"example\":3},\"symbol\":{\"description\":\"unit of Volume\",\"type\":\"string\",\"example\":\"ml\",\"enum\":[\"pt\",\"tbsp\",\"µl\",\"nl\",\"oz\",\"dl\",\"ml\",\"qt\",\"L\",\"gal\",\"c\",\"tsp\"]}}},{\"type\":\"object\",\"required\":[\"value\",\"symbol\"],\"properties\":{\"dimension\":{\"type\":\"string\",\"description\":\"must be Dimensionless\",\"example\":\"Dimensionless\",\"enum\":[\"Dimensionless\"]},\"value\":{\"type\":\"number\",\"description\":\"number of units\",\"example\":3},\"symbol\":{\"description\":\"dimensionless unit (each)\",\"type\":\"string\",\"enum\":[\"ea\",\"%\",\"dz\"],\"example\":\"ea\"}}}]}},\"example\":{\"quantity\":{\"dimension\":\"Mass\",\"value\":3,\"symbol\":\"oz\"}}},\"initiationTime\":{\"type\":\"string\",\"format\":\"date-time\",\"description\":\"when the **_Case_** is initiated\",\"example\":\"2020-04-10T10:30:37.000Z\"}}},{\"description\":\"weight of animal and preferred dose\",\"type\":\"object\",\"required\":[\"animalId\",\"initiationTime\",\"preferredDose\",\"weight\"],\"properties\":{\"_type\":{\"type\":\"string\",\"description\":\"identifies subtype of CaseData\",\"enum\":[\"models.PrefDoseRateData\"],\"example\":\"models.PrefDoseRateData\"},\"animalId\":{\"description\":\"text description identifying the animal or group\",\"type\":\"integer\",\"default\":null,\"example\":123},\"initiationTime\":{\"description\":\"when the **_Case_** is initiated\",\"type\":\"string\",\"format\":\"date-time\",\"example\":\"2020-01-10T10:30:37.000Z\"},\"weight\":{\"type\":\"object\",\"required\":[\"value\",\"symbol\"],\"properties\":{\"dimension\":{\"type\":\"string\",\"enum\":[\"Mass\"],\"description\":\"must be Mass\",\"example\":\"Mass\"},\"value\":{\"type\":\"number\",\"description\":\"number of units\",\"default\":1,\"example\":50},\"symbol\":{\"description\":\"unit of mass or weight\",\"type\":\"string\",\"enum\":[\"lb\",\"t\",\"dwt\",\"gr\",\"mg\",\"mcg\",\"oz\",\"g\",\"kg\"],\"example\":\"kg\"}}},\"preferredDose\":{\"type\":\"object\",\"required\":[\"quantity\"],\"properties\":{\"quantity\":{\"oneOf\":[{\"type\":\"object\",\"required\":[\"value\",\"symbol\"],\"properties\":{\"dimension\":{\"type\":\"string\",\"enum\":[\"Mass\"],\"description\":\"must be Mass\",\"example\":\"Mass\"},\"value\":{\"type\":\"number\",\"description\":\"number of units\",\"default\":1,\"example\":50},\"symbol\":{\"description\":\"unit of mass or weight\",\"type\":\"string\",\"enum\":[\"lb\",\"t\",\"dwt\",\"gr\",\"mg\",\"mcg\",\"oz\",\"g\",\"kg\"],\"example\":\"kg\"}}},{\"type\":\"object\",\"required\":[\"value\",\"symbol\"],\"properties\":{\"dimension\":{\"type\":\"string\",\"description\":\"must be Volume\",\"example\":\"Volume\",\"enum\":[\"Volume\"]},\"value\":{\"type\":\"number\",\"description\":\"number of units\",\"example\":3},\"symbol\":{\"description\":\"unit of Volume\",\"type\":\"string\",\"example\":\"ml\",\"enum\":[\"pt\",\"tbsp\",\"µl\",\"nl\",\"oz\",\"dl\",\"ml\",\"qt\",\"L\",\"gal\",\"c\",\"tsp\"]}}},{\"type\":\"object\",\"required\":[\"value\",\"symbol\"],\"properties\":{\"dimension\":{\"type\":\"string\",\"description\":\"must be Dimensionless\",\"example\":\"Dimensionless\",\"enum\":[\"Dimensionless\"]},\"value\":{\"type\":\"number\",\"description\":\"number of units\",\"example\":3},\"symbol\":{\"description\":\"dimensionless unit (each)\",\"type\":\"string\",\"enum\":[\"ea\",\"%\",\"dz\"],\"example\":\"ea\"}}}]}},\"example\":{\"quantity\":{\"dimension\":\"Mass\",\"value\":3,\"symbol\":\"oz\"}}}}},{\"description\":\"data for a class of animals\",\"type\":\"object\",\"required\":[\"animalId\",\"initiationTime\",\"animalClass\"],\"properties\":{\"_type\":{\"description\":\"Class of CaseData\",\"type\":\"string\",\"enum\":[\"models.AnimalClassData\"],\"example\":\"models.AnimalClassData\"},\"animalId\":{\"description\":\"text description identifying the animal or group\",\"type\":\"integer\",\"default\":null,\"example\":123},\"initiationTime\":{\"description\":\"when the **_Case_** is initiated\",\"type\":\"string\",\"format\":\"date-time\",\"example\":\"2020-01-10T10:30:37.000Z\"},\"animalClass\":{\"description\":\"a class of animals and a SizeFunction for dosing that class\",\"type\":\"object\",\"required\":[\"animalClass\",\"sizeFunction\"],\"properties\":{\"animalClass\":{\"type\":\"string\",\"description\":\"descrip\",\"example\":\"Jabberwocks\"},\"sizeFunction\":{\"description\":\"function to calculate dose size\",\"oneOf\":[{\"type\":\"object\",\"description\":\"a fixed quantity expressed in any available unit\",\"required\":[\"_type\",\"dose\"],\"properties\":{\"_type\":{\"type\":\"string\",\"description\":\"class of Dose Function\",\"enum\":[\"models.FixedDoseFunction\"],\"example\":\"models.FixedDoseFunction\"},\"dose\":{\"type\":\"object\",\"required\":[\"quantity\"],\"properties\":{\"quantity\":{\"oneOf\":[{\"type\":\"object\",\"required\":[\"value\",\"symbol\"],\"properties\":{\"dimension\":{\"type\":\"string\",\"enum\":[\"Mass\"],\"description\":\"must be Mass\",\"example\":\"Mass\"},\"value\":{\"type\":\"number\",\"description\":\"number of units\",\"default\":1,\"example\":50},\"symbol\":{\"description\":\"unit of mass or weight\",\"type\":\"string\",\"enum\":[\"lb\",\"t\",\"dwt\",\"gr\",\"mg\",\"mcg\",\"oz\",\"g\",\"kg\"],\"example\":\"kg\"}}},{\"type\":\"object\",\"required\":[\"value\",\"symbol\"],\"properties\":{\"dimension\":{\"type\":\"string\",\"description\":\"must be Volume\",\"example\":\"Volume\",\"enum\":[\"Volume\"]},\"value\":{\"type\":\"number\",\"description\":\"number of units\",\"example\":3},\"symbol\":{\"description\":\"unit of Volume\",\"type\":\"string\",\"example\":\"ml\",\"enum\":[\"pt\",\"tbsp\",\"µl\",\"nl\",\"oz\",\"dl\",\"ml\",\"qt\",\"L\",\"gal\",\"c\",\"tsp\"]}}},{\"type\":\"object\",\"required\":[\"value\",\"symbol\"],\"properties\":{\"dimension\":{\"type\":\"string\",\"description\":\"must be Dimensionless\",\"example\":\"Dimensionless\",\"enum\":[\"Dimensionless\"]},\"value\":{\"type\":\"number\",\"description\":\"number of units\",\"example\":3},\"symbol\":{\"description\":\"dimensionless unit (each)\",\"type\":\"string\",\"enum\":[\"ea\",\"%\",\"dz\"],\"example\":\"ea\"}}}]}},\"example\":{\"quantity\":{\"dimension\":\"Mass\",\"value\":3,\"symbol\":\"oz\"}}}},\"example\":{\"dose\":{\"quantity\":{\"dimension\":\"Volume\",\"value\":3,\"symbol\":\"ml\"}},\"_type\":\"models.FixedDoseFunction\"}},{\"type\":\"object\",\"description\":\"dose is specified as a quantity per unit of animal weight\",\"required\":[\"_type\",\"dose\",\"perUnit\"],\"properties\":{\"_type\":{\"type\":\"string\",\"description\":\"class of Dose Function\",\"example\":\"models.DoseByWeightFunction\",\"enum\":[\"models.DoseByWeightFunction\"]},\"dose\":{\"type\":\"object\",\"required\":[\"quantity\"],\"properties\":{\"quantity\":{\"oneOf\":[{\"type\":\"object\",\"required\":[\"value\",\"symbol\"],\"properties\":{\"dimension\":{\"type\":\"string\",\"enum\":[\"Mass\"],\"description\":\"must be Mass\",\"example\":\"Mass\"},\"value\":{\"type\":\"number\",\"description\":\"number of units\",\"default\":1,\"example\":50},\"symbol\":{\"description\":\"unit of mass or weight\",\"type\":\"string\",\"enum\":[\"lb\",\"t\",\"dwt\",\"gr\",\"mg\",\"mcg\",\"oz\",\"g\",\"kg\"],\"example\":\"kg\"}}},{\"type\":\"object\",\"required\":[\"value\",\"symbol\"],\"properties\":{\"dimension\":{\"type\":\"string\",\"description\":\"must be Volume\",\"example\":\"Volume\",\"enum\":[\"Volume\"]},\"value\":{\"type\":\"number\",\"description\":\"number of units\",\"example\":3},\"symbol\":{\"description\":\"unit of Volume\",\"type\":\"string\",\"example\":\"ml\",\"enum\":[\"pt\",\"tbsp\",\"µl\",\"nl\",\"oz\",\"dl\",\"ml\",\"qt\",\"L\",\"gal\",\"c\",\"tsp\"]}}},{\"type\":\"object\",\"required\":[\"value\",\"symbol\"],\"properties\":{\"dimension\":{\"type\":\"string\",\"description\":\"must be Dimensionless\",\"example\":\"Dimensionless\",\"enum\":[\"Dimensionless\"]},\"value\":{\"type\":\"number\",\"description\":\"number of units\",\"example\":3},\"symbol\":{\"description\":\"dimensionless unit (each)\",\"type\":\"string\",\"enum\":[\"ea\",\"%\",\"dz\"],\"example\":\"ea\"}}}]}},\"example\":{\"quantity\":{\"dimension\":\"Mass\",\"value\":3,\"symbol\":\"oz\"}}},\"perUnit\":{\"type\":\"object\",\"required\":[\"value\",\"symbol\"],\"properties\":{\"dimension\":{\"type\":\"string\",\"enum\":[\"Mass\"],\"description\":\"must be Mass\",\"example\":\"Mass\"},\"value\":{\"type\":\"number\",\"description\":\"number of units\",\"default\":1,\"example\":50},\"symbol\":{\"description\":\"unit of mass or weight\",\"type\":\"string\",\"enum\":[\"lb\",\"t\",\"dwt\",\"gr\",\"mg\",\"mcg\",\"oz\",\"g\",\"kg\"],\"example\":\"kg\"}}}},\"example\":{\"dose\":{\"quantity\":{\"dimension\":\"Volume\",\"value\":3,\"symbol\":\"ml\"}},\"perUnit\":{\"dimension\":\"Mass\",\"value\":1,\"symbol\":\"kg\"},\"_type\":\"models.DoseByWeightFunction\"}},{\"type\":\"object\",\"description\":\"dose is specified as first (loading) dose and following doses per unit of animal weight\",\"required\":[\"_type\",\"firstDose\",\"followDose\",\"perUnit\"],\"properties\":{\"_type\":{\"type\":\"string\",\"description\":\"class of Dose Function\",\"example\":\"DoseByWeightFunction\",\"enum\":[\"models.DoseByWeightFunction\"]},\"firstDose\":{\"type\":\"object\",\"required\":[\"quantity\"],\"properties\":{\"quantity\":{\"oneOf\":[{\"type\":\"object\",\"required\":[\"value\",\"symbol\"],\"properties\":{\"dimension\":{\"type\":\"string\",\"enum\":[\"Mass\"],\"description\":\"must be Mass\",\"example\":\"Mass\"},\"value\":{\"type\":\"number\",\"description\":\"number of units\",\"default\":1,\"example\":50},\"symbol\":{\"description\":\"unit of mass or weight\",\"type\":\"string\",\"enum\":[\"lb\",\"t\",\"dwt\",\"gr\",\"mg\",\"mcg\",\"oz\",\"g\",\"kg\"],\"example\":\"kg\"}}},{\"type\":\"object\",\"required\":[\"value\",\"symbol\"],\"properties\":{\"dimension\":{\"type\":\"string\",\"description\":\"must be Volume\",\"example\":\"Volume\",\"enum\":[\"Volume\"]},\"value\":{\"type\":\"number\",\"description\":\"number of units\",\"example\":3},\"symbol\":{\"description\":\"unit of Volume\",\"type\":\"string\",\"example\":\"ml\",\"enum\":[\"pt\",\"tbsp\",\"µl\",\"nl\",\"oz\",\"dl\",\"ml\",\"qt\",\"L\",\"gal\",\"c\",\"tsp\"]}}},{\"type\":\"object\",\"required\":[\"value\",\"symbol\"],\"properties\":{\"dimension\":{\"type\":\"string\",\"description\":\"must be Dimensionless\",\"example\":\"Dimensionless\",\"enum\":[\"Dimensionless\"]},\"value\":{\"type\":\"number\",\"description\":\"number of units\",\"example\":3},\"symbol\":{\"description\":\"dimensionless unit (each)\",\"type\":\"string\",\"enum\":[\"ea\",\"%\",\"dz\"],\"example\":\"ea\"}}}]}},\"example\":{\"quantity\":{\"dimension\":\"Mass\",\"value\":3,\"symbol\":\"oz\"}}},\"followDose\":{\"type\":\"object\",\"required\":[\"quantity\"],\"properties\":{\"quantity\":{\"oneOf\":[{\"type\":\"object\",\"required\":[\"value\",\"symbol\"],\"properties\":{\"dimension\":{\"type\":\"string\",\"enum\":[\"Mass\"],\"description\":\"must be Mass\",\"example\":\"Mass\"},\"value\":{\"type\":\"number\",\"description\":\"number of units\",\"default\":1,\"example\":50},\"symbol\":{\"description\":\"unit of mass or weight\",\"type\":\"string\",\"enum\":[\"lb\",\"t\",\"dwt\",\"gr\",\"mg\",\"mcg\",\"oz\",\"g\",\"kg\"],\"example\":\"kg\"}}},{\"type\":\"object\",\"required\":[\"value\",\"symbol\"],\"properties\":{\"dimension\":{\"type\":\"string\",\"description\":\"must be Volume\",\"example\":\"Volume\",\"enum\":[\"Volume\"]},\"value\":{\"type\":\"number\",\"description\":\"number of units\",\"example\":3},\"symbol\":{\"description\":\"unit of Volume\",\"type\":\"string\",\"example\":\"ml\",\"enum\":[\"pt\",\"tbsp\",\"µl\",\"nl\",\"oz\",\"dl\",\"ml\",\"qt\",\"L\",\"gal\",\"c\",\"tsp\"]}}},{\"type\":\"object\",\"required\":[\"value\",\"symbol\"],\"properties\":{\"dimension\":{\"type\":\"string\",\"description\":\"must be Dimensionless\",\"example\":\"Dimensionless\",\"enum\":[\"Dimensionless\"]},\"value\":{\"type\":\"number\",\"description\":\"number of units\",\"example\":3},\"symbol\":{\"description\":\"dimensionless unit (each)\",\"type\":\"string\",\"enum\":[\"ea\",\"%\",\"dz\"],\"example\":\"ea\"}}}]}},\"example\":{\"quantity\":{\"dimension\":\"Mass\",\"value\":3,\"symbol\":\"oz\"}}},\"perUnit\":{\"type\":\"object\",\"required\":[\"value\",\"symbol\"],\"properties\":{\"dimension\":{\"type\":\"string\",\"enum\":[\"Mass\"],\"description\":\"must be Mass\",\"example\":\"Mass\"},\"value\":{\"type\":\"number\",\"description\":\"number of units\",\"default\":1,\"example\":50},\"symbol\":{\"description\":\"unit of mass or weight\",\"type\":\"string\",\"enum\":[\"lb\",\"t\",\"dwt\",\"gr\",\"mg\",\"mcg\",\"oz\",\"g\",\"kg\"],\"example\":\"kg\"}}}},\"example\":{\"perUnit\":{\"dimension\":\"mass\",\"value\":1,\"symbol\":\"kg\"},\"followDose\":{\"quantity\":{\"dimension\":\"volume\",\"value\":3,\"symbol\":\"ml\"}},\"_type\":\"models.LoadingDoseByWeightFunction\",\"firstDose\":{\"quantity\":{\"dimension\":\"volume\",\"value\":6,\"symbol\":\"ml\"}}}},{\"type\":\"object\",\"description\":\"a range of permissible dose size. The User may select any value within the range (inclusive).\",\"required\":[\"_type\",\"range\"],\"properties\":{\"_type\":{\"type\":\"string\",\"enum\":[\"models.DoseRangeFunction\"],\"description\":\"class of Dose Function\",\"example\":\"models.DoseRangeFunction\"},\"range\":{\"type\":\"object\",\"required\":[\"min\",\"max\"],\"properties\":{\"min\":{\"type\":\"object\",\"required\":[\"quantity\"],\"properties\":{\"quantity\":{\"oneOf\":[{\"type\":\"object\",\"required\":[\"value\",\"symbol\"],\"properties\":{\"dimension\":{\"type\":\"string\",\"enum\":[\"Mass\"],\"description\":\"must be Mass\",\"example\":\"Mass\"},\"value\":{\"type\":\"number\",\"description\":\"number of units\",\"default\":1,\"example\":50},\"symbol\":{\"description\":\"unit of mass or weight\",\"type\":\"string\",\"enum\":[\"lb\",\"t\",\"dwt\",\"gr\",\"mg\",\"mcg\",\"oz\",\"g\",\"kg\"],\"example\":\"kg\"}}},{\"type\":\"object\",\"required\":[\"value\",\"symbol\"],\"properties\":{\"dimension\":{\"type\":\"string\",\"description\":\"must be Volume\",\"example\":\"Volume\",\"enum\":[\"Volume\"]},\"value\":{\"type\":\"number\",\"description\":\"number of units\",\"example\":3},\"symbol\":{\"description\":\"unit of Volume\",\"type\":\"string\",\"example\":\"ml\",\"enum\":[\"pt\",\"tbsp\",\"µl\",\"nl\",\"oz\",\"dl\",\"ml\",\"qt\",\"L\",\"gal\",\"c\",\"tsp\"]}}},{\"type\":\"object\",\"required\":[\"value\",\"symbol\"],\"properties\":{\"dimension\":{\"type\":\"string\",\"description\":\"must be Dimensionless\",\"example\":\"Dimensionless\",\"enum\":[\"Dimensionless\"]},\"value\":{\"type\":\"number\",\"description\":\"number of units\",\"example\":3},\"symbol\":{\"description\":\"dimensionless unit (each)\",\"type\":\"string\",\"enum\":[\"ea\",\"%\",\"dz\"],\"example\":\"ea\"}}}]}},\"example\":{\"quantity\":{\"dimension\":\"Mass\",\"value\":3,\"symbol\":\"oz\"}}},\"max\":{\"type\":\"object\",\"required\":[\"quantity\"],\"properties\":{\"quantity\":{\"oneOf\":[{\"type\":\"object\",\"required\":[\"value\",\"symbol\"],\"properties\":{\"dimension\":{\"type\":\"string\",\"enum\":[\"Mass\"],\"description\":\"must be Mass\",\"example\":\"Mass\"},\"value\":{\"type\":\"number\",\"description\":\"number of units\",\"default\":1,\"example\":50},\"symbol\":{\"description\":\"unit of mass or weight\",\"type\":\"string\",\"enum\":[\"lb\",\"t\",\"dwt\",\"gr\",\"mg\",\"mcg\",\"oz\",\"g\",\"kg\"],\"example\":\"kg\"}}},{\"type\":\"object\",\"required\":[\"value\",\"symbol\"],\"properties\":{\"dimension\":{\"type\":\"string\",\"description\":\"must be Volume\",\"example\":\"Volume\",\"enum\":[\"Volume\"]},\"value\":{\"type\":\"number\",\"description\":\"number of units\",\"example\":3},\"symbol\":{\"description\":\"unit of Volume\",\"type\":\"string\",\"example\":\"ml\",\"enum\":[\"pt\",\"tbsp\",\"µl\",\"nl\",\"oz\",\"dl\",\"ml\",\"qt\",\"L\",\"gal\",\"c\",\"tsp\"]}}},{\"type\":\"object\",\"required\":[\"value\",\"symbol\"],\"properties\":{\"dimension\":{\"type\":\"string\",\"description\":\"must be Dimensionless\",\"example\":\"Dimensionless\",\"enum\":[\"Dimensionless\"]},\"value\":{\"type\":\"number\",\"description\":\"number of units\",\"example\":3},\"symbol\":{\"description\":\"dimensionless unit (each)\",\"type\":\"string\",\"enum\":[\"ea\",\"%\",\"dz\"],\"example\":\"ea\"}}}]}},\"example\":{\"quantity\":{\"dimension\":\"Mass\",\"value\":3,\"symbol\":\"oz\"}}}},\"example\":{\"min\":{\"quantity\":{\"dimension\":\"Volume\",\"value\":3,\"symbol\":\"ml\"}},\"max\":{\"quantity\":{\"dimension\":\"Volume\",\"value\":345,\"symbol\":\"ml\"}}}}}},{\"type\":\"object\",\"description\":\"dose is specified as a range per unit of animal weight. The User may select any value within the range (inclusive).\",\"required\":[\"_type\",\"range\",\"perUnit\"],\"properties\":{\"_type\":{\"type\":\"string\",\"enum\":[\"models.DoseRangeByWeightFunction\"],\"description\":\"class of Dose Function\",\"example\":\"models.DoseRangeByWeightFunction\"},\"range\":{\"type\":\"object\",\"required\":[\"min\",\"max\"],\"properties\":{\"min\":{\"type\":\"object\",\"required\":[\"quantity\"],\"properties\":{\"quantity\":{\"oneOf\":[{\"type\":\"object\",\"required\":[\"value\",\"symbol\"],\"properties\":{\"dimension\":{\"type\":\"string\",\"enum\":[\"Mass\"],\"description\":\"must be Mass\",\"example\":\"Mass\"},\"value\":{\"type\":\"number\",\"description\":\"number of units\",\"default\":1,\"example\":50},\"symbol\":{\"description\":\"unit of mass or weight\",\"type\":\"string\",\"enum\":[\"lb\",\"t\",\"dwt\",\"gr\",\"mg\",\"mcg\",\"oz\",\"g\",\"kg\"],\"example\":\"kg\"}}},{\"type\":\"object\",\"required\":[\"value\",\"symbol\"],\"properties\":{\"dimension\":{\"type\":\"string\",\"description\":\"must be Volume\",\"example\":\"Volume\",\"enum\":[\"Volume\"]},\"value\":{\"type\":\"number\",\"description\":\"number of units\",\"example\":3},\"symbol\":{\"description\":\"unit of Volume\",\"type\":\"string\",\"example\":\"ml\",\"enum\":[\"pt\",\"tbsp\",\"µl\",\"nl\",\"oz\",\"dl\",\"ml\",\"qt\",\"L\",\"gal\",\"c\",\"tsp\"]}}},{\"type\":\"object\",\"required\":[\"value\",\"symbol\"],\"properties\":{\"dimension\":{\"type\":\"string\",\"description\":\"must be Dimensionless\",\"example\":\"Dimensionless\",\"enum\":[\"Dimensionless\"]},\"value\":{\"type\":\"number\",\"description\":\"number of units\",\"example\":3},\"symbol\":{\"description\":\"dimensionless unit (each)\",\"type\":\"string\",\"enum\":[\"ea\",\"%\",\"dz\"],\"example\":\"ea\"}}}]}},\"example\":{\"quantity\":{\"dimension\":\"Mass\",\"value\":3,\"symbol\":\"oz\"}}},\"max\":{\"type\":\"object\",\"required\":[\"quantity\"],\"properties\":{\"quantity\":{\"oneOf\":[{\"type\":\"object\",\"required\":[\"value\",\"symbol\"],\"properties\":{\"dimension\":{\"type\":\"string\",\"enum\":[\"Mass\"],\"description\":\"must be Mass\",\"example\":\"Mass\"},\"value\":{\"type\":\"number\",\"description\":\"number of units\",\"default\":1,\"example\":50},\"symbol\":{\"description\":\"unit of mass or weight\",\"type\":\"string\",\"enum\":[\"lb\",\"t\",\"dwt\",\"gr\",\"mg\",\"mcg\",\"oz\",\"g\",\"kg\"],\"example\":\"kg\"}}},{\"type\":\"object\",\"required\":[\"value\",\"symbol\"],\"properties\":{\"dimension\":{\"type\":\"string\",\"description\":\"must be Volume\",\"example\":\"Volume\",\"enum\":[\"Volume\"]},\"value\":{\"type\":\"number\",\"description\":\"number of units\",\"example\":3},\"symbol\":{\"description\":\"unit of Volume\",\"type\":\"string\",\"example\":\"ml\",\"enum\":[\"pt\",\"tbsp\",\"µl\",\"nl\",\"oz\",\"dl\",\"ml\",\"qt\",\"L\",\"gal\",\"c\",\"tsp\"]}}},{\"type\":\"object\",\"required\":[\"value\",\"symbol\"],\"properties\":{\"dimension\":{\"type\":\"string\",\"description\":\"must be Dimensionless\",\"example\":\"Dimensionless\",\"enum\":[\"Dimensionless\"]},\"value\":{\"type\":\"number\",\"description\":\"number of units\",\"example\":3},\"symbol\":{\"description\":\"dimensionless unit (each)\",\"type\":\"string\",\"enum\":[\"ea\",\"%\",\"dz\"],\"example\":\"ea\"}}}]}},\"example\":{\"quantity\":{\"dimension\":\"Mass\",\"value\":3,\"symbol\":\"oz\"}}}},\"example\":{\"min\":{\"quantity\":{\"dimension\":\"Volume\",\"value\":3,\"symbol\":\"ml\"}},\"max\":{\"quantity\":{\"dimension\":\"Volume\",\"value\":345,\"symbol\":\"ml\"}}}},\"perUnit\":{\"type\":\"object\",\"required\":[\"value\",\"symbol\"],\"properties\":{\"dimension\":{\"type\":\"string\",\"enum\":[\"Mass\"],\"description\":\"must be Mass\",\"example\":\"Mass\"},\"value\":{\"type\":\"number\",\"description\":\"number of units\",\"default\":1,\"example\":50},\"symbol\":{\"description\":\"unit of mass or weight\",\"type\":\"string\",\"enum\":[\"lb\",\"t\",\"dwt\",\"gr\",\"mg\",\"mcg\",\"oz\",\"g\",\"kg\"],\"example\":\"kg\"}}}},\"example\":{\"perUnit\":{\"dimension\":\"Mass\",\"value\":1,\"symbol\":\"kg\"},\"_type\":\"models.DoseRangeByWeightFunction\",\"range\":{\"min\":{\"quantity\":{\"dimension\":\"volume\",\"value\":3,\"symbol\":\"ml\"}},\"max\":{\"quantity\":{\"dimension\":\"volume\",\"value\":2,\"symbol\":\"ml\"}}}}}],\"discriminator\":{\"propertyName\":\"_type\",\"mapping\":{\"models.FixedDoseFunction\":\"#/components/schemas/FixedDoseFunction\",\"models.DoseByWeightFunction\":\"#/components/schemas/DoseByWeightFunction\",\"models.LoadingDoseByWeightFunction\":\"#/components/schemas/LoadingDoseByWeightFunction\",\"models.DoseRangeFunction\":\"#/components/schemas/DoseRangeFunction\",\"models.DoseRangeByWeightFunction\":\"#/components/schemas/SeqSeries\"}}}}}}}]}},\"discriminator\":{\"propertyName\":\"_type\",\"mapping\":{\"models.IdData\":\"#/components/schemas/IdData\",\"models.WeightData\":\"#/components/schemas/WeightData\",\"models.PreferredDoseData\":\"#/components/schemas/PreferredDoseData\",\"models.PrefDoseRateData\":\"#/components/schemas/PrefDoseRateData\",\"models.AnimalClassData\":\"#/components/schemas/AnimalClassData\"}}},\"promiseData\":{\"description\":\"promises attached to this case\",\"type\":\"array\",\"items\":{\"description\":\"An act which must be executed on or after enrollment of a Case to a Prescription\",\"type\":\"object\",\"required\":[\"_type\",\"name\",\"descrip\",\"query\",\"when\"],\"properties\":{\"_type\":{\"description\":\"Class of Promise\",\"type\":\"string\",\"example\":\"models.IdPromise\",\"enum\":[\"models.IdPromise\",\"models.AffirmationPromise\",\"models.BooleanPromise\",\"models.StringPromise\",\"models.MassPromise\",\"models.CategoryPromise\"]},\"id\":{\"description\":\"Promise ID number\",\"type\":\"integer\",\"example\":2345},\"name\":{\"description\":\"promise name for the doctor\",\"type\":\"string\",\"example\":\"ID promise\"},\"descrip\":{\"description\":\"promise description for the client\",\"type\":\"string\",\"example\":\"You must give ID for each case enrolled\"},\"query\":{\"description\":\"question to be answered by client\",\"type\":\"string\",\"format\":\"html\",\"example\":\"What is the animal's name or number?\"},\"when\":{\"description\":\"ISO-8601 duration from initiation when promise must be fulfilled\",\"type\":\"string\",\"format\":\"duration\",\"default\":\"PT0H\",\"example\":\"PT24H\"}},\"example\":\"promise\"}}}}}}\n\n// Validate if response matches JSON schema \npm.test(\"[POST]::/api/users/tasks - Schema is valid\", function() {\n    pm.response.to.have.jsonSchema(schema,{unknownFormats: [\"int32\", \"int64\", \"float\", \"double\"]});\n});\n"
                ]
              }
            }
          ],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        }
      ],
      "event": []
    },
    {
      "id": "b1a87606-848d-42c5-8b6f-37d7d5a76f04",
      "name": "ALL_USERS",
      "description": {
        "content": "available to all users.",
        "type": "text/plain"
      },
      "item": [
        {
          "id": "ef551201-c2aa-4d96-9772-3bbd7bd2e163",
          "name": "update user data",
          "request": {
            "name": "update user data",
            "description": {
              "content": "Users may update their own data. A VOR may also update User data of a User in a `CLIENT` relationship with that VOR. A SAOR may update data of any User.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "api",
                "users"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "PUT",
            "body": {
              "mode": "raw",
              "raw": "{\n  \"user\": {\n    \"id\": 1,\n    \"uname\": \"exampleUser\",\n    \"userType\": \"VOR\",\n    \"firstname\": \"Example\",\n    \"lastname\": \"User\",\n    \"email\": \"exampleUser@email.com\",\n    \"suffix\": \"DVM\"\n  }\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "fcce9f9b-91c9-4200-987d-b3f1b8ec7577",
                "type": "text/javascript",
                "exec": [
                  "// Validate status 2xx \npm.test(\"[PUT]::/api/users - Status code is 2xx\", function () {\n   pm.response.to.be.success;\n});\n",
                  "// Validate response time \npm.test(\"[PUT]::/api/users - Response time is less than 300ms\", function () {\n    pm.expect(pm.response.responseTime).to.be.below(300);\n});\n",
                  "// Validate if response header has matching content-type\npm.test(\"[PUT]::/api/users - Content-Type is application/json\", function () {\n   pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"application/json\");\n});\n",
                  "// Validate if response has JSON Body \npm.test(\"[PUT]::/api/users - Response has JSON Body\", function () {\n    pm.response.to.have.jsonBody();\n});\n",
                  "// Response Validation\nconst schema = {\"properties\":{\"updated-records\":{\"type\":\"integer\",\"description\":\"number of db records altered\"}},\"type\":\"object\"}\n\n// Validate if response matches JSON schema \npm.test(\"[PUT]::/api/users - Schema is valid\", function() {\n    pm.response.to.have.jsonSchema(schema,{unknownFormats: [\"int32\", \"int64\", \"float\", \"double\"]});\n});\n"
                ]
              }
            }
          ],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        {
          "id": "11136025-fc6e-439c-8267-256b6ff037f0",
          "name": "user login",
          "request": {
            "name": "user login",
            "description": {
              "content": "Authenticate a User and the app requesting a token, returning a token for use in future secured requests.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "api",
                "users",
                "logins"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n  \"apikey\": \"t0CGzpQ4cgu1OBy44sBt\",\n  \"identifier\": \"someUser\",\n  \"password\": \"somePassword\"\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "22e727ce-e38c-4735-819a-aec2726a0ba7",
                "type": "text/javascript",
                "exec": [
                  "// Validate status 2xx \npm.test(\"[POST]::/api/users/logins - Status code is 2xx\", function () {\n   pm.response.to.be.success;\n});\n",
                  "// Validate response time \npm.test(\"[POST]::/api/users/logins - Response time is less than 300ms\", function () {\n    pm.expect(pm.response.responseTime).to.be.below(300);\n});\n",
                  "// Validate if response header has matching content-type\npm.test(\"[POST]::/api/users/logins - Content-Type is application/json\", function () {\n   pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"application/json\");\n});\n",
                  "// Validate if response has JSON Body \npm.test(\"[POST]::/api/users/logins - Response has JSON Body\", function () {\n    pm.response.to.have.jsonBody();\n});\n",
                  "// Response Validation\nconst schema = {\"description\":\"User object and generated auth token\",\"type\":\"object\",\"properties\":{\"user\":{\"description\":\"a User of a `UserType` class\",\"type\":\"object\",\"properties\":{\"id\":{\"type\":\"integer\",\"description\":\"User ID number\",\"example\":1},\"uname\":{\"description\":\"username\",\"type\":\"string\",\"example\":\"exampleUser\"},\"userType\":{\"type\":\"string\",\"description\":\"an ordered list of User types associated with privilege levels: <br>\\n* SAOR: a system administrator with top level privileges\\n* VOR: a veterinarian who may create and prescribe protocols\\n* MOR: a farm manager to whom protocols may be prescribed, and who may create Cases in a protocol\\n* TOR: a farm technician who may execute assigned protocols for assigned cases\\n* FARM: an account aggregating MOR and TOR Users\\n* CLINIC: an account aggregating multiple VOR Users who work together\\n* UNCONFIRMED: an account that has been requested but not confirmed by the owner\\n* UNVOR: a User who requests VOR status, with neither email or admin approval\\n* UNMOR: a User who requests MOR status but email not yet confirmed\\n* PREVOR: a confirmed User who requests VOR status but still lacks either email confirmation or approval by admin\\n* REMOVED: the record of a User who is no longer active and may not log in\\n\",\"enum\":[\"SAOR\",\"VOR\",\"MOR\",\"TOR\",\"FARM\",\"CLINIC\",\"UNCONFIRMED\",\"PREVOR\",\"UNVOR\",\"UNMOR\",\"REMOVED\"],\"example\":\"VOR\"},\"email\":{\"type\":\"string\",\"format\":\"email\",\"description\":\"email address\",\"example\":\"exampleUser@email.com\"},\"firstname\":{\"type\":\"string\",\"description\":\"first name\",\"example\":\"Example\"},\"lastname\":{\"type\":\"string\",\"description\":\"last name\",\"example\":\"User\"},\"suffix\":{\"type\":\"string\",\"description\":\"degree or qualifier following the name\",\"example\":\"DVM\"}},\"required\":[\"id\",\"uname\",\"userType\",\"firstname\",\"lastname\"]},\"token\":{\"type\":\"string\",\"description\":\"add this token in X-Auth-Token header to authenticate future requests\",\"example\":\"eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJleUp3Y205MmFXUmxja2xFSWpvaVkzSmxaR1Z1ZEdsaGJITWlMQ0p3Y205MmFXUmxja3RsZVNJNkluUmxjM1JXVDFJaWZRPT0iLCJpc3MiOiJwbGF5LXNpbGhvdWV0dGUiLCJle***...\"},\"filePolicy\":{\"type\":\"string\",\"description\":\"policy object for use in embedded image files, expires in 24 hr\",\"example\":\"3da8c83495cb00d216369a355322078106ebc2e5eac78333eb90d00de5611d9a\"},\"fileSignature\":{\"type\":\"string\",\"description\":\"signature for file policy object\",\"example\":\"eyJleHBpcnkiOjE1Nzg3NTY2MDIsIm1heFNpemUiOjEwMDAwMDAwfQ==\"}},\"x-postman-variables\":[{\"type\":\"save\",\"name\":\"token\",\"path\":\".token\"}]}\n\n// Validate if response matches JSON schema \npm.test(\"[POST]::/api/users/logins - Schema is valid\", function() {\n    pm.response.to.have.jsonSchema(schema,{unknownFormats: [\"int32\", \"int64\", \"float\", \"double\"]});\n});\n"
                ]
              }
            }
          ],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        {
          "id": "0bcf7326-ee78-4afb-a9ce-557440b0d12e",
          "name": "renew token",
          "request": {
            "name": "renew token",
            "description": {
              "content": "Renews the User's access token for use in future secured requests.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "api",
                "users",
                "logins"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "GET"
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "236a6688-71c2-4759-a571-485b8aac0012",
                "type": "text/javascript",
                "exec": [
                  "// Validate status 2xx \npm.test(\"[GET]::/api/users/logins - Status code is 2xx\", function () {\n   pm.response.to.be.success;\n});\n",
                  "// Validate response time \npm.test(\"[GET]::/api/users/logins - Response time is less than 300ms\", function () {\n    pm.expect(pm.response.responseTime).to.be.below(300);\n});\n",
                  "// Validate if response header has matching content-type\npm.test(\"[GET]::/api/users/logins - Content-Type is application/json\", function () {\n   pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"application/json\");\n});\n",
                  "// Validate if response has JSON Body \npm.test(\"[GET]::/api/users/logins - Response has JSON Body\", function () {\n    pm.response.to.have.jsonBody();\n});\n",
                  "// Response Validation\nconst schema = {\"description\":\"User object and generated auth token\",\"type\":\"object\",\"properties\":{\"user\":{\"description\":\"a User of a `UserType` class\",\"type\":\"object\",\"properties\":{\"id\":{\"type\":\"integer\",\"description\":\"User ID number\",\"example\":1},\"uname\":{\"description\":\"username\",\"type\":\"string\",\"example\":\"exampleUser\"},\"userType\":{\"type\":\"string\",\"description\":\"an ordered list of User types associated with privilege levels: <br>\\n* SAOR: a system administrator with top level privileges\\n* VOR: a veterinarian who may create and prescribe protocols\\n* MOR: a farm manager to whom protocols may be prescribed, and who may create Cases in a protocol\\n* TOR: a farm technician who may execute assigned protocols for assigned cases\\n* FARM: an account aggregating MOR and TOR Users\\n* CLINIC: an account aggregating multiple VOR Users who work together\\n* UNCONFIRMED: an account that has been requested but not confirmed by the owner\\n* UNVOR: a User who requests VOR status, with neither email or admin approval\\n* UNMOR: a User who requests MOR status but email not yet confirmed\\n* PREVOR: a confirmed User who requests VOR status but still lacks either email confirmation or approval by admin\\n* REMOVED: the record of a User who is no longer active and may not log in\\n\",\"enum\":[\"SAOR\",\"VOR\",\"MOR\",\"TOR\",\"FARM\",\"CLINIC\",\"UNCONFIRMED\",\"PREVOR\",\"UNVOR\",\"UNMOR\",\"REMOVED\"],\"example\":\"VOR\"},\"email\":{\"type\":\"string\",\"format\":\"email\",\"description\":\"email address\",\"example\":\"exampleUser@email.com\"},\"firstname\":{\"type\":\"string\",\"description\":\"first name\",\"example\":\"Example\"},\"lastname\":{\"type\":\"string\",\"description\":\"last name\",\"example\":\"User\"},\"suffix\":{\"type\":\"string\",\"description\":\"degree or qualifier following the name\",\"example\":\"DVM\"}},\"required\":[\"id\",\"uname\",\"userType\",\"firstname\",\"lastname\"]},\"token\":{\"type\":\"string\",\"description\":\"add this token in X-Auth-Token header to authenticate future requests\",\"example\":\"eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJleUp3Y205MmFXUmxja2xFSWpvaVkzSmxaR1Z1ZEdsaGJITWlMQ0p3Y205MmFXUmxja3RsZVNJNkluUmxjM1JXVDFJaWZRPT0iLCJpc3MiOiJwbGF5LXNpbGhvdWV0dGUiLCJle***...\"},\"filePolicy\":{\"type\":\"string\",\"description\":\"policy object for use in embedded image files, expires in 24 hr\",\"example\":\"3da8c83495cb00d216369a355322078106ebc2e5eac78333eb90d00de5611d9a\"},\"fileSignature\":{\"type\":\"string\",\"description\":\"signature for file policy object\",\"example\":\"eyJleHBpcnkiOjE1Nzg3NTY2MDIsIm1heFNpemUiOjEwMDAwMDAwfQ==\"}},\"x-postman-variables\":[{\"type\":\"save\",\"name\":\"token\",\"path\":\".token\"}]}\n\n// Validate if response matches JSON schema \npm.test(\"[GET]::/api/users/logins - Schema is valid\", function() {\n    pm.response.to.have.jsonSchema(schema,{unknownFormats: [\"int32\", \"int64\", \"float\", \"double\"]});\n});\n"
                ]
              }
            }
          ]
        },
        {
          "id": "82569445-631a-46d7-818a-f0338925d7eb",
          "name": "get user data",
          "request": {
            "name": "get user data",
            "description": {
              "content": "Returns User data as specified by User `id`. Any User may get their own data. A VOR may get User data of Users in a `CLIENT` relationship with that VOR. A SAOR may get data of any User.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "api",
                "users",
                ":id"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": [
                {
                  "disabled": false,
                  "description": {
                    "content": "(Required) User ID key",
                    "type": "text/plain"
                  },
                  "type": "any",
                  "value": "2",
                  "key": "id"
                }
              ]
            },
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "GET"
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "21275f6e-5349-459a-91b1-f54ea6e95faf",
                "type": "text/javascript",
                "exec": [
                  "// Validate status 2xx \npm.test(\"[GET]::/api/users/:id - Status code is 2xx\", function () {\n   pm.response.to.be.success;\n});\n",
                  "// Validate response time \npm.test(\"[GET]::/api/users/:id - Response time is less than 300ms\", function () {\n    pm.expect(pm.response.responseTime).to.be.below(300);\n});\n",
                  "// Validate if response header has matching content-type\npm.test(\"[GET]::/api/users/:id - Content-Type is application/json\", function () {\n   pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"application/json\");\n});\n",
                  "// Validate if response has JSON Body \npm.test(\"[GET]::/api/users/:id - Response has JSON Body\", function () {\n    pm.response.to.have.jsonBody();\n});\n",
                  "// Response Validation\nconst schema = {\"type\":\"object\",\"properties\":{\"user\":{\"description\":\"a User of a `UserType` class\",\"type\":\"object\",\"properties\":{\"id\":{\"type\":\"integer\",\"description\":\"User ID number\",\"example\":1},\"uname\":{\"description\":\"username\",\"type\":\"string\",\"example\":\"exampleUser\"},\"userType\":{\"type\":\"string\",\"description\":\"an ordered list of User types associated with privilege levels: <br>\\n* SAOR: a system administrator with top level privileges\\n* VOR: a veterinarian who may create and prescribe protocols\\n* MOR: a farm manager to whom protocols may be prescribed, and who may create Cases in a protocol\\n* TOR: a farm technician who may execute assigned protocols for assigned cases\\n* FARM: an account aggregating MOR and TOR Users\\n* CLINIC: an account aggregating multiple VOR Users who work together\\n* UNCONFIRMED: an account that has been requested but not confirmed by the owner\\n* UNVOR: a User who requests VOR status, with neither email or admin approval\\n* UNMOR: a User who requests MOR status but email not yet confirmed\\n* PREVOR: a confirmed User who requests VOR status but still lacks either email confirmation or approval by admin\\n* REMOVED: the record of a User who is no longer active and may not log in\\n\",\"enum\":[\"SAOR\",\"VOR\",\"MOR\",\"TOR\",\"FARM\",\"CLINIC\",\"UNCONFIRMED\",\"PREVOR\",\"UNVOR\",\"UNMOR\",\"REMOVED\"],\"example\":\"VOR\"},\"email\":{\"type\":\"string\",\"format\":\"email\",\"description\":\"email address\",\"example\":\"exampleUser@email.com\"},\"firstname\":{\"type\":\"string\",\"description\":\"first name\",\"example\":\"Example\"},\"lastname\":{\"type\":\"string\",\"description\":\"last name\",\"example\":\"User\"},\"suffix\":{\"type\":\"string\",\"description\":\"degree or qualifier following the name\",\"example\":\"DVM\"}},\"required\":[\"id\",\"uname\",\"userType\",\"firstname\",\"lastname\"]}}}\n\n// Validate if response matches JSON schema \npm.test(\"[GET]::/api/users/:id - Schema is valid\", function() {\n    pm.response.to.have.jsonSchema(schema,{unknownFormats: [\"int32\", \"int64\", \"float\", \"double\"]});\n});\n"
                ]
              }
            }
          ]
        },
        {
          "id": "c9fc7658-54fd-432a-8789-bfc3e78853ef",
          "name": "list of all",
          "request": {
            "name": "list of all",
            "description": {
              "content": "list of .",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "api",
                "visits",
                ":id"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": [
                {
                  "disabled": false,
                  "description": {
                    "content": "(Required) User ID key",
                    "type": "text/plain"
                  },
                  "type": "any",
                  "value": "2",
                  "key": "id"
                }
              ]
            },
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "GET"
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "a2a92430-0a69-4f49-b68e-846a9c6b3a5a",
                "type": "text/javascript",
                "exec": [
                  "// Validate status 2xx \npm.test(\"[GET]::/api/visits/:id - Status code is 2xx\", function () {\n   pm.response.to.be.success;\n});\n"
                ]
              }
            }
          ]
        },
        {
          "id": "c213f802-7381-49f0-84cd-07ad39f2f63f",
          "name": "update address",
          "request": {
            "name": "update address",
            "description": {
              "content": "A User may update their own address.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "api",
                "users",
                "addresses"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "PUT",
            "body": {
              "mode": "raw",
              "raw": "{\n  \"user\": {\n    \"id\": 1,\n    \"uname\": \"exampleUser\",\n    \"userType\": \"VOR\",\n    \"firstname\": \"Example\",\n    \"lastname\": \"User\",\n    \"email\": \"exampleUser@email.com\",\n    \"suffix\": \"DVM\"\n  }\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "559958e3-1998-420b-a9dd-454fd675375e",
                "type": "text/javascript",
                "exec": [
                  "// Validate status 2xx \npm.test(\"[PUT]::/api/users/addresses - Status code is 2xx\", function () {\n   pm.response.to.be.success;\n});\n",
                  "// Validate response time \npm.test(\"[PUT]::/api/users/addresses - Response time is less than 300ms\", function () {\n    pm.expect(pm.response.responseTime).to.be.below(300);\n});\n",
                  "// Validate if response header has matching content-type\npm.test(\"[PUT]::/api/users/addresses - Content-Type is application/json\", function () {\n   pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"application/json\");\n});\n",
                  "// Validate if response has JSON Body \npm.test(\"[PUT]::/api/users/addresses - Response has JSON Body\", function () {\n    pm.response.to.have.jsonBody();\n});\n",
                  "// Response Validation\nconst schema = {\"properties\":{\"updated-records\":{\"type\":\"integer\",\"description\":\"number of db records altered\"}},\"type\":\"object\"}\n\n// Validate if response matches JSON schema \npm.test(\"[PUT]::/api/users/addresses - Schema is valid\", function() {\n    pm.response.to.have.jsonSchema(schema,{unknownFormats: [\"int32\", \"int64\", \"float\", \"double\"]});\n});\n"
                ]
              }
            }
          ],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        {
          "id": "4dbc2838-bb30-4b52-9903-2730166825b0",
          "name": "address of user",
          "request": {
            "name": "address of user",
            "description": {
              "content": "Address of user specified by `id`.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "api",
                "users",
                "addresses",
                ":id"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": [
                {
                  "disabled": false,
                  "description": {
                    "content": "(Required) User ID key",
                    "type": "text/plain"
                  },
                  "type": "any",
                  "value": "2",
                  "key": "id"
                }
              ]
            },
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "GET"
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "6a4855b2-2d3c-4930-a7fd-5255fa96dc12",
                "type": "text/javascript",
                "exec": [
                  "// Validate status 2xx \npm.test(\"[GET]::/api/users/addresses/:id - Status code is 2xx\", function () {\n   pm.response.to.be.success;\n});\n",
                  "// Validate response time \npm.test(\"[GET]::/api/users/addresses/:id - Response time is less than 300ms\", function () {\n    pm.expect(pm.response.responseTime).to.be.below(300);\n});\n",
                  "// Validate if response header has matching content-type\npm.test(\"[GET]::/api/users/addresses/:id - Content-Type is application/json\", function () {\n   pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"application/json\");\n});\n",
                  "// Validate if response has JSON Body \npm.test(\"[GET]::/api/users/addresses/:id - Response has JSON Body\", function () {\n    pm.response.to.have.jsonBody();\n});\n",
                  "// Response Validation\nconst schema = {\"type\":\"object\",\"properties\":{\"user\":{\"description\":\"a mailing address\",\"type\":\"object\",\"properties\":{\"userId\":{\"type\":\"integer\"},\"busName\":{\"description\":\"business name, if appropriate\",\"type\":\"string\",\"example\":\"testVOR Clinic\"},\"address1\":{\"description\":\"first line or street address\",\"type\":\"string\",\"example\":\"123 Main St.\"},\"address2\":{\"description\":\"second line of address, if needed\",\"type\":\"string\",\"example\":\"123 Main St.\"},\"town\":{\"description\":\"town or city\",\"type\":\"string\",\"example\":\"Anytown\"},\"state\":{\"description\":\"state or province\",\"type\":\"string\",\"example\":\"Any State\"},\"zip\":{\"type\":\"string\",\"description\":\"zip or postal code\",\"example\":\"12345-abcd\"},\"country\":{\"type\":\"string\",\"description\":\"country\",\"example\":\"USA\"}},\"required\":[\"userId\",\"address1\",\"address2\",\"town\",\"state\",\"zip\"]}}}\n\n// Validate if response matches JSON schema \npm.test(\"[GET]::/api/users/addresses/:id - Schema is valid\", function() {\n    pm.response.to.have.jsonSchema(schema,{unknownFormats: [\"int32\", \"int64\", \"float\", \"double\"]});\n});\n"
                ]
              }
            }
          ]
        },
        {
          "id": "fb8e82eb-707b-4bbf-b078-96ce52bcca50",
          "name": "update profile",
          "request": {
            "name": "update profile",
            "description": {
              "content": "A User may update their own profile.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "api",
                "users",
                "profiles"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "PUT",
            "body": {
              "mode": "raw",
              "raw": "{\n  \"user\": {\n    \"address1\": \"123 Main St.\",\n    \"address2\": \"123 Main St.\",\n    \"emailNews\": false,\n    \"emailTips\": true,\n    \"firstname\": \"Example\",\n    \"id\": 1,\n    \"lastname\": \"User\",\n    \"rxHeader\": \"Duis Excepteur eiusmod\",\n    \"sandboxName\": \"lab\",\n    \"state\": \"Any State\",\n    \"town\": \"Anytown\",\n    \"uname\": \"exampleUser\",\n    \"userId\": 75874954,\n    \"userType\": \"VOR\",\n    \"zip\": \"12345-abcd\",\n    \"email\": \"exampleUser@email.com\",\n    \"suffix\": \"DVM\",\n    \"busName\": \"testVOR Clinic\",\n    \"country\": \"USA\"\n  }\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "eb4dd33c-d429-4bab-9be2-1da65b43bc0b",
                "type": "text/javascript",
                "exec": [
                  "// Validate status 2xx \npm.test(\"[PUT]::/api/users/profiles - Status code is 2xx\", function () {\n   pm.response.to.be.success;\n});\n",
                  "// Validate response time \npm.test(\"[PUT]::/api/users/profiles - Response time is less than 300ms\", function () {\n    pm.expect(pm.response.responseTime).to.be.below(300);\n});\n",
                  "// Validate if response header has matching content-type\npm.test(\"[PUT]::/api/users/profiles - Content-Type is application/json\", function () {\n   pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"application/json\");\n});\n",
                  "// Validate if response has JSON Body \npm.test(\"[PUT]::/api/users/profiles - Response has JSON Body\", function () {\n    pm.response.to.have.jsonBody();\n});\n",
                  "// Response Validation\nconst schema = {\"properties\":{\"updated-records\":{\"type\":\"integer\",\"description\":\"number of db records altered\"}},\"type\":\"object\"}\n\n// Validate if response matches JSON schema \npm.test(\"[PUT]::/api/users/profiles - Schema is valid\", function() {\n    pm.response.to.have.jsonSchema(schema,{unknownFormats: [\"int32\", \"int64\", \"float\", \"double\"]});\n});\n"
                ]
              }
            }
          ],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        {
          "id": "7f239c19-62d0-4a72-b3b3-4089f395ee88",
          "name": "Profile of user",
          "request": {
            "name": "Profile of user",
            "description": {
              "content": "Profile of user specified by `id`.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "api",
                "users",
                "profiles",
                ":id"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": [
                {
                  "disabled": false,
                  "description": {
                    "content": "(Required) User ID key",
                    "type": "text/plain"
                  },
                  "type": "any",
                  "value": "2",
                  "key": "id"
                }
              ]
            },
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "GET"
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "dc20fb21-c6ba-4bdb-90a9-de1f287392b5",
                "type": "text/javascript",
                "exec": [
                  "// Validate status 2xx \npm.test(\"[GET]::/api/users/profiles/:id - Status code is 2xx\", function () {\n   pm.response.to.be.success;\n});\n",
                  "// Validate response time \npm.test(\"[GET]::/api/users/profiles/:id - Response time is less than 300ms\", function () {\n    pm.expect(pm.response.responseTime).to.be.below(300);\n});\n",
                  "// Validate if response header has matching content-type\npm.test(\"[GET]::/api/users/profiles/:id - Content-Type is application/json\", function () {\n   pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"application/json\");\n});\n",
                  "// Validate if response has JSON Body \npm.test(\"[GET]::/api/users/profiles/:id - Response has JSON Body\", function () {\n    pm.response.to.have.jsonBody();\n});\n",
                  "// Response Validation\nconst schema = {\"type\":\"object\",\"properties\":{\"user\":{\"description\":\"a mailing address\",\"type\":\"object\",\"properties\":{\"userId\":{\"type\":\"integer\"},\"busName\":{\"description\":\"business name, if appropriate\",\"type\":\"string\",\"example\":\"testVOR Clinic\"},\"address1\":{\"description\":\"first line or street address\",\"type\":\"string\",\"example\":\"123 Main St.\"},\"address2\":{\"description\":\"second line of address, if needed\",\"type\":\"string\",\"example\":\"123 Main St.\"},\"town\":{\"description\":\"town or city\",\"type\":\"string\",\"example\":\"Anytown\"},\"state\":{\"description\":\"state or province\",\"type\":\"string\",\"example\":\"Any State\"},\"zip\":{\"type\":\"string\",\"description\":\"zip or postal code\",\"example\":\"12345-abcd\"},\"country\":{\"type\":\"string\",\"description\":\"country\",\"example\":\"USA\"}},\"required\":[\"userId\",\"address1\",\"address2\",\"town\",\"state\",\"zip\"]}}}\n\n// Validate if response matches JSON schema \npm.test(\"[GET]::/api/users/profiles/:id - Schema is valid\", function() {\n    pm.response.to.have.jsonSchema(schema,{unknownFormats: [\"int32\", \"int64\", \"float\", \"double\"]});\n});\n"
                ]
              }
            }
          ]
        },
        {
          "id": "f51b79d2-f343-4561-9d1b-ccd1ee77b6c5",
          "name": "confirm Token",
          "request": {
            "name": "confirm Token",
            "description": {
              "content": "used for clickable link to confirm a token sent in email.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "api",
                "users",
                "token",
                ":token"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Accept",
                "value": "text/html"
              }
            ],
            "method": "GET"
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "4e5c3f2a-b4b4-44c7-ad4f-90f6b7f94ed5",
                "type": "text/javascript",
                "exec": [
                  "// Validate status 2xx \npm.test(\"[GET]::/api/users/token/:token - Status code is 2xx\", function () {\n   pm.response.to.be.success;\n});\n",
                  "// Validate response time \npm.test(\"[GET]::/api/users/token/:token - Response time is less than 300ms\", function () {\n    pm.expect(pm.response.responseTime).to.be.below(300);\n});\n",
                  "// Validate if response header has matching content-type\npm.test(\"[GET]::/api/users/token/:token - Content-Type is text/html\", function () {\n   pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"text/html\");\n});\n",
                  "// Response Validation\nconst schema = {\"description\":\"web page confirmation.\",\"type\":\"string\",\"format\":\"html\"}\n\n// Validate if response matches JSON schema \npm.test(\"[GET]::/api/users/token/:token - Schema is valid\", function() {\n    pm.response.to.have.jsonSchema(schema,{unknownFormats: [\"int32\", \"int64\", \"float\", \"double\"]});\n});\n"
                ]
              }
            }
          ]
        },
        {
          "id": "6707d1ef-e3cc-482d-9c55-3712d57ea99b",
          "name": "record a User comment",
          "request": {
            "name": "record a User comment",
            "description": {
              "content": "Records a User comment to the database and emails admin. It supports privacy controls.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "api",
                "users",
                "comments"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n  \"comment\": \"some comment\",\n  \"userId\": 1,\n  \"public\": false\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "e185405e-ffc8-4f0b-9fdf-8c35353bf393",
                "type": "text/javascript",
                "exec": [
                  "// Validate status 2xx \npm.test(\"[POST]::/api/users/comments - Status code is 2xx\", function () {\n   pm.response.to.be.success;\n});\n",
                  "// Validate response time \npm.test(\"[POST]::/api/users/comments - Response time is less than 300ms\", function () {\n    pm.expect(pm.response.responseTime).to.be.below(300);\n});\n",
                  "// Validate if response header has matching content-type\npm.test(\"[POST]::/api/users/comments - Content-Type is application/json\", function () {\n   pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"application/json\");\n});\n",
                  "// Validate if response has JSON Body \npm.test(\"[POST]::/api/users/comments - Response has JSON Body\", function () {\n    pm.response.to.have.jsonBody();\n});\n",
                  "// Response Validation\nconst schema = {\"type\":\"object\",\"properties\":{\"recorded\":{\"type\":\"integer\"}}}\n\n// Validate if response matches JSON schema \npm.test(\"[POST]::/api/users/comments - Schema is valid\", function() {\n    pm.response.to.have.jsonSchema(schema,{unknownFormats: [\"int32\", \"int64\", \"float\", \"double\"]});\n});\n"
                ]
              }
            }
          ],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        {
          "id": "a0917270-28c8-4a0c-acfe-0832753c37f4",
          "name": "list of all diagnoses",
          "request": {
            "name": "list of all diagnoses",
            "description": {
              "content": "Returns an array of keys used to identify help messages.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "api",
                "helpkeys"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "GET"
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "965220e8-475a-46ae-a712-54405cae9aa1",
                "type": "text/javascript",
                "exec": [
                  "// Validate status 2xx \npm.test(\"[GET]::/api/helpkeys - Status code is 2xx\", function () {\n   pm.response.to.be.success;\n});\n"
                ]
              }
            }
          ]
        },
        {
          "id": "60d6bbc4-568e-4377-aef5-332897d4ab38",
          "name": "help message",
          "request": {
            "name": "help message",
            "description": {
              "content": "return a help message, normally to be displayed in a popup help screen.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "api",
                "help",
                ":key"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": [
                {
                  "disabled": false,
                  "description": {
                    "content": "(Required) help screen key",
                    "type": "text/plain"
                  },
                  "type": "any",
                  "value": "pariatur non irure in",
                  "key": "key"
                }
              ]
            },
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "GET"
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "ef5fc90e-520b-4387-bfff-e255115001bf",
                "type": "text/javascript",
                "exec": [
                  "// Validate status 2xx \npm.test(\"[GET]::/api/help/:key - Status code is 2xx\", function () {\n   pm.response.to.be.success;\n});\n"
                ]
              }
            }
          ]
        },
        {
          "id": "6da8a671-6d6b-448a-972b-5b03f3076e8b",
          "name": "confirm VOR",
          "request": {
            "name": "confirm VOR",
            "description": {
              "type": "text/plain"
            },
            "url": {
              "path": [
                "api",
                "admin",
                "ConfirmVOR"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": false,
                  "key": "sendEmail",
                  "value": "true"
                }
              ],
              "variable": []
            },
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "PUT"
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "461e718d-8ab8-4277-bc1c-c03ec3a9a33d",
                "type": "text/javascript",
                "exec": [
                  "// Validate status 2xx \npm.test(\"[PUT]::/api/admin/ConfirmVOR - Status code is 2xx\", function () {\n   pm.response.to.be.success;\n});\n"
                ]
              }
            }
          ]
        }
      ],
      "event": []
    },
    {
      "id": "34277745-3a7a-4536-b334-9360ae78898a",
      "name": "SAOR",
      "description": {
        "content": "available to system administrators.",
        "type": "text/plain"
      },
      "item": [
        {
          "id": "0a8c1e90-c073-4059-bf3e-d0ad2a3a2fe6",
          "name": "load Editor",
          "request": {
            "name": "load Editor",
            "description": {
              "content": "load Protocol Editor",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "editor"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Accept",
                "value": "text/html"
              }
            ],
            "method": "GET"
          },
          "response": [],
          "event": []
        },
        {
          "id": "a4e762f0-2273-4aca-8ee9-fe03cdba450d",
          "name": "load Farm App",
          "request": {
            "name": "load Farm App",
            "description": {
              "content": "load Farm App",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "farm"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Accept",
                "value": "text/html"
              }
            ],
            "method": "GET"
          },
          "response": [],
          "event": []
        },
        {
          "id": "ab521dd2-ea76-40cc-8cf8-fd3cda79e526",
          "name": "load Admin App",
          "request": {
            "name": "load Admin App",
            "description": {
              "content": "load Admin app",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "admin"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Accept",
                "value": "text/html"
              }
            ],
            "method": "GET"
          },
          "response": [],
          "event": []
        },
        {
          "id": "f58ce626-b866-4888-8d06-8e7f8e6d6139",
          "name": "delete user",
          "request": {
            "name": "delete user",
            "description": {
              "content": "This endpoint supports the (reversible) \"delete\" of a User by setting user.status to `REMOVED`. Removed Users are not visible in normal queries.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "api",
                "users",
                ":id"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": [
                {
                  "disabled": false,
                  "description": {
                    "content": "(Required) User ID key",
                    "type": "text/plain"
                  },
                  "type": "any",
                  "value": "5",
                  "key": "id"
                }
              ]
            },
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "DELETE"
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "467ab01e-300f-4eb9-9000-ea5969b34391",
                "type": "text/javascript",
                "exec": [
                  "// Validate status 2xx \npm.test(\"[DELETE]::/api/users/:id - Status code is 2xx\", function () {\n   pm.response.to.be.success;\n});\n",
                  "// Validate response time \npm.test(\"[DELETE]::/api/users/:id - Response time is less than 300ms\", function () {\n    pm.expect(pm.response.responseTime).to.be.below(300);\n});\n",
                  "// Validate if response header has matching content-type\npm.test(\"[DELETE]::/api/users/:id - Content-Type is application/json\", function () {\n   pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"application/json\");\n});\n",
                  "// Validate if response has JSON Body \npm.test(\"[DELETE]::/api/users/:id - Response has JSON Body\", function () {\n    pm.response.to.have.jsonBody();\n});\n",
                  "// Response Validation\nconst schema = {\"type\":\"object\",\"properties\":{\"deleted\":{\"type\":\"integer\",\"description\":\"number of Users deleted\"}}}\n\n// Validate if response matches JSON schema \npm.test(\"[DELETE]::/api/users/:id - Schema is valid\", function() {\n    pm.response.to.have.jsonSchema(schema,{unknownFormats: [\"int32\", \"int64\", \"float\", \"double\"]});\n});\n"
                ]
              }
            }
          ]
        },
        {
          "id": "93d30f5f-8903-4a2e-a7ba-ecf1d2d483a2",
          "name": "delete sandboxClient",
          "request": {
            "name": "delete sandboxClient",
            "description": {
              "content": "Delete the User and CLIENT Relation records from the database,  irreversibly removing the sandbocx client, but not any existing Prescriptions.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "api",
                "users",
                "sandboxClient"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "DELETE"
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "933667d3-0dc3-47be-b0be-afc688a1a82c",
                "type": "text/javascript",
                "exec": [
                  "// Validate status 2xx \npm.test(\"[DELETE]::/api/users/sandboxClient - Status code is 2xx\", function () {\n   pm.response.to.be.success;\n});\n",
                  "// Validate response time \npm.test(\"[DELETE]::/api/users/sandboxClient - Response time is less than 300ms\", function () {\n    pm.expect(pm.response.responseTime).to.be.below(300);\n});\n",
                  "// Validate if response header has matching content-type\npm.test(\"[DELETE]::/api/users/sandboxClient - Content-Type is application/json\", function () {\n   pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"application/json\");\n});\n",
                  "// Validate if response has JSON Body \npm.test(\"[DELETE]::/api/users/sandboxClient - Response has JSON Body\", function () {\n    pm.response.to.have.jsonBody();\n});\n",
                  "// Response Validation\nconst schema = {\"type\":\"object\",\"properties\":{\"deleted\":{\"type\":\"integer\",\"description\":\"number of Users deleted\"}}}\n\n// Validate if response matches JSON schema \npm.test(\"[DELETE]::/api/users/sandboxClient - Schema is valid\", function() {\n    pm.response.to.have.jsonSchema(schema,{unknownFormats: [\"int32\", \"int64\", \"float\", \"double\"]});\n});\n"
                ]
              }
            }
          ]
        },
        {
          "id": "38d2960f-2b30-4cfc-ad11-812d62ac41aa",
          "name": "create Tag",
          "request": {
            "name": "create Tag",
            "description": {
              "content": "Create a Tag.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "api",
                "protocols",
                "tags"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n  \"id\": 8,\n  \"color\": \"#516cc6\",\n  \"name\": \"ullamco exercit\",\n  \"fixes\": [\n    {\n      \"_type\": \"occaecat\",\n      \"detail\": \"sed sit Duis\",\n      \"message\": \"deserunt reprehenderit nulla Excepteur culpa\",\n      \"title\": \"dolor sint ut\"\n    },\n    {\n      \"_type\": \"veniam in proident id incididunt\",\n      \"detail\": \"commodo dolore sed sunt\",\n      \"message\": \"qui labore\",\n      \"title\": \"cupidatat sed enim quis\"\n    }\n  ]\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "d0c695f5-3b05-4d5c-8279-351d3fd01a5c",
                "type": "text/javascript",
                "exec": [
                  "// Validate status 2xx \npm.test(\"[POST]::/api/protocols/tags - Status code is 2xx\", function () {\n   pm.response.to.be.success;\n});\n"
                ]
              }
            }
          ],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        {
          "id": "3d127515-d9bf-43f4-8c7e-ab027507de7d",
          "name": "Tag",
          "request": {
            "name": "Tag",
            "description": {
              "content": "Delete Tag.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "api",
                "protocols",
                "tags",
                ":id"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": [
                {
                  "disabled": false,
                  "description": {
                    "content": "(Required) ",
                    "type": "text/plain"
                  },
                  "type": "any",
                  "value": "-16056297",
                  "key": "id"
                }
              ]
            },
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "DELETE"
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "5553d57a-0de4-434e-b73c-f74f36a0cc93",
                "type": "text/javascript",
                "exec": [
                  "// Validate status 2xx \npm.test(\"[DELETE]::/api/protocols/tags/:id - Status code is 2xx\", function () {\n   pm.response.to.be.success;\n});\n"
                ]
              }
            }
          ]
        },
        {
          "id": "5e1d8b61-de13-4dc3-9f78-82ae732d61f2",
          "name": "create Promise",
          "request": {
            "name": "create Promise",
            "description": {
              "type": "text/plain"
            },
            "url": {
              "path": [
                "api",
                "protocols",
                "promises"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "POST"
          },
          "response": [],
          "event": []
        },
        {
          "id": "182e046a-c909-4a1c-b183-4e40ba1336df",
          "name": "create Eligibility",
          "request": {
            "name": "create Eligibility",
            "description": {
              "content": "Creation  a Eligibility.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "api",
                "protocols",
                "eligibilities"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n  \"id\": 1,\n  \"name\": \"Beef Cattle\",\n  \"fdaSpecies\": [\n    \"salmon\",\n    \"dogs\"\n  ]\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "a6143929-8052-4dad-b2f7-242b100321f6",
                "type": "text/javascript",
                "exec": [
                  "// Validate status 2xx \npm.test(\"[POST]::/api/protocols/eligibilities - Status code is 2xx\", function () {\n   pm.response.to.be.success;\n});\n"
                ]
              }
            }
          ],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        {
          "id": "f5197105-f034-497b-afe0-6ca15cafee31",
          "name": "Eligibility",
          "request": {
            "name": "Eligibility",
            "description": {
              "content": "Delete Eligibility.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "api",
                "protocols",
                "eligibilities",
                "{{id}}}"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "DELETE"
          },
          "response": [],
          "event": []
        },
        {
          "id": "7af75861-ef76-414d-b2dc-29beb9f2a506",
          "name": "create Eligibility",
          "request": {
            "name": "create Eligibility",
            "description": {
              "content": "Create  a Diagnosis.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "api",
                "protocols",
                "diagnoses"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n  \"id\": 8,\n  \"name\": \"Pain/inflammation (musculoskeletal), treatment\"\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "dbd1f000-9f8f-43f5-b129-d67c60335556",
                "type": "text/javascript",
                "exec": [
                  "// Validate status 2xx \npm.test(\"[POST]::/api/protocols/diagnoses - Status code is 2xx\", function () {\n   pm.response.to.be.success;\n});\n"
                ]
              }
            }
          ],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        {
          "id": "566a2129-80c1-4d6b-ac6a-6f2057d6c41f",
          "name": "Diagnosis",
          "request": {
            "name": "Diagnosis",
            "description": {
              "content": "Delete Diagnosis.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "api",
                "protocols",
                "diagnoses",
                ":id"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": [
                {
                  "disabled": false,
                  "description": {
                    "content": "(Required) ",
                    "type": "text/plain"
                  },
                  "type": "any",
                  "value": "-16056297",
                  "key": "id"
                }
              ]
            },
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "DELETE"
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "e7064eb6-2f86-4dd9-b341-edf9d3bbdf8e",
                "type": "text/javascript",
                "exec": [
                  "// Validate status 2xx \npm.test(\"[DELETE]::/api/protocols/diagnoses/:id - Status code is 2xx\", function () {\n   pm.response.to.be.success;\n});\n"
                ]
              }
            }
          ]
        },
        {
          "id": "9cabb0df-2c24-4145-8d25-401b09ec7052",
          "name": "create help screen",
          "request": {
            "name": "create help screen",
            "description": {
              "content": "Creation  a help screen.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "api",
                "help",
                ":key"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": [
                {
                  "disabled": false,
                  "description": {
                    "content": "(Required) help screen key",
                    "type": "text/plain"
                  },
                  "type": "any",
                  "value": "pariatur non irure in",
                  "key": "key"
                }
              ]
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n  \"key\": \"sunt do in ut\",\n  \"msg\": \"in Lore\",\n  \"lang\": \"sed consequat\"\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "c5017eac-9064-46cc-a73c-336797f56722",
                "type": "text/javascript",
                "exec": [
                  "// Validate status 2xx \npm.test(\"[POST]::/api/help/:key - Status code is 2xx\", function () {\n   pm.response.to.be.success;\n});\n"
                ]
              }
            }
          ],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        {
          "id": "6771a84f-24f1-405d-aaa0-e0f5109d2bab",
          "name": "delete help screen",
          "request": {
            "name": "delete help screen",
            "description": {
              "content": "Delete help screen.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "api",
                "help",
                ":key"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": [
                {
                  "disabled": false,
                  "description": {
                    "content": "(Required) help screen key",
                    "type": "text/plain"
                  },
                  "type": "any",
                  "value": "pariatur non irure in",
                  "key": "key"
                }
              ]
            },
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "DELETE"
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "bc002a15-2a95-4749-ad39-cc8884cbde33",
                "type": "text/javascript",
                "exec": [
                  "// Validate status 2xx \npm.test(\"[DELETE]::/api/help/:key - Status code is 2xx\", function () {\n   pm.response.to.be.success;\n});\n"
                ]
              }
            }
          ]
        },
        {
          "id": "f1d372cf-d5c6-4a41-b9b6-518b6001d4db",
          "name": "create labelclaim",
          "request": {
            "name": "create labelclaim",
            "description": {
              "content": "Creation  a labelclaim.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "api",
                "labels"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n  \"id\": 1,\n  \"fdaSpecies\": [\n    \"ChickensBroilers\",\n    \"ChickensBroilers\"\n  ],\n  \"diagnosis\": \"pain (colic), symptomatic treatment\",\n  \"dxId\": 2002,\n  \"product\": \"Prevail™ Flunixin Meglumine Injection\",\n  \"route\": \"intr-corporeal\",\n  \"wtMeatHrs\": 22,\n  \"wtMilkHrs\": 5,\n  \"productId\": 1315018,\n  \"_dose\": \"3.0 ml per kg repeat in 6 hours and again in 24 hours\",\n  \"sequenceFunction\": {\n    \"_type\": \"models.SeqSingleDose\"\n  },\n  \"sizeFunction\": {\n    \"_type\": \"models.FixedDoseFunction\",\n    \"dose\": {\n      \"quantity\": {\n        \"dimension\": \"Mass\",\n        \"value\": 3,\n        \"symbol\": \"oz\"\n      }\n    }\n  },\n  \"doseNote\": \"THis can contain <b>html</b> tags\",\n  \"wtNote\": \"not for dairy animals\",\n  \"ndc\": \"200-308\",\n  \"generic\": \"OXYTETRACYCLINE\"\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "419c869b-1e7e-4e48-a5e1-59e623d1b0ba",
                "type": "text/javascript",
                "exec": [
                  "// Validate status 2xx \npm.test(\"[POST]::/api/labels - Status code is 2xx\", function () {\n   pm.response.to.be.success;\n});\n"
                ]
              }
            }
          ],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        {
          "id": "e30d92a1-1f1b-4cd2-85e8-0ea1237af3e1",
          "name": "update labelclaim",
          "request": {
            "name": "update labelclaim",
            "description": {
              "content": "update a labelclaim.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "api",
                "labels"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "PUT",
            "body": {
              "mode": "raw",
              "raw": "{\n  \"id\": 1,\n  \"fdaSpecies\": [\n    \"ChickensBroilers\",\n    \"ChickensBroilers\"\n  ],\n  \"diagnosis\": \"pain (colic), symptomatic treatment\",\n  \"dxId\": 2002,\n  \"product\": \"Prevail™ Flunixin Meglumine Injection\",\n  \"route\": \"intr-corporeal\",\n  \"wtMeatHrs\": 22,\n  \"wtMilkHrs\": 5,\n  \"productId\": 1315018,\n  \"_dose\": \"3.0 ml per kg repeat in 6 hours and again in 24 hours\",\n  \"sequenceFunction\": {\n    \"_type\": \"models.SeqSingleDose\"\n  },\n  \"sizeFunction\": {\n    \"_type\": \"models.FixedDoseFunction\",\n    \"dose\": {\n      \"quantity\": {\n        \"dimension\": \"Mass\",\n        \"value\": 3,\n        \"symbol\": \"oz\"\n      }\n    }\n  },\n  \"doseNote\": \"THis can contain <b>html</b> tags\",\n  \"wtNote\": \"not for dairy animals\",\n  \"ndc\": \"200-308\",\n  \"generic\": \"OXYTETRACYCLINE\"\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "be162d21-6b41-4aa8-8b86-b038df2c5f27",
                "type": "text/javascript",
                "exec": [
                  "// Validate status 2xx \npm.test(\"[PUT]::/api/labels - Status code is 2xx\", function () {\n   pm.response.to.be.success;\n});\n"
                ]
              }
            }
          ],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        {
          "id": "bd804c52-2ef2-43c2-9c07-6db014f4949b",
          "name": "create help screen",
          "request": {
            "name": "create help screen",
            "description": {
              "content": "update a labelclaim.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "api",
                "labels",
                ":id"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": [
                {
                  "disabled": false,
                  "description": {
                    "content": "(Required) labelclaim id",
                    "type": "text/plain"
                  },
                  "type": "any",
                  "value": "-16056297",
                  "key": "id"
                }
              ]
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "PUT",
            "body": {
              "mode": "raw",
              "raw": "{\n  \"id\": 1,\n  \"fdaSpecies\": [\n    \"ChickensBroilers\",\n    \"ChickensBroilers\"\n  ],\n  \"diagnosis\": \"pain (colic), symptomatic treatment\",\n  \"dxId\": 2002,\n  \"product\": \"Prevail™ Flunixin Meglumine Injection\",\n  \"route\": \"intr-corporeal\",\n  \"wtMeatHrs\": 22,\n  \"wtMilkHrs\": 5,\n  \"productId\": 1315018,\n  \"_dose\": \"3.0 ml per kg repeat in 6 hours and again in 24 hours\",\n  \"sequenceFunction\": {\n    \"_type\": \"models.SeqSingleDose\"\n  },\n  \"sizeFunction\": {\n    \"_type\": \"models.FixedDoseFunction\",\n    \"dose\": {\n      \"quantity\": {\n        \"dimension\": \"Mass\",\n        \"value\": 3,\n        \"symbol\": \"oz\"\n      }\n    }\n  },\n  \"doseNote\": \"THis can contain <b>html</b> tags\",\n  \"wtNote\": \"not for dairy animals\",\n  \"ndc\": \"200-308\",\n  \"generic\": \"OXYTETRACYCLINE\"\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "b0a73468-c496-4671-98d9-77a2ce331c37",
                "type": "text/javascript",
                "exec": [
                  "// Validate status 2xx \npm.test(\"[PUT]::/api/labels/:id - Status code is 2xx\", function () {\n   pm.response.to.be.success;\n});\n"
                ]
              }
            }
          ],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        {
          "id": "01118598-a871-40ed-9864-bf098b4c353f",
          "name": "greenbook drugs",
          "request": {
            "name": "greenbook drugs",
            "description": {
              "content": "Return GBDs.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "api",
                "admin",
                "gbd"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": false,
                  "description": {
                    "content": "first section labeler code of a NDC",
                    "type": "text/plain"
                  },
                  "key": "ndcProd",
                  "value": "-16056297"
                },
                {
                  "disabled": false,
                  "description": {
                    "content": "mid section product code of a NDC",
                    "type": "text/plain"
                  },
                  "key": "ndcLabeler",
                  "value": "-16056297"
                },
                {
                  "disabled": false,
                  "description": {
                    "content": "starting row number in GBD table",
                    "type": "text/plain"
                  },
                  "key": "ndcBrand",
                  "value": "-16056297"
                },
                {
                  "disabled": false,
                  "description": {
                    "content": "maximum number of rows to return",
                    "type": "text/plain"
                  },
                  "key": "offset",
                  "value": "-16056297"
                },
                {
                  "disabled": false,
                  "description": {
                    "content": "end section package code of a NDC",
                    "type": "text/plain"
                  },
                  "key": "eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJleUp3Y205MmFXUmxja2xFSWpvaVkzSmxaR1Z1ZEdsaGJITWlMQ0p3Y205MmFXUmxja3RsZVNJNkluUmxjM1JXVDFJaWZRPT0iLCJpc3MiOiJwbGF5LXNpbGhvdWV0dGUiLCJle***...",
                  "value": "-16056297"
                }
              ],
              "variable": []
            },
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "GET"
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "fead107d-9ec8-4a0d-8912-70db7afde141",
                "type": "text/javascript",
                "exec": [
                  "// Validate status 2xx \npm.test(\"[GET]::/api/admin/gbd - Status code is 2xx\", function () {\n   pm.response.to.be.success;\n});\n"
                ]
              }
            }
          ]
        },
        {
          "id": "aa52428b-c855-4912-ae44-69e83374b5a7",
          "name": "update GBD",
          "request": {
            "name": "update GBD",
            "description": {
              "content": "M",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "api",
                "admin",
                "gbd"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "PUT",
            "body": {
              "mode": "raw",
              "raw": "{\n  \"ndc\": \"0010-3495\",\n  \"proprietery\": \"Bio-Mycin 200\",\n  \"nonProp\": \"OXYTETRACYCLINE\",\n  \"ingredients\": \"OXYTETRACYCLINE\",\n  \"labeler\": \"Boehringer Ingelheim Vetmedica, Inc.\",\n  \"productType\": \"OTC ANIMAL DRUG\",\n  \"marketCat\": \"ANADA\",\n  \"appNumber\": \"ANADA200008\",\n  \"link\": \"https://www.accessdata.fda.gov/spl/data/c9491ada-6813-4548-8872-57bb38a58feb/c9491ada-6813-4548-8872-57bb38a58feb.xml\",\n  \"status\": 0,\n  \"lastChanged\": \"2005-12-14T20:33:32.866Z\"\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "cbacc78e-5630-4f4d-83ef-fb9691c2541c",
                "type": "text/javascript",
                "exec": [
                  "// Validate status 2xx \npm.test(\"[PUT]::/api/admin/gbd - Status code is 2xx\", function () {\n   pm.response.to.be.success;\n});\n"
                ]
              }
            }
          ],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        {
          "id": "fc651552-152f-4b50-938a-1372c7e33004",
          "name": "get Greenbook Drug",
          "request": {
            "name": "get Greenbook Drug",
            "description": {
              "type": "text/plain"
            },
            "url": {
              "path": [
                "api",
                "admin",
                "gbd",
                ":ndc"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": [
                {
                  "disabled": false,
                  "description": {
                    "content": "(Required) unique 10-digit, 3-segment number. labelerCode-productCode-packageCode",
                    "type": "text/plain"
                  },
                  "type": "any",
                  "value": "0061-4321-03",
                  "key": "ndc"
                }
              ]
            },
            "method": "GET"
          },
          "response": [],
          "event": []
        }
      ],
      "event": []
    },
    {
      "id": "6d95f8e2-8f8e-4d6b-aa64-3b5ac18c92f9",
      "name": "TOR",
      "description": {
        "content": "available to farm employees.",
        "type": "text/plain"
      },
      "item": [],
      "event": []
    },
    {
      "id": "a94d7c5c-fb8e-45c4-8bfc-d8e6b42c7f8c",
      "name": "LOR",
      "description": {
        "content": "available to pharmacy curators.",
        "type": "text/plain"
      },
      "item": [],
      "event": []
    },
    {
      "id": "71fc0114-0823-4652-af9d-ed3269c23d4c",
      "name": "FARM",
      "description": {
        "content": "available to farm accounts.",
        "type": "text/plain"
      },
      "item": [],
      "event": []
    },
    {
      "id": "4372d1f9-9ac2-433c-91bd-bb120206f9b0",
      "name": "CLINIC",
      "description": {
        "content": "available to vet clinic accounts.",
        "type": "text/plain"
      },
      "item": [],
      "event": []
    },
    {
      "id": "21dff231-3412-441c-8576-edf0b5c3fbbb",
      "name": "User",
      "description": {
        "content": "Endpoints and models related to user management.",
        "type": "text/plain"
      },
      "item": [],
      "event": []
    },
    {
      "id": "b2ec0a51-e2a7-4382-b54b-a880d5e30385",
      "name": "Protocol",
      "description": {
        "content": "Endpoints and models related to protocol management.",
        "type": "text/plain"
      },
      "item": [],
      "event": []
    },
    {
      "id": "3e2859a4-9aa9-4426-a92d-175c4c1b1f1f",
      "name": "Prescription",
      "description": {
        "content": "Endpoints and models related to prescription management.",
        "type": "text/plain"
      },
      "item": [],
      "event": []
    },
    {
      "id": "65366775-f439-4dc5-9c40-2c45eeaea34f",
      "name": "Case",
      "description": {
        "content": "Endpoints and models related to case management.",
        "type": "text/plain"
      },
      "item": [],
      "event": []
    },
    {
      "id": "1535171d-2add-41c6-bcef-7d172ce161a5",
      "name": "Promise",
      "description": {
        "content": "Endpoints and models related to promise management.",
        "type": "text/plain"
      },
      "item": [],
      "event": []
    },
    {
      "id": "0cb41f18-bc9c-46ce-8bdd-f993e880593e",
      "name": "create profile",
      "request": {
        "name": "create profile",
        "description": {
          "content": "Create a User with Address, and UserPrefs.",
          "type": "text/plain"
        },
        "url": {
          "path": [
            "api",
            "users",
            "profiles"
          ],
          "host": [
            "{{baseUrl}}"
          ],
          "query": [],
          "variable": []
        },
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json"
          },
          {
            "key": "Accept",
            "value": "application/json"
          }
        ],
        "method": "POST",
        "body": {
          "mode": "raw",
          "raw": "{\n  \"user\": {\n    \"address1\": \"123 Main St.\",\n    \"address2\": \"123 Main St.\",\n    \"emailNews\": false,\n    \"emailTips\": true,\n    \"firstname\": \"Example\",\n    \"id\": 1,\n    \"lastname\": \"User\",\n    \"rxHeader\": \"Duis Excepteur eiusmod\",\n    \"sandboxName\": \"lab\",\n    \"state\": \"Any State\",\n    \"town\": \"Anytown\",\n    \"uname\": \"exampleUser\",\n    \"userId\": 75874954,\n    \"userType\": \"VOR\",\n    \"zip\": \"12345-abcd\",\n    \"email\": \"exampleUser@email.com\",\n    \"suffix\": \"DVM\",\n    \"busName\": \"testVOR Clinic\",\n    \"country\": \"USA\"\n  }\n}",
          "options": {
            "raw": {
              "language": "json"
            }
          }
        }
      },
      "response": [
        {
          "_": {
            "postman_previewlanguage": "json"
          },
          "id": "f6d81501-2bae-4ffc-95b8-f293439f5db3",
          "name": "the created Profile",
          "originalRequest": {
            "url": {
              "path": [
                "api",
                "users",
                "profiles"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "description": {
                  "content": "Added as a part of security scheme: apikey",
                  "type": "text/plain"
                },
                "key": "X-Auth-Token",
                "value": "<API Key>"
              }
            ],
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n  \"user\": {\n    \"address1\": \"123 Main St.\",\n    \"address2\": \"123 Main St.\",\n    \"emailNews\": false,\n    \"emailTips\": true,\n    \"firstname\": \"Example\",\n    \"id\": 1,\n    \"lastname\": \"User\",\n    \"rxHeader\": \"Duis Excepteur eiusmod\",\n    \"sandboxName\": \"lab\",\n    \"state\": \"Any State\",\n    \"town\": \"Anytown\",\n    \"uname\": \"exampleUser\",\n    \"userId\": 75874954,\n    \"userType\": \"VOR\",\n    \"zip\": \"12345-abcd\",\n    \"email\": \"exampleUser@email.com\",\n    \"suffix\": \"DVM\",\n    \"busName\": \"testVOR Clinic\",\n    \"country\": \"USA\"\n  }\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            }
          },
          "status": "OK",
          "code": 200,
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "body": "{\n  \"address1\": \"123 Main St.\",\n  \"address2\": \"123 Main St.\",\n  \"emailNews\": false,\n  \"emailTips\": true,\n  \"firstname\": \"Example\",\n  \"id\": 1,\n  \"lastname\": \"User\",\n  \"rxHeader\": \"anim fugiat\",\n  \"sandboxName\": \"aliqua minim ut cillum\",\n  \"state\": \"Any State\",\n  \"town\": \"Anytown\",\n  \"uname\": \"exampleUser\",\n  \"userId\": 36054990,\n  \"userType\": \"VOR\",\n  \"zip\": \"12345-abcd\",\n  \"email\": \"exampleUser@email.com\",\n  \"suffix\": \"DVM\",\n  \"busName\": \"testVOR Clinic\",\n  \"country\": \"USA\"\n}",
          "cookie": []
        },
        {
          "_": {
            "postman_previewlanguage": "text"
          },
          "id": "4078b491-be10-465c-810f-dc01e4b2f8f4",
          "name": "Authorization required",
          "originalRequest": {
            "url": {
              "path": [
                "api",
                "users",
                "profiles"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "description": {
                  "content": "Added as a part of security scheme: apikey",
                  "type": "text/plain"
                },
                "key": "X-Auth-Token",
                "value": "<API Key>"
              }
            ],
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n  \"user\": {\n    \"address1\": \"123 Main St.\",\n    \"address2\": \"123 Main St.\",\n    \"emailNews\": false,\n    \"emailTips\": true,\n    \"firstname\": \"Example\",\n    \"id\": 1,\n    \"lastname\": \"User\",\n    \"rxHeader\": \"Duis Excepteur eiusmod\",\n    \"sandboxName\": \"lab\",\n    \"state\": \"Any State\",\n    \"town\": \"Anytown\",\n    \"uname\": \"exampleUser\",\n    \"userId\": 75874954,\n    \"userType\": \"VOR\",\n    \"zip\": \"12345-abcd\",\n    \"email\": \"exampleUser@email.com\",\n    \"suffix\": \"DVM\",\n    \"busName\": \"testVOR Clinic\",\n    \"country\": \"USA\"\n  }\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            }
          },
          "status": "Unauthorized",
          "code": 401,
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            }
          ],
          "body": "",
          "cookie": []
        }
      ],
      "event": [
        {
          "listen": "test",
          "script": {
            "id": "50a6ac57-b61f-4d77-bcc2-74988a6cc4cc",
            "type": "text/javascript",
            "exec": [
              "// Validate status 2xx \npm.test(\"[POST]::/api/users/profiles - Status code is 2xx\", function () {\n   pm.response.to.be.success;\n});\n",
              "// Validate response time \npm.test(\"[POST]::/api/users/profiles - Response time is less than 300ms\", function () {\n    pm.expect(pm.response.responseTime).to.be.below(300);\n});\n",
              "// Validate if response header has matching content-type\npm.test(\"[POST]::/api/users/profiles - Content-Type is application/json\", function () {\n   pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"application/json\");\n});\n",
              "// Validate if response has JSON Body \npm.test(\"[POST]::/api/users/profiles - Response has JSON Body\", function () {\n    pm.response.to.have.jsonBody();\n});\n",
              "// Response Validation\nconst schema = {\"description\":\"User data including Address and preferences\",\"type\":\"object\",\"allOf\":[{\"description\":\"a User of a `UserType` class\",\"type\":\"object\",\"properties\":{\"id\":{\"type\":\"integer\",\"description\":\"User ID number\",\"example\":1},\"uname\":{\"description\":\"username\",\"type\":\"string\",\"example\":\"exampleUser\"},\"userType\":{\"type\":\"string\",\"description\":\"an ordered list of User types associated with privilege levels: <br>\\n* SAOR: a system administrator with top level privileges\\n* VOR: a veterinarian who may create and prescribe protocols\\n* MOR: a farm manager to whom protocols may be prescribed, and who may create Cases in a protocol\\n* TOR: a farm technician who may execute assigned protocols for assigned cases\\n* FARM: an account aggregating MOR and TOR Users\\n* CLINIC: an account aggregating multiple VOR Users who work together\\n* UNCONFIRMED: an account that has been requested but not confirmed by the owner\\n* UNVOR: a User who requests VOR status, with neither email or admin approval\\n* UNMOR: a User who requests MOR status but email not yet confirmed\\n* PREVOR: a confirmed User who requests VOR status but still lacks either email confirmation or approval by admin\\n* REMOVED: the record of a User who is no longer active and may not log in\\n\",\"enum\":[\"SAOR\",\"VOR\",\"MOR\",\"TOR\",\"FARM\",\"CLINIC\",\"UNCONFIRMED\",\"PREVOR\",\"UNVOR\",\"UNMOR\",\"REMOVED\"],\"example\":\"VOR\"},\"email\":{\"type\":\"string\",\"format\":\"email\",\"description\":\"email address\",\"example\":\"exampleUser@email.com\"},\"firstname\":{\"type\":\"string\",\"description\":\"first name\",\"example\":\"Example\"},\"lastname\":{\"type\":\"string\",\"description\":\"last name\",\"example\":\"User\"},\"suffix\":{\"type\":\"string\",\"description\":\"degree or qualifier following the name\",\"example\":\"DVM\"}},\"required\":[\"id\",\"uname\",\"userType\",\"firstname\",\"lastname\"]},{\"description\":\"a mailing address\",\"type\":\"object\",\"properties\":{\"userId\":{\"type\":\"integer\"},\"busName\":{\"description\":\"business name, if appropriate\",\"type\":\"string\",\"example\":\"testVOR Clinic\"},\"address1\":{\"description\":\"first line or street address\",\"type\":\"string\",\"example\":\"123 Main St.\"},\"address2\":{\"description\":\"second line of address, if needed\",\"type\":\"string\",\"example\":\"123 Main St.\"},\"town\":{\"description\":\"town or city\",\"type\":\"string\",\"example\":\"Anytown\"},\"state\":{\"description\":\"state or province\",\"type\":\"string\",\"example\":\"Any State\"},\"zip\":{\"type\":\"string\",\"description\":\"zip or postal code\",\"example\":\"12345-abcd\"},\"country\":{\"type\":\"string\",\"description\":\"country\",\"example\":\"USA\"}},\"required\":[\"userId\",\"address1\",\"address2\",\"town\",\"state\",\"zip\"]},{\"description\":\"values a user may set to customize performance\",\"type\":\"object\",\"properties\":{\"userId\":{\"type\":\"integer\"},\"sandboxName\":{\"type\":\"string\"},\"emailTips\":{\"type\":\"boolean\"},\"emailNews\":{\"type\":\"boolean\"},\"rxHeader\":{\"type\":\"string\"}},\"required\":[\"userId\",\"sandboxName\",\"emailTips\",\"emailNews\",\"rxHeader\"]}],\"required\":[\"id\",\"uname\",\"userType\",\"email\",\"firstname\",\"lastname\",\"suffix\"]}\n\n// Validate if response matches JSON schema \npm.test(\"[POST]::/api/users/profiles - Schema is valid\", function() {\n    pm.response.to.have.jsonSchema(schema,{unknownFormats: [\"int32\", \"int64\", \"float\", \"double\"]});\n});\n"
            ]
          }
        }
      ],
      "protocolProfileBehavior": {
        "disableBodyPruning": true
      }
    }
  ],
  "auth": {
    "type": "apikey",
    "apikey": [
      {
        "type": "any",
        "value": "X-Auth-Token",
        "key": "key"
      },
      {
        "type": "any",
        "value": "<API Key>",
        "key": "value"
      },
      {
        "type": "any",
        "value": "header",
        "key": "in"
      }
    ]
  },
  "event": [
    {
      "listen": "prerequest",
      "script": {
        "id": "055f9e4c-554f-4407-99b5-3ec801a4ef36",
        "type": "text/javascript",
        "exec": [
          "pm.sendRequest({ url: pm.environment.get('baseUrl')+'/api/authenticate',method: 'POST',header: {'Accept': 'application/json','Content-Type': 'application/x-www-form-urlencoded'},body: {mode: 'raw',raw: 'u='+pm.environment.get('username')+'&p='+pm.environment.get('password')}},(err, res) => {pm.environment.set('ACCESS', res.headers.get('x-auth')); pm.environment.set('org', res.json().org); pm.request.headers.add({key: 'x-token',value: res.headers.get('x-auth')})});"
        ]
      }
    }
  ],
  "variable": [
    {
      "type": "string",
      "value": "https://test.vcpr.org",
      "key": "baseUrl"
    },
    {
      "disabled": false,
      "description": {
        "content": "(Required) ",
        "type": "text/plain"
      },
      "type": "any",
      "value": "-16056297",
      "key": "id"
    }
  ],
  "info": {
    "_postman_id": "9f7aaa3e-43fa-4bca-8a32-e23f3f441606",
    "name": "PublicAPI",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
    "description": {
      "content": "API serving the Veterinary Protocol Manager&trade; application. &copy; DairySight LLC, Argyle NY 2020\n\nContact Support:\n Name: Jim Ehrlich, DVM\n Email: jehrlich@vcpr.org",
      "type": "text/plain"
    }
  }
}
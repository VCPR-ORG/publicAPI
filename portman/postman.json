{
  "_": {
    "postman_id": "1e3abae8-b160-4e04-9cf8-523c3198b6a4"
  },
  "item": [
    {
      "id": "03a01860-5973-42dc-9c38-ceaae57b82a7",
      "name": "VOR",
      "description": {
        "content": "available to veterinarians.",
        "type": "text/plain"
      },
      "item": [
        {
          "id": "880a319f-eaef-4238-bc63-c87d1efdc7f1",
          "name": "load Editor",
          "request": {
            "name": "load Editor",
            "description": {
              "content": "load Protocol Editor",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "editor"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Accept",
                "value": "text/html"
              }
            ],
            "method": "GET"
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "3d4833d7-9d14-4a24-99cc-ae219dfba58d",
                "type": "text/javascript",
                "exec": [
                  "./portman/pm-login.json"
                ]
              }
            }
          ]
        },
        {
          "id": "0b3a3eb5-8b02-4c89-9d76-5aad5c61e7c3",
          "name": "load Farm App",
          "request": {
            "name": "load Farm App",
            "description": {
              "content": "load Farm App",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "farm"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Accept",
                "value": "text/html"
              }
            ],
            "method": "GET"
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "f6799b5f-b15b-4234-8869-4e6c7e59d8ab",
                "type": "text/javascript",
                "exec": [
                  "./portman/pm-login.json"
                ]
              }
            }
          ]
        },
        {
          "id": "1c1c7504-1a9e-43d9-977d-87434f94c8cb",
          "name": "list of Users IDs",
          "request": {
            "name": "list of Users IDs",
            "description": {
              "content": "Returns the ID and names of all active Users of the type(s) specified.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "api",
                "users"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": [
                {
                  "disabled": false,
                  "description": {
                    "content": "(Required) User types to include",
                    "type": "text/plain"
                  },
                  "type": "any",
                  "value": "VOR",
                  "key": "usertypes"
                }
              ]
            },
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "GET"
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "c4944b46-ea12-4769-bb73-c152dc781017",
                "type": "text/javascript",
                "exec": [
                  "./portman/pm-login.json"
                ]
              }
            }
          ]
        },
        {
          "id": "b3656be3-5c12-4bfe-b4e4-11dcd4dfdba5",
          "name": "list of VORs",
          "request": {
            "name": "list of VORs",
            "description": {
              "content": "list of VOR users.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "api",
                "users",
                "vors"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "GET"
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "6c101bb6-8383-4baa-8f6f-b73a084479dd",
                "type": "text/javascript",
                "exec": [
                  "./portman/pm-login.json"
                ]
              }
            }
          ]
        },
        {
          "id": "88d7a174-3f05-45e0-95b7-7cec20d20dfe",
          "name": "delete user",
          "request": {
            "name": "delete user",
            "description": {
              "content": "This endpoint supports the (reversible) \"delete\" of a User by setting user.status to `REMOVED`. Removed Users are not visible in normal queries.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "api",
                "users",
                ":id"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": [
                {
                  "disabled": false,
                  "description": {
                    "content": "(Required) User ID key",
                    "type": "text/plain"
                  },
                  "type": "any",
                  "value": "5",
                  "key": "id"
                }
              ]
            },
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "DELETE"
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "38937bc8-2447-4b7b-8fc7-7252fa95fe2e",
                "type": "text/javascript",
                "exec": [
                  "./portman/pm-login.json"
                ]
              }
            }
          ]
        },
        {
          "id": "85408873-dec5-4c40-a362-ebf42f67d1a1",
          "name": "create a sandbox user",
          "request": {
            "name": "create a sandbox user",
            "description": {
              "content": "Create a sandbox user of MOR `UserType` who is a `CLIENT` of logged-in VOR. This allows the VOR to prescribe to the sandbox client, then view prescriptions from the client's point of view using the Farm App.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "api",
                "users",
                "sandboxClient"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "\"deserunt mollit Ut\"",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "4d3ccb18-87fc-4f22-9100-39dcc6c481f9",
                "type": "text/javascript",
                "exec": [
                  "./portman/pm-login.json"
                ]
              }
            }
          ],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        {
          "id": "1f093c81-cc0a-4fd1-a0b3-585e0e1838ab",
          "name": "delete sandboxClient",
          "request": {
            "name": "delete sandboxClient",
            "description": {
              "content": "Delete the User and CLIENT Relation records from the database,  irreversibly removing the sandbocx client, but not any existing Prescriptions.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "api",
                "users",
                "sandboxClient"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "DELETE"
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "0da6e52c-74cb-46c0-a5e3-cc6a2c53935c",
                "type": "text/javascript",
                "exec": [
                  "./portman/pm-login.json"
                ]
              }
            }
          ]
        },
        {
          "id": "cca3515b-ca65-4807-b586-33a95adcf159",
          "name": "add a relationship",
          "request": {
            "name": "add a relationship",
            "description": {
              "content": "adds a relationship of the type specified by `name` to the current User, who must be a VOR. Defaults to CLIENT relationship.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "api",
                "users",
                "relations"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "\"CLIENT\"",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "6dd21c08-bf30-4ae4-bbd1-b763b41f8376",
                "type": "text/javascript",
                "exec": [
                  "./portman/pm-login.json"
                ]
              }
            }
          ],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        {
          "id": "981d5869-8f39-4958-b9c8-0013657f2c78",
          "name": "get my right-related users",
          "request": {
            "name": "get my right-related users",
            "description": {
              "content": "get my right-related users",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "api",
                "users",
                "my-right-relations"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": false,
                  "key": "relationship",
                  "value": "CLIENT"
                },
                {
                  "disabled": false,
                  "description": {
                    "content": "whether to return user's addresses too",
                    "type": "text/plain"
                  },
                  "key": "withAddress",
                  "value": "false"
                }
              ],
              "variable": []
            },
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "GET"
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "1eda1b3e-7300-4563-acac-fdd737b0b333",
                "type": "text/javascript",
                "exec": [
                  "./portman/pm-login.json"
                ]
              }
            }
          ]
        },
        {
          "id": "9f98c1d8-c4b3-4f4b-9e71-fbb7deaa0ac6",
          "name": "add a User with relationship",
          "request": {
            "name": "add a User with relationship",
            "description": {
              "content": "This endpoint adds a User and a relationship of the type specified by `name` to the current User, who must be a VOR. Defaults to CLIENT relationship.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "api",
                "users",
                "my-right-relations"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": false,
                  "description": {
                    "content": "(Required) ",
                    "type": "text/plain"
                  },
                  "key": "relationship",
                  "value": "CLIENT"
                },
                {
                  "disabled": false,
                  "description": {
                    "content": "(Required) ",
                    "type": "text/plain"
                  },
                  "key": "usertype",
                  "value": "VOR"
                }
              ],
              "variable": []
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n  \"id\": 99,\n  \"uname\": \"exampleUser\",\n  \"userType\": \"VOR\",\n  \"firstname\": \"Example\",\n  \"lastname\": \"User\",\n  \"email\": \"exampleUser@email.com\",\n  \"suffix\": \"DVM\"\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "25dd904e-a0b9-43bf-b19a-3416b7f56508",
                "type": "text/javascript",
                "exec": [
                  "./portman/pm-login.json"
                ]
              }
            }
          ],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        {
          "id": "9f861222-a7cd-43b2-87ee-b8f3a25a1dc0",
          "name": "get my prescriptions",
          "request": {
            "name": "get my prescriptions",
            "description": {
              "content": "get prescriptions prescribed by the current User.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "api",
                "protocols",
                "prescriptions",
                "by"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "GET"
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "4ecb4fd6-fec1-4fde-a975-2ef83971d31b",
                "type": "text/javascript",
                "exec": [
                  "./portman/pm-login.json",
                  "// Validate status 2xx \npm.test(\"[GET]::/api/protocols/prescriptions/by - Status code is 2xx\", function () {\n   pm.response.to.be.success;\n});\n"
                ]
              }
            }
          ]
        },
        {
          "id": "6c8dc7ad-4118-486b-8e02-4e4994d1e246",
          "name": "get my prescriptions",
          "request": {
            "name": "get my prescriptions",
            "description": {
              "content": "get prescriptions prescribed to the current User.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "api",
                "protocols",
                "prescriptions",
                "to"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "GET"
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "7e3c7b34-6ede-4683-a019-93abb3cfffc1",
                "type": "text/javascript",
                "exec": [
                  "./portman/pm-login.json",
                  "// Validate status 2xx \npm.test(\"[GET]::/api/protocols/prescriptions/to - Status code is 2xx\", function () {\n   pm.response.to.be.success;\n});\n"
                ]
              }
            }
          ]
        },
        {
          "id": "f0bc7a7a-da26-4f46-9b9e-388dcfb1f61f",
          "name": "get my protocol shares",
          "request": {
            "name": "get my protocol shares",
            "description": {
              "content": "This endpoint retrieves a User's Protocol shares, optionally filtered by Protocol and recipient.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "api",
                "protocols",
                "shares"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": false,
                  "description": {
                    "content": "select only shares of this Protocol ID",
                    "type": "text/plain"
                  },
                  "key": "pxFilter",
                  "value": "37168990"
                },
                {
                  "disabled": false,
                  "description": {
                    "content": "select only shares to this VOR User",
                    "type": "text/plain"
                  },
                  "key": "toFilter",
                  "value": "37168990"
                }
              ],
              "variable": []
            },
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "GET"
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "72d1d823-9e59-465e-bb9d-734a070b60ed",
                "type": "text/javascript",
                "exec": [
                  "./portman/pm-login.json",
                  "// Validate status 2xx \npm.test(\"[GET]::/api/protocols/shares - Status code is 2xx\", function () {\n   pm.response.to.be.success;\n});\n"
                ]
              }
            }
          ]
        },
        {
          "id": "d520499c-113a-4d18-8046-1e0f1863edd4",
          "name": "create protocol share",
          "request": {
            "name": "create protocol share",
            "description": {
              "content": "This endpoint shares a protocol with another VOR User.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "api",
                "protocols",
                "shares"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n  \"px-id\": 1,\n  \"share-to\": 2,\n  \"clonable\": true\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "15a493f1-82f1-4430-afa6-90770c828257",
                "type": "text/javascript",
                "exec": [
                  "./portman/pm-login.json",
                  "// Validate status 2xx \npm.test(\"[POST]::/api/protocols/shares - Status code is 2xx\", function () {\n   pm.response.to.be.success;\n});\n"
                ]
              }
            }
          ],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        {
          "id": "64c43bd4-f3c6-4371-870c-b86da68e308f",
          "name": "delete protocol share",
          "request": {
            "name": "delete protocol share",
            "description": {
              "content": "This endpoint retracts a Protocol share with another VOR User.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "api",
                "protocols",
                "shares"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": false,
                  "description": {
                    "content": "(Required) Protocol ID",
                    "type": "text/plain"
                  },
                  "key": "pxId",
                  "value": "37168990"
                },
                {
                  "disabled": false,
                  "description": {
                    "content": "(Required) ID of VOR to whom Protocol was shared",
                    "type": "text/plain"
                  },
                  "key": "toVor",
                  "value": "37168990"
                }
              ],
              "variable": []
            },
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "DELETE"
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "5581e51f-041c-42c9-9a1b-14ef2d74d171",
                "type": "text/javascript",
                "exec": [
                  "./portman/pm-login.json",
                  "// Validate status 2xx \npm.test(\"[DELETE]::/api/protocols/shares - Status code is 2xx\", function () {\n   pm.response.to.be.success;\n});\n"
                ]
              }
            }
          ]
        },
        {
          "id": "811d6cfa-54f1-4c3e-8f6f-5a5153d51b6e",
          "name": "list of User's shared protocols",
          "request": {
            "name": "list of User's shared protocols",
            "description": {
              "content": "This endpoint retrieves a list of User's protocols shared to all VORs.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "api",
                "protocols",
                "sharesToAll",
                ""
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "GET"
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "7b54a991-2855-4c92-a48b-4ba78bed2e3b",
                "type": "text/javascript",
                "exec": [
                  "./portman/pm-login.json",
                  "// Validate status 2xx \npm.test(\"[GET]::/api/protocols/sharesToAll/ - Status code is 2xx\", function () {\n   pm.response.to.be.success;\n});\n"
                ]
              }
            }
          ]
        },
        {
          "id": "d0d53a80-3597-4b8c-81b5-8a81a91addf2",
          "name": "share Protocol with all VOR Users",
          "request": {
            "name": "share Protocol with all VOR Users",
            "description": {
              "content": "This endpoint shares a User's protocol with all VOR Users.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "api",
                "protocols",
                "sharesToAll",
                ":pxId"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": false,
                  "key": "clonable",
                  "value": "true"
                }
              ],
              "variable": [
                {
                  "disabled": false,
                  "description": {
                    "content": "(Required) ID of Protocol to be shared",
                    "type": "text/plain"
                  },
                  "type": "any",
                  "value": "37168990",
                  "key": "pxId"
                }
              ]
            },
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "POST"
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "afd44663-0934-4501-8afa-370d82e32bee",
                "type": "text/javascript",
                "exec": [
                  "./portman/pm-login.json",
                  "// Validate status 2xx \npm.test(\"[POST]::/api/protocols/sharesToAll/:pxId - Status code is 2xx\", function () {\n   pm.response.to.be.success;\n});\n"
                ]
              }
            }
          ]
        },
        {
          "id": "dcde68cd-f13c-4b27-a12f-a682c1b4dc64",
          "name": "cancel sharing",
          "request": {
            "name": "cancel sharing",
            "description": {
              "content": "wip -- This endpoint probably unshares protocols to all.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "api",
                "protocols",
                "sharesToAll",
                ":pxId"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": [
                {
                  "disabled": false,
                  "description": {
                    "content": "(Required) ID of Protocol",
                    "type": "text/plain"
                  },
                  "type": "any",
                  "value": "1",
                  "key": "pxId"
                }
              ]
            },
            "method": "DELETE"
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "264272b0-aed3-4601-9206-8b91e9c4417d",
                "type": "text/javascript",
                "exec": [
                  "./portman/pm-login.json",
                  "// Validate status 2xx \npm.test(\"[DELETE]::/api/protocols/sharesToAll/:pxId - Status code is 2xx\", function () {\n   pm.response.to.be.success;\n});\n"
                ]
              }
            }
          ]
        },
        {
          "id": "3cb79aa5-5b4b-4bcb-aa6d-478a61514be9",
          "name": "AMDUCA-tag protocol",
          "request": {
            "name": "AMDUCA-tag protocol",
            "description": {
              "content": "add tags to protocol per AMDUCA rules",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "api",
                "protocols",
                "amducatags"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "PUT",
            "body": {
              "mode": "raw",
              "raw": "{\n  \"ownerId\": 1,\n  \"name\": \"wip\",\n  \"status\": \"PRESCRIBED\",\n  \"instructions\": {\n    \"considerations\": \"<p>This is just an example, not a real protocol.</p>\",\n    \"restrictions\": \"<p>Not for use on real animals.</p>\",\n    \"dothis\": \"<h3>Examinations to perform</h3>\",\n    \"recordthis\": \"<p>record every step in your notebook.</p>\",\n    \"success\": \"<p>All problems are gone</p>\",\n    \"failure\": \"<p>One or more problems remain</p>\",\n    \"references\": \"<a href=\\\"https://en.wikipedia.org/wiki/Rickrolling\\\">Wikipedia</a>\"\n  },\n  \"id\": 12345,\n  \"shortname\": \"wip\",\n  \"created\": \"1987-03-19T08:04:27.824Z\",\n  \"edited\": \"1944-09-10T14:16:31.890Z\",\n  \"vetNote\": \"consider prescribing protocol x instead\",\n  \"wtMeatHrs\": 22,\n  \"wtMilkHrs\": 5,\n  \"shareAll\": true,\n  \"shareClonable\": true,\n  \"caseDefinition\": {\n    \"requireId\": false,\n    \"requireMor\": false,\n    \"contraindications\": \"\",\n    \"medical\": \"if fever is present, consider Protocol 12345 instead.\",\n    \"economic\": \"\",\n    \"note\": \"\"\n  },\n  \"treatments\": [\n    {\n      \"product\": \"MiracleMed\",\n      \"route\": \"wip\",\n      \"dosage\": {\n        \"doseId\": -90559760\n      },\n      \"sequenceFunction\": {\n        \"_type\": \"models.SeqSingleDose\"\n      },\n      \"sizeFunction\": {\n        \"_type\": \"models.FixedDoseFunction\",\n        \"dose\": {\n          \"quantity\": {\n            \"dimension\": \"Mass\",\n            \"value\": 3,\n            \"symbol\": \"oz\"\n          }\n        }\n      },\n      \"id\": \"B-123\",\n      \"ownerId\": 0,\n      \"description\": \"3.0 ml per kg repeat\",\n      \"eligibilities\": [\n        {\n          \"id\": 1,\n          \"name\": \"Beef Cattle\",\n          \"fdaSpecies\": [\n            \"dogs\",\n            \"beef_cattle\"\n          ]\n        },\n        {\n          \"id\": 1,\n          \"name\": \"Beef Cattle\",\n          \"fdaSpecies\": [\n            \"llamas\",\n            \"veal\"\n          ]\n        }\n      ],\n      \"_dose\": \"3.0 ml per kg repeat in 6 hours and again in 24 hours\",\n      \"wtMeatHrs\": -10814941,\n      \"wtMilkHrs\": -36838316,\n      \"nada\": \"wip\",\n      \"tags\": [\n        {\n          \"id\": 8,\n          \"color\": \"#516cc6\",\n          \"name\": \"i\",\n          \"fixes\": [\n            {\n              \"_type\": \"dolore mollit \",\n              \"detail\": \"consequat ullamco\",\n              \"message\": \"culpa in exercitation\",\n              \"title\": \"cupidatat ea labore\"\n            },\n            {\n              \"_type\": \"in occaecat Excepteur nostrud eu\",\n              \"detail\": \"commodo Ut nostrud exercitation est\",\n              \"message\": \"ea cupidatat\",\n              \"title\": \"Lorem laboris ipsum\"\n            }\n          ]\n        },\n        {\n          \"id\": 8,\n          \"color\": \"#516cc6\",\n          \"name\": \"i\",\n          \"fixes\": [\n            {\n              \"_type\": \"fugiat\",\n              \"detail\": \"ea Lorem\",\n              \"message\": \"ut o\",\n              \"title\": \"proident\"\n            },\n            {\n              \"_type\": \"sunt magna laboris\",\n              \"detail\": \"est aute\",\n              \"message\": \"ut esse\",\n              \"title\": \"ir\"\n            }\n          ]\n        }\n      ],\n      \"note\": \"<p>a free-form note</p>\",\n      \"amduca\": \"UNIDENTIFIED\"\n    },\n    {\n      \"product\": \"MiracleMed\",\n      \"route\": \"wip\",\n      \"dosage\": {\n        \"doseId\": -51194664\n      },\n      \"sequenceFunction\": {\n        \"_type\": \"models.SeqSingleDose\"\n      },\n      \"sizeFunction\": {\n        \"_type\": \"models.FixedDoseFunction\",\n        \"dose\": {\n          \"quantity\": {\n            \"dimension\": \"Mass\",\n            \"value\": 3,\n            \"symbol\": \"oz\"\n          }\n        }\n      },\n      \"id\": \"B-123\",\n      \"ownerId\": 0,\n      \"description\": \"3.0 ml per kg repeat\",\n      \"eligibilities\": [\n        {\n          \"id\": 1,\n          \"name\": \"Beef Cattle\",\n          \"fdaSpecies\": [\n            \"sheep\",\n            \"salmon\"\n          ]\n        },\n        {\n          \"id\": 1,\n          \"name\": \"Beef Cattle\",\n          \"fdaSpecies\": [\n            \"unidentified\",\n            \"veal\"\n          ]\n        }\n      ],\n      \"_dose\": \"3.0 ml per kg repeat in 6 hours and again in 24 hours\",\n      \"wtMeatHrs\": 69655841,\n      \"wtMilkHrs\": 31956602,\n      \"nada\": \"wip\",\n      \"tags\": [\n        {\n          \"id\": 8,\n          \"color\": \"#516cc6\",\n          \"name\": \"ipsum conse\",\n          \"fixes\": [\n            {\n              \"_type\": \"dolor commodo minim ut eu\",\n              \"detail\": \"ullamco consequat\",\n              \"message\": \"dolore quis laboris\",\n              \"title\": \"ut ex\"\n            },\n            {\n              \"_type\": \"in dolor ullam\",\n              \"detail\": \"Lorem aute\",\n              \"message\": \"aliqua commodo sunt\",\n              \"title\": \"in\"\n            }\n          ]\n        },\n        {\n          \"id\": 8,\n          \"color\": \"#516cc6\",\n          \"name\": \"sint mo\",\n          \"fixes\": [\n            {\n              \"_type\": \"id elit cupidatat\",\n              \"detail\": \"c\",\n              \"message\": \"Excepteur\",\n              \"title\": \"dolor tempor nisi\"\n            },\n            {\n              \"_type\": \"aliqua aute do ad\",\n              \"detail\": \"pariatur ex Duis\",\n              \"message\": \"incididunt eu\",\n              \"title\": \"dolore irure\"\n            }\n          ]\n        }\n      ],\n      \"note\": \"<p>a free-form note</p>\",\n      \"amduca\": \"ONLABEL\"\n    }\n  ],\n  \"tags\": [\n    {\n      \"id\": 8,\n      \"color\": \"#516cc6\",\n      \"name\": \"veniam Lorem la\",\n      \"fixes\": [\n        {\n          \"_type\": \"tempor voluptate non elit eiusmod\",\n          \"detail\": \"ad\",\n          \"message\": \"culpa ven\",\n          \"title\": \"nisi\"\n        },\n        {\n          \"_type\": \"labore ut\",\n          \"detail\": \"cupidatat officia\",\n          \"message\": \"et\",\n          \"title\": \"ea amet incididunt officia\"\n        }\n      ]\n    },\n    {\n      \"id\": 8,\n      \"color\": \"#516cc6\",\n      \"name\": \"reprehe\",\n      \"fixes\": [\n        {\n          \"_type\": \"officia exercitation ut in\",\n          \"detail\": \"aliquip cupidatat\",\n          \"message\": \"enim velit cillum quis\",\n          \"title\": \"culpa aliqua laborum\"\n        },\n        {\n          \"_type\": \"magna elit cillum aute\",\n          \"detail\": \"mol\",\n          \"message\": \"proident voluptate\",\n          \"title\": \"incididunt cupid\"\n        }\n      ]\n    }\n  ],\n  \"diagnoses\": [\n    {\n      \"id\": 8,\n      \"name\": \"Pain/inflammation (musculoskeletal), treatment\"\n    },\n    {\n      \"id\": 8,\n      \"name\": \"Pain/inflammation (musculoskeletal), treatment\"\n    }\n  ],\n  \"eligibilities\": [\n    {\n      \"id\": 1,\n      \"name\": \"Beef Cattle\",\n      \"fdaSpecies\": [\n        \"cats\",\n        \"beef_cattle\"\n      ]\n    },\n    {\n      \"id\": 1,\n      \"name\": \"Beef Cattle\",\n      \"fdaSpecies\": [\n        \"chickens\",\n        \"swine\"\n      ]\n    }\n  ],\n  \"promises\": [\n    {\n      \"_type\": \"models.IdPromise\",\n      \"name\": \"ID promise\",\n      \"descrip\": \"You must give ID for each case enrolled\",\n      \"query\": \"What is the animal's name or number?\",\n      \"when\": \"PT0H\",\n      \"id\": 2345\n    },\n    {\n      \"_type\": \"models.IdPromise\",\n      \"name\": \"ID promise\",\n      \"descrip\": \"You must give ID for each case enrolled\",\n      \"query\": \"What is the animal's name or number?\",\n      \"when\": \"PT0H\",\n      \"id\": 2345\n    }\n  ],\n  \"metadata\": [\n    {\n      \"key\": \"popularity\",\n      \"value\": \"good 1.2\"\n    },\n    {\n      \"key\": \"popularity\",\n      \"value\": \"good 1.2\"\n    }\n  ]\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "d670ed0d-d10c-4031-bb92-dc91d8fda8e8",
                "type": "text/javascript",
                "exec": [
                  "./portman/pm-login.json",
                  "// Validate status 2xx \npm.test(\"[PUT]::/api/protocols/amducatags - Status code is 2xx\", function () {\n   pm.response.to.be.success;\n});\n"
                ]
              }
            }
          ],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        {
          "id": "511a51aa-1415-4d70-b2f5-345e210a451e",
          "name": "list of all Tags",
          "request": {
            "name": "list of all Tags",
            "description": {
              "content": "Returns the full array of tags for protocols and treatments.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "api",
                "protocols",
                "tags"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "GET"
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "f844e477-0dfb-42f2-b77d-a0bdd2ce66f0",
                "type": "text/javascript",
                "exec": [
                  "./portman/pm-login.json",
                  "// Validate status 2xx \npm.test(\"[GET]::/api/protocols/tags - Status code is 2xx\", function () {\n   pm.response.to.be.success;\n});\n"
                ]
              }
            }
          ]
        },
        {
          "id": "81798590-b368-4436-8964-c269a6d2ac02",
          "name": "execute Remedy",
          "request": {
            "name": "execute Remedy",
            "description": {
              "content": "Apply a Remedy to a Protocol, returning the fixed Protocol.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "api",
                "protocols",
                "tags",
                "remedies"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "PUT",
            "body": {
              "mode": "raw",
              "raw": "{\n  \"protocol\": {\n    \"ownerId\": 1,\n    \"name\": \"wip\",\n    \"status\": \"PRESCRIBED\",\n    \"instructions\": {\n      \"considerations\": \"<p>This is just an example, not a real protocol.</p>\",\n      \"restrictions\": \"<p>Not for use on real animals.</p>\",\n      \"dothis\": \"<h3>Examinations to perform</h3>\",\n      \"recordthis\": \"<p>record every step in your notebook.</p>\",\n      \"success\": \"<p>All problems are gone</p>\",\n      \"failure\": \"<p>One or more problems remain</p>\",\n      \"references\": \"<a href=\\\"https://en.wikipedia.org/wiki/Rickrolling\\\">Wikipedia</a>\"\n    },\n    \"id\": 12345,\n    \"shortname\": \"wip\",\n    \"created\": \"2006-10-30T07:42:45.958Z\",\n    \"edited\": \"1947-03-25T23:02:50.436Z\",\n    \"vetNote\": \"consider prescribing protocol x instead\",\n    \"wtMeatHrs\": 22,\n    \"wtMilkHrs\": 5,\n    \"shareAll\": true,\n    \"shareClonable\": true,\n    \"caseDefinition\": {\n      \"requireId\": false,\n      \"requireMor\": false,\n      \"contraindications\": \"\",\n      \"medical\": \"if fever is present, consider Protocol 12345 instead.\",\n      \"economic\": \"\",\n      \"note\": \"\"\n    },\n    \"treatments\": [\n      {\n        \"product\": \"MiracleMed\",\n        \"route\": \"wip\",\n        \"dosage\": {\n          \"doseId\": 21871724\n        },\n        \"sequenceFunction\": {\n          \"_type\": \"models.SeqSingleDose\"\n        },\n        \"sizeFunction\": {\n          \"_type\": \"models.FixedDoseFunction\",\n          \"dose\": {\n            \"quantity\": {\n              \"dimension\": \"Mass\",\n              \"value\": 3,\n              \"symbol\": \"oz\"\n            }\n          }\n        },\n        \"id\": \"B-123\",\n        \"ownerId\": 0,\n        \"description\": \"3.0 ml per kg repeat\",\n        \"eligibilities\": [\n          {\n            \"id\": 1,\n            \"name\": \"Beef Cattle\",\n            \"fdaSpecies\": [\n              \"beef_cattle\",\n              \"emus\"\n            ]\n          },\n          {\n            \"id\": 1,\n            \"name\": \"Beef Cattle\",\n            \"fdaSpecies\": [\n              \"catfish\",\n              \"catfish\"\n            ]\n          }\n        ],\n        \"_dose\": \"3.0 ml per kg repeat in 6 hours and again in 24 hours\",\n        \"wtMeatHrs\": -46755825,\n        \"wtMilkHrs\": 25440776,\n        \"nada\": \"wip\",\n        \"tags\": [\n          {\n            \"id\": 8,\n            \"color\": \"#516cc6\",\n            \"name\": \"eiu\",\n            \"fixes\": [\n              {\n                \"_type\": {\n                  \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"detail\": {\n                  \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"message\": {\n                  \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"title\": {\n                  \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                }\n              },\n              {\n                \"_type\": {\n                  \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"detail\": {\n                  \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"message\": {\n                  \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"title\": {\n                  \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                }\n              }\n            ]\n          },\n          {\n            \"id\": 8,\n            \"color\": \"#516cc6\",\n            \"name\": \"nostrud\",\n            \"fixes\": [\n              {\n                \"_type\": {\n                  \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"detail\": {\n                  \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"message\": {\n                  \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"title\": {\n                  \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                }\n              },\n              {\n                \"_type\": {\n                  \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"detail\": {\n                  \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"message\": {\n                  \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"title\": {\n                  \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                }\n              }\n            ]\n          }\n        ],\n        \"note\": \"<p>a free-form note</p>\",\n        \"amduca\": \"OFFLABEL\"\n      },\n      {\n        \"product\": \"MiracleMed\",\n        \"route\": \"wip\",\n        \"dosage\": {\n          \"doseId\": -40379386\n        },\n        \"sequenceFunction\": {\n          \"_type\": \"models.SeqSingleDose\"\n        },\n        \"sizeFunction\": {\n          \"_type\": \"models.FixedDoseFunction\",\n          \"dose\": {\n            \"quantity\": {\n              \"dimension\": \"Mass\",\n              \"value\": 3,\n              \"symbol\": \"oz\"\n            }\n          }\n        },\n        \"id\": \"B-123\",\n        \"ownerId\": 0,\n        \"description\": \"3.0 ml per kg repeat\",\n        \"eligibilities\": [\n          {\n            \"id\": 1,\n            \"name\": \"Beef Cattle\",\n            \"fdaSpecies\": [\n              \"salmon\",\n              \"veal\"\n            ]\n          },\n          {\n            \"id\": 1,\n            \"name\": \"Beef Cattle\",\n            \"fdaSpecies\": [\n              \"unidentified\",\n              \"dairy_cattle\"\n            ]\n          }\n        ],\n        \"_dose\": \"3.0 ml per kg repeat in 6 hours and again in 24 hours\",\n        \"wtMeatHrs\": -6664348,\n        \"wtMilkHrs\": -4460161,\n        \"nada\": \"wip\",\n        \"tags\": [\n          {\n            \"id\": 8,\n            \"color\": \"#516cc6\",\n            \"name\": \"incididunt \",\n            \"fixes\": [\n              {\n                \"_type\": {\n                  \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"detail\": {\n                  \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"message\": {\n                  \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"title\": {\n                  \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                }\n              },\n              {\n                \"_type\": {\n                  \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"detail\": {\n                  \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"message\": {\n                  \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"title\": {\n                  \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                }\n              }\n            ]\n          },\n          {\n            \"id\": 8,\n            \"color\": \"#516cc6\",\n            \"name\": \"occaecat enim \",\n            \"fixes\": [\n              {\n                \"_type\": {\n                  \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"detail\": {\n                  \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"message\": {\n                  \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"title\": {\n                  \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                }\n              },\n              {\n                \"_type\": {\n                  \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"detail\": {\n                  \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"message\": {\n                  \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"title\": {\n                  \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                }\n              }\n            ]\n          }\n        ],\n        \"note\": \"<p>a free-form note</p>\",\n        \"amduca\": \"UNIDENTIFIED\"\n      }\n    ],\n    \"tags\": [\n      {\n        \"id\": 8,\n        \"color\": \"#516cc6\",\n        \"name\": \"culpa\",\n        \"fixes\": [\n          {\n            \"_type\": \"proident in laboru\",\n            \"detail\": \"veniam dolor\",\n            \"message\": \"aute ipsum minim\",\n            \"title\": \"pariatur Lorem\"\n          },\n          {\n            \"_type\": \"labore c\",\n            \"detail\": \"aute exercitation minim dolor\",\n            \"message\": \"laboris laborum fugiat ut\",\n            \"title\": \"Ut\"\n          }\n        ]\n      },\n      {\n        \"id\": 8,\n        \"color\": \"#516cc6\",\n        \"name\": \"ad ut\",\n        \"fixes\": [\n          {\n            \"_type\": \"sit enim\",\n            \"detail\": \"nostrud irure ullamco\",\n            \"message\": \"Duis occaecat in reprehenderit\",\n            \"title\": \"Ut in laboris elit\"\n          },\n          {\n            \"_type\": \"minim dolo\",\n            \"detail\": \"\",\n            \"message\": \"esse occaecat pariatur nisi\",\n            \"title\": \"reprehenderit ea eu non culpa\"\n          }\n        ]\n      }\n    ],\n    \"diagnoses\": [\n      {\n        \"id\": 8,\n        \"name\": \"Pain/inflammation (musculoskeletal), treatment\"\n      },\n      {\n        \"id\": 8,\n        \"name\": \"Pain/inflammation (musculoskeletal), treatment\"\n      }\n    ],\n    \"eligibilities\": [\n      {\n        \"id\": 1,\n        \"name\": \"Beef Cattle\",\n        \"fdaSpecies\": [\n          \"horses\",\n          \"bison\"\n        ]\n      },\n      {\n        \"id\": 1,\n        \"name\": \"Beef Cattle\",\n        \"fdaSpecies\": [\n          \"goats\",\n          \"turkeys\"\n        ]\n      }\n    ],\n    \"promises\": [\n      {\n        \"_type\": \"models.IdPromise\",\n        \"name\": \"ID promise\",\n        \"descrip\": \"You must give ID for each case enrolled\",\n        \"query\": \"What is the animal's name or number?\",\n        \"when\": \"PT0H\",\n        \"id\": 2345\n      },\n      {\n        \"_type\": \"models.IdPromise\",\n        \"name\": \"ID promise\",\n        \"descrip\": \"You must give ID for each case enrolled\",\n        \"query\": \"What is the animal's name or number?\",\n        \"when\": \"PT0H\",\n        \"id\": 2345\n      }\n    ],\n    \"metadata\": [\n      {\n        \"key\": \"popularity\",\n        \"value\": \"good 1.2\"\n      },\n      {\n        \"key\": \"popularity\",\n        \"value\": \"good 1.2\"\n      }\n    ]\n  },\n  \"remedy\": {\n    \"_type\": \"ut sint dolore\",\n    \"detail\": \"veniam nulla dolor\",\n    \"message\": \"incididunt in\",\n    \"title\": \"ut\"\n  }\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "172bd7a8-40bb-4b05-a456-6a963d82254f",
                "type": "text/javascript",
                "exec": [
                  "./portman/pm-login.json",
                  "// Validate status 2xx \npm.test(\"[PUT]::/api/protocols/tags/remedies - Status code is 2xx\", function () {\n   pm.response.to.be.success;\n});\n"
                ]
              }
            }
          ],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        {
          "id": "d4779b82-87a8-4ee8-b837-c6e099c5c9e4",
          "name": "list of all Promises",
          "request": {
            "name": "list of all Promises",
            "description": {
              "content": "This endpoint returns the full array of available Promises.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "api",
                "protocols",
                "promises"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "GET"
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "cc989a0e-460c-4271-acb0-aae30befac83",
                "type": "text/javascript",
                "exec": [
                  "./portman/pm-login.json",
                  "// Validate status 2xx \npm.test(\"[GET]::/api/protocols/promises - Status code is 2xx\", function () {\n   pm.response.to.be.success;\n});\n"
                ]
              }
            }
          ]
        },
        {
          "id": "0ac4d067-b5ed-4c86-ba48-e63eef1f9aab",
          "name": "Promises in a Protocol",
          "request": {
            "name": "Promises in a Protocol",
            "description": {
              "content": "Return Promises contained within a Protocol.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "api",
                "protocols",
                "promises",
                ":id"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": [
                {
                  "disabled": false,
                  "description": {
                    "content": "(Required) protocol  ID",
                    "type": "text/plain"
                  },
                  "type": "any",
                  "value": "32",
                  "key": "id"
                }
              ]
            },
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "GET"
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "c0e063ad-1fc4-41af-823a-67b5e1443912",
                "type": "text/javascript",
                "exec": [
                  "./portman/pm-login.json",
                  "// Validate status 2xx \npm.test(\"[GET]::/api/protocols/promises/:id - Status code is 2xx\", function () {\n   pm.response.to.be.success;\n});\n"
                ]
              }
            }
          ]
        },
        {
          "id": "d431e3da-bd46-483e-b9fa-57274bf3ab94",
          "name": "send a message to another user",
          "request": {
            "name": "send a message to another user",
            "description": {
              "content": "send a message to another user",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "api",
                "messages"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": false,
                  "description": {
                    "content": "Mode(s) or channel(s) to use in messaging, defaulting to EMAIL",
                    "type": "text/plain"
                  },
                  "key": "modes",
                  "value": "EMAIL|EMAIL"
                }
              ],
              "variable": []
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n  \"_type\": \"models.SimpleMessage\",\n  \"from\": 99,\n  \"to\": 99,\n  \"subject\": \"aliquip\",\n  \"message\": \"Hello <b>world</b>\",\n  \"detail\": \"amet dolor ut elit occaecat\"\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "6de40d32-485d-4a47-a36c-be4d11529ef3",
                "type": "text/javascript",
                "exec": [
                  "./portman/pm-login.json"
                ]
              }
            }
          ],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        {
          "id": "04164527-8df1-43ec-8809-d342e1616d16",
          "name": "protocols owned by user",
          "request": {
            "name": "protocols owned by user",
            "description": {
              "content": "Retrieve all Protocols owned by, or shared with, the current User. The default excludes deleted (status DEPRECATED) protocols.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "api",
                "protocols"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": false,
                  "description": {
                    "content": "filter Protocols to include only Protocols with listed statuses. If this parameter is omitted, the query defaults to all status values **except** DEPRECATED.",
                    "type": "text/plain"
                  },
                  "key": "status",
                  "value": "PRESCRIBED|PRESCRIBED"
                }
              ],
              "variable": []
            },
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "GET"
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "458092df-d37d-4b00-8fa5-5e2fe1b58635",
                "type": "text/javascript",
                "exec": [
                  "./portman/pm-login.json"
                ]
              }
            }
          ]
        },
        {
          "id": "c6f7a8cd-70d8-40da-988b-5d7ad4a4946f",
          "name": "record and validate aprotocol",
          "request": {
            "name": "record and validate aprotocol",
            "description": {
              "content": "This endpoint saves and validates a Protocol.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "api",
                "protocols"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n  \"ownerId\": 1,\n  \"name\": \"wip\",\n  \"status\": \"PRESCRIBED\",\n  \"instructions\": {\n    \"considerations\": \"<p>This is just an example, not a real protocol.</p>\",\n    \"restrictions\": \"<p>Not for use on real animals.</p>\",\n    \"dothis\": \"<h3>Examinations to perform</h3>\",\n    \"recordthis\": \"<p>record every step in your notebook.</p>\",\n    \"success\": \"<p>All problems are gone</p>\",\n    \"failure\": \"<p>One or more problems remain</p>\",\n    \"references\": \"<a href=\\\"https://en.wikipedia.org/wiki/Rickrolling\\\">Wikipedia</a>\"\n  },\n  \"id\": 12345,\n  \"shortname\": \"wip\",\n  \"created\": \"1987-03-19T08:04:27.824Z\",\n  \"edited\": \"1944-09-10T14:16:31.890Z\",\n  \"vetNote\": \"consider prescribing protocol x instead\",\n  \"wtMeatHrs\": 22,\n  \"wtMilkHrs\": 5,\n  \"shareAll\": true,\n  \"shareClonable\": true,\n  \"caseDefinition\": {\n    \"requireId\": false,\n    \"requireMor\": false,\n    \"contraindications\": \"\",\n    \"medical\": \"if fever is present, consider Protocol 12345 instead.\",\n    \"economic\": \"\",\n    \"note\": \"\"\n  },\n  \"treatments\": [\n    {\n      \"product\": \"MiracleMed\",\n      \"route\": \"wip\",\n      \"dosage\": {\n        \"doseId\": -90559760\n      },\n      \"sequenceFunction\": {\n        \"_type\": \"models.SeqSingleDose\"\n      },\n      \"sizeFunction\": {\n        \"_type\": \"models.FixedDoseFunction\",\n        \"dose\": {\n          \"quantity\": {\n            \"dimension\": \"Mass\",\n            \"value\": 3,\n            \"symbol\": \"oz\"\n          }\n        }\n      },\n      \"id\": \"B-123\",\n      \"ownerId\": 0,\n      \"description\": \"3.0 ml per kg repeat\",\n      \"eligibilities\": [\n        {\n          \"id\": 1,\n          \"name\": \"Beef Cattle\",\n          \"fdaSpecies\": [\n            \"dogs\",\n            \"beef_cattle\"\n          ]\n        },\n        {\n          \"id\": 1,\n          \"name\": \"Beef Cattle\",\n          \"fdaSpecies\": [\n            \"llamas\",\n            \"veal\"\n          ]\n        }\n      ],\n      \"_dose\": \"3.0 ml per kg repeat in 6 hours and again in 24 hours\",\n      \"wtMeatHrs\": -10814941,\n      \"wtMilkHrs\": -36838316,\n      \"nada\": \"wip\",\n      \"tags\": [\n        {\n          \"id\": 8,\n          \"color\": \"#516cc6\",\n          \"name\": \"i\",\n          \"fixes\": [\n            {\n              \"_type\": \"dolore mollit \",\n              \"detail\": \"consequat ullamco\",\n              \"message\": \"culpa in exercitation\",\n              \"title\": \"cupidatat ea labore\"\n            },\n            {\n              \"_type\": \"in occaecat Excepteur nostrud eu\",\n              \"detail\": \"commodo Ut nostrud exercitation est\",\n              \"message\": \"ea cupidatat\",\n              \"title\": \"Lorem laboris ipsum\"\n            }\n          ]\n        },\n        {\n          \"id\": 8,\n          \"color\": \"#516cc6\",\n          \"name\": \"i\",\n          \"fixes\": [\n            {\n              \"_type\": \"fugiat\",\n              \"detail\": \"ea Lorem\",\n              \"message\": \"ut o\",\n              \"title\": \"proident\"\n            },\n            {\n              \"_type\": \"sunt magna laboris\",\n              \"detail\": \"est aute\",\n              \"message\": \"ut esse\",\n              \"title\": \"ir\"\n            }\n          ]\n        }\n      ],\n      \"note\": \"<p>a free-form note</p>\",\n      \"amduca\": \"UNIDENTIFIED\"\n    },\n    {\n      \"product\": \"MiracleMed\",\n      \"route\": \"wip\",\n      \"dosage\": {\n        \"doseId\": -51194664\n      },\n      \"sequenceFunction\": {\n        \"_type\": \"models.SeqSingleDose\"\n      },\n      \"sizeFunction\": {\n        \"_type\": \"models.FixedDoseFunction\",\n        \"dose\": {\n          \"quantity\": {\n            \"dimension\": \"Mass\",\n            \"value\": 3,\n            \"symbol\": \"oz\"\n          }\n        }\n      },\n      \"id\": \"B-123\",\n      \"ownerId\": 0,\n      \"description\": \"3.0 ml per kg repeat\",\n      \"eligibilities\": [\n        {\n          \"id\": 1,\n          \"name\": \"Beef Cattle\",\n          \"fdaSpecies\": [\n            \"sheep\",\n            \"salmon\"\n          ]\n        },\n        {\n          \"id\": 1,\n          \"name\": \"Beef Cattle\",\n          \"fdaSpecies\": [\n            \"unidentified\",\n            \"veal\"\n          ]\n        }\n      ],\n      \"_dose\": \"3.0 ml per kg repeat in 6 hours and again in 24 hours\",\n      \"wtMeatHrs\": 69655841,\n      \"wtMilkHrs\": 31956602,\n      \"nada\": \"wip\",\n      \"tags\": [\n        {\n          \"id\": 8,\n          \"color\": \"#516cc6\",\n          \"name\": \"ipsum conse\",\n          \"fixes\": [\n            {\n              \"_type\": \"dolor commodo minim ut eu\",\n              \"detail\": \"ullamco consequat\",\n              \"message\": \"dolore quis laboris\",\n              \"title\": \"ut ex\"\n            },\n            {\n              \"_type\": \"in dolor ullam\",\n              \"detail\": \"Lorem aute\",\n              \"message\": \"aliqua commodo sunt\",\n              \"title\": \"in\"\n            }\n          ]\n        },\n        {\n          \"id\": 8,\n          \"color\": \"#516cc6\",\n          \"name\": \"sint mo\",\n          \"fixes\": [\n            {\n              \"_type\": \"id elit cupidatat\",\n              \"detail\": \"c\",\n              \"message\": \"Excepteur\",\n              \"title\": \"dolor tempor nisi\"\n            },\n            {\n              \"_type\": \"aliqua aute do ad\",\n              \"detail\": \"pariatur ex Duis\",\n              \"message\": \"incididunt eu\",\n              \"title\": \"dolore irure\"\n            }\n          ]\n        }\n      ],\n      \"note\": \"<p>a free-form note</p>\",\n      \"amduca\": \"ONLABEL\"\n    }\n  ],\n  \"tags\": [\n    {\n      \"id\": 8,\n      \"color\": \"#516cc6\",\n      \"name\": \"veniam Lorem la\",\n      \"fixes\": [\n        {\n          \"_type\": \"tempor voluptate non elit eiusmod\",\n          \"detail\": \"ad\",\n          \"message\": \"culpa ven\",\n          \"title\": \"nisi\"\n        },\n        {\n          \"_type\": \"labore ut\",\n          \"detail\": \"cupidatat officia\",\n          \"message\": \"et\",\n          \"title\": \"ea amet incididunt officia\"\n        }\n      ]\n    },\n    {\n      \"id\": 8,\n      \"color\": \"#516cc6\",\n      \"name\": \"reprehe\",\n      \"fixes\": [\n        {\n          \"_type\": \"officia exercitation ut in\",\n          \"detail\": \"aliquip cupidatat\",\n          \"message\": \"enim velit cillum quis\",\n          \"title\": \"culpa aliqua laborum\"\n        },\n        {\n          \"_type\": \"magna elit cillum aute\",\n          \"detail\": \"mol\",\n          \"message\": \"proident voluptate\",\n          \"title\": \"incididunt cupid\"\n        }\n      ]\n    }\n  ],\n  \"diagnoses\": [\n    {\n      \"id\": 8,\n      \"name\": \"Pain/inflammation (musculoskeletal), treatment\"\n    },\n    {\n      \"id\": 8,\n      \"name\": \"Pain/inflammation (musculoskeletal), treatment\"\n    }\n  ],\n  \"eligibilities\": [\n    {\n      \"id\": 1,\n      \"name\": \"Beef Cattle\",\n      \"fdaSpecies\": [\n        \"cats\",\n        \"beef_cattle\"\n      ]\n    },\n    {\n      \"id\": 1,\n      \"name\": \"Beef Cattle\",\n      \"fdaSpecies\": [\n        \"chickens\",\n        \"swine\"\n      ]\n    }\n  ],\n  \"promises\": [\n    {\n      \"_type\": \"models.IdPromise\",\n      \"name\": \"ID promise\",\n      \"descrip\": \"You must give ID for each case enrolled\",\n      \"query\": \"What is the animal's name or number?\",\n      \"when\": \"PT0H\",\n      \"id\": 2345\n    },\n    {\n      \"_type\": \"models.IdPromise\",\n      \"name\": \"ID promise\",\n      \"descrip\": \"You must give ID for each case enrolled\",\n      \"query\": \"What is the animal's name or number?\",\n      \"when\": \"PT0H\",\n      \"id\": 2345\n    }\n  ],\n  \"metadata\": [\n    {\n      \"key\": \"popularity\",\n      \"value\": \"good 1.2\"\n    },\n    {\n      \"key\": \"popularity\",\n      \"value\": \"good 1.2\"\n    }\n  ]\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "227e1595-86d2-48ad-b933-0268b77a60d4",
                "type": "text/javascript",
                "exec": [
                  "./portman/pm-login.json"
                ]
              }
            }
          ],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        {
          "id": "c3ccb504-a2bd-400d-bf25-99b67ce0a98e",
          "name": "update protocol",
          "request": {
            "name": "update protocol",
            "description": {
              "content": "This endpoint updates and validates a Protocol.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "api",
                "protocols"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "PUT",
            "body": {
              "mode": "raw",
              "raw": "{\n  \"ownerId\": 1,\n  \"name\": \"wip\",\n  \"status\": \"PRESCRIBED\",\n  \"instructions\": {\n    \"considerations\": \"<p>This is just an example, not a real protocol.</p>\",\n    \"restrictions\": \"<p>Not for use on real animals.</p>\",\n    \"dothis\": \"<h3>Examinations to perform</h3>\",\n    \"recordthis\": \"<p>record every step in your notebook.</p>\",\n    \"success\": \"<p>All problems are gone</p>\",\n    \"failure\": \"<p>One or more problems remain</p>\",\n    \"references\": \"<a href=\\\"https://en.wikipedia.org/wiki/Rickrolling\\\">Wikipedia</a>\"\n  },\n  \"id\": 12345,\n  \"shortname\": \"wip\",\n  \"created\": \"1987-03-19T08:04:27.824Z\",\n  \"edited\": \"1944-09-10T14:16:31.890Z\",\n  \"vetNote\": \"consider prescribing protocol x instead\",\n  \"wtMeatHrs\": 22,\n  \"wtMilkHrs\": 5,\n  \"shareAll\": true,\n  \"shareClonable\": true,\n  \"caseDefinition\": {\n    \"requireId\": false,\n    \"requireMor\": false,\n    \"contraindications\": \"\",\n    \"medical\": \"if fever is present, consider Protocol 12345 instead.\",\n    \"economic\": \"\",\n    \"note\": \"\"\n  },\n  \"treatments\": [\n    {\n      \"product\": \"MiracleMed\",\n      \"route\": \"wip\",\n      \"dosage\": {\n        \"doseId\": -90559760\n      },\n      \"sequenceFunction\": {\n        \"_type\": \"models.SeqSingleDose\"\n      },\n      \"sizeFunction\": {\n        \"_type\": \"models.FixedDoseFunction\",\n        \"dose\": {\n          \"quantity\": {\n            \"dimension\": \"Mass\",\n            \"value\": 3,\n            \"symbol\": \"oz\"\n          }\n        }\n      },\n      \"id\": \"B-123\",\n      \"ownerId\": 0,\n      \"description\": \"3.0 ml per kg repeat\",\n      \"eligibilities\": [\n        {\n          \"id\": 1,\n          \"name\": \"Beef Cattle\",\n          \"fdaSpecies\": [\n            \"dogs\",\n            \"beef_cattle\"\n          ]\n        },\n        {\n          \"id\": 1,\n          \"name\": \"Beef Cattle\",\n          \"fdaSpecies\": [\n            \"llamas\",\n            \"veal\"\n          ]\n        }\n      ],\n      \"_dose\": \"3.0 ml per kg repeat in 6 hours and again in 24 hours\",\n      \"wtMeatHrs\": -10814941,\n      \"wtMilkHrs\": -36838316,\n      \"nada\": \"wip\",\n      \"tags\": [\n        {\n          \"id\": 8,\n          \"color\": \"#516cc6\",\n          \"name\": \"i\",\n          \"fixes\": [\n            {\n              \"_type\": \"dolore mollit \",\n              \"detail\": \"consequat ullamco\",\n              \"message\": \"culpa in exercitation\",\n              \"title\": \"cupidatat ea labore\"\n            },\n            {\n              \"_type\": \"in occaecat Excepteur nostrud eu\",\n              \"detail\": \"commodo Ut nostrud exercitation est\",\n              \"message\": \"ea cupidatat\",\n              \"title\": \"Lorem laboris ipsum\"\n            }\n          ]\n        },\n        {\n          \"id\": 8,\n          \"color\": \"#516cc6\",\n          \"name\": \"i\",\n          \"fixes\": [\n            {\n              \"_type\": \"fugiat\",\n              \"detail\": \"ea Lorem\",\n              \"message\": \"ut o\",\n              \"title\": \"proident\"\n            },\n            {\n              \"_type\": \"sunt magna laboris\",\n              \"detail\": \"est aute\",\n              \"message\": \"ut esse\",\n              \"title\": \"ir\"\n            }\n          ]\n        }\n      ],\n      \"note\": \"<p>a free-form note</p>\",\n      \"amduca\": \"UNIDENTIFIED\"\n    },\n    {\n      \"product\": \"MiracleMed\",\n      \"route\": \"wip\",\n      \"dosage\": {\n        \"doseId\": -51194664\n      },\n      \"sequenceFunction\": {\n        \"_type\": \"models.SeqSingleDose\"\n      },\n      \"sizeFunction\": {\n        \"_type\": \"models.FixedDoseFunction\",\n        \"dose\": {\n          \"quantity\": {\n            \"dimension\": \"Mass\",\n            \"value\": 3,\n            \"symbol\": \"oz\"\n          }\n        }\n      },\n      \"id\": \"B-123\",\n      \"ownerId\": 0,\n      \"description\": \"3.0 ml per kg repeat\",\n      \"eligibilities\": [\n        {\n          \"id\": 1,\n          \"name\": \"Beef Cattle\",\n          \"fdaSpecies\": [\n            \"sheep\",\n            \"salmon\"\n          ]\n        },\n        {\n          \"id\": 1,\n          \"name\": \"Beef Cattle\",\n          \"fdaSpecies\": [\n            \"unidentified\",\n            \"veal\"\n          ]\n        }\n      ],\n      \"_dose\": \"3.0 ml per kg repeat in 6 hours and again in 24 hours\",\n      \"wtMeatHrs\": 69655841,\n      \"wtMilkHrs\": 31956602,\n      \"nada\": \"wip\",\n      \"tags\": [\n        {\n          \"id\": 8,\n          \"color\": \"#516cc6\",\n          \"name\": \"ipsum conse\",\n          \"fixes\": [\n            {\n              \"_type\": \"dolor commodo minim ut eu\",\n              \"detail\": \"ullamco consequat\",\n              \"message\": \"dolore quis laboris\",\n              \"title\": \"ut ex\"\n            },\n            {\n              \"_type\": \"in dolor ullam\",\n              \"detail\": \"Lorem aute\",\n              \"message\": \"aliqua commodo sunt\",\n              \"title\": \"in\"\n            }\n          ]\n        },\n        {\n          \"id\": 8,\n          \"color\": \"#516cc6\",\n          \"name\": \"sint mo\",\n          \"fixes\": [\n            {\n              \"_type\": \"id elit cupidatat\",\n              \"detail\": \"c\",\n              \"message\": \"Excepteur\",\n              \"title\": \"dolor tempor nisi\"\n            },\n            {\n              \"_type\": \"aliqua aute do ad\",\n              \"detail\": \"pariatur ex Duis\",\n              \"message\": \"incididunt eu\",\n              \"title\": \"dolore irure\"\n            }\n          ]\n        }\n      ],\n      \"note\": \"<p>a free-form note</p>\",\n      \"amduca\": \"ONLABEL\"\n    }\n  ],\n  \"tags\": [\n    {\n      \"id\": 8,\n      \"color\": \"#516cc6\",\n      \"name\": \"veniam Lorem la\",\n      \"fixes\": [\n        {\n          \"_type\": \"tempor voluptate non elit eiusmod\",\n          \"detail\": \"ad\",\n          \"message\": \"culpa ven\",\n          \"title\": \"nisi\"\n        },\n        {\n          \"_type\": \"labore ut\",\n          \"detail\": \"cupidatat officia\",\n          \"message\": \"et\",\n          \"title\": \"ea amet incididunt officia\"\n        }\n      ]\n    },\n    {\n      \"id\": 8,\n      \"color\": \"#516cc6\",\n      \"name\": \"reprehe\",\n      \"fixes\": [\n        {\n          \"_type\": \"officia exercitation ut in\",\n          \"detail\": \"aliquip cupidatat\",\n          \"message\": \"enim velit cillum quis\",\n          \"title\": \"culpa aliqua laborum\"\n        },\n        {\n          \"_type\": \"magna elit cillum aute\",\n          \"detail\": \"mol\",\n          \"message\": \"proident voluptate\",\n          \"title\": \"incididunt cupid\"\n        }\n      ]\n    }\n  ],\n  \"diagnoses\": [\n    {\n      \"id\": 8,\n      \"name\": \"Pain/inflammation (musculoskeletal), treatment\"\n    },\n    {\n      \"id\": 8,\n      \"name\": \"Pain/inflammation (musculoskeletal), treatment\"\n    }\n  ],\n  \"eligibilities\": [\n    {\n      \"id\": 1,\n      \"name\": \"Beef Cattle\",\n      \"fdaSpecies\": [\n        \"cats\",\n        \"beef_cattle\"\n      ]\n    },\n    {\n      \"id\": 1,\n      \"name\": \"Beef Cattle\",\n      \"fdaSpecies\": [\n        \"chickens\",\n        \"swine\"\n      ]\n    }\n  ],\n  \"promises\": [\n    {\n      \"_type\": \"models.IdPromise\",\n      \"name\": \"ID promise\",\n      \"descrip\": \"You must give ID for each case enrolled\",\n      \"query\": \"What is the animal's name or number?\",\n      \"when\": \"PT0H\",\n      \"id\": 2345\n    },\n    {\n      \"_type\": \"models.IdPromise\",\n      \"name\": \"ID promise\",\n      \"descrip\": \"You must give ID for each case enrolled\",\n      \"query\": \"What is the animal's name or number?\",\n      \"when\": \"PT0H\",\n      \"id\": 2345\n    }\n  ],\n  \"metadata\": [\n    {\n      \"key\": \"popularity\",\n      \"value\": \"good 1.2\"\n    },\n    {\n      \"key\": \"popularity\",\n      \"value\": \"good 1.2\"\n    }\n  ]\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "db802048-980b-4ccc-a3dc-cdbd4cbd3060",
                "type": "text/javascript",
                "exec": [
                  "./portman/pm-login.json"
                ]
              }
            }
          ],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        {
          "id": "5d0b50a5-d501-4288-a700-1d4b621f9739",
          "name": "This endpoint validates a protocol without saving it.",
          "request": {
            "name": "This endpoint validates a protocol without saving it.",
            "description": {
              "content": "This endpoint validates a protocol for prescribing without saving it. It should only be called if the user wants to prescribe a protocol without saving changes. The endpoints to save or update protocols automatically include validation.4",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "api",
                "protocols",
                "validate"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "PUT",
            "body": {
              "mode": "raw",
              "raw": "{\n  \"ownerId\": 1,\n  \"name\": \"wip\",\n  \"status\": \"PRESCRIBED\",\n  \"instructions\": {\n    \"considerations\": \"<p>This is just an example, not a real protocol.</p>\",\n    \"restrictions\": \"<p>Not for use on real animals.</p>\",\n    \"dothis\": \"<h3>Examinations to perform</h3>\",\n    \"recordthis\": \"<p>record every step in your notebook.</p>\",\n    \"success\": \"<p>All problems are gone</p>\",\n    \"failure\": \"<p>One or more problems remain</p>\",\n    \"references\": \"<a href=\\\"https://en.wikipedia.org/wiki/Rickrolling\\\">Wikipedia</a>\"\n  },\n  \"id\": 12345,\n  \"shortname\": \"wip\",\n  \"created\": \"1987-03-19T08:04:27.824Z\",\n  \"edited\": \"1944-09-10T14:16:31.890Z\",\n  \"vetNote\": \"consider prescribing protocol x instead\",\n  \"wtMeatHrs\": 22,\n  \"wtMilkHrs\": 5,\n  \"shareAll\": true,\n  \"shareClonable\": true,\n  \"caseDefinition\": {\n    \"requireId\": false,\n    \"requireMor\": false,\n    \"contraindications\": \"\",\n    \"medical\": \"if fever is present, consider Protocol 12345 instead.\",\n    \"economic\": \"\",\n    \"note\": \"\"\n  },\n  \"treatments\": [\n    {\n      \"product\": \"MiracleMed\",\n      \"route\": \"wip\",\n      \"dosage\": {\n        \"doseId\": -90559760\n      },\n      \"sequenceFunction\": {\n        \"_type\": \"models.SeqSingleDose\"\n      },\n      \"sizeFunction\": {\n        \"_type\": \"models.FixedDoseFunction\",\n        \"dose\": {\n          \"quantity\": {\n            \"dimension\": \"Mass\",\n            \"value\": 3,\n            \"symbol\": \"oz\"\n          }\n        }\n      },\n      \"id\": \"B-123\",\n      \"ownerId\": 0,\n      \"description\": \"3.0 ml per kg repeat\",\n      \"eligibilities\": [\n        {\n          \"id\": 1,\n          \"name\": \"Beef Cattle\",\n          \"fdaSpecies\": [\n            \"dogs\",\n            \"beef_cattle\"\n          ]\n        },\n        {\n          \"id\": 1,\n          \"name\": \"Beef Cattle\",\n          \"fdaSpecies\": [\n            \"llamas\",\n            \"veal\"\n          ]\n        }\n      ],\n      \"_dose\": \"3.0 ml per kg repeat in 6 hours and again in 24 hours\",\n      \"wtMeatHrs\": -10814941,\n      \"wtMilkHrs\": -36838316,\n      \"nada\": \"wip\",\n      \"tags\": [\n        {\n          \"id\": 8,\n          \"color\": \"#516cc6\",\n          \"name\": \"i\",\n          \"fixes\": [\n            {\n              \"_type\": \"dolore mollit \",\n              \"detail\": \"consequat ullamco\",\n              \"message\": \"culpa in exercitation\",\n              \"title\": \"cupidatat ea labore\"\n            },\n            {\n              \"_type\": \"in occaecat Excepteur nostrud eu\",\n              \"detail\": \"commodo Ut nostrud exercitation est\",\n              \"message\": \"ea cupidatat\",\n              \"title\": \"Lorem laboris ipsum\"\n            }\n          ]\n        },\n        {\n          \"id\": 8,\n          \"color\": \"#516cc6\",\n          \"name\": \"i\",\n          \"fixes\": [\n            {\n              \"_type\": \"fugiat\",\n              \"detail\": \"ea Lorem\",\n              \"message\": \"ut o\",\n              \"title\": \"proident\"\n            },\n            {\n              \"_type\": \"sunt magna laboris\",\n              \"detail\": \"est aute\",\n              \"message\": \"ut esse\",\n              \"title\": \"ir\"\n            }\n          ]\n        }\n      ],\n      \"note\": \"<p>a free-form note</p>\",\n      \"amduca\": \"UNIDENTIFIED\"\n    },\n    {\n      \"product\": \"MiracleMed\",\n      \"route\": \"wip\",\n      \"dosage\": {\n        \"doseId\": -51194664\n      },\n      \"sequenceFunction\": {\n        \"_type\": \"models.SeqSingleDose\"\n      },\n      \"sizeFunction\": {\n        \"_type\": \"models.FixedDoseFunction\",\n        \"dose\": {\n          \"quantity\": {\n            \"dimension\": \"Mass\",\n            \"value\": 3,\n            \"symbol\": \"oz\"\n          }\n        }\n      },\n      \"id\": \"B-123\",\n      \"ownerId\": 0,\n      \"description\": \"3.0 ml per kg repeat\",\n      \"eligibilities\": [\n        {\n          \"id\": 1,\n          \"name\": \"Beef Cattle\",\n          \"fdaSpecies\": [\n            \"sheep\",\n            \"salmon\"\n          ]\n        },\n        {\n          \"id\": 1,\n          \"name\": \"Beef Cattle\",\n          \"fdaSpecies\": [\n            \"unidentified\",\n            \"veal\"\n          ]\n        }\n      ],\n      \"_dose\": \"3.0 ml per kg repeat in 6 hours and again in 24 hours\",\n      \"wtMeatHrs\": 69655841,\n      \"wtMilkHrs\": 31956602,\n      \"nada\": \"wip\",\n      \"tags\": [\n        {\n          \"id\": 8,\n          \"color\": \"#516cc6\",\n          \"name\": \"ipsum conse\",\n          \"fixes\": [\n            {\n              \"_type\": \"dolor commodo minim ut eu\",\n              \"detail\": \"ullamco consequat\",\n              \"message\": \"dolore quis laboris\",\n              \"title\": \"ut ex\"\n            },\n            {\n              \"_type\": \"in dolor ullam\",\n              \"detail\": \"Lorem aute\",\n              \"message\": \"aliqua commodo sunt\",\n              \"title\": \"in\"\n            }\n          ]\n        },\n        {\n          \"id\": 8,\n          \"color\": \"#516cc6\",\n          \"name\": \"sint mo\",\n          \"fixes\": [\n            {\n              \"_type\": \"id elit cupidatat\",\n              \"detail\": \"c\",\n              \"message\": \"Excepteur\",\n              \"title\": \"dolor tempor nisi\"\n            },\n            {\n              \"_type\": \"aliqua aute do ad\",\n              \"detail\": \"pariatur ex Duis\",\n              \"message\": \"incididunt eu\",\n              \"title\": \"dolore irure\"\n            }\n          ]\n        }\n      ],\n      \"note\": \"<p>a free-form note</p>\",\n      \"amduca\": \"ONLABEL\"\n    }\n  ],\n  \"tags\": [\n    {\n      \"id\": 8,\n      \"color\": \"#516cc6\",\n      \"name\": \"veniam Lorem la\",\n      \"fixes\": [\n        {\n          \"_type\": \"tempor voluptate non elit eiusmod\",\n          \"detail\": \"ad\",\n          \"message\": \"culpa ven\",\n          \"title\": \"nisi\"\n        },\n        {\n          \"_type\": \"labore ut\",\n          \"detail\": \"cupidatat officia\",\n          \"message\": \"et\",\n          \"title\": \"ea amet incididunt officia\"\n        }\n      ]\n    },\n    {\n      \"id\": 8,\n      \"color\": \"#516cc6\",\n      \"name\": \"reprehe\",\n      \"fixes\": [\n        {\n          \"_type\": \"officia exercitation ut in\",\n          \"detail\": \"aliquip cupidatat\",\n          \"message\": \"enim velit cillum quis\",\n          \"title\": \"culpa aliqua laborum\"\n        },\n        {\n          \"_type\": \"magna elit cillum aute\",\n          \"detail\": \"mol\",\n          \"message\": \"proident voluptate\",\n          \"title\": \"incididunt cupid\"\n        }\n      ]\n    }\n  ],\n  \"diagnoses\": [\n    {\n      \"id\": 8,\n      \"name\": \"Pain/inflammation (musculoskeletal), treatment\"\n    },\n    {\n      \"id\": 8,\n      \"name\": \"Pain/inflammation (musculoskeletal), treatment\"\n    }\n  ],\n  \"eligibilities\": [\n    {\n      \"id\": 1,\n      \"name\": \"Beef Cattle\",\n      \"fdaSpecies\": [\n        \"cats\",\n        \"beef_cattle\"\n      ]\n    },\n    {\n      \"id\": 1,\n      \"name\": \"Beef Cattle\",\n      \"fdaSpecies\": [\n        \"chickens\",\n        \"swine\"\n      ]\n    }\n  ],\n  \"promises\": [\n    {\n      \"_type\": \"models.IdPromise\",\n      \"name\": \"ID promise\",\n      \"descrip\": \"You must give ID for each case enrolled\",\n      \"query\": \"What is the animal's name or number?\",\n      \"when\": \"PT0H\",\n      \"id\": 2345\n    },\n    {\n      \"_type\": \"models.IdPromise\",\n      \"name\": \"ID promise\",\n      \"descrip\": \"You must give ID for each case enrolled\",\n      \"query\": \"What is the animal's name or number?\",\n      \"when\": \"PT0H\",\n      \"id\": 2345\n    }\n  ],\n  \"metadata\": [\n    {\n      \"key\": \"popularity\",\n      \"value\": \"good 1.2\"\n    },\n    {\n      \"key\": \"popularity\",\n      \"value\": \"good 1.2\"\n    }\n  ]\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "00446e6e-6aac-4bc0-8b01-831ed92caef5",
                "type": "text/javascript",
                "exec": [
                  "./portman/pm-login.json",
                  "// Validate status 2xx \npm.test(\"[PUT]::/api/protocols/validate - Status code is 2xx\", function () {\n   pm.response.to.be.success;\n});\n"
                ]
              }
            }
          ],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        {
          "id": "a09169a4-ce42-4495-b2df-1835523b50e9",
          "name": "list of all eligibilities",
          "request": {
            "name": "list of all eligibilities",
            "description": {
              "content": "This endpoint returns an array of Eligibilities from which a User may choose. The ID field is authoritative, i.e., is all that is needed to identify a particular Eligibility.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "api",
                "protocols",
                "eligibilities"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "GET"
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "b4774661-abb3-4c03-add3-0baaf070efd6",
                "type": "text/javascript",
                "exec": [
                  "./portman/pm-login.json",
                  "// Validate status 2xx \npm.test(\"[GET]::/api/protocols/eligibilities - Status code is 2xx\", function () {\n   pm.response.to.be.success;\n});\n"
                ]
              }
            }
          ]
        },
        {
          "id": "f93ee007-5371-44b1-b41e-e735a2506af4",
          "name": "list of fda species",
          "request": {
            "name": "list of fda species",
            "description": {
              "content": "\"Species\" is the term FDA uses to describe a class of animals in a label claim.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "api",
                "protocols",
                "eligibilities",
                "fdaspecies"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "GET"
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "056cbe61-c9a7-4e88-ac4c-7b2161088c86",
                "type": "text/javascript",
                "exec": [
                  "./portman/pm-login.json",
                  "// Validate status 2xx \npm.test(\"[GET]::/api/protocols/eligibilities/fdaspecies - Status code is 2xx\", function () {\n   pm.response.to.be.success;\n});\n"
                ]
              }
            }
          ]
        },
        {
          "id": "c3fbf4ff-14ec-4b54-8802-22a6156694de",
          "name": "list of all diagnoses",
          "request": {
            "name": "list of all diagnoses",
            "description": {
              "content": "Returns an array of all coded Diagnoses known to the system.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "api",
                "protocols",
                "diagnoses"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "GET"
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "f439260d-62a9-4dfb-9ab5-00fd921c2972",
                "type": "text/javascript",
                "exec": [
                  "./portman/pm-login.json",
                  "// Validate status 2xx \npm.test(\"[GET]::/api/protocols/diagnoses - Status code is 2xx\", function () {\n   pm.response.to.be.success;\n});\n"
                ]
              }
            }
          ]
        },
        {
          "id": "7d654c16-4732-4a8e-83b3-ded15ea26405",
          "name": "list of library protocols",
          "request": {
            "name": "list of library protocols",
            "description": {
              "content": "This endpoint retrieves all protocols owned by, or shared with, the current User.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "api",
                "protocols",
                "libs"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "GET"
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "9220e486-73a9-4d68-80b6-575a333cf593",
                "type": "text/javascript",
                "exec": [
                  "./portman/pm-login.json",
                  "// Validate status 2xx \npm.test(\"[GET]::/api/protocols/libs - Status code is 2xx\", function () {\n   pm.response.to.be.success;\n});\n"
                ]
              }
            }
          ]
        },
        {
          "id": "f1a6e983-6199-410b-9777-1aeb95d34079",
          "name": "list of all diagnoses",
          "request": {
            "name": "list of all diagnoses",
            "description": {
              "content": "returns an array of Pxes .",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "api",
                "protocols",
                "exclusivestubs"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "GET"
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "901f7c3f-31d4-4b80-bba7-85c09c28a909",
                "type": "text/javascript",
                "exec": [
                  "./portman/pm-login.json",
                  "// Validate status 2xx \npm.test(\"[GET]::/api/protocols/exclusivestubs - Status code is 2xx\", function () {\n   pm.response.to.be.success;\n});\n"
                ]
              }
            }
          ]
        },
        {
          "id": "ac415d4c-e6f8-4274-ac36-a580ff0a3c8c",
          "name": "validate a structured Dosage",
          "request": {
            "name": "validate a structured Dosage",
            "description": {
              "content": "validate a Dosage with SizeFunction and SequewnceFunction returning an test '_dose\" description.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "api",
                "protocols",
                "dosages"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n  \"sequenceFunction\": {\n    \"_type\": \"models.SeqSingleDose\"\n  },\n  \"sizeFunction\": {\n    \"_type\": \"models.FixedDoseFunction\",\n    \"dose\": {\n      \"quantity\": {\n        \"dimension\": \"Mass\",\n        \"value\": 3,\n        \"symbol\": \"oz\"\n      }\n    }\n  }\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "953a0854-23d1-4e43-aeb9-0e201cc00cd6",
                "type": "text/javascript",
                "exec": [
                  "./portman/pm-login.json",
                  "// Validate status 2xx \npm.test(\"[POST]::/api/protocols/dosages - Status code is 2xx\", function () {\n   pm.response.to.be.success;\n});\n"
                ]
              }
            }
          ],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        {
          "id": "8178a80c-22e9-4944-a85c-6c3fe71bc338",
          "name": "list of library pxes",
          "request": {
            "name": "list of library pxes",
            "description": {
              "content": "This endpoint returns all the Protocols owned by, or shared with, the current User.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "api",
                "protocols",
                "libstubs"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "GET"
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "25cd2070-46b9-4d1d-adbc-95701049269c",
                "type": "text/javascript",
                "exec": [
                  "./portman/pm-login.json",
                  "// Validate status 2xx \npm.test(\"[GET]::/api/protocols/libstubs - Status code is 2xx\", function () {\n   pm.response.to.be.success;\n});\n"
                ]
              }
            }
          ]
        },
        {
          "id": "9a2148da-4d4a-491c-bbee-79ae11997f69",
          "name": "retrieve protocol by ID",
          "request": {
            "name": "retrieve protocol by ID",
            "description": {
              "content": "This endpoint retrieves a Protocol by `protocol.id`.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "api",
                "protocols",
                ":id"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": [
                {
                  "disabled": false,
                  "description": {
                    "content": "(Required) Protocol ID key",
                    "type": "text/plain"
                  },
                  "type": "any",
                  "value": "7",
                  "key": "id"
                }
              ]
            },
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "GET"
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "3566d015-627b-47a8-892d-1de525edaacf",
                "type": "text/javascript",
                "exec": [
                  "./portman/pm-login.json",
                  "// Validate status 2xx \npm.test(\"[GET]::/api/protocols/:id - Status code is 2xx\", function () {\n   pm.response.to.be.success;\n});\n"
                ]
              }
            }
          ]
        },
        {
          "id": "34ea2123-f772-4174-88c3-305ee5757da7",
          "name": "delete protocol",
          "request": {
            "name": "delete protocol",
            "description": {
              "content": "Change `protocol.status` to DELETED (this does not actually remove it from the database).",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "api",
                "protocols",
                ":id"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": [
                {
                  "disabled": false,
                  "description": {
                    "content": "(Required) Protocol ID key",
                    "type": "text/plain"
                  },
                  "type": "any",
                  "value": "37168990",
                  "key": "id"
                }
              ]
            },
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "DELETE"
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "95a4c639-13b5-441c-a812-47d4aeafb639",
                "type": "text/javascript",
                "exec": [
                  "./portman/pm-login.json",
                  "// Validate status 2xx \npm.test(\"[DELETE]::/api/protocols/:id - Status code is 2xx\", function () {\n   pm.response.to.be.success;\n});\n"
                ]
              }
            }
          ]
        },
        {
          "id": "5da0b641-2ea7-4e23-be9f-8c0325d19411",
          "name": "list of all diagnoses",
          "request": {
            "name": "list of all diagnoses",
            "description": {
              "content": "This",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "api",
                "protocols",
                "prescriptions"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "GET"
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "57621e4e-7137-4301-a2b5-3362588ea20b",
                "type": "text/javascript",
                "exec": [
                  "./portman/pm-login.json",
                  "// Validate status 2xx \npm.test(\"[GET]::/api/protocols/prescriptions - Status code is 2xx\", function () {\n   pm.response.to.be.success;\n});\n"
                ]
              }
            }
          ]
        },
        {
          "id": "4079072f-cf9a-427e-b914-1bf1089a3eb2",
          "name": "list of all diagnoses",
          "request": {
            "name": "list of all diagnoses",
            "description": {
              "content": "returns an array of Prescriptions",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "api",
                "protocols",
                ":id",
                "prescriptions"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": [
                {
                  "disabled": false,
                  "description": {
                    "content": "(Required) Protocol ID key",
                    "type": "text/plain"
                  },
                  "type": "any",
                  "value": "37168990",
                  "key": "id"
                }
              ]
            },
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "GET"
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "de38d8d7-bd8e-4b35-8da0-71cd1712426c",
                "type": "text/javascript",
                "exec": [
                  "./portman/pm-login.json",
                  "// Validate status 2xx \npm.test(\"[GET]::/api/protocols/:id/prescriptions - Status code is 2xx\", function () {\n   pm.response.to.be.success;\n});\n"
                ]
              }
            }
          ]
        },
        {
          "id": "4439d8e1-81b9-49ff-ab48-b5ed2ecd7b5c",
          "name": "retrieve prescription by ID",
          "request": {
            "name": "retrieve prescription by ID",
            "description": {
              "content": "Retrieve a Prescription by `prescription.id`.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "api",
                "protocols",
                "prescriptions",
                ":id"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": [
                {
                  "disabled": false,
                  "description": {
                    "content": "(Required) Prescription ID key",
                    "type": "text/plain"
                  },
                  "type": "any",
                  "value": "Vi1y9kbpEj7Upqy7",
                  "key": "id"
                }
              ]
            },
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "GET"
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "4f625018-e4dd-4f52-ba44-cbcf76bfe213",
                "type": "text/javascript",
                "exec": [
                  "./portman/pm-login.json",
                  "// Validate status 2xx \npm.test(\"[GET]::/api/protocols/prescriptions/:id - Status code is 2xx\", function () {\n   pm.response.to.be.success;\n});\n"
                ]
              }
            }
          ]
        },
        {
          "id": "95d07b1a-a826-4336-9a5c-320887015a89",
          "name": "list of all labelclaims",
          "request": {
            "name": "list of all labelclaims",
            "description": {
              "content": "This endpoint returns the full array of drug labels.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "api",
                "labels"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "GET"
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "43e83f21-45dd-46c1-a7ce-f6e664c7ee97",
                "type": "text/javascript",
                "exec": [
                  "./portman/pm-login.json"
                ]
              }
            }
          ]
        },
        {
          "id": "30b42276-2ff3-4652-ac5e-826568f92567",
          "name": "labelclaim",
          "request": {
            "name": "labelclaim",
            "description": {
              "content": "Return specified labelclaim.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "api",
                "labels",
                ":id"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": [
                {
                  "disabled": false,
                  "description": {
                    "content": "(Required) labelclaim  ID",
                    "type": "text/plain"
                  },
                  "type": "any",
                  "value": "32",
                  "key": "id"
                }
              ]
            },
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "GET"
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "d9077ab4-16fc-4203-9be3-b17e1e438066",
                "type": "text/javascript",
                "exec": [
                  "./portman/pm-login.json"
                ]
              }
            }
          ]
        },
        {
          "id": "0b28795c-9e3a-4938-8db7-828cfa06505f",
          "name": "package insert",
          "request": {
            "name": "package insert",
            "description": {
              "content": "Retrieve the product package insert.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "api",
                "labels",
                "inserts",
                ":lxId"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": [
                {
                  "disabled": false,
                  "description": {
                    "content": "(Required) label ID",
                    "type": "text/plain"
                  },
                  "type": "any",
                  "value": "32",
                  "key": "lxId"
                }
              ]
            },
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "GET"
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "35e50001-606d-476e-8e31-28367aa1a062",
                "type": "text/javascript",
                "exec": [
                  "./portman/pm-login.json"
                ]
              }
            }
          ]
        },
        {
          "id": "d81f63f5-3c4a-48c7-919a-18c5a9ae4c9d",
          "name": "get detail of a Greenbook Drug as a link",
          "request": {
            "name": "get detail of a Greenbook Drug as a link",
            "description": {
              "content": "This",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "api",
                "spl",
                ":ndc"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": [
                {
                  "disabled": false,
                  "description": {
                    "content": "(Required) unique hyphenated number with up to 10 digits in 2 or 3 segments as labelerCode-productCode-packageCode. packageCode may not be needed.",
                    "type": "text/plain"
                  },
                  "type": "any",
                  "value": "0010-3832",
                  "key": "ndc"
                }
              ]
            },
            "header": [
              {
                "key": "Accept",
                "value": "text/html"
              }
            ],
            "method": "GET"
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "d6879c2a-b16d-4434-a825-4d09b3c0b05d",
                "type": "text/javascript",
                "exec": [
                  "./portman/pm-login.json"
                ]
              }
            }
          ]
        },
        {
          "id": "cc19494f-50a1-432e-8074-079178205a07",
          "name": "get detail of a Greenbook Drug as a link",
          "request": {
            "name": "get detail of a Greenbook Drug as a link",
            "description": {
              "content": "This",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "api",
                "spl",
                ":ndc",
                ":image"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": [
                {
                  "disabled": false,
                  "description": {
                    "content": "(Required) unique hyphenated number with up to 10 digits in 2 or 3 segments as labelerCode-productCode-packageCode. packageCode may not be needed.",
                    "type": "text/plain"
                  },
                  "type": "any",
                  "value": "0010-3495",
                  "key": "ndc"
                },
                {
                  "disabled": false,
                  "description": {
                    "content": "(Required) name of image file",
                    "type": "text/plain"
                  },
                  "type": "any",
                  "value": "601588-image-fake.jpg",
                  "key": "image"
                }
              ]
            },
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "GET"
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "f9176108-9f70-4b70-8d19-2dc4d51ec03f",
                "type": "text/javascript",
                "exec": [
                  "./portman/pm-login.json"
                ]
              }
            }
          ]
        },
        {
          "id": "33b553b1-81e2-4a28-8a69-68488413b0c0",
          "name": "retrieve prescription by ID",
          "request": {
            "name": "retrieve prescription by ID",
            "description": {
              "content": "Retrieve a Prescription by `prescription.id`.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "api",
                "prescriptions",
                ":id",
                ""
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": [
                {
                  "disabled": false,
                  "description": {
                    "content": "(Required) Prescription ID key",
                    "type": "text/plain"
                  },
                  "type": "any",
                  "value": "Vi1y9kbpEj7Upqy7",
                  "key": "id"
                }
              ]
            },
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "GET"
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "9085a301-9fab-4dd2-b504-8821a5b74f5b",
                "type": "text/javascript",
                "exec": [
                  "./portman/pm-login.json"
                ]
              }
            }
          ]
        },
        {
          "id": "8eb757af-12c5-4092-b32d-20ebf2a8aec9",
          "name": "recall or decline a prescription",
          "request": {
            "name": "recall or decline a prescription",
            "description": {
              "content": "Prescriptions are immutable except for metadata, and cannot actually be deleted. This endpoint makes a prescription unavailable for use. If called by the VOR, it sets staus to RECALLED. If called by the MOR to whom it is prescribed, it sets status to DECLINED. New cases  cannot be enrolled if either RECALLED or DECLIENED.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "api",
                "prescriptions",
                ":id",
                ""
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": [
                {
                  "disabled": false,
                  "description": {
                    "content": "(Required) Prescription identifier",
                    "type": "text/plain"
                  },
                  "type": "any",
                  "value": "incididunt ad",
                  "key": "key"
                }
              ]
            },
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "DELETE"
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "93f893d4-b563-4e75-8cce-890c73cf50f0",
                "type": "text/javascript",
                "exec": [
                  "./portman/pm-login.json"
                ]
              }
            }
          ]
        },
        {
          "id": "03593ec5-35ac-458f-9bf2-2bb3b97c30f2",
          "name": "enroll case",
          "request": {
            "name": "enroll case",
            "description": {
              "content": "Creates a Case linked to a prescription.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "api",
                "cases"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n  \"id\": 123,\n  \"rxId\": \"gG3pBCR1GCMKm89c\",\n  \"caseData\": {\n    \"id\": 0,\n    \"rxId\": \"gG3pBCR1GCMKm89c\",\n    \"caseData\": {\n      \"_type\": \"models.IdData\",\n      \"animalId\": \"Bossie\",\n      \"initiationTime\": \"2011-05-10T19:02:43.721Z\"\n    }\n  },\n  \"promiseData\": [\n    {\n      \"_type\": \"models.IdPromise\",\n      \"name\": \"ID promise\",\n      \"descrip\": \"You must give ID for each case enrolled\",\n      \"query\": \"What is the animal's name or number?\",\n      \"when\": \"PT0H\",\n      \"id\": 2345\n    },\n    {\n      \"_type\": \"models.IdPromise\",\n      \"name\": \"ID promise\",\n      \"descrip\": \"You must give ID for each case enrolled\",\n      \"query\": \"What is the animal's name or number?\",\n      \"when\": \"PT0H\",\n      \"id\": 2345\n    }\n  ]\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "dd14e566-ad4e-429f-bcc1-d826501d2502",
                "type": "text/javascript",
                "exec": [
                  "./portman/pm-login.json"
                ]
              }
            }
          ],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        {
          "id": "a235af63-b1c4-4161-9817-3501e268ca62",
          "name": "list of cases",
          "request": {
            "name": "list of cases",
            "description": {
              "content": "Get all current cases for this user",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "api",
                "cases"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "GET"
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "0b246bcc-86de-441a-b7aa-ad7e2a4da460",
                "type": "text/javascript",
                "exec": [
                  "./portman/pm-login.json"
                ]
              }
            }
          ]
        },
        {
          "id": "6f8d0c86-2e82-4317-9968-a8a59ee7c1d2",
          "name": "list  of cases for a rx",
          "request": {
            "name": "list  of cases for a rx",
            "description": {
              "content": "Get all current cases for this prescription and this user",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "api",
                "prescriptions",
                ":rxId",
                "cases"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": [
                {
                  "disabled": false,
                  "description": {
                    "content": "(Required) prescription uuid",
                    "type": "text/plain"
                  },
                  "type": "any",
                  "value": "Vi1y9kbpEj7Upqy7",
                  "key": "rxId"
                }
              ]
            },
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "GET"
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "97041e61-c913-4077-9a0e-49fd96f00cec",
                "type": "text/javascript",
                "exec": [
                  "./portman/pm-login.json"
                ]
              }
            }
          ]
        },
        {
          "id": "a81fe2b5-c754-4a87-9c0e-032afba671ba",
          "name": "execute task",
          "request": {
            "name": "execute task",
            "description": {
              "content": "Mark task status as completed",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "api",
                "users",
                "tasks"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n  \"_type\": \"adipisicing mollit tempor\",\n  \"animalId\": \"this\",\n  \"caseId\": 123,\n  \"detail\": \"anim nulla ipsum eu proident\",\n  \"doAt\": \"1965-10-17T12:52:29.836Z\",\n  \"id\": 123,\n  \"morId\": 123,\n  \"status\": \"REQUIRED\",\n  \"vorId\": 123,\n  \"executor\": 123\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "c6131403-e7da-47fc-b8c0-3ced1e476032",
                "type": "text/javascript",
                "exec": [
                  "./portman/pm-login.json"
                ]
              }
            }
          ],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        {
          "id": "eb23912e-67c5-4d45-b06c-82d1340a018d",
          "name": "list of cases by Rx",
          "request": {
            "name": "list of cases by Rx",
            "description": {
              "content": "Get all current cases for this Rx",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "api",
                "users",
                "tasks"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "GET"
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "e9b0f6ff-cb77-4cfc-96e1-6303e2e4df6c",
                "type": "text/javascript",
                "exec": [
                  "./portman/pm-login.json"
                ]
              }
            }
          ]
        },
        {
          "id": "b07c81fd-c286-4a33-92a1-c79375885e43",
          "name": "get Greenbook Drug summary by NDC pattern",
          "request": {
            "name": "get Greenbook Drug summary by NDC pattern",
            "description": {
              "content": "This endpoint returns the summary listing of a Greenbook Drug by NDC pattern.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "api",
                "admin",
                "product"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": false,
                  "description": {
                    "content": "first section labeler code of a NDC",
                    "type": "text/plain"
                  },
                  "key": "ndcProd",
                  "value": "37168990"
                },
                {
                  "disabled": false,
                  "description": {
                    "content": "mid section product code of a NDC",
                    "type": "text/plain"
                  },
                  "key": "ndcLabeler",
                  "value": "37168990"
                },
                {
                  "disabled": false,
                  "description": {
                    "content": "end section package code of a NDC",
                    "type": "text/plain"
                  },
                  "key": "ndcBrand",
                  "value": "37168990"
                }
              ],
              "variable": []
            },
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "GET"
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "c4f36b09-6a6e-4526-8660-7bd148483d6c",
                "type": "text/javascript",
                "exec": [
                  "./portman/pm-login.json"
                ]
              }
            }
          ]
        },
        {
          "id": "93d8fc59-ea01-4776-a367-2a068b0c17e6",
          "name": "get summary listing of a Greenbook Drug",
          "request": {
            "name": "get summary listing of a Greenbook Drug",
            "description": {
              "content": "This endpoint returns the summary listing of a Greenbook Drug by ndc identifier.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "api",
                "admin",
                "product",
                ":ndc"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": [
                {
                  "disabled": false,
                  "description": {
                    "content": "(Required) unique 10-digit, 3-segment number. labelerCode-productCode-packageCode",
                    "type": "text/plain"
                  },
                  "type": "any",
                  "value": "0061-4321-03",
                  "key": "ndc"
                }
              ]
            },
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "GET"
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "90440bb6-90f0-4ea2-bd59-d576ae77b5f8",
                "type": "text/javascript",
                "exec": [
                  "./portman/pm-login.json"
                ]
              }
            }
          ]
        },
        {
          "id": "851b35b0-7ac6-43e5-a35e-92103d9ec690",
          "name": "get SPL",
          "request": {
            "name": "get SPL",
            "description": {
              "type": "text/plain"
            },
            "url": {
              "path": [
                "api",
                "admin",
                "spl{{ndc}}"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "GET"
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "2cf9e125-1e37-45a9-af3e-549a9848198f",
                "type": "text/javascript",
                "exec": [
                  "./portman/pm-login.json"
                ]
              }
            }
          ]
        }
      ],
      "event": []
    },
    {
      "id": "fa7f5140-f44c-41e3-8a86-d277430fc58d",
      "name": "MOR",
      "description": {
        "content": "available to farm managers.",
        "type": "text/plain"
      },
      "item": [
        {
          "id": "c9be8257-3663-4530-95c7-c3e38f8176f7",
          "name": "load Farm App",
          "request": {
            "name": "load Farm App",
            "description": {
              "content": "load Farm App",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "farm"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Accept",
                "value": "text/html"
              }
            ],
            "method": "GET"
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "12d245e9-9921-4042-ae79-b5b9773961da",
                "type": "text/javascript",
                "exec": [
                  "./portman/pm-login.json"
                ]
              }
            }
          ]
        },
        {
          "id": "9dc4ce44-65cf-44fc-8e1b-24011dc5e027",
          "name": "withholds",
          "request": {
            "name": "withholds",
            "description": {
              "content": "get withholds that include present or future time.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "api",
                "users",
                "withholds"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "GET"
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "0a334c0b-f9bb-4b84-bad9-3126af589549",
                "type": "text/javascript",
                "exec": [
                  "./portman/pm-login.json"
                ]
              }
            }
          ]
        },
        {
          "id": "ad0ef3b6-86ba-451d-a183-2c18cbfb6255",
          "name": "send a message to another user",
          "request": {
            "name": "send a message to another user",
            "description": {
              "content": "send a message to another user",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "api",
                "messages"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": false,
                  "description": {
                    "content": "Mode(s) or channel(s) to use in messaging, defaulting to EMAIL",
                    "type": "text/plain"
                  },
                  "key": "modes",
                  "value": "EMAIL|EMAIL"
                }
              ],
              "variable": []
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n  \"_type\": \"models.SimpleMessage\",\n  \"from\": 99,\n  \"to\": 99,\n  \"subject\": \"aliquip\",\n  \"message\": \"Hello <b>world</b>\",\n  \"detail\": \"amet dolor ut elit occaecat\"\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "df739835-7573-42d0-9175-a143834a5bbb",
                "type": "text/javascript",
                "exec": [
                  "./portman/pm-login.json"
                ]
              }
            }
          ],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        {
          "id": "4e1710d4-c8e8-4f3b-b095-e041307768c3",
          "name": "recall or decline a prescription",
          "request": {
            "name": "recall or decline a prescription",
            "description": {
              "content": "Prescriptions are immutable except for metadata, and cannot actually be deleted. This endpoint makes a prescription unavailable for use. If called by the VOR, it sets staus to RECALLED. If called by the MOR to whom it is prescribed, it sets status to DECLINED. New cases  cannot be enrolled if either RECALLED or DECLIENED.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "api",
                "prescriptions",
                ":id",
                ""
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": [
                {
                  "disabled": false,
                  "description": {
                    "content": "(Required) Prescription identifier",
                    "type": "text/plain"
                  },
                  "type": "any",
                  "value": "incididunt ad",
                  "key": "key"
                }
              ]
            },
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "DELETE"
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "6f1da05f-d377-41ae-9725-2d1a33c2ba47",
                "type": "text/javascript",
                "exec": [
                  "./portman/pm-login.json"
                ]
              }
            }
          ]
        },
        {
          "id": "6555ac6f-2e5a-4675-81dd-ee02646ad090",
          "name": "enroll case",
          "request": {
            "name": "enroll case",
            "description": {
              "content": "Creates a Case linked to a prescription.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "api",
                "cases"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n  \"id\": 123,\n  \"rxId\": \"gG3pBCR1GCMKm89c\",\n  \"caseData\": {\n    \"id\": 0,\n    \"rxId\": \"gG3pBCR1GCMKm89c\",\n    \"caseData\": {\n      \"_type\": \"models.IdData\",\n      \"animalId\": \"Bossie\",\n      \"initiationTime\": \"1991-07-23T12:56:40.678Z\"\n    }\n  },\n  \"promiseData\": [\n    {\n      \"_type\": \"models.IdPromise\",\n      \"name\": \"ID promise\",\n      \"descrip\": \"You must give ID for each case enrolled\",\n      \"query\": \"What is the animal's name or number?\",\n      \"when\": \"PT0H\",\n      \"id\": 2345\n    },\n    {\n      \"_type\": \"models.IdPromise\",\n      \"name\": \"ID promise\",\n      \"descrip\": \"You must give ID for each case enrolled\",\n      \"query\": \"What is the animal's name or number?\",\n      \"when\": \"PT0H\",\n      \"id\": 2345\n    }\n  ]\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "1e11601a-19c9-43b9-8fcd-e1aca0b658ec",
                "type": "text/javascript",
                "exec": [
                  "./portman/pm-login.json"
                ]
              }
            }
          ],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        {
          "id": "46107362-5bba-45a3-aa37-cfcec13d35f3",
          "name": "execute task",
          "request": {
            "name": "execute task",
            "description": {
              "content": "Mark task status as completed",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "api",
                "users",
                "tasks"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n  \"_type\": \"adipisicing mollit tempor\",\n  \"animalId\": \"this\",\n  \"caseId\": 123,\n  \"detail\": \"anim nulla ipsum eu proident\",\n  \"doAt\": \"1965-10-17T12:52:29.836Z\",\n  \"id\": 123,\n  \"morId\": 123,\n  \"status\": \"REQUIRED\",\n  \"vorId\": 123,\n  \"executor\": 123\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "b383677f-0139-4335-982b-1744a21cd00c",
                "type": "text/javascript",
                "exec": [
                  "./portman/pm-login.json"
                ]
              }
            }
          ],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        {
          "id": "65290fec-1aea-4501-96ee-d0527c6c7b11",
          "name": "get SPL",
          "request": {
            "name": "get SPL",
            "description": {
              "type": "text/plain"
            },
            "url": {
              "path": [
                "api",
                "admin",
                "spl{{ndc}}"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "GET"
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "f06953a2-3c38-4dc9-a4f0-83b952bd38b5",
                "type": "text/javascript",
                "exec": [
                  "./portman/pm-login.json"
                ]
              }
            }
          ]
        }
      ],
      "event": []
    },
    {
      "id": "e28037da-d1bb-4090-88af-e86107f84f74",
      "name": "ALL_USERS",
      "description": {
        "content": "available to all users.",
        "type": "text/plain"
      },
      "item": [
        {
          "id": "8d7d84c4-5c8c-4e21-94e8-ae488df672a3",
          "name": "update user data",
          "request": {
            "name": "update user data",
            "description": {
              "content": "Users may update their own data. A VOR may also update User data of a User in a `CLIENT` relationship with that VOR. A SAOR may update data of any User.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "api",
                "users"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "PUT",
            "body": {
              "mode": "raw",
              "raw": "{\n  \"user\": {\n    \"id\": 99,\n    \"uname\": \"exampleUser\",\n    \"userType\": \"VOR\",\n    \"firstname\": \"Example\",\n    \"lastname\": \"User\",\n    \"email\": \"exampleUser@email.com\",\n    \"suffix\": \"DVM\"\n  }\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "1cd1bc1a-f56b-4a33-bea2-9bb9604da426",
                "type": "text/javascript",
                "exec": [
                  "./portman/pm-login.json"
                ]
              }
            }
          ],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        {
          "id": "e6ff1ab0-ffec-45ba-ac3a-9a2b652eff63",
          "name": "user login",
          "request": {
            "name": "user login",
            "description": {
              "content": "Authenticate a User and the app requesting a token, returning a token for use in future secured requests.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "api",
                "users",
                "logins"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n  \"apikey\": \"t0CGzpQ4cgu1OBy44sBt\",\n  \"identifier\": \"someUser\",\n  \"password\": \"somePassword\"\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "d7be1da7-37bd-47ed-a839-ef476670d1e1",
                "type": "text/javascript",
                "exec": [
                  "./portman/pm-login.json"
                ]
              }
            }
          ],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        {
          "id": "497ed9c6-0af1-480b-9659-af69b327bab3",
          "name": "renew token",
          "request": {
            "name": "renew token",
            "description": {
              "content": "Renews the User's access token for use in future secured requests.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "api",
                "users",
                "logins"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "GET"
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "f668643a-4341-444d-9b76-87743b2d3b49",
                "type": "text/javascript",
                "exec": [
                  "./portman/pm-login.json"
                ]
              }
            }
          ]
        },
        {
          "id": "d37b0a37-20fc-40c1-a1b7-88cf5e93c4ee",
          "name": "get user data",
          "request": {
            "name": "get user data",
            "description": {
              "content": "Returns User data as specified by User `id`. Any User may get their own data. A VOR may get User data of Users in a `CLIENT` relationship with that VOR. A SAOR may get data of any User.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "api",
                "users",
                ":id"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": [
                {
                  "disabled": false,
                  "description": {
                    "content": "(Required) User ID key",
                    "type": "text/plain"
                  },
                  "type": "any",
                  "value": "2",
                  "key": "id"
                }
              ]
            },
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "GET"
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "9a132b4b-acf2-4b0b-a7ed-28b553d41b4c",
                "type": "text/javascript",
                "exec": [
                  "./portman/pm-login.json"
                ]
              }
            }
          ]
        },
        {
          "id": "04b71523-31c2-46ab-9f2f-c49c6bc45ab4",
          "name": "list of all",
          "request": {
            "name": "list of all",
            "description": {
              "content": "list of .",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "api",
                "visits",
                ":id"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": [
                {
                  "disabled": false,
                  "description": {
                    "content": "(Required) User ID key",
                    "type": "text/plain"
                  },
                  "type": "any",
                  "value": "2",
                  "key": "id"
                }
              ]
            },
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "GET"
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "89901a38-ffd5-448e-a193-6be914e67b61",
                "type": "text/javascript",
                "exec": [
                  "./portman/pm-login.json"
                ]
              }
            }
          ]
        },
        {
          "id": "c1c372a0-d3f1-4b16-a708-40618e76cbf8",
          "name": "update address",
          "request": {
            "name": "update address",
            "description": {
              "content": "A User may update their own address.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "api",
                "users",
                "addresses"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "PUT",
            "body": {
              "mode": "raw",
              "raw": "{\n  \"user\": {\n    \"id\": 99,\n    \"uname\": \"exampleUser\",\n    \"userType\": \"VOR\",\n    \"firstname\": \"Example\",\n    \"lastname\": \"User\",\n    \"email\": \"exampleUser@email.com\",\n    \"suffix\": \"DVM\"\n  }\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "c1534176-3d05-46ba-a87e-d51e2771d447",
                "type": "text/javascript",
                "exec": [
                  "./portman/pm-login.json"
                ]
              }
            }
          ],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        {
          "id": "4d8dbdc3-0689-44b5-aa0c-6bac16c2c26f",
          "name": "address of user",
          "request": {
            "name": "address of user",
            "description": {
              "content": "Address of user specified by `id`.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "api",
                "users",
                "addresses",
                ":id"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": [
                {
                  "disabled": false,
                  "description": {
                    "content": "(Required) User ID key",
                    "type": "text/plain"
                  },
                  "type": "any",
                  "value": "2",
                  "key": "id"
                }
              ]
            },
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "GET"
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "152d09e3-1c01-435e-b447-e4fa8616bdd6",
                "type": "text/javascript",
                "exec": [
                  "./portman/pm-login.json"
                ]
              }
            }
          ]
        },
        {
          "id": "bee78cbd-8bea-4a66-a0be-9dac49c680c2",
          "name": "update profile",
          "request": {
            "name": "update profile",
            "description": {
              "content": "A User may update their own profile.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "api",
                "users",
                "profiles"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "PUT",
            "body": {
              "mode": "raw",
              "raw": "{\n  \"user\": {\n    \"address1\": \"123 Main St.\",\n    \"address2\": \"123 Main St.\",\n    \"emailNews\": true,\n    \"emailTips\": true,\n    \"firstname\": \"Example\",\n    \"id\": 99,\n    \"lastname\": \"User\",\n    \"rxHeader\": \"laboris officia pariatur aliquip\",\n    \"sandboxName\": \"ullamco labore\",\n    \"state\": \"Any State\",\n    \"town\": \"Anytown\",\n    \"uname\": \"exampleUser\",\n    \"userId\": -92095845,\n    \"userType\": \"VOR\",\n    \"zip\": \"12345-abcd\",\n    \"email\": \"exampleUser@email.com\",\n    \"suffix\": \"DVM\",\n    \"busName\": \"testVOR Clinic\",\n    \"country\": \"USA\"\n  }\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "a0932bee-6262-4cfb-ac9b-161f113938e0",
                "type": "text/javascript",
                "exec": [
                  "./portman/pm-login.json"
                ]
              }
            }
          ],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        {
          "id": "673f5163-da9c-46db-b826-66552d85cc7b",
          "name": "Profile of user",
          "request": {
            "name": "Profile of user",
            "description": {
              "content": "Profile of user specified by `id`.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "api",
                "users",
                "profiles",
                ":id"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": [
                {
                  "disabled": false,
                  "description": {
                    "content": "(Required) User ID key",
                    "type": "text/plain"
                  },
                  "type": "any",
                  "value": "2",
                  "key": "id"
                }
              ]
            },
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "GET"
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "2977665e-4618-4c69-8181-f6d6cfafa1ab",
                "type": "text/javascript",
                "exec": [
                  "./portman/pm-login.json"
                ]
              }
            }
          ]
        },
        {
          "id": "3292659f-3261-46aa-8c61-692399a923f3",
          "name": "confirm Token",
          "request": {
            "name": "confirm Token",
            "description": {
              "content": "used for clickable link to confirm a token sent in email.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "api",
                "users",
                "token",
                ":token"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Accept",
                "value": "text/html"
              }
            ],
            "method": "GET"
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "81668906-dff6-48b4-9178-a945b76d9641",
                "type": "text/javascript",
                "exec": [
                  "./portman/pm-login.json"
                ]
              }
            }
          ]
        },
        {
          "id": "fe681223-617c-4524-be96-5f3976147a91",
          "name": "record a User comment",
          "request": {
            "name": "record a User comment",
            "description": {
              "content": "Records a User comment to the database and emails admin. It supports privacy controls.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "api",
                "users",
                "comments"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n  \"comment\": \"some comment\",\n  \"userId\": 1,\n  \"public\": false\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "58abfdda-d173-4a75-8996-074e36c9b974",
                "type": "text/javascript",
                "exec": [
                  "./portman/pm-login.json"
                ]
              }
            }
          ],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        {
          "id": "222ef738-880f-42da-bd33-27453c758063",
          "name": "respond to a message identified by token",
          "request": {
            "name": "respond to a message identified by token",
            "description": {
              "content": "Respond to a message according to the content in the message, secured by a token that links the response to a UserMessage. Typically token expires in 48 hr.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "messages",
                "ok",
                ":token",
                ""
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": false,
                  "description": {
                    "content": "A message may include a question requiring a yes-or-no response. For example, an email message could include links for \"confirm\" or decline\" with only the first setting the response parameter to true.",
                    "type": "text/plain"
                  },
                  "key": "response",
                  "value": "false"
                }
              ],
              "variable": [
                {
                  "disabled": false,
                  "description": {
                    "content": "(Required) a token supplied in a message asking for a response. Token typically expires in 48 hr.",
                    "type": "text/plain"
                  },
                  "type": "any",
                  "value": "incididunt ad",
                  "key": "token"
                }
              ]
            },
            "header": [
              {
                "key": "Accept",
                "value": "text/html"
              }
            ],
            "method": "GET"
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "ea006ce9-bf31-421a-8f43-a65d32272c02",
                "type": "text/javascript",
                "exec": [
                  "./portman/pm-login.json"
                ]
              }
            }
          ]
        },
        {
          "id": "208546ca-4d6a-4dcb-8c58-91201b6b24f6",
          "name": "list of all diagnoses",
          "request": {
            "name": "list of all diagnoses",
            "description": {
              "content": "Returns an array of keys used to identify help messages.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "api",
                "helpkeys"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "GET"
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "2484bc73-f2aa-41e9-abe0-ae5a5fa93025",
                "type": "text/javascript",
                "exec": [
                  "./portman/pm-login.json"
                ]
              }
            }
          ]
        },
        {
          "id": "023d4f49-b312-4442-9e06-413316cb94e8",
          "name": "help message",
          "request": {
            "name": "help message",
            "description": {
              "content": "return a help message, normally to be displayed in a popup help screen.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "api",
                "help",
                ":key"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": [
                {
                  "disabled": false,
                  "description": {
                    "content": "(Required) help screen key",
                    "type": "text/plain"
                  },
                  "type": "any",
                  "value": "incididunt ad",
                  "key": "key"
                }
              ]
            },
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "GET"
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "fad48098-d37f-467c-a897-024fff4db649",
                "type": "text/javascript",
                "exec": [
                  "./portman/pm-login.json"
                ]
              }
            }
          ]
        },
        {
          "id": "47a42f97-0c49-4f8d-9f46-525eda000bf0",
          "name": "confirm VOR",
          "request": {
            "name": "confirm VOR",
            "description": {
              "type": "text/plain"
            },
            "url": {
              "path": [
                "api",
                "admin",
                "ConfirmVOR"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": false,
                  "key": "sendEmail",
                  "value": "true"
                }
              ],
              "variable": []
            },
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "PUT"
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "c88c0ee3-34f8-4ee6-a86c-1d9b5872b804",
                "type": "text/javascript",
                "exec": [
                  "./portman/pm-login.json"
                ]
              }
            }
          ]
        }
      ],
      "event": []
    },
    {
      "id": "126df701-7c4d-4ea4-9fb8-5c1288952569",
      "name": "SAOR",
      "description": {
        "content": "available to system administrators.",
        "type": "text/plain"
      },
      "item": [
        {
          "id": "e67d5bb9-4605-464d-bab4-92bcab211ebc",
          "name": "load Editor",
          "request": {
            "name": "load Editor",
            "description": {
              "content": "load Protocol Editor",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "editor"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Accept",
                "value": "text/html"
              }
            ],
            "method": "GET"
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "259d3ac6-3fdf-4f06-adc0-4ecd8bc127ec",
                "type": "text/javascript",
                "exec": [
                  "./portman/pm-login.json"
                ]
              }
            }
          ]
        },
        {
          "id": "96d7a7d7-ac6a-4c20-a57c-6ec6d4977d67",
          "name": "load Farm App",
          "request": {
            "name": "load Farm App",
            "description": {
              "content": "load Farm App",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "farm"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Accept",
                "value": "text/html"
              }
            ],
            "method": "GET"
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "3f6816fd-7bec-4360-8eb2-a6d6d0f31b3d",
                "type": "text/javascript",
                "exec": [
                  "./portman/pm-login.json"
                ]
              }
            }
          ]
        },
        {
          "id": "00bb89ea-9777-46b4-8d3b-1a102d2f92d7",
          "name": "load Admin App",
          "request": {
            "name": "load Admin App",
            "description": {
              "content": "load Admin app",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "admin"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Accept",
                "value": "text/html"
              }
            ],
            "method": "GET"
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "01bd8256-7aa6-4204-9792-f610f815db79",
                "type": "text/javascript",
                "exec": [
                  "./portman/pm-login.json"
                ]
              }
            }
          ]
        },
        {
          "id": "85e52d91-051f-4fae-806c-6871088699de",
          "name": "delete user",
          "request": {
            "name": "delete user",
            "description": {
              "content": "This endpoint supports the (reversible) \"delete\" of a User by setting user.status to `REMOVED`. Removed Users are not visible in normal queries.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "api",
                "users",
                ":id"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": [
                {
                  "disabled": false,
                  "description": {
                    "content": "(Required) User ID key",
                    "type": "text/plain"
                  },
                  "type": "any",
                  "value": "5",
                  "key": "id"
                }
              ]
            },
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "DELETE"
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "b5ba3ab3-48f9-4033-8a01-9cb945aeadad",
                "type": "text/javascript",
                "exec": [
                  "./portman/pm-login.json"
                ]
              }
            }
          ]
        },
        {
          "id": "a609e501-5cda-4371-87e2-f6134b56d814",
          "name": "delete sandboxClient",
          "request": {
            "name": "delete sandboxClient",
            "description": {
              "content": "Delete the User and CLIENT Relation records from the database,  irreversibly removing the sandbocx client, but not any existing Prescriptions.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "api",
                "users",
                "sandboxClient"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "DELETE"
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "6d246f1c-9e11-48d7-a045-feda3d9f936a",
                "type": "text/javascript",
                "exec": [
                  "./portman/pm-login.json"
                ]
              }
            }
          ]
        },
        {
          "id": "0b60ecc0-203b-4f2e-91eb-9dc09d47a7a8",
          "name": "create Tag",
          "request": {
            "name": "create Tag",
            "description": {
              "content": "Create a Tag.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "api",
                "protocols",
                "tags"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n  \"id\": 8,\n  \"color\": \"#516cc6\",\n  \"name\": \"deserunt iru\",\n  \"fixes\": [\n    {\n      \"_type\": \"et ullamco\",\n      \"detail\": \"culpa veniam\",\n      \"message\": \"in cupidatat occaecat aliqua\",\n      \"title\": \"voluptate\"\n    },\n    {\n      \"_type\": \"est et\",\n      \"detail\": \"consectetur nulla ullamco\",\n      \"message\": \"veniam officia ullamco dolor\",\n      \"title\": \"aute in sed commodo\"\n    }\n  ]\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "78e617df-503d-41e0-804d-875fbf83249a",
                "type": "text/javascript",
                "exec": [
                  "./portman/pm-login.json",
                  "// Validate status 2xx \npm.test(\"[POST]::/api/protocols/tags - Status code is 2xx\", function () {\n   pm.response.to.be.success;\n});\n"
                ]
              }
            }
          ],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        {
          "id": "4d515d4d-3e16-4512-80a6-a58e9e938688",
          "name": "Tag",
          "request": {
            "name": "Tag",
            "description": {
              "content": "Delete Tag.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "api",
                "protocols",
                "tags",
                ":id"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": [
                {
                  "disabled": false,
                  "description": {
                    "content": "(Required) ",
                    "type": "text/plain"
                  },
                  "type": "any",
                  "value": "37168990",
                  "key": "id"
                }
              ]
            },
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "DELETE"
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "0f2034ff-e168-4933-8ef1-444ac162cc8e",
                "type": "text/javascript",
                "exec": [
                  "./portman/pm-login.json",
                  "// Validate status 2xx \npm.test(\"[DELETE]::/api/protocols/tags/:id - Status code is 2xx\", function () {\n   pm.response.to.be.success;\n});\n"
                ]
              }
            }
          ]
        },
        {
          "id": "efb99298-3617-408d-a04b-3f3838e195de",
          "name": "create Promise",
          "request": {
            "name": "create Promise",
            "description": {
              "type": "text/plain"
            },
            "url": {
              "path": [
                "api",
                "protocols",
                "promises"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "POST"
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "d02c384b-9c0b-403f-86aa-92c78c912977",
                "type": "text/javascript",
                "exec": [
                  "./portman/pm-login.json"
                ]
              }
            }
          ]
        },
        {
          "id": "3dc84cb3-9f21-4442-9c72-bfb174f1e9b4",
          "name": "send a message to another user",
          "request": {
            "name": "send a message to another user",
            "description": {
              "content": "send a message to another user",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "api",
                "messages"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": false,
                  "description": {
                    "content": "Mode(s) or channel(s) to use in messaging, defaulting to EMAIL",
                    "type": "text/plain"
                  },
                  "key": "modes",
                  "value": "EMAIL|EMAIL"
                }
              ],
              "variable": []
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n  \"_type\": \"models.SimpleMessage\",\n  \"from\": 99,\n  \"to\": 99,\n  \"subject\": \"aliquip\",\n  \"message\": \"Hello <b>world</b>\",\n  \"detail\": \"amet dolor ut elit occaecat\"\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "0642dba4-e6ff-4189-bd32-18509a159489",
                "type": "text/javascript",
                "exec": [
                  "./portman/pm-login.json"
                ]
              }
            }
          ],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        {
          "id": "a331e5d9-666d-497b-8282-e9cfcf2be8c5",
          "name": "create Eligibility",
          "request": {
            "name": "create Eligibility",
            "description": {
              "content": "Creation  a Eligibility.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "api",
                "protocols",
                "eligibilities"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n  \"id\": 1,\n  \"name\": \"Beef Cattle\",\n  \"fdaSpecies\": [\n    \"dogs\",\n    \"swine\"\n  ]\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "fde5b6ba-ab44-4237-8b87-d3151f0cad31",
                "type": "text/javascript",
                "exec": [
                  "./portman/pm-login.json",
                  "// Validate status 2xx \npm.test(\"[POST]::/api/protocols/eligibilities - Status code is 2xx\", function () {\n   pm.response.to.be.success;\n});\n"
                ]
              }
            }
          ],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        {
          "id": "c15eedbf-8376-4c54-a7d2-8f2e80023390",
          "name": "Eligibility",
          "request": {
            "name": "Eligibility",
            "description": {
              "content": "Delete Eligibility.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "api",
                "protocols",
                "eligibilities",
                "{{id}}}"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "DELETE"
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "c6e630b1-a3f5-4149-84bf-168889662700",
                "type": "text/javascript",
                "exec": [
                  "./portman/pm-login.json"
                ]
              }
            }
          ]
        },
        {
          "id": "a3141e3e-fee6-4f47-8f4e-8139095d25cd",
          "name": "create Eligibility",
          "request": {
            "name": "create Eligibility",
            "description": {
              "content": "Create  a Diagnosis.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "api",
                "protocols",
                "diagnoses"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n  \"id\": 8,\n  \"name\": \"Pain/inflammation (musculoskeletal), treatment\"\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "59a936b4-d20b-4091-84e8-db1cc5839466",
                "type": "text/javascript",
                "exec": [
                  "./portman/pm-login.json",
                  "// Validate status 2xx \npm.test(\"[POST]::/api/protocols/diagnoses - Status code is 2xx\", function () {\n   pm.response.to.be.success;\n});\n"
                ]
              }
            }
          ],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        {
          "id": "fbe7076f-0647-46a1-8d59-3f19e67ef84d",
          "name": "Diagnosis",
          "request": {
            "name": "Diagnosis",
            "description": {
              "content": "Delete Diagnosis.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "api",
                "protocols",
                "diagnoses",
                ":id"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": [
                {
                  "disabled": false,
                  "description": {
                    "content": "(Required) ",
                    "type": "text/plain"
                  },
                  "type": "any",
                  "value": "37168990",
                  "key": "id"
                }
              ]
            },
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "DELETE"
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "a2d47481-9b57-4f8c-ac3c-4d23fce55a56",
                "type": "text/javascript",
                "exec": [
                  "./portman/pm-login.json",
                  "// Validate status 2xx \npm.test(\"[DELETE]::/api/protocols/diagnoses/:id - Status code is 2xx\", function () {\n   pm.response.to.be.success;\n});\n"
                ]
              }
            }
          ]
        },
        {
          "id": "21d83616-1bb5-4424-8447-8d7047bb6b64",
          "name": "create help screen",
          "request": {
            "name": "create help screen",
            "description": {
              "content": "Creation  a help screen.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "api",
                "help",
                ":key"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": [
                {
                  "disabled": false,
                  "description": {
                    "content": "(Required) help screen key",
                    "type": "text/plain"
                  },
                  "type": "any",
                  "value": "incididunt ad",
                  "key": "key"
                }
              ]
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n  \"key\": \"ut nostrud\",\n  \"msg\": \"veniam enim\",\n  \"lang\": \"sit proident\"\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "4fd6d2ed-6539-4d17-8063-bf691b09e0c6",
                "type": "text/javascript",
                "exec": [
                  "./portman/pm-login.json"
                ]
              }
            }
          ],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        {
          "id": "bc1b2d26-a0d7-47c0-adc9-24d08ba4ddd9",
          "name": "delete help screen",
          "request": {
            "name": "delete help screen",
            "description": {
              "content": "Delete help screen.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "api",
                "help",
                ":key"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": [
                {
                  "disabled": false,
                  "description": {
                    "content": "(Required) help screen key",
                    "type": "text/plain"
                  },
                  "type": "any",
                  "value": "incididunt ad",
                  "key": "key"
                }
              ]
            },
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "DELETE"
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "b9192aab-4d77-4454-af90-342caef91613",
                "type": "text/javascript",
                "exec": [
                  "./portman/pm-login.json"
                ]
              }
            }
          ]
        },
        {
          "id": "ea463511-0afe-4550-a328-793d0bfee18f",
          "name": "create labelclaim",
          "request": {
            "name": "create labelclaim",
            "description": {
              "content": "Creation  a labelclaim.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "api",
                "labels"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n  \"id\": 1,\n  \"fdaSpecies\": [\n    \"ChickensBroilers\",\n    \"ChickensBroilers\"\n  ],\n  \"diagnosis\": \"pain (colic), symptomatic treatment\",\n  \"dxId\": 2002,\n  \"product\": \"Prevail™ Flunixin Meglumine Injection\",\n  \"route\": \"intr-corporeal\",\n  \"wtMeatHrs\": 22,\n  \"wtMilkHrs\": 5,\n  \"productId\": 1315018,\n  \"_dose\": \"3.0 ml per kg repeat in 6 hours and again in 24 hours\",\n  \"sequenceFunction\": {\n    \"_type\": \"models.SeqSingleDose\"\n  },\n  \"sizeFunction\": {\n    \"_type\": \"models.FixedDoseFunction\",\n    \"dose\": {\n      \"quantity\": {\n        \"dimension\": \"Mass\",\n        \"value\": 3,\n        \"symbol\": \"oz\"\n      }\n    }\n  },\n  \"doseNote\": \"THis can contain <b>html</b> tags\",\n  \"wtNote\": \"not for dairy animals\",\n  \"ndc\": \"200-308\",\n  \"generic\": \"OXYTETRACYCLINE\"\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "d0bfa03d-bc5b-4990-beab-f335f001fe7c",
                "type": "text/javascript",
                "exec": [
                  "./portman/pm-login.json"
                ]
              }
            }
          ],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        {
          "id": "3ca91664-dad4-40e1-ad67-bb5ad91e986e",
          "name": "update labelclaim",
          "request": {
            "name": "update labelclaim",
            "description": {
              "content": "update a labelclaim.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "api",
                "labels"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "PUT",
            "body": {
              "mode": "raw",
              "raw": "{\n  \"id\": 1,\n  \"fdaSpecies\": [\n    \"ChickensBroilers\",\n    \"ChickensBroilers\"\n  ],\n  \"diagnosis\": \"pain (colic), symptomatic treatment\",\n  \"dxId\": 2002,\n  \"product\": \"Prevail™ Flunixin Meglumine Injection\",\n  \"route\": \"intr-corporeal\",\n  \"wtMeatHrs\": 22,\n  \"wtMilkHrs\": 5,\n  \"productId\": 1315018,\n  \"_dose\": \"3.0 ml per kg repeat in 6 hours and again in 24 hours\",\n  \"sequenceFunction\": {\n    \"_type\": \"models.SeqSingleDose\"\n  },\n  \"sizeFunction\": {\n    \"_type\": \"models.FixedDoseFunction\",\n    \"dose\": {\n      \"quantity\": {\n        \"dimension\": \"Mass\",\n        \"value\": 3,\n        \"symbol\": \"oz\"\n      }\n    }\n  },\n  \"doseNote\": \"THis can contain <b>html</b> tags\",\n  \"wtNote\": \"not for dairy animals\",\n  \"ndc\": \"200-308\",\n  \"generic\": \"OXYTETRACYCLINE\"\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "d8ffbc32-b539-4517-b0d9-fa368299814c",
                "type": "text/javascript",
                "exec": [
                  "./portman/pm-login.json"
                ]
              }
            }
          ],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        {
          "id": "1ef3f050-dedd-4424-8dcf-078496aabd97",
          "name": "create help screen",
          "request": {
            "name": "create help screen",
            "description": {
              "content": "update a labelclaim.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "api",
                "labels",
                ":id"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": [
                {
                  "disabled": false,
                  "description": {
                    "content": "(Required) labelclaim id",
                    "type": "text/plain"
                  },
                  "type": "any",
                  "value": "37168990",
                  "key": "id"
                }
              ]
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "PUT",
            "body": {
              "mode": "raw",
              "raw": "{\n  \"id\": 1,\n  \"fdaSpecies\": [\n    \"ChickensBroilers\",\n    \"ChickensBroilers\"\n  ],\n  \"diagnosis\": \"pain (colic), symptomatic treatment\",\n  \"dxId\": 2002,\n  \"product\": \"Prevail™ Flunixin Meglumine Injection\",\n  \"route\": \"intr-corporeal\",\n  \"wtMeatHrs\": 22,\n  \"wtMilkHrs\": 5,\n  \"productId\": 1315018,\n  \"_dose\": \"3.0 ml per kg repeat in 6 hours and again in 24 hours\",\n  \"sequenceFunction\": {\n    \"_type\": \"models.SeqSingleDose\"\n  },\n  \"sizeFunction\": {\n    \"_type\": \"models.FixedDoseFunction\",\n    \"dose\": {\n      \"quantity\": {\n        \"dimension\": \"Mass\",\n        \"value\": 3,\n        \"symbol\": \"oz\"\n      }\n    }\n  },\n  \"doseNote\": \"THis can contain <b>html</b> tags\",\n  \"wtNote\": \"not for dairy animals\",\n  \"ndc\": \"200-308\",\n  \"generic\": \"OXYTETRACYCLINE\"\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "99af0797-a1a7-4645-af5e-98a2a3acd59b",
                "type": "text/javascript",
                "exec": [
                  "./portman/pm-login.json"
                ]
              }
            }
          ],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        {
          "id": "da67f64d-ac87-4d1b-a46b-ad820ab04b43",
          "name": "get SPL",
          "request": {
            "name": "get SPL",
            "description": {
              "type": "text/plain"
            },
            "url": {
              "path": [
                "api",
                "admin",
                "spl{{ndc}}"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "GET"
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "1eec3ec7-9e19-4c96-ad1f-eb34f895a281",
                "type": "text/javascript",
                "exec": [
                  "./portman/pm-login.json"
                ]
              }
            }
          ]
        },
        {
          "id": "5783c12e-f252-4144-a39f-03cfe6e49d84",
          "name": "greenbook drugs",
          "request": {
            "name": "greenbook drugs",
            "description": {
              "content": "Return GBDs.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "api",
                "admin",
                "gbd"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": false,
                  "description": {
                    "content": "first section labeler code of a NDC",
                    "type": "text/plain"
                  },
                  "key": "ndcProd",
                  "value": "37168990"
                },
                {
                  "disabled": false,
                  "description": {
                    "content": "mid section product code of a NDC",
                    "type": "text/plain"
                  },
                  "key": "ndcLabeler",
                  "value": "37168990"
                },
                {
                  "disabled": false,
                  "description": {
                    "content": "starting row number in GBD table",
                    "type": "text/plain"
                  },
                  "key": "ndcBrand",
                  "value": "37168990"
                },
                {
                  "disabled": false,
                  "description": {
                    "content": "maximum number of rows to return",
                    "type": "text/plain"
                  },
                  "key": "offset",
                  "value": "37168990"
                },
                {
                  "disabled": false,
                  "description": {
                    "content": "end section package code of a NDC",
                    "type": "text/plain"
                  },
                  "key": "eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJleUp3Y205MmFXUmxja2xFSWpvaVkzSmxaR1Z1ZEdsaGJITWlMQ0p3Y205MmFXUmxja3RsZVNJNkluUmxjM1JXVDFJaWZRPT0iLCJpc3MiOiJwbGF5LXNpbGhvdWV0dGUiLCJle***...",
                  "value": "37168990"
                }
              ],
              "variable": []
            },
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "GET"
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "1bc11011-89ed-4691-9889-b4bffc4244b5",
                "type": "text/javascript",
                "exec": [
                  "./portman/pm-login.json"
                ]
              }
            }
          ]
        },
        {
          "id": "d9ab96ba-ba69-4509-b7ee-c16a12400da4",
          "name": "update GBD",
          "request": {
            "name": "update GBD",
            "description": {
              "content": "M",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "api",
                "admin",
                "gbd"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "PUT",
            "body": {
              "mode": "raw",
              "raw": "{\n  \"ndc\": \"0010-3495\",\n  \"proprietery\": \"Bio-Mycin 200\",\n  \"nonProp\": \"OXYTETRACYCLINE\",\n  \"ingredients\": \"OXYTETRACYCLINE\",\n  \"labeler\": \"Boehringer Ingelheim Vetmedica, Inc.\",\n  \"productType\": \"OTC ANIMAL DRUG\",\n  \"marketCat\": \"ANADA\",\n  \"appNumber\": \"ANADA200008\",\n  \"link\": \"https://www.accessdata.fda.gov/spl/data/c9491ada-6813-4548-8872-57bb38a58feb/c9491ada-6813-4548-8872-57bb38a58feb.xml\",\n  \"status\": 0,\n  \"lastChanged\": \"2010-09-04T00:38:18.272Z\"\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "20a7f6f7-1776-4110-9d86-a8c81d9eaf0e",
                "type": "text/javascript",
                "exec": [
                  "./portman/pm-login.json"
                ]
              }
            }
          ],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        {
          "id": "4984cfb1-d72d-4ea2-bebe-3d8fd15f7248",
          "name": "get Greenbook Drug",
          "request": {
            "name": "get Greenbook Drug",
            "description": {
              "type": "text/plain"
            },
            "url": {
              "path": [
                "api",
                "admin",
                "gbd",
                ":ndc"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": [
                {
                  "disabled": false,
                  "description": {
                    "content": "(Required) unique 10-digit, 3-segment number. labelerCode-productCode-packageCode",
                    "type": "text/plain"
                  },
                  "type": "any",
                  "value": "0061-4321-03",
                  "key": "ndc"
                }
              ]
            },
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "GET"
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "a5d781c1-0bc0-45ff-b39e-5afe319e5e5c",
                "type": "text/javascript",
                "exec": [
                  "./portman/pm-login.json"
                ]
              }
            }
          ]
        }
      ],
      "event": []
    },
    {
      "id": "ccbc1f5e-b315-4e14-b63d-e4f43ca65abe",
      "name": "TOR",
      "description": {
        "content": "available to farm employees.",
        "type": "text/plain"
      },
      "item": [],
      "event": []
    },
    {
      "id": "b7329739-73c7-4597-9a1b-a53dddf8ff2e",
      "name": "LOR",
      "description": {
        "content": "available to pharmacy curators.",
        "type": "text/plain"
      },
      "item": [],
      "event": []
    },
    {
      "id": "2f2f05a3-4a3e-4ec3-851f-54ddd266e027",
      "name": "FARM",
      "description": {
        "content": "available to farm accounts.",
        "type": "text/plain"
      },
      "item": [],
      "event": []
    },
    {
      "id": "1908f6c7-02ab-4d9e-9219-ac9d7b4fdcf7",
      "name": "CLINIC",
      "description": {
        "content": "available to vet clinic accounts.",
        "type": "text/plain"
      },
      "item": [],
      "event": []
    },
    {
      "id": "fca03c6e-6dbd-474e-b69a-5c3b9535fab4",
      "name": "User",
      "description": {
        "content": "Endpoints and models related to user management.",
        "type": "text/plain"
      },
      "item": [],
      "event": []
    },
    {
      "id": "b6ef2903-c2b1-43c9-bf84-7b42963c21bb",
      "name": "Protocol",
      "description": {
        "content": "Endpoints and models related to protocol management.",
        "type": "text/plain"
      },
      "item": [],
      "event": []
    },
    {
      "id": "e957c2b8-3626-4278-9c9f-0506c8401613",
      "name": "Prescription",
      "description": {
        "content": "Endpoints and models related to prescription management.",
        "type": "text/plain"
      },
      "item": [],
      "event": []
    },
    {
      "id": "3ed2b779-9ade-4100-a7d8-3f831514a12e",
      "name": "Case",
      "description": {
        "content": "Endpoints and models related to case management.",
        "type": "text/plain"
      },
      "item": [],
      "event": []
    },
    {
      "id": "a07d367a-e58d-470c-a804-bf739c6f193a",
      "name": "Promise",
      "description": {
        "content": "Endpoints and models related to promise management.",
        "type": "text/plain"
      },
      "item": [],
      "event": []
    },
    {
      "id": "627dca0d-b4e7-488c-be2e-a0a4d7640284",
      "name": "create profile",
      "request": {
        "name": "create profile",
        "description": {
          "content": "Create a User with Address, and UserPrefs.",
          "type": "text/plain"
        },
        "url": {
          "path": [
            "api",
            "users",
            "profiles"
          ],
          "host": [
            "{{baseUrl}}"
          ],
          "query": [],
          "variable": []
        },
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json"
          },
          {
            "key": "Accept",
            "value": "application/json"
          }
        ],
        "method": "POST",
        "body": {
          "mode": "raw",
          "raw": "{\n  \"user\": {\n    \"address1\": \"123 Main St.\",\n    \"address2\": \"123 Main St.\",\n    \"emailNews\": true,\n    \"emailTips\": true,\n    \"firstname\": \"Example\",\n    \"id\": 99,\n    \"lastname\": \"User\",\n    \"rxHeader\": \"laboris officia pariatur aliquip\",\n    \"sandboxName\": \"ullamco labore\",\n    \"state\": \"Any State\",\n    \"town\": \"Anytown\",\n    \"uname\": \"exampleUser\",\n    \"userId\": -92095845,\n    \"userType\": \"VOR\",\n    \"zip\": \"12345-abcd\",\n    \"email\": \"exampleUser@email.com\",\n    \"suffix\": \"DVM\",\n    \"busName\": \"testVOR Clinic\",\n    \"country\": \"USA\"\n  }\n}",
          "options": {
            "raw": {
              "language": "json"
            }
          }
        }
      },
      "response": [
        {
          "_": {
            "postman_previewlanguage": "json"
          },
          "id": "e05de181-e20f-4357-aeb8-1dcde8565374",
          "name": "the created Profile",
          "originalRequest": {
            "url": {
              "path": [
                "api",
                "users",
                "profiles"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "description": {
                  "content": "Added as a part of security scheme: apikey",
                  "type": "text/plain"
                },
                "key": "X-Auth-Token",
                "value": "<API Key>"
              }
            ],
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n  \"user\": {\n    \"address1\": \"123 Main St.\",\n    \"address2\": \"123 Main St.\",\n    \"emailNews\": true,\n    \"emailTips\": true,\n    \"firstname\": \"Example\",\n    \"id\": 99,\n    \"lastname\": \"User\",\n    \"rxHeader\": \"laboris officia pariatur aliquip\",\n    \"sandboxName\": \"ullamco labore\",\n    \"state\": \"Any State\",\n    \"town\": \"Anytown\",\n    \"uname\": \"exampleUser\",\n    \"userId\": -92095845,\n    \"userType\": \"VOR\",\n    \"zip\": \"12345-abcd\",\n    \"email\": \"exampleUser@email.com\",\n    \"suffix\": \"DVM\",\n    \"busName\": \"testVOR Clinic\",\n    \"country\": \"USA\"\n  }\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            }
          },
          "status": "OK",
          "code": 200,
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "body": "{\n  \"address1\": \"123 Main St.\",\n  \"address2\": \"123 Main St.\",\n  \"emailNews\": false,\n  \"emailTips\": true,\n  \"firstname\": \"Example\",\n  \"id\": 99,\n  \"lastname\": \"User\",\n  \"rxHeader\": \"consequat velit\",\n  \"sandboxName\": \"sint dolore ullamco aliquip\",\n  \"state\": \"Any State\",\n  \"town\": \"Anytown\",\n  \"uname\": \"exampleUser\",\n  \"userId\": 68884462,\n  \"userType\": \"VOR\",\n  \"zip\": \"12345-abcd\",\n  \"email\": \"exampleUser@email.com\",\n  \"suffix\": \"DVM\",\n  \"busName\": \"testVOR Clinic\",\n  \"country\": \"USA\"\n}",
          "cookie": []
        },
        {
          "_": {
            "postman_previewlanguage": "json"
          },
          "id": "f332c8d7-8f72-4bf4-9776-8c3014c1feec",
          "name": "Authorization required",
          "originalRequest": {
            "url": {
              "path": [
                "api",
                "users",
                "profiles"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "description": {
                  "content": "Added as a part of security scheme: apikey",
                  "type": "text/plain"
                },
                "key": "X-Auth-Token",
                "value": "<API Key>"
              }
            ],
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n  \"user\": {\n    \"address1\": \"123 Main St.\",\n    \"address2\": \"123 Main St.\",\n    \"emailNews\": true,\n    \"emailTips\": true,\n    \"firstname\": \"Example\",\n    \"id\": 99,\n    \"lastname\": \"User\",\n    \"rxHeader\": \"laboris officia pariatur aliquip\",\n    \"sandboxName\": \"ullamco labore\",\n    \"state\": \"Any State\",\n    \"town\": \"Anytown\",\n    \"uname\": \"exampleUser\",\n    \"userId\": -92095845,\n    \"userType\": \"VOR\",\n    \"zip\": \"12345-abcd\",\n    \"email\": \"exampleUser@email.com\",\n    \"suffix\": \"DVM\",\n    \"busName\": \"testVOR Clinic\",\n    \"country\": \"USA\"\n  }\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            }
          },
          "status": "Unauthorized",
          "code": 401,
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "body": "{\n  \"title\": \"incorrect username or password\",\n  \"status\": 404,\n  \"errorType\": \"/errors/incorrect-user-pass\",\n  \"detail\": \"Authentication failed due to incorrect username or password.\",\n  \"instance\": \"/login/log/abc123\"\n}",
          "cookie": []
        }
      ],
      "event": [
        {
          "listen": "test",
          "script": {
            "id": "37f633b9-856f-4418-8e56-165e4cd2fcdf",
            "type": "text/javascript",
            "exec": [
              "./portman/pm-login.json"
            ]
          }
        }
      ],
      "protocolProfileBehavior": {
        "disableBodyPruning": true
      }
    }
  ],
  "auth": {
    "type": "apikey",
    "apikey": [
      {
        "type": "any",
        "value": "X-Auth-Token",
        "key": "key"
      },
      {
        "type": "any",
        "value": "<API Key>",
        "key": "value"
      },
      {
        "type": "any",
        "value": "header",
        "key": "in"
      }
    ]
  },
  "event": [],
  "variable": [
    {
      "type": "string",
      "value": "https://test.vcpr.org",
      "key": "baseUrl"
    },
    {
      "disabled": false,
      "description": {
        "content": "(Required) ",
        "type": "text/plain"
      },
      "type": "any",
      "value": "37168990",
      "key": "id"
    },
    {
      "disabled": false,
      "description": {
        "content": "(Required) unique 10-digit, 3-segment number. labelerCode-productCode-packageCode",
        "type": "text/plain"
      },
      "type": "any",
      "value": "incididunt ad",
      "key": "ndc"
    }
  ],
  "info": {
    "_postman_id": "1e3abae8-b160-4e04-9cf8-523c3198b6a4",
    "name": "PublicAPI",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
    "description": {
      "content": "API serving the Veterinary Protocol Manager&trade; application. &copy; DairySight LLC, Argyle NY 2020\n\nContact Support:\n Name: Jim Ehrlich, DVM\n Email: jehrlich@vcpr.org",
      "type": "text/plain"
    }
  }
}
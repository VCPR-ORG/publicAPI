{
  "_": {
    "postman_id": "9dedd342-06ef-4d82-b129-08ec4881cae6"
  },
  "item": [
    {
      "id": "0801206b-a9f2-4864-8522-eb6f8898146a",
      "name": "VOR",
      "description": {
        "content": "available to veterinarians.",
        "type": "text/plain"
      },
      "item": [
        {
          "id": "e357a6ec-0665-484b-9556-7f8c67c073e5",
          "name": "load Editor",
          "request": {
            "name": "load Editor",
            "description": {
              "content": "load Protocol Editor",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "editor"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Accept",
                "value": "text/html"
              }
            ],
            "method": "GET"
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "06a76463-1ba8-4de1-a8b2-96bff3bce438",
                "type": "text/javascript",
                "exec": [
                  "./portman/pm-login.json"
                ]
              }
            }
          ]
        },
        {
          "id": "a769e5ae-633e-41c0-bd5b-dddcfdf6b193",
          "name": "load Farm App",
          "request": {
            "name": "load Farm App",
            "description": {
              "content": "load Farm App",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "farm"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Accept",
                "value": "text/html"
              }
            ],
            "method": "GET"
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "4389c1bd-1f19-49a4-897a-49661839b7e8",
                "type": "text/javascript",
                "exec": [
                  "./portman/pm-login.json"
                ]
              }
            }
          ]
        },
        {
          "id": "a2673357-4e08-4acf-9c1f-35d43e3bca1b",
          "name": "list of Users IDs",
          "request": {
            "name": "list of Users IDs",
            "description": {
              "content": "Returns the ID and names of all active Users of the type(s) specified.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "api",
                "users"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": false,
                  "description": {
                    "content": "User types to include",
                    "type": "text/plain"
                  },
                  "key": "usertypes",
                  "value": "VOR"
                }
              ],
              "variable": []
            },
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "GET"
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "14c073a3-8ffc-4ceb-be8a-d84909f72edf",
                "type": "text/javascript",
                "exec": [
                  "./portman/pm-login.json"
                ]
              }
            }
          ]
        },
        {
          "id": "0f706bfb-7451-42ff-8817-e48226bfde43",
          "name": "list of VORs",
          "request": {
            "name": "list of VORs",
            "description": {
              "content": "list of VOR users.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "api",
                "users",
                "vors"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "GET"
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "226bf392-9387-493b-871f-a1931308ecda",
                "type": "text/javascript",
                "exec": [
                  "./portman/pm-login.json"
                ]
              }
            }
          ]
        },
        {
          "id": "639cbd8c-16bc-4b0a-a135-cb985116a745",
          "name": "delete user",
          "request": {
            "name": "delete user",
            "description": {
              "content": "This endpoint supports the (reversible) \"delete\" of a User by setting user.status to `REMOVED`. Removed Users are not visible in normal queries.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "api",
                "users",
                ":id"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": [
                {
                  "disabled": false,
                  "description": {
                    "content": "(Required) User ID key",
                    "type": "text/plain"
                  },
                  "type": "any",
                  "value": "5",
                  "key": "id"
                }
              ]
            },
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "DELETE"
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "23606962-6784-46a9-a007-d7b37362f9f8",
                "type": "text/javascript",
                "exec": [
                  "./portman/pm-login.json"
                ]
              }
            }
          ]
        },
        {
          "id": "9eccc334-c51a-49c2-a8e4-2c32a88e11af",
          "name": "create a sandbox user",
          "request": {
            "name": "create a sandbox user",
            "description": {
              "content": "Create a sandbox user of MOR `UserType` who is a `CLIENT` of logged-in VOR. This allows the VOR to prescribe to the sandbox client, then view prescriptions from the client's point of view using the Farm App.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "api",
                "users",
                "sandboxClient"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "\"tempor Duis Ut\"",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "d6a6126c-9add-46ba-bb05-0971e2395064",
                "type": "text/javascript",
                "exec": [
                  "./portman/pm-login.json"
                ]
              }
            }
          ],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        {
          "id": "2a62233c-a76a-471b-86d1-dbc5d00de8d0",
          "name": "delete sandboxClient",
          "request": {
            "name": "delete sandboxClient",
            "description": {
              "content": "Delete the User and CLIENT Relation records from the database,  irreversibly removing the sandbocx client, but not any existing Prescriptions.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "api",
                "users",
                "sandboxClient"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "DELETE"
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "e9ebd033-fc86-420d-b999-b48a0b014855",
                "type": "text/javascript",
                "exec": [
                  "./portman/pm-login.json"
                ]
              }
            }
          ]
        },
        {
          "id": "ba6c32d4-03b7-453a-a631-f8933f7ca771",
          "name": "add a relationship",
          "request": {
            "name": "add a relationship",
            "description": {
              "content": "adds a relationship of the type specified by `name` to the current User, who must be a VOR. Defaults to CLIENT relationship.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "api",
                "users",
                "relations"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "\"CLIENT\"",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "0da86649-ea55-4153-8740-d4bbf103af68",
                "type": "text/javascript",
                "exec": [
                  "./portman/pm-login.json"
                ]
              }
            }
          ],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        {
          "id": "69b099e8-87a9-4aeb-820a-4f9b21ff4c8e",
          "name": "get my right-related users",
          "request": {
            "name": "get my right-related users",
            "description": {
              "content": "get my right-related users",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "api",
                "users",
                "my-right-relations"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": false,
                  "key": "relationship",
                  "value": "CLIENT"
                },
                {
                  "disabled": false,
                  "description": {
                    "content": "whether to return user's addresses too",
                    "type": "text/plain"
                  },
                  "key": "withAddress",
                  "value": "false"
                }
              ],
              "variable": []
            },
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "GET"
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "27032acc-6446-48d8-a8a1-163d3bf40623",
                "type": "text/javascript",
                "exec": [
                  "./portman/pm-login.json"
                ]
              }
            }
          ]
        },
        {
          "id": "a17900b7-a998-4d00-8c74-e619c5e29c48",
          "name": "add a User with relationship",
          "request": {
            "name": "add a User with relationship",
            "description": {
              "content": "This endpoint adds a User and a relationship of the type specified by `name` to the current User, who must be a VOR. Defaults to CLIENT relationship.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "api",
                "users",
                "my-right-relations"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": false,
                  "description": {
                    "content": "(Required) ",
                    "type": "text/plain"
                  },
                  "key": "relationship",
                  "value": "CLIENT"
                },
                {
                  "disabled": false,
                  "description": {
                    "content": "(Required) ",
                    "type": "text/plain"
                  },
                  "key": "usertype",
                  "value": "VOR"
                }
              ],
              "variable": []
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n  \"uname\": \"exampleUser\",\n  \"userType\": \"VOR\",\n  \"firstname\": \"Example\",\n  \"lastname\": \"User\",\n  \"id\": 99,\n  \"email\": \"exampleUser@email.com\",\n  \"suffix\": \"DVM\"\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "d25ccdf8-e087-4cb3-b8b2-3795488c8a40",
                "type": "text/javascript",
                "exec": [
                  "./portman/pm-login.json"
                ]
              }
            }
          ],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        {
          "id": "30d33552-7599-44ed-b8e3-1f1f87c595b0",
          "name": "get my prescriptions",
          "request": {
            "name": "get my prescriptions",
            "description": {
              "content": "get prescriptions prescribed by the current User.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "api",
                "protocols",
                "prescriptions",
                "by"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "GET"
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "30a06022-4d37-40d6-a299-e5da26b79f41",
                "type": "text/javascript",
                "exec": [
                  "./portman/pm-login.json",
                  "// Validate status 2xx \npm.test(\"[GET]::/api/protocols/prescriptions/by - Status code is 2xx\", function () {\n   pm.response.to.be.success;\n});\n"
                ]
              }
            }
          ]
        },
        {
          "id": "61b232d0-973b-425b-973c-c428f4f25a5a",
          "name": "get my prescriptions",
          "request": {
            "name": "get my prescriptions",
            "description": {
              "content": "get prescriptions prescribed to the current User.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "api",
                "protocols",
                "prescriptions",
                "to"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "GET"
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "f7a13402-e4ac-4c79-aae4-2a701e65356b",
                "type": "text/javascript",
                "exec": [
                  "./portman/pm-login.json",
                  "// Validate status 2xx \npm.test(\"[GET]::/api/protocols/prescriptions/to - Status code is 2xx\", function () {\n   pm.response.to.be.success;\n});\n"
                ]
              }
            }
          ]
        },
        {
          "id": "e92c88be-87e1-4bea-af8a-16518fc78ac0",
          "name": "get my protocol shares",
          "request": {
            "name": "get my protocol shares",
            "description": {
              "content": "This endpoint retrieves a User's Protocol shares, optionally filtered by Protocol and recipient.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "api",
                "protocols",
                "shares"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": false,
                  "description": {
                    "content": "select only shares of this Protocol ID",
                    "type": "text/plain"
                  },
                  "key": "pxFilter",
                  "value": "97186553"
                },
                {
                  "disabled": false,
                  "description": {
                    "content": "select only shares to this VOR User",
                    "type": "text/plain"
                  },
                  "key": "toFilter",
                  "value": "97186553"
                }
              ],
              "variable": []
            },
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "GET"
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "7a8f1a18-a042-4dc3-a5a7-609979f7b56c",
                "type": "text/javascript",
                "exec": [
                  "./portman/pm-login.json",
                  "// Validate status 2xx \npm.test(\"[GET]::/api/protocols/shares - Status code is 2xx\", function () {\n   pm.response.to.be.success;\n});\n"
                ]
              }
            }
          ]
        },
        {
          "id": "b152ddb3-a923-4612-bc69-51e7663f3f49",
          "name": "create protocol share",
          "request": {
            "name": "create protocol share",
            "description": {
              "content": "This endpoint shares a protocol with another VOR User.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "api",
                "protocols",
                "shares"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n  \"px-id\": 1,\n  \"share-to\": 2,\n  \"clonable\": true\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "63281c03-a27a-4ed8-a7cc-cc7bb821e721",
                "type": "text/javascript",
                "exec": [
                  "./portman/pm-login.json",
                  "// Validate status 2xx \npm.test(\"[POST]::/api/protocols/shares - Status code is 2xx\", function () {\n   pm.response.to.be.success;\n});\n"
                ]
              }
            }
          ],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        {
          "id": "010d199a-2338-4172-a441-788f9d67f60a",
          "name": "delete protocol share",
          "request": {
            "name": "delete protocol share",
            "description": {
              "content": "This endpoint retracts a Protocol share with another VOR User.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "api",
                "protocols",
                "shares"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": false,
                  "description": {
                    "content": "(Required) Protocol ID",
                    "type": "text/plain"
                  },
                  "key": "pxId",
                  "value": "97186553"
                },
                {
                  "disabled": false,
                  "description": {
                    "content": "(Required) ID of VOR to whom Protocol was shared",
                    "type": "text/plain"
                  },
                  "key": "toVor",
                  "value": "97186553"
                }
              ],
              "variable": []
            },
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "DELETE"
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "b5b8face-2046-4a59-aaf4-978bbdce1078",
                "type": "text/javascript",
                "exec": [
                  "./portman/pm-login.json",
                  "// Validate status 2xx \npm.test(\"[DELETE]::/api/protocols/shares - Status code is 2xx\", function () {\n   pm.response.to.be.success;\n});\n"
                ]
              }
            }
          ]
        },
        {
          "id": "63846c1a-fc9d-4f94-9488-7c8f847449d4",
          "name": "list of User's shared protocols",
          "request": {
            "name": "list of User's shared protocols",
            "description": {
              "content": "This endpoint retrieves a list of User's protocols shared to all VORs.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "api",
                "protocols",
                "sharesToAll",
                ""
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "GET"
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "0e83ee1a-7a30-4571-946d-106e2ae60ada",
                "type": "text/javascript",
                "exec": [
                  "./portman/pm-login.json",
                  "// Validate status 2xx \npm.test(\"[GET]::/api/protocols/sharesToAll/ - Status code is 2xx\", function () {\n   pm.response.to.be.success;\n});\n"
                ]
              }
            }
          ]
        },
        {
          "id": "239a4daf-b6ab-4f92-8f17-2262bc2ad6a8",
          "name": "share Protocol with all VOR Users",
          "request": {
            "name": "share Protocol with all VOR Users",
            "description": {
              "content": "This endpoint shares a User's protocol with all VOR Users.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "api",
                "protocols",
                "sharesToAll",
                ":pxId"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": false,
                  "key": "clonable",
                  "value": "false"
                }
              ],
              "variable": [
                {
                  "disabled": false,
                  "description": {
                    "content": "(Required) ID of Protocol to be shared",
                    "type": "text/plain"
                  },
                  "type": "any",
                  "value": "97186553",
                  "key": "pxId"
                }
              ]
            },
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "POST"
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "598b3d60-c23b-4ed9-b564-2c6650699fae",
                "type": "text/javascript",
                "exec": [
                  "./portman/pm-login.json",
                  "// Validate status 2xx \npm.test(\"[POST]::/api/protocols/sharesToAll/:pxId - Status code is 2xx\", function () {\n   pm.response.to.be.success;\n});\n"
                ]
              }
            }
          ]
        },
        {
          "id": "7b2ca46d-254e-4f7a-926e-a233af8ffe95",
          "name": "cancel sharing",
          "request": {
            "name": "cancel sharing",
            "description": {
              "content": "wip -- This endpoint probably unshares protocols to all.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "api",
                "protocols",
                "sharesToAll",
                ":pxId"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": [
                {
                  "disabled": false,
                  "description": {
                    "content": "(Required) ID of Protocol",
                    "type": "text/plain"
                  },
                  "type": "any",
                  "value": "1",
                  "key": "pxId"
                }
              ]
            },
            "method": "DELETE"
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "0877aff0-253e-441a-b145-482f58281646",
                "type": "text/javascript",
                "exec": [
                  "./portman/pm-login.json",
                  "// Validate status 2xx \npm.test(\"[DELETE]::/api/protocols/sharesToAll/:pxId - Status code is 2xx\", function () {\n   pm.response.to.be.success;\n});\n"
                ]
              }
            }
          ]
        },
        {
          "id": "276894df-dbb9-4832-83f6-0e0698be64a4",
          "name": "AMDUCA-tag protocol",
          "request": {
            "name": "AMDUCA-tag protocol",
            "description": {
              "content": "add tags to protocol per AMDUCA rules",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "api",
                "protocols",
                "amducatags"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "PUT",
            "body": {
              "mode": "raw",
              "raw": "{\n  \"ownerId\": 1,\n  \"name\": \"wip\",\n  \"status\": \"PRESCRIBED\",\n  \"instructions\": {\n    \"considerations\": \"<p>This is just an example, not a real protocol.</p>\",\n    \"restrictions\": \"<p>Not for use on real animals.</p>\",\n    \"dothis\": \"<h3>Examinations to perform</h3>\",\n    \"recordthis\": \"<p>record every step in your notebook.</p>\",\n    \"success\": \"<p>All problems are gone</p>\",\n    \"failure\": \"<p>One or more problems remain</p>\",\n    \"references\": \"<a href=\\\"https://en.wikipedia.org/wiki/Rickrolling\\\">Wikipedia</a>\"\n  },\n  \"id\": 12345,\n  \"shortname\": \"wip\",\n  \"created\": \"2018-01-19T00:16:47.371Z\",\n  \"edited\": \"1972-11-19T02:51:58.723Z\",\n  \"vetNote\": \"consider prescribing protocol x instead\",\n  \"wtMeatHrs\": 22,\n  \"wtMilkHrs\": 5,\n  \"shareAll\": true,\n  \"shareClonable\": true,\n  \"caseDefinition\": {\n    \"requireId\": false,\n    \"requireMor\": false,\n    \"contraindications\": \"\",\n    \"medical\": \"if fever is present, consider Protocol 12345 instead.\",\n    \"economic\": \"\",\n    \"note\": \"\"\n  },\n  \"treatments\": [\n    {\n      \"product\": \"MiracleMed\",\n      \"route\": \"wip\",\n      \"dosage\": {\n        \"doseId\": -74836102\n      },\n      \"sequenceFunction\": {\n        \"_type\": \"models.SeqSingleDose\"\n      },\n      \"sizeFunction\": {\n        \"_type\": \"models.FixedDoseFunction\",\n        \"dose\": {\n          \"quantity\": {\n            \"dimension\": \"Mass\",\n            \"value\": 3,\n            \"symbol\": \"oz\"\n          }\n        }\n      },\n      \"id\": \"B-123\",\n      \"ownerId\": 0,\n      \"description\": \"3.0 ml per kg repeat\",\n      \"eligibilities\": [\n        {\n          \"id\": 1,\n          \"name\": \"Beef Cattle\",\n          \"fdaSpecies\": [\n            \"veal\",\n            \"cats\"\n          ]\n        },\n        {\n          \"id\": 1,\n          \"name\": \"Beef Cattle\",\n          \"fdaSpecies\": [\n            \"bison\",\n            \"gamebirds\"\n          ]\n        }\n      ],\n      \"_dose\": \"3.0 ml per kg repeat in 6 hours and again in 24 hours\",\n      \"wtMeatHrs\": -93818792,\n      \"wtMilkHrs\": -59599890,\n      \"nada\": \"wip\",\n      \"tags\": [\n        {\n          \"id\": 8,\n          \"color\": \"#516cc6\",\n          \"name\": \"ipsum la\",\n          \"fixes\": [\n            {\n              \"_type\": \"ad adipisicing dolore \",\n              \"detail\": \"pariatur irure voluptate amet\",\n              \"message\": \"cupidatat non\",\n              \"title\": \"exercitation irure enim\"\n            },\n            {\n              \"_type\": \"la\",\n              \"detail\": \"veniam nulla exercitation cupidatat\",\n              \"message\": \"amet sunt laborum dol\",\n              \"title\": \"magna ad eiusmod laborum\"\n            }\n          ]\n        },\n        {\n          \"id\": 8,\n          \"color\": \"#516cc6\",\n          \"name\": \"e\",\n          \"fixes\": [\n            {\n              \"_type\": \"ut culpa\",\n              \"detail\": \"quis minim qui\",\n              \"message\": \"dolor est do elit minim\",\n              \"title\": \"anim ea\"\n            },\n            {\n              \"_type\": \"in proident\",\n              \"detail\": \"mollit eu\",\n              \"message\": \"in qui ipsum\",\n              \"title\": \"dolor Lorem\"\n            }\n          ]\n        }\n      ],\n      \"note\": \"<p>a free-form note</p>\",\n      \"amduca\": \"UNIDENTIFIED\"\n    },\n    {\n      \"product\": \"MiracleMed\",\n      \"route\": \"wip\",\n      \"dosage\": {\n        \"doseId\": 18433348\n      },\n      \"sequenceFunction\": {\n        \"_type\": \"models.SeqSingleDose\"\n      },\n      \"sizeFunction\": {\n        \"_type\": \"models.FixedDoseFunction\",\n        \"dose\": {\n          \"quantity\": {\n            \"dimension\": \"Mass\",\n            \"value\": 3,\n            \"symbol\": \"oz\"\n          }\n        }\n      },\n      \"id\": \"B-123\",\n      \"ownerId\": 0,\n      \"description\": \"3.0 ml per kg repeat\",\n      \"eligibilities\": [\n        {\n          \"id\": 1,\n          \"name\": \"Beef Cattle\",\n          \"fdaSpecies\": [\n            \"llamas\",\n            \"dairy_cattle\"\n          ]\n        },\n        {\n          \"id\": 1,\n          \"name\": \"Beef Cattle\",\n          \"fdaSpecies\": [\n            \"swine\",\n            \"gamebirds\"\n          ]\n        }\n      ],\n      \"_dose\": \"3.0 ml per kg repeat in 6 hours and again in 24 hours\",\n      \"wtMeatHrs\": -14964034,\n      \"wtMilkHrs\": 44610835,\n      \"nada\": \"wip\",\n      \"tags\": [\n        {\n          \"id\": 8,\n          \"color\": \"#516cc6\",\n          \"name\": \"la\",\n          \"fixes\": [\n            {\n              \"_type\": \"aute non sit\",\n              \"detail\": \"magna ullamco\",\n              \"message\": \"occaecat ut aliqua\",\n              \"title\": \"cupidatat veniam pariatur\"\n            },\n            {\n              \"_type\": \"in ipsum commodo\",\n              \"detail\": \"nisi veniam amet\",\n              \"message\": \"et sit velit cillum\",\n              \"title\": \"ut incididunt\"\n            }\n          ]\n        },\n        {\n          \"id\": 8,\n          \"color\": \"#516cc6\",\n          \"name\": \"esse \",\n          \"fixes\": [\n            {\n              \"_type\": \"anim magna cillum in dolor\",\n              \"detail\": \"dolor incididunt qui\",\n              \"message\": \"dolore culpa\",\n              \"title\": \"dolore dolor sunt\"\n            },\n            {\n              \"_type\": \"velit anim fugiat\",\n              \"detail\": \"qui et\",\n              \"message\": \"incididu\",\n              \"title\": \"laboris esse dolor reprehenderit\"\n            }\n          ]\n        }\n      ],\n      \"note\": \"<p>a free-form note</p>\",\n      \"amduca\": \"ONLABEL\"\n    }\n  ],\n  \"tags\": [\n    {\n      \"id\": 8,\n      \"color\": \"#516cc6\",\n      \"name\": \"ea dolore nos\",\n      \"fixes\": [\n        {\n          \"_type\": \"dolor laborum do\",\n          \"detail\": \"dolore qui\",\n          \"message\": \"exercitation consequat id\",\n          \"title\": \"dolor cupidatat\"\n        },\n        {\n          \"_type\": \"Excepteur commodo in ut\",\n          \"detail\": \"ea anim minim cupidatat\",\n          \"message\": \"ullamco\",\n          \"title\": \"sint pariatur nostrud\"\n        }\n      ]\n    },\n    {\n      \"id\": 8,\n      \"color\": \"#516cc6\",\n      \"name\": \"in e\",\n      \"fixes\": [\n        {\n          \"_type\": \"aliquip ad Lorem ut\",\n          \"detail\": \"esse Duis\",\n          \"message\": \"veniam\",\n          \"title\": \"dolore\"\n        },\n        {\n          \"_type\": \"minim sint esse officia\",\n          \"detail\": \"Exc\",\n          \"message\": \"nostrud\",\n          \"title\": \"elit nostrud\"\n        }\n      ]\n    }\n  ],\n  \"diagnoses\": [\n    {\n      \"id\": 8,\n      \"name\": \"Pain/inflammation (musculoskeletal), treatment\"\n    },\n    {\n      \"id\": 8,\n      \"name\": \"Pain/inflammation (musculoskeletal), treatment\"\n    }\n  ],\n  \"eligibilities\": [\n    {\n      \"id\": 1,\n      \"name\": \"Beef Cattle\",\n      \"fdaSpecies\": [\n        \"goats\",\n        \"emus\"\n      ]\n    },\n    {\n      \"id\": 1,\n      \"name\": \"Beef Cattle\",\n      \"fdaSpecies\": [\n        \"veal\",\n        \"bison\"\n      ]\n    }\n  ],\n  \"promises\": [\n    {\n      \"_type\": \"models.AffirmationPromise\",\n      \"name\": \"ID promise\",\n      \"when\": \"PT0H\",\n      \"id\": 2345,\n      \"ownerId\": 123,\n      \"descrip\": \"You must give ID for each case enrolled\"\n    },\n    {\n      \"_type\": \"models.AffirmationPromise\",\n      \"name\": \"ID promise\",\n      \"when\": \"PT0H\",\n      \"id\": 2345,\n      \"ownerId\": 123,\n      \"descrip\": \"You must give ID for each case enrolled\"\n    }\n  ],\n  \"metadata\": [\n    {\n      \"key\": \"popularity\",\n      \"value\": \"good 1.2\"\n    },\n    {\n      \"key\": \"popularity\",\n      \"value\": \"good 1.2\"\n    }\n  ]\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "b67ce549-23ec-4e18-baab-7c5fd5014d79",
                "type": "text/javascript",
                "exec": [
                  "./portman/pm-login.json",
                  "// Validate status 2xx \npm.test(\"[PUT]::/api/protocols/amducatags - Status code is 2xx\", function () {\n   pm.response.to.be.success;\n});\n"
                ]
              }
            }
          ],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        {
          "id": "221fb1c3-462c-4f1b-9a97-f29c88ab87f9",
          "name": "list of all Tags",
          "request": {
            "name": "list of all Tags",
            "description": {
              "content": "Returns the full array of tags for protocols and treatments.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "api",
                "protocols",
                "tags"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "GET"
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "4bf582c9-88e4-46b3-aaa1-e4cb12ad03df",
                "type": "text/javascript",
                "exec": [
                  "./portman/pm-login.json",
                  "// Validate status 2xx \npm.test(\"[GET]::/api/protocols/tags - Status code is 2xx\", function () {\n   pm.response.to.be.success;\n});\n"
                ]
              }
            }
          ]
        },
        {
          "id": "15b8aa1f-00c9-40a9-827e-1ea51c66ae25",
          "name": "execute Remedy",
          "request": {
            "name": "execute Remedy",
            "description": {
              "content": "Apply a Remedy to a Protocol, returning the fixed Protocol.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "api",
                "protocols",
                "tags",
                "remedies"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "PUT",
            "body": {
              "mode": "raw",
              "raw": "{\n  \"protocol\": {\n    \"ownerId\": 1,\n    \"name\": \"wip\",\n    \"status\": \"PRESCRIBED\",\n    \"instructions\": {\n      \"considerations\": \"<p>This is just an example, not a real protocol.</p>\",\n      \"restrictions\": \"<p>Not for use on real animals.</p>\",\n      \"dothis\": \"<h3>Examinations to perform</h3>\",\n      \"recordthis\": \"<p>record every step in your notebook.</p>\",\n      \"success\": \"<p>All problems are gone</p>\",\n      \"failure\": \"<p>One or more problems remain</p>\",\n      \"references\": \"<a href=\\\"https://en.wikipedia.org/wiki/Rickrolling\\\">Wikipedia</a>\"\n    },\n    \"id\": 12345,\n    \"shortname\": \"wip\",\n    \"created\": \"1964-02-01T19:13:09.615Z\",\n    \"edited\": \"1965-04-01T00:28:39.177Z\",\n    \"vetNote\": \"consider prescribing protocol x instead\",\n    \"wtMeatHrs\": 22,\n    \"wtMilkHrs\": 5,\n    \"shareAll\": true,\n    \"shareClonable\": true,\n    \"caseDefinition\": {\n      \"requireId\": false,\n      \"requireMor\": false,\n      \"contraindications\": \"\",\n      \"medical\": \"if fever is present, consider Protocol 12345 instead.\",\n      \"economic\": \"\",\n      \"note\": \"\"\n    },\n    \"treatments\": [\n      {\n        \"product\": \"MiracleMed\",\n        \"route\": \"wip\",\n        \"dosage\": {\n          \"doseId\": 45165276\n        },\n        \"sequenceFunction\": {\n          \"_type\": \"models.SeqSingleDose\"\n        },\n        \"sizeFunction\": {\n          \"_type\": \"models.FixedDoseFunction\",\n          \"dose\": {\n            \"quantity\": {\n              \"dimension\": \"Mass\",\n              \"value\": 3,\n              \"symbol\": \"oz\"\n            }\n          }\n        },\n        \"id\": \"B-123\",\n        \"ownerId\": 0,\n        \"description\": \"3.0 ml per kg repeat\",\n        \"eligibilities\": [\n          {\n            \"id\": 1,\n            \"name\": \"Beef Cattle\",\n            \"fdaSpecies\": [\n              \"other\",\n              \"chickens\"\n            ]\n          },\n          {\n            \"id\": 1,\n            \"name\": \"Beef Cattle\",\n            \"fdaSpecies\": [\n              \"emus\",\n              \"goats\"\n            ]\n          }\n        ],\n        \"_dose\": \"3.0 ml per kg repeat in 6 hours and again in 24 hours\",\n        \"wtMeatHrs\": 73397463,\n        \"wtMilkHrs\": 14904856,\n        \"nada\": \"wip\",\n        \"tags\": [\n          {\n            \"id\": 8,\n            \"color\": \"#516cc6\",\n            \"name\": \"nisi\",\n            \"fixes\": [\n              {\n                \"_type\": {\n                  \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"detail\": {\n                  \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"message\": {\n                  \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"title\": {\n                  \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                }\n              },\n              {\n                \"_type\": {\n                  \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"detail\": {\n                  \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"message\": {\n                  \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"title\": {\n                  \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                }\n              }\n            ]\n          },\n          {\n            \"id\": 8,\n            \"color\": \"#516cc6\",\n            \"name\": \"fugia\",\n            \"fixes\": [\n              {\n                \"_type\": {\n                  \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"detail\": {\n                  \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"message\": {\n                  \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"title\": {\n                  \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                }\n              },\n              {\n                \"_type\": {\n                  \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"detail\": {\n                  \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"message\": {\n                  \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"title\": {\n                  \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                }\n              }\n            ]\n          }\n        ],\n        \"note\": \"<p>a free-form note</p>\",\n        \"amduca\": \"UNIDENTIFIED\"\n      },\n      {\n        \"product\": \"MiracleMed\",\n        \"route\": \"wip\",\n        \"dosage\": {\n          \"doseId\": 42475482\n        },\n        \"sequenceFunction\": {\n          \"_type\": \"models.SeqSingleDose\"\n        },\n        \"sizeFunction\": {\n          \"_type\": \"models.FixedDoseFunction\",\n          \"dose\": {\n            \"quantity\": {\n              \"dimension\": \"Mass\",\n              \"value\": 3,\n              \"symbol\": \"oz\"\n            }\n          }\n        },\n        \"id\": \"B-123\",\n        \"ownerId\": 0,\n        \"description\": \"3.0 ml per kg repeat\",\n        \"eligibilities\": [\n          {\n            \"id\": 1,\n            \"name\": \"Beef Cattle\",\n            \"fdaSpecies\": [\n              \"emus\",\n              \"beef_cattle\"\n            ]\n          },\n          {\n            \"id\": 1,\n            \"name\": \"Beef Cattle\",\n            \"fdaSpecies\": [\n              \"horses\",\n              \"gamebirds\"\n            ]\n          }\n        ],\n        \"_dose\": \"3.0 ml per kg repeat in 6 hours and again in 24 hours\",\n        \"wtMeatHrs\": -32388393,\n        \"wtMilkHrs\": 45486235,\n        \"nada\": \"wip\",\n        \"tags\": [\n          {\n            \"id\": 8,\n            \"color\": \"#516cc6\",\n            \"name\": \"occ\",\n            \"fixes\": [\n              {\n                \"_type\": {\n                  \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"detail\": {\n                  \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"message\": {\n                  \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"title\": {\n                  \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                }\n              },\n              {\n                \"_type\": {\n                  \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"detail\": {\n                  \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"message\": {\n                  \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"title\": {\n                  \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                }\n              }\n            ]\n          },\n          {\n            \"id\": 8,\n            \"color\": \"#516cc6\",\n            \"name\": \"Lorem Duis sun\",\n            \"fixes\": [\n              {\n                \"_type\": {\n                  \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"detail\": {\n                  \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"message\": {\n                  \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"title\": {\n                  \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                }\n              },\n              {\n                \"_type\": {\n                  \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"detail\": {\n                  \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"message\": {\n                  \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"title\": {\n                  \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                }\n              }\n            ]\n          }\n        ],\n        \"note\": \"<p>a free-form note</p>\",\n        \"amduca\": \"ONLABEL\"\n      }\n    ],\n    \"tags\": [\n      {\n        \"id\": 8,\n        \"color\": \"#516cc6\",\n        \"name\": \"dolor ad \",\n        \"fixes\": [\n          {\n            \"_type\": \"mollit quis proident Ut\",\n            \"detail\": \"minim irure\",\n            \"message\": \"sit tempor laborum\",\n            \"title\": \"c\"\n          },\n          {\n            \"_type\": \"dolore elit irure\",\n            \"detail\": \"ut te\",\n            \"message\": \"exercita\",\n            \"title\": \"aliquip enim dolor ea\"\n          }\n        ]\n      },\n      {\n        \"id\": 8,\n        \"color\": \"#516cc6\",\n        \"name\": \"elit deserunt\",\n        \"fixes\": [\n          {\n            \"_type\": \"cillum exercitation\",\n            \"detail\": \"in do\",\n            \"message\": \"qui ea ullamco\",\n            \"title\": \"commodo nostrud\"\n          },\n          {\n            \"_type\": \"occaecat in non dolore\",\n            \"detail\": \"id nulla nostrud\",\n            \"message\": \"irure sed deserunt\",\n            \"title\": \"eu sit\"\n          }\n        ]\n      }\n    ],\n    \"diagnoses\": [\n      {\n        \"id\": 8,\n        \"name\": \"Pain/inflammation (musculoskeletal), treatment\"\n      },\n      {\n        \"id\": 8,\n        \"name\": \"Pain/inflammation (musculoskeletal), treatment\"\n      }\n    ],\n    \"eligibilities\": [\n      {\n        \"id\": 1,\n        \"name\": \"Beef Cattle\",\n        \"fdaSpecies\": [\n          \"dogs\",\n          \"dairy_cattle\"\n        ]\n      },\n      {\n        \"id\": 1,\n        \"name\": \"Beef Cattle\",\n        \"fdaSpecies\": [\n          \"chickens\",\n          \"veal\"\n        ]\n      }\n    ],\n    \"promises\": [\n      {\n        \"_type\": \"models.AffirmationPromise\",\n        \"name\": \"ID promise\",\n        \"when\": \"PT0H\",\n        \"id\": 2345,\n        \"ownerId\": 123,\n        \"descrip\": \"You must give ID for each case enrolled\"\n      },\n      {\n        \"_type\": \"models.AffirmationPromise\",\n        \"name\": \"ID promise\",\n        \"when\": \"PT0H\",\n        \"id\": 2345,\n        \"ownerId\": 123,\n        \"descrip\": \"You must give ID for each case enrolled\"\n      }\n    ],\n    \"metadata\": [\n      {\n        \"key\": \"popularity\",\n        \"value\": \"good 1.2\"\n      },\n      {\n        \"key\": \"popularity\",\n        \"value\": \"good 1.2\"\n      }\n    ]\n  },\n  \"remedy\": {\n    \"_type\": \"consequat voluptate esse nulla enim\",\n    \"detail\": \"aliqua velit\",\n    \"message\": \"in deserunt Excepteur aliquip\",\n    \"title\": \"in\"\n  }\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "e49dcff5-fe4b-41bb-9ddb-e1b249a0db8b",
                "type": "text/javascript",
                "exec": [
                  "./portman/pm-login.json",
                  "// Validate status 2xx \npm.test(\"[PUT]::/api/protocols/tags/remedies - Status code is 2xx\", function () {\n   pm.response.to.be.success;\n});\n"
                ]
              }
            }
          ],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        {
          "id": "7cb2c6c1-d3e9-41cd-a9df-e8255a5d44d1",
          "name": "list of Promises",
          "request": {
            "name": "list of Promises",
            "description": {
              "content": "VOR users have access to a set of public promises plus any Promises they have created for their own use.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "api",
                "protocols",
                "promises"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "GET"
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "f2ac0955-e46d-4345-a17a-47c1a3c1cf75",
                "type": "text/javascript",
                "exec": [
                  "./portman/pm-login.json",
                  "// Validate status 2xx \npm.test(\"[GET]::/api/protocols/promises - Status code is 2xx\", function () {\n   pm.response.to.be.success;\n});\n"
                ]
              }
            }
          ]
        },
        {
          "id": "6843e5da-e782-44f8-8066-77716e1c0881",
          "name": "create a private Promise",
          "request": {
            "name": "create a private Promise",
            "description": {
              "content": "Create a Promise type that will be private (available only to the VOR recording it)",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "api",
                "protocols",
                "privatePromises"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n  \"_type\": \"models.AffirmationPromise\",\n  \"name\": \"ID promise\",\n  \"when\": \"PT0H\",\n  \"id\": 2345,\n  \"ownerId\": 123,\n  \"descrip\": \"You must give ID for each case enrolled\"\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "85272c8a-a76c-45c2-bdf7-38c9b971db65",
                "type": "text/javascript",
                "exec": [
                  "./portman/pm-login.json",
                  "// Validate status 2xx \npm.test(\"[POST]::/api/protocols/privatePromises - Status code is 2xx\", function () {\n   pm.response.to.be.success;\n});\n"
                ]
              }
            }
          ],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        {
          "id": "9a77064f-579c-4d4d-adb9-7a8928c97e94",
          "name": "Promises in a Protocol",
          "request": {
            "name": "Promises in a Protocol",
            "description": {
              "content": "Return Promises contained within a Protocol.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "api",
                "protocols",
                "promises",
                ":id"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": [
                {
                  "disabled": false,
                  "description": {
                    "content": "(Required) protocol  ID",
                    "type": "text/plain"
                  },
                  "type": "any",
                  "value": "32",
                  "key": "id"
                }
              ]
            },
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "GET"
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "62d177c7-4fc2-47ee-93d3-bc1c45e37e16",
                "type": "text/javascript",
                "exec": [
                  "./portman/pm-login.json",
                  "// Validate status 2xx \npm.test(\"[GET]::/api/protocols/promises/:id - Status code is 2xx\", function () {\n   pm.response.to.be.success;\n});\n"
                ]
              }
            }
          ]
        },
        {
          "id": "7567f46c-18b6-4a4d-9d9b-d29cfbb9ed92",
          "name": "send a message to another user",
          "request": {
            "name": "send a message to another user",
            "description": {
              "content": "send a message to another user",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "api",
                "messages"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": false,
                  "description": {
                    "content": "Mode(s) or channel(s) to use in messaging, defaulting to EMAIL",
                    "type": "text/plain"
                  },
                  "key": "modes",
                  "value": "EMAIL|EMAIL"
                }
              ],
              "variable": []
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n  \"_type\": \"models.SimpleMessage\",\n  \"from\": 99,\n  \"to\": 99,\n  \"subject\": \"laborum enim dolo\",\n  \"message\": \"Hello <b>world</b>\",\n  \"detail\": \"magna enim eiusmod\"\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "d072f03c-c711-4a15-86da-3eda33d6fdc1",
                "type": "text/javascript",
                "exec": [
                  "./portman/pm-login.json"
                ]
              }
            }
          ],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        {
          "id": "8628c3dc-94b8-4f78-a2ef-e3fc6fccde0b",
          "name": "protocols owned by user",
          "request": {
            "name": "protocols owned by user",
            "description": {
              "content": "Retrieve all Protocols owned by, or shared with, the current User. The default excludes deleted (status DEPRECATED) protocols.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "api",
                "protocols"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": false,
                  "description": {
                    "content": "filter Protocols to include only Protocols with listed statuses. If this parameter is omitted, the query defaults to all status values **except** DEPRECATED.",
                    "type": "text/plain"
                  },
                  "key": "status",
                  "value": "PRESCRIBED|PRESCRIBED"
                }
              ],
              "variable": []
            },
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "GET"
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "c6666b0d-4be1-4063-8d2f-919ca15e56c9",
                "type": "text/javascript",
                "exec": [
                  "./portman/pm-login.json"
                ]
              }
            }
          ]
        },
        {
          "id": "4944411a-3d73-4a5a-be3d-8bb05a7f1f27",
          "name": "record and validate aprotocol",
          "request": {
            "name": "record and validate aprotocol",
            "description": {
              "content": "This endpoint saves and validates a Protocol.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "api",
                "protocols"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n  \"ownerId\": 1,\n  \"name\": \"wip\",\n  \"status\": \"PRESCRIBED\",\n  \"instructions\": {\n    \"considerations\": \"<p>This is just an example, not a real protocol.</p>\",\n    \"restrictions\": \"<p>Not for use on real animals.</p>\",\n    \"dothis\": \"<h3>Examinations to perform</h3>\",\n    \"recordthis\": \"<p>record every step in your notebook.</p>\",\n    \"success\": \"<p>All problems are gone</p>\",\n    \"failure\": \"<p>One or more problems remain</p>\",\n    \"references\": \"<a href=\\\"https://en.wikipedia.org/wiki/Rickrolling\\\">Wikipedia</a>\"\n  },\n  \"id\": 12345,\n  \"shortname\": \"wip\",\n  \"created\": \"2018-01-19T00:16:47.371Z\",\n  \"edited\": \"1972-11-19T02:51:58.723Z\",\n  \"vetNote\": \"consider prescribing protocol x instead\",\n  \"wtMeatHrs\": 22,\n  \"wtMilkHrs\": 5,\n  \"shareAll\": true,\n  \"shareClonable\": true,\n  \"caseDefinition\": {\n    \"requireId\": false,\n    \"requireMor\": false,\n    \"contraindications\": \"\",\n    \"medical\": \"if fever is present, consider Protocol 12345 instead.\",\n    \"economic\": \"\",\n    \"note\": \"\"\n  },\n  \"treatments\": [\n    {\n      \"product\": \"MiracleMed\",\n      \"route\": \"wip\",\n      \"dosage\": {\n        \"doseId\": -74836102\n      },\n      \"sequenceFunction\": {\n        \"_type\": \"models.SeqSingleDose\"\n      },\n      \"sizeFunction\": {\n        \"_type\": \"models.FixedDoseFunction\",\n        \"dose\": {\n          \"quantity\": {\n            \"dimension\": \"Mass\",\n            \"value\": 3,\n            \"symbol\": \"oz\"\n          }\n        }\n      },\n      \"id\": \"B-123\",\n      \"ownerId\": 0,\n      \"description\": \"3.0 ml per kg repeat\",\n      \"eligibilities\": [\n        {\n          \"id\": 1,\n          \"name\": \"Beef Cattle\",\n          \"fdaSpecies\": [\n            \"veal\",\n            \"cats\"\n          ]\n        },\n        {\n          \"id\": 1,\n          \"name\": \"Beef Cattle\",\n          \"fdaSpecies\": [\n            \"bison\",\n            \"gamebirds\"\n          ]\n        }\n      ],\n      \"_dose\": \"3.0 ml per kg repeat in 6 hours and again in 24 hours\",\n      \"wtMeatHrs\": -93818792,\n      \"wtMilkHrs\": -59599890,\n      \"nada\": \"wip\",\n      \"tags\": [\n        {\n          \"id\": 8,\n          \"color\": \"#516cc6\",\n          \"name\": \"ipsum la\",\n          \"fixes\": [\n            {\n              \"_type\": \"ad adipisicing dolore \",\n              \"detail\": \"pariatur irure voluptate amet\",\n              \"message\": \"cupidatat non\",\n              \"title\": \"exercitation irure enim\"\n            },\n            {\n              \"_type\": \"la\",\n              \"detail\": \"veniam nulla exercitation cupidatat\",\n              \"message\": \"amet sunt laborum dol\",\n              \"title\": \"magna ad eiusmod laborum\"\n            }\n          ]\n        },\n        {\n          \"id\": 8,\n          \"color\": \"#516cc6\",\n          \"name\": \"e\",\n          \"fixes\": [\n            {\n              \"_type\": \"ut culpa\",\n              \"detail\": \"quis minim qui\",\n              \"message\": \"dolor est do elit minim\",\n              \"title\": \"anim ea\"\n            },\n            {\n              \"_type\": \"in proident\",\n              \"detail\": \"mollit eu\",\n              \"message\": \"in qui ipsum\",\n              \"title\": \"dolor Lorem\"\n            }\n          ]\n        }\n      ],\n      \"note\": \"<p>a free-form note</p>\",\n      \"amduca\": \"UNIDENTIFIED\"\n    },\n    {\n      \"product\": \"MiracleMed\",\n      \"route\": \"wip\",\n      \"dosage\": {\n        \"doseId\": 18433348\n      },\n      \"sequenceFunction\": {\n        \"_type\": \"models.SeqSingleDose\"\n      },\n      \"sizeFunction\": {\n        \"_type\": \"models.FixedDoseFunction\",\n        \"dose\": {\n          \"quantity\": {\n            \"dimension\": \"Mass\",\n            \"value\": 3,\n            \"symbol\": \"oz\"\n          }\n        }\n      },\n      \"id\": \"B-123\",\n      \"ownerId\": 0,\n      \"description\": \"3.0 ml per kg repeat\",\n      \"eligibilities\": [\n        {\n          \"id\": 1,\n          \"name\": \"Beef Cattle\",\n          \"fdaSpecies\": [\n            \"llamas\",\n            \"dairy_cattle\"\n          ]\n        },\n        {\n          \"id\": 1,\n          \"name\": \"Beef Cattle\",\n          \"fdaSpecies\": [\n            \"swine\",\n            \"gamebirds\"\n          ]\n        }\n      ],\n      \"_dose\": \"3.0 ml per kg repeat in 6 hours and again in 24 hours\",\n      \"wtMeatHrs\": -14964034,\n      \"wtMilkHrs\": 44610835,\n      \"nada\": \"wip\",\n      \"tags\": [\n        {\n          \"id\": 8,\n          \"color\": \"#516cc6\",\n          \"name\": \"la\",\n          \"fixes\": [\n            {\n              \"_type\": \"aute non sit\",\n              \"detail\": \"magna ullamco\",\n              \"message\": \"occaecat ut aliqua\",\n              \"title\": \"cupidatat veniam pariatur\"\n            },\n            {\n              \"_type\": \"in ipsum commodo\",\n              \"detail\": \"nisi veniam amet\",\n              \"message\": \"et sit velit cillum\",\n              \"title\": \"ut incididunt\"\n            }\n          ]\n        },\n        {\n          \"id\": 8,\n          \"color\": \"#516cc6\",\n          \"name\": \"esse \",\n          \"fixes\": [\n            {\n              \"_type\": \"anim magna cillum in dolor\",\n              \"detail\": \"dolor incididunt qui\",\n              \"message\": \"dolore culpa\",\n              \"title\": \"dolore dolor sunt\"\n            },\n            {\n              \"_type\": \"velit anim fugiat\",\n              \"detail\": \"qui et\",\n              \"message\": \"incididu\",\n              \"title\": \"laboris esse dolor reprehenderit\"\n            }\n          ]\n        }\n      ],\n      \"note\": \"<p>a free-form note</p>\",\n      \"amduca\": \"ONLABEL\"\n    }\n  ],\n  \"tags\": [\n    {\n      \"id\": 8,\n      \"color\": \"#516cc6\",\n      \"name\": \"ea dolore nos\",\n      \"fixes\": [\n        {\n          \"_type\": \"dolor laborum do\",\n          \"detail\": \"dolore qui\",\n          \"message\": \"exercitation consequat id\",\n          \"title\": \"dolor cupidatat\"\n        },\n        {\n          \"_type\": \"Excepteur commodo in ut\",\n          \"detail\": \"ea anim minim cupidatat\",\n          \"message\": \"ullamco\",\n          \"title\": \"sint pariatur nostrud\"\n        }\n      ]\n    },\n    {\n      \"id\": 8,\n      \"color\": \"#516cc6\",\n      \"name\": \"in e\",\n      \"fixes\": [\n        {\n          \"_type\": \"aliquip ad Lorem ut\",\n          \"detail\": \"esse Duis\",\n          \"message\": \"veniam\",\n          \"title\": \"dolore\"\n        },\n        {\n          \"_type\": \"minim sint esse officia\",\n          \"detail\": \"Exc\",\n          \"message\": \"nostrud\",\n          \"title\": \"elit nostrud\"\n        }\n      ]\n    }\n  ],\n  \"diagnoses\": [\n    {\n      \"id\": 8,\n      \"name\": \"Pain/inflammation (musculoskeletal), treatment\"\n    },\n    {\n      \"id\": 8,\n      \"name\": \"Pain/inflammation (musculoskeletal), treatment\"\n    }\n  ],\n  \"eligibilities\": [\n    {\n      \"id\": 1,\n      \"name\": \"Beef Cattle\",\n      \"fdaSpecies\": [\n        \"goats\",\n        \"emus\"\n      ]\n    },\n    {\n      \"id\": 1,\n      \"name\": \"Beef Cattle\",\n      \"fdaSpecies\": [\n        \"veal\",\n        \"bison\"\n      ]\n    }\n  ],\n  \"promises\": [\n    {\n      \"_type\": \"models.AffirmationPromise\",\n      \"name\": \"ID promise\",\n      \"when\": \"PT0H\",\n      \"id\": 2345,\n      \"ownerId\": 123,\n      \"descrip\": \"You must give ID for each case enrolled\"\n    },\n    {\n      \"_type\": \"models.AffirmationPromise\",\n      \"name\": \"ID promise\",\n      \"when\": \"PT0H\",\n      \"id\": 2345,\n      \"ownerId\": 123,\n      \"descrip\": \"You must give ID for each case enrolled\"\n    }\n  ],\n  \"metadata\": [\n    {\n      \"key\": \"popularity\",\n      \"value\": \"good 1.2\"\n    },\n    {\n      \"key\": \"popularity\",\n      \"value\": \"good 1.2\"\n    }\n  ]\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "dd848682-f4c0-4455-b5f4-8caa1e843f39",
                "type": "text/javascript",
                "exec": [
                  "./portman/pm-login.json"
                ]
              }
            }
          ],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        {
          "id": "4ec9e5d7-cd34-4f1c-bdc3-5a763dc213b8",
          "name": "update protocol",
          "request": {
            "name": "update protocol",
            "description": {
              "content": "This endpoint updates and validates a Protocol.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "api",
                "protocols"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "PUT",
            "body": {
              "mode": "raw",
              "raw": "{\n  \"ownerId\": 1,\n  \"name\": \"wip\",\n  \"status\": \"PRESCRIBED\",\n  \"instructions\": {\n    \"considerations\": \"<p>This is just an example, not a real protocol.</p>\",\n    \"restrictions\": \"<p>Not for use on real animals.</p>\",\n    \"dothis\": \"<h3>Examinations to perform</h3>\",\n    \"recordthis\": \"<p>record every step in your notebook.</p>\",\n    \"success\": \"<p>All problems are gone</p>\",\n    \"failure\": \"<p>One or more problems remain</p>\",\n    \"references\": \"<a href=\\\"https://en.wikipedia.org/wiki/Rickrolling\\\">Wikipedia</a>\"\n  },\n  \"id\": 12345,\n  \"shortname\": \"wip\",\n  \"created\": \"2018-01-19T00:16:47.371Z\",\n  \"edited\": \"1972-11-19T02:51:58.723Z\",\n  \"vetNote\": \"consider prescribing protocol x instead\",\n  \"wtMeatHrs\": 22,\n  \"wtMilkHrs\": 5,\n  \"shareAll\": true,\n  \"shareClonable\": true,\n  \"caseDefinition\": {\n    \"requireId\": false,\n    \"requireMor\": false,\n    \"contraindications\": \"\",\n    \"medical\": \"if fever is present, consider Protocol 12345 instead.\",\n    \"economic\": \"\",\n    \"note\": \"\"\n  },\n  \"treatments\": [\n    {\n      \"product\": \"MiracleMed\",\n      \"route\": \"wip\",\n      \"dosage\": {\n        \"doseId\": -74836102\n      },\n      \"sequenceFunction\": {\n        \"_type\": \"models.SeqSingleDose\"\n      },\n      \"sizeFunction\": {\n        \"_type\": \"models.FixedDoseFunction\",\n        \"dose\": {\n          \"quantity\": {\n            \"dimension\": \"Mass\",\n            \"value\": 3,\n            \"symbol\": \"oz\"\n          }\n        }\n      },\n      \"id\": \"B-123\",\n      \"ownerId\": 0,\n      \"description\": \"3.0 ml per kg repeat\",\n      \"eligibilities\": [\n        {\n          \"id\": 1,\n          \"name\": \"Beef Cattle\",\n          \"fdaSpecies\": [\n            \"veal\",\n            \"cats\"\n          ]\n        },\n        {\n          \"id\": 1,\n          \"name\": \"Beef Cattle\",\n          \"fdaSpecies\": [\n            \"bison\",\n            \"gamebirds\"\n          ]\n        }\n      ],\n      \"_dose\": \"3.0 ml per kg repeat in 6 hours and again in 24 hours\",\n      \"wtMeatHrs\": -93818792,\n      \"wtMilkHrs\": -59599890,\n      \"nada\": \"wip\",\n      \"tags\": [\n        {\n          \"id\": 8,\n          \"color\": \"#516cc6\",\n          \"name\": \"ipsum la\",\n          \"fixes\": [\n            {\n              \"_type\": \"ad adipisicing dolore \",\n              \"detail\": \"pariatur irure voluptate amet\",\n              \"message\": \"cupidatat non\",\n              \"title\": \"exercitation irure enim\"\n            },\n            {\n              \"_type\": \"la\",\n              \"detail\": \"veniam nulla exercitation cupidatat\",\n              \"message\": \"amet sunt laborum dol\",\n              \"title\": \"magna ad eiusmod laborum\"\n            }\n          ]\n        },\n        {\n          \"id\": 8,\n          \"color\": \"#516cc6\",\n          \"name\": \"e\",\n          \"fixes\": [\n            {\n              \"_type\": \"ut culpa\",\n              \"detail\": \"quis minim qui\",\n              \"message\": \"dolor est do elit minim\",\n              \"title\": \"anim ea\"\n            },\n            {\n              \"_type\": \"in proident\",\n              \"detail\": \"mollit eu\",\n              \"message\": \"in qui ipsum\",\n              \"title\": \"dolor Lorem\"\n            }\n          ]\n        }\n      ],\n      \"note\": \"<p>a free-form note</p>\",\n      \"amduca\": \"UNIDENTIFIED\"\n    },\n    {\n      \"product\": \"MiracleMed\",\n      \"route\": \"wip\",\n      \"dosage\": {\n        \"doseId\": 18433348\n      },\n      \"sequenceFunction\": {\n        \"_type\": \"models.SeqSingleDose\"\n      },\n      \"sizeFunction\": {\n        \"_type\": \"models.FixedDoseFunction\",\n        \"dose\": {\n          \"quantity\": {\n            \"dimension\": \"Mass\",\n            \"value\": 3,\n            \"symbol\": \"oz\"\n          }\n        }\n      },\n      \"id\": \"B-123\",\n      \"ownerId\": 0,\n      \"description\": \"3.0 ml per kg repeat\",\n      \"eligibilities\": [\n        {\n          \"id\": 1,\n          \"name\": \"Beef Cattle\",\n          \"fdaSpecies\": [\n            \"llamas\",\n            \"dairy_cattle\"\n          ]\n        },\n        {\n          \"id\": 1,\n          \"name\": \"Beef Cattle\",\n          \"fdaSpecies\": [\n            \"swine\",\n            \"gamebirds\"\n          ]\n        }\n      ],\n      \"_dose\": \"3.0 ml per kg repeat in 6 hours and again in 24 hours\",\n      \"wtMeatHrs\": -14964034,\n      \"wtMilkHrs\": 44610835,\n      \"nada\": \"wip\",\n      \"tags\": [\n        {\n          \"id\": 8,\n          \"color\": \"#516cc6\",\n          \"name\": \"la\",\n          \"fixes\": [\n            {\n              \"_type\": \"aute non sit\",\n              \"detail\": \"magna ullamco\",\n              \"message\": \"occaecat ut aliqua\",\n              \"title\": \"cupidatat veniam pariatur\"\n            },\n            {\n              \"_type\": \"in ipsum commodo\",\n              \"detail\": \"nisi veniam amet\",\n              \"message\": \"et sit velit cillum\",\n              \"title\": \"ut incididunt\"\n            }\n          ]\n        },\n        {\n          \"id\": 8,\n          \"color\": \"#516cc6\",\n          \"name\": \"esse \",\n          \"fixes\": [\n            {\n              \"_type\": \"anim magna cillum in dolor\",\n              \"detail\": \"dolor incididunt qui\",\n              \"message\": \"dolore culpa\",\n              \"title\": \"dolore dolor sunt\"\n            },\n            {\n              \"_type\": \"velit anim fugiat\",\n              \"detail\": \"qui et\",\n              \"message\": \"incididu\",\n              \"title\": \"laboris esse dolor reprehenderit\"\n            }\n          ]\n        }\n      ],\n      \"note\": \"<p>a free-form note</p>\",\n      \"amduca\": \"ONLABEL\"\n    }\n  ],\n  \"tags\": [\n    {\n      \"id\": 8,\n      \"color\": \"#516cc6\",\n      \"name\": \"ea dolore nos\",\n      \"fixes\": [\n        {\n          \"_type\": \"dolor laborum do\",\n          \"detail\": \"dolore qui\",\n          \"message\": \"exercitation consequat id\",\n          \"title\": \"dolor cupidatat\"\n        },\n        {\n          \"_type\": \"Excepteur commodo in ut\",\n          \"detail\": \"ea anim minim cupidatat\",\n          \"message\": \"ullamco\",\n          \"title\": \"sint pariatur nostrud\"\n        }\n      ]\n    },\n    {\n      \"id\": 8,\n      \"color\": \"#516cc6\",\n      \"name\": \"in e\",\n      \"fixes\": [\n        {\n          \"_type\": \"aliquip ad Lorem ut\",\n          \"detail\": \"esse Duis\",\n          \"message\": \"veniam\",\n          \"title\": \"dolore\"\n        },\n        {\n          \"_type\": \"minim sint esse officia\",\n          \"detail\": \"Exc\",\n          \"message\": \"nostrud\",\n          \"title\": \"elit nostrud\"\n        }\n      ]\n    }\n  ],\n  \"diagnoses\": [\n    {\n      \"id\": 8,\n      \"name\": \"Pain/inflammation (musculoskeletal), treatment\"\n    },\n    {\n      \"id\": 8,\n      \"name\": \"Pain/inflammation (musculoskeletal), treatment\"\n    }\n  ],\n  \"eligibilities\": [\n    {\n      \"id\": 1,\n      \"name\": \"Beef Cattle\",\n      \"fdaSpecies\": [\n        \"goats\",\n        \"emus\"\n      ]\n    },\n    {\n      \"id\": 1,\n      \"name\": \"Beef Cattle\",\n      \"fdaSpecies\": [\n        \"veal\",\n        \"bison\"\n      ]\n    }\n  ],\n  \"promises\": [\n    {\n      \"_type\": \"models.AffirmationPromise\",\n      \"name\": \"ID promise\",\n      \"when\": \"PT0H\",\n      \"id\": 2345,\n      \"ownerId\": 123,\n      \"descrip\": \"You must give ID for each case enrolled\"\n    },\n    {\n      \"_type\": \"models.AffirmationPromise\",\n      \"name\": \"ID promise\",\n      \"when\": \"PT0H\",\n      \"id\": 2345,\n      \"ownerId\": 123,\n      \"descrip\": \"You must give ID for each case enrolled\"\n    }\n  ],\n  \"metadata\": [\n    {\n      \"key\": \"popularity\",\n      \"value\": \"good 1.2\"\n    },\n    {\n      \"key\": \"popularity\",\n      \"value\": \"good 1.2\"\n    }\n  ]\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "4926e5a5-8733-41aa-af88-a3cdb28a4621",
                "type": "text/javascript",
                "exec": [
                  "./portman/pm-login.json"
                ]
              }
            }
          ],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        {
          "id": "c448c327-08dc-4d3a-a5c8-8e6f226db25e",
          "name": "This endpoint validates a protocol without saving it.",
          "request": {
            "name": "This endpoint validates a protocol without saving it.",
            "description": {
              "content": "This endpoint validates a protocol for prescribing without saving it. It should only be called if the user wants to prescribe a protocol without saving changes. The endpoints to save or update protocols automatically include validation.4",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "api",
                "protocols",
                "validate"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "PUT",
            "body": {
              "mode": "raw",
              "raw": "{\n  \"ownerId\": 1,\n  \"name\": \"wip\",\n  \"status\": \"PRESCRIBED\",\n  \"instructions\": {\n    \"considerations\": \"<p>This is just an example, not a real protocol.</p>\",\n    \"restrictions\": \"<p>Not for use on real animals.</p>\",\n    \"dothis\": \"<h3>Examinations to perform</h3>\",\n    \"recordthis\": \"<p>record every step in your notebook.</p>\",\n    \"success\": \"<p>All problems are gone</p>\",\n    \"failure\": \"<p>One or more problems remain</p>\",\n    \"references\": \"<a href=\\\"https://en.wikipedia.org/wiki/Rickrolling\\\">Wikipedia</a>\"\n  },\n  \"id\": 12345,\n  \"shortname\": \"wip\",\n  \"created\": \"2018-01-19T00:16:47.371Z\",\n  \"edited\": \"1972-11-19T02:51:58.723Z\",\n  \"vetNote\": \"consider prescribing protocol x instead\",\n  \"wtMeatHrs\": 22,\n  \"wtMilkHrs\": 5,\n  \"shareAll\": true,\n  \"shareClonable\": true,\n  \"caseDefinition\": {\n    \"requireId\": false,\n    \"requireMor\": false,\n    \"contraindications\": \"\",\n    \"medical\": \"if fever is present, consider Protocol 12345 instead.\",\n    \"economic\": \"\",\n    \"note\": \"\"\n  },\n  \"treatments\": [\n    {\n      \"product\": \"MiracleMed\",\n      \"route\": \"wip\",\n      \"dosage\": {\n        \"doseId\": -74836102\n      },\n      \"sequenceFunction\": {\n        \"_type\": \"models.SeqSingleDose\"\n      },\n      \"sizeFunction\": {\n        \"_type\": \"models.FixedDoseFunction\",\n        \"dose\": {\n          \"quantity\": {\n            \"dimension\": \"Mass\",\n            \"value\": 3,\n            \"symbol\": \"oz\"\n          }\n        }\n      },\n      \"id\": \"B-123\",\n      \"ownerId\": 0,\n      \"description\": \"3.0 ml per kg repeat\",\n      \"eligibilities\": [\n        {\n          \"id\": 1,\n          \"name\": \"Beef Cattle\",\n          \"fdaSpecies\": [\n            \"veal\",\n            \"cats\"\n          ]\n        },\n        {\n          \"id\": 1,\n          \"name\": \"Beef Cattle\",\n          \"fdaSpecies\": [\n            \"bison\",\n            \"gamebirds\"\n          ]\n        }\n      ],\n      \"_dose\": \"3.0 ml per kg repeat in 6 hours and again in 24 hours\",\n      \"wtMeatHrs\": -93818792,\n      \"wtMilkHrs\": -59599890,\n      \"nada\": \"wip\",\n      \"tags\": [\n        {\n          \"id\": 8,\n          \"color\": \"#516cc6\",\n          \"name\": \"ipsum la\",\n          \"fixes\": [\n            {\n              \"_type\": \"ad adipisicing dolore \",\n              \"detail\": \"pariatur irure voluptate amet\",\n              \"message\": \"cupidatat non\",\n              \"title\": \"exercitation irure enim\"\n            },\n            {\n              \"_type\": \"la\",\n              \"detail\": \"veniam nulla exercitation cupidatat\",\n              \"message\": \"amet sunt laborum dol\",\n              \"title\": \"magna ad eiusmod laborum\"\n            }\n          ]\n        },\n        {\n          \"id\": 8,\n          \"color\": \"#516cc6\",\n          \"name\": \"e\",\n          \"fixes\": [\n            {\n              \"_type\": \"ut culpa\",\n              \"detail\": \"quis minim qui\",\n              \"message\": \"dolor est do elit minim\",\n              \"title\": \"anim ea\"\n            },\n            {\n              \"_type\": \"in proident\",\n              \"detail\": \"mollit eu\",\n              \"message\": \"in qui ipsum\",\n              \"title\": \"dolor Lorem\"\n            }\n          ]\n        }\n      ],\n      \"note\": \"<p>a free-form note</p>\",\n      \"amduca\": \"UNIDENTIFIED\"\n    },\n    {\n      \"product\": \"MiracleMed\",\n      \"route\": \"wip\",\n      \"dosage\": {\n        \"doseId\": 18433348\n      },\n      \"sequenceFunction\": {\n        \"_type\": \"models.SeqSingleDose\"\n      },\n      \"sizeFunction\": {\n        \"_type\": \"models.FixedDoseFunction\",\n        \"dose\": {\n          \"quantity\": {\n            \"dimension\": \"Mass\",\n            \"value\": 3,\n            \"symbol\": \"oz\"\n          }\n        }\n      },\n      \"id\": \"B-123\",\n      \"ownerId\": 0,\n      \"description\": \"3.0 ml per kg repeat\",\n      \"eligibilities\": [\n        {\n          \"id\": 1,\n          \"name\": \"Beef Cattle\",\n          \"fdaSpecies\": [\n            \"llamas\",\n            \"dairy_cattle\"\n          ]\n        },\n        {\n          \"id\": 1,\n          \"name\": \"Beef Cattle\",\n          \"fdaSpecies\": [\n            \"swine\",\n            \"gamebirds\"\n          ]\n        }\n      ],\n      \"_dose\": \"3.0 ml per kg repeat in 6 hours and again in 24 hours\",\n      \"wtMeatHrs\": -14964034,\n      \"wtMilkHrs\": 44610835,\n      \"nada\": \"wip\",\n      \"tags\": [\n        {\n          \"id\": 8,\n          \"color\": \"#516cc6\",\n          \"name\": \"la\",\n          \"fixes\": [\n            {\n              \"_type\": \"aute non sit\",\n              \"detail\": \"magna ullamco\",\n              \"message\": \"occaecat ut aliqua\",\n              \"title\": \"cupidatat veniam pariatur\"\n            },\n            {\n              \"_type\": \"in ipsum commodo\",\n              \"detail\": \"nisi veniam amet\",\n              \"message\": \"et sit velit cillum\",\n              \"title\": \"ut incididunt\"\n            }\n          ]\n        },\n        {\n          \"id\": 8,\n          \"color\": \"#516cc6\",\n          \"name\": \"esse \",\n          \"fixes\": [\n            {\n              \"_type\": \"anim magna cillum in dolor\",\n              \"detail\": \"dolor incididunt qui\",\n              \"message\": \"dolore culpa\",\n              \"title\": \"dolore dolor sunt\"\n            },\n            {\n              \"_type\": \"velit anim fugiat\",\n              \"detail\": \"qui et\",\n              \"message\": \"incididu\",\n              \"title\": \"laboris esse dolor reprehenderit\"\n            }\n          ]\n        }\n      ],\n      \"note\": \"<p>a free-form note</p>\",\n      \"amduca\": \"ONLABEL\"\n    }\n  ],\n  \"tags\": [\n    {\n      \"id\": 8,\n      \"color\": \"#516cc6\",\n      \"name\": \"ea dolore nos\",\n      \"fixes\": [\n        {\n          \"_type\": \"dolor laborum do\",\n          \"detail\": \"dolore qui\",\n          \"message\": \"exercitation consequat id\",\n          \"title\": \"dolor cupidatat\"\n        },\n        {\n          \"_type\": \"Excepteur commodo in ut\",\n          \"detail\": \"ea anim minim cupidatat\",\n          \"message\": \"ullamco\",\n          \"title\": \"sint pariatur nostrud\"\n        }\n      ]\n    },\n    {\n      \"id\": 8,\n      \"color\": \"#516cc6\",\n      \"name\": \"in e\",\n      \"fixes\": [\n        {\n          \"_type\": \"aliquip ad Lorem ut\",\n          \"detail\": \"esse Duis\",\n          \"message\": \"veniam\",\n          \"title\": \"dolore\"\n        },\n        {\n          \"_type\": \"minim sint esse officia\",\n          \"detail\": \"Exc\",\n          \"message\": \"nostrud\",\n          \"title\": \"elit nostrud\"\n        }\n      ]\n    }\n  ],\n  \"diagnoses\": [\n    {\n      \"id\": 8,\n      \"name\": \"Pain/inflammation (musculoskeletal), treatment\"\n    },\n    {\n      \"id\": 8,\n      \"name\": \"Pain/inflammation (musculoskeletal), treatment\"\n    }\n  ],\n  \"eligibilities\": [\n    {\n      \"id\": 1,\n      \"name\": \"Beef Cattle\",\n      \"fdaSpecies\": [\n        \"goats\",\n        \"emus\"\n      ]\n    },\n    {\n      \"id\": 1,\n      \"name\": \"Beef Cattle\",\n      \"fdaSpecies\": [\n        \"veal\",\n        \"bison\"\n      ]\n    }\n  ],\n  \"promises\": [\n    {\n      \"_type\": \"models.AffirmationPromise\",\n      \"name\": \"ID promise\",\n      \"when\": \"PT0H\",\n      \"id\": 2345,\n      \"ownerId\": 123,\n      \"descrip\": \"You must give ID for each case enrolled\"\n    },\n    {\n      \"_type\": \"models.AffirmationPromise\",\n      \"name\": \"ID promise\",\n      \"when\": \"PT0H\",\n      \"id\": 2345,\n      \"ownerId\": 123,\n      \"descrip\": \"You must give ID for each case enrolled\"\n    }\n  ],\n  \"metadata\": [\n    {\n      \"key\": \"popularity\",\n      \"value\": \"good 1.2\"\n    },\n    {\n      \"key\": \"popularity\",\n      \"value\": \"good 1.2\"\n    }\n  ]\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "5e692e4e-5986-45f7-aad5-8a0dcff5fbe8",
                "type": "text/javascript",
                "exec": [
                  "./portman/pm-login.json",
                  "// Validate status 2xx \npm.test(\"[PUT]::/api/protocols/validate - Status code is 2xx\", function () {\n   pm.response.to.be.success;\n});\n"
                ]
              }
            }
          ],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        {
          "id": "21ed99be-0ffb-4632-9825-f9b7e9c3de84",
          "name": "list of all eligibilities",
          "request": {
            "name": "list of all eligibilities",
            "description": {
              "content": "This endpoint returns an array of Eligibilities from which a User may choose. The ID field is authoritative, i.e., is all that is needed to identify a particular Eligibility.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "api",
                "protocols",
                "eligibilities"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "GET"
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "046dd740-c20a-4b27-b64a-0c1bb4c9806d",
                "type": "text/javascript",
                "exec": [
                  "./portman/pm-login.json",
                  "// Validate status 2xx \npm.test(\"[GET]::/api/protocols/eligibilities - Status code is 2xx\", function () {\n   pm.response.to.be.success;\n});\n"
                ]
              }
            }
          ]
        },
        {
          "id": "ccdc3a70-561a-41a3-9997-17b80fd90922",
          "name": "list of fda species",
          "request": {
            "name": "list of fda species",
            "description": {
              "content": "\"Species\" is the term FDA uses to describe a class of animals in a label claim.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "api",
                "protocols",
                "eligibilities",
                "fdaspecies"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "GET"
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "853f9175-7988-4c53-8034-a810a25c836d",
                "type": "text/javascript",
                "exec": [
                  "./portman/pm-login.json",
                  "// Validate status 2xx \npm.test(\"[GET]::/api/protocols/eligibilities/fdaspecies - Status code is 2xx\", function () {\n   pm.response.to.be.success;\n});\n"
                ]
              }
            }
          ]
        },
        {
          "id": "ab25d0c7-d6c5-45eb-aafa-87ff2607c335",
          "name": "list of all diagnoses",
          "request": {
            "name": "list of all diagnoses",
            "description": {
              "content": "Returns an array of all coded Diagnoses known to the system.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "api",
                "protocols",
                "diagnoses"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "GET"
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "b34c7ffd-f562-4c5c-a68a-b9b446687167",
                "type": "text/javascript",
                "exec": [
                  "./portman/pm-login.json",
                  "// Validate status 2xx \npm.test(\"[GET]::/api/protocols/diagnoses - Status code is 2xx\", function () {\n   pm.response.to.be.success;\n});\n"
                ]
              }
            }
          ]
        },
        {
          "id": "8db0a25d-0a27-4bef-b20b-653e101e8c41",
          "name": "list of library protocols",
          "request": {
            "name": "list of library protocols",
            "description": {
              "content": "This endpoint retrieves all protocols owned by, or shared with, the current User.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "api",
                "protocols",
                "libs"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "GET"
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "dca97e89-acb9-4f94-8d9f-a6473f3a8510",
                "type": "text/javascript",
                "exec": [
                  "./portman/pm-login.json",
                  "// Validate status 2xx \npm.test(\"[GET]::/api/protocols/libs - Status code is 2xx\", function () {\n   pm.response.to.be.success;\n});\n"
                ]
              }
            }
          ]
        },
        {
          "id": "8609ab9f-d573-47a9-b919-bd3384e93176",
          "name": "list of all diagnoses",
          "request": {
            "name": "list of all diagnoses",
            "description": {
              "content": "returns an array of Pxes .",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "api",
                "protocols",
                "exclusivestubs"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "GET"
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "dd7be927-f8bd-439d-b06f-581eea790e90",
                "type": "text/javascript",
                "exec": [
                  "./portman/pm-login.json",
                  "// Validate status 2xx \npm.test(\"[GET]::/api/protocols/exclusivestubs - Status code is 2xx\", function () {\n   pm.response.to.be.success;\n});\n"
                ]
              }
            }
          ]
        },
        {
          "id": "e4875ebd-739f-42a8-9793-a6e7c26d2061",
          "name": "validate a structured Dosage",
          "request": {
            "name": "validate a structured Dosage",
            "description": {
              "content": "validate a Dosage with SizeFunction and SequewnceFunction returning an test '_dose\" description.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "api",
                "protocols",
                "dosages"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n  \"sequenceFunction\": {\n    \"_type\": \"models.SeqSingleDose\"\n  },\n  \"sizeFunction\": {\n    \"_type\": \"models.FixedDoseFunction\",\n    \"dose\": {\n      \"quantity\": {\n        \"dimension\": \"Mass\",\n        \"value\": 3,\n        \"symbol\": \"oz\"\n      }\n    }\n  }\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "86554444-c8b6-4063-a838-d032ea58efd1",
                "type": "text/javascript",
                "exec": [
                  "./portman/pm-login.json",
                  "// Validate status 2xx \npm.test(\"[POST]::/api/protocols/dosages - Status code is 2xx\", function () {\n   pm.response.to.be.success;\n});\n"
                ]
              }
            }
          ],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        {
          "id": "2ebc2060-578c-4993-af71-6f2dfc874c13",
          "name": "list of library pxes",
          "request": {
            "name": "list of library pxes",
            "description": {
              "content": "This endpoint returns all the Protocols owned by, or shared with, the current User.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "api",
                "protocols",
                "libstubs"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "GET"
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "ba9f59e7-a5c3-4cea-9147-2da448917ea1",
                "type": "text/javascript",
                "exec": [
                  "./portman/pm-login.json",
                  "// Validate status 2xx \npm.test(\"[GET]::/api/protocols/libstubs - Status code is 2xx\", function () {\n   pm.response.to.be.success;\n});\n"
                ]
              }
            }
          ]
        },
        {
          "id": "f7097de7-2e14-4f08-8cad-cfcf0e9d90ec",
          "name": "retrieve protocol by ID",
          "request": {
            "name": "retrieve protocol by ID",
            "description": {
              "content": "This endpoint retrieves a Protocol by `protocol.id`.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "api",
                "protocols",
                ":id"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": [
                {
                  "disabled": false,
                  "description": {
                    "content": "(Required) Protocol ID key",
                    "type": "text/plain"
                  },
                  "type": "any",
                  "value": "7",
                  "key": "id"
                }
              ]
            },
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "GET"
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "cc94e02c-e08f-49d9-86e7-f96b710bfffc",
                "type": "text/javascript",
                "exec": [
                  "./portman/pm-login.json",
                  "// Validate status 2xx \npm.test(\"[GET]::/api/protocols/:id - Status code is 2xx\", function () {\n   pm.response.to.be.success;\n});\n"
                ]
              }
            }
          ]
        },
        {
          "id": "4dd054a0-ddab-4e20-90ce-186f9597d8c0",
          "name": "delete protocol",
          "request": {
            "name": "delete protocol",
            "description": {
              "content": "Change `protocol.status` to DELETED (this does not actually remove it from the database).",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "api",
                "protocols",
                ":id"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": [
                {
                  "disabled": false,
                  "description": {
                    "content": "(Required) Protocol ID key",
                    "type": "text/plain"
                  },
                  "type": "any",
                  "value": "97186553",
                  "key": "id"
                }
              ]
            },
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "DELETE"
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "5271d4fb-5876-425c-b622-996aa9a01241",
                "type": "text/javascript",
                "exec": [
                  "./portman/pm-login.json",
                  "// Validate status 2xx \npm.test(\"[DELETE]::/api/protocols/:id - Status code is 2xx\", function () {\n   pm.response.to.be.success;\n});\n"
                ]
              }
            }
          ]
        },
        {
          "id": "c21b577a-0de6-4718-ae6e-84da7b1c956c",
          "name": "list of all diagnoses",
          "request": {
            "name": "list of all diagnoses",
            "description": {
              "content": "This",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "api",
                "protocols",
                "prescriptions"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "GET"
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "ca979a8d-f662-48bc-893e-0ff2ba648b08",
                "type": "text/javascript",
                "exec": [
                  "./portman/pm-login.json",
                  "// Validate status 2xx \npm.test(\"[GET]::/api/protocols/prescriptions - Status code is 2xx\", function () {\n   pm.response.to.be.success;\n});\n"
                ]
              }
            }
          ]
        },
        {
          "id": "24048b2f-60ce-4275-9711-4b5becad7960",
          "name": "Prescribe a Protocol to a client",
          "request": {
            "name": "Prescribe a Protocol to a client",
            "description": {
              "content": "create a Prescription and email it if requested",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "api",
                "protocols",
                "prescriptions"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n  \"morId\": 2,\n  \"protocol\": {\n    \"ownerId\": 1,\n    \"name\": \"wip\",\n    \"status\": \"PRESCRIBED\",\n    \"instructions\": {\n      \"considerations\": \"<p>This is just an example, not a real protocol.</p>\",\n      \"restrictions\": \"<p>Not for use on real animals.</p>\",\n      \"dothis\": \"<h3>Examinations to perform</h3>\",\n      \"recordthis\": \"<p>record every step in your notebook.</p>\",\n      \"success\": \"<p>All problems are gone</p>\",\n      \"failure\": \"<p>One or more problems remain</p>\",\n      \"references\": \"<a href=\\\"https://en.wikipedia.org/wiki/Rickrolling\\\">Wikipedia</a>\"\n    },\n    \"id\": 12345,\n    \"shortname\": \"wip\",\n    \"created\": \"1982-06-19T11:19:16.942Z\",\n    \"edited\": \"1997-01-23T13:27:52.284Z\",\n    \"vetNote\": \"consider prescribing protocol x instead\",\n    \"wtMeatHrs\": 22,\n    \"wtMilkHrs\": 5,\n    \"shareAll\": true,\n    \"shareClonable\": true,\n    \"caseDefinition\": {\n      \"requireId\": false,\n      \"requireMor\": false,\n      \"contraindications\": \"\",\n      \"medical\": \"if fever is present, consider Protocol 12345 instead.\",\n      \"economic\": \"\",\n      \"note\": \"\"\n    },\n    \"treatments\": [\n      {\n        \"product\": \"MiracleMed\",\n        \"route\": \"wip\",\n        \"dosage\": {\n          \"doseId\": 82009186\n        },\n        \"sequenceFunction\": {\n          \"_type\": \"models.SeqSingleDose\"\n        },\n        \"sizeFunction\": {\n          \"_type\": \"models.FixedDoseFunction\",\n          \"dose\": {\n            \"quantity\": {\n              \"dimension\": \"Mass\",\n              \"value\": 3,\n              \"symbol\": \"oz\"\n            }\n          }\n        },\n        \"id\": \"B-123\",\n        \"ownerId\": 0,\n        \"description\": \"3.0 ml per kg repeat\",\n        \"eligibilities\": [\n          {\n            \"id\": 1,\n            \"name\": \"Beef Cattle\",\n            \"fdaSpecies\": [\n              \"sheep\",\n              \"catfish\"\n            ]\n          },\n          {\n            \"id\": 1,\n            \"name\": \"Beef Cattle\",\n            \"fdaSpecies\": [\n              \"other\",\n              \"cats\"\n            ]\n          }\n        ],\n        \"_dose\": \"3.0 ml per kg repeat in 6 hours and again in 24 hours\",\n        \"wtMeatHrs\": -49905803,\n        \"wtMilkHrs\": -58057535,\n        \"nada\": \"wip\",\n        \"tags\": [\n          {\n            \"id\": 8,\n            \"color\": \"#516cc6\",\n            \"name\": \"a\",\n            \"fixes\": [\n              {\n                \"_type\": {\n                  \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"detail\": {\n                  \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"message\": {\n                  \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"title\": {\n                  \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                }\n              },\n              {\n                \"_type\": {\n                  \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"detail\": {\n                  \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"message\": {\n                  \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"title\": {\n                  \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                }\n              }\n            ]\n          },\n          {\n            \"id\": 8,\n            \"color\": \"#516cc6\",\n            \"name\": \"aute\",\n            \"fixes\": [\n              {\n                \"_type\": {\n                  \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"detail\": {\n                  \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"message\": {\n                  \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"title\": {\n                  \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                }\n              },\n              {\n                \"_type\": {\n                  \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"detail\": {\n                  \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"message\": {\n                  \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"title\": {\n                  \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                }\n              }\n            ]\n          }\n        ],\n        \"note\": \"<p>a free-form note</p>\",\n        \"amduca\": \"OFFLABEL\"\n      },\n      {\n        \"product\": \"MiracleMed\",\n        \"route\": \"wip\",\n        \"dosage\": {\n          \"doseId\": 38867599\n        },\n        \"sequenceFunction\": {\n          \"_type\": \"models.SeqSingleDose\"\n        },\n        \"sizeFunction\": {\n          \"_type\": \"models.FixedDoseFunction\",\n          \"dose\": {\n            \"quantity\": {\n              \"dimension\": \"Mass\",\n              \"value\": 3,\n              \"symbol\": \"oz\"\n            }\n          }\n        },\n        \"id\": \"B-123\",\n        \"ownerId\": 0,\n        \"description\": \"3.0 ml per kg repeat\",\n        \"eligibilities\": [\n          {\n            \"id\": 1,\n            \"name\": \"Beef Cattle\",\n            \"fdaSpecies\": [\n              \"gamebirds\",\n              \"bison\"\n            ]\n          },\n          {\n            \"id\": 1,\n            \"name\": \"Beef Cattle\",\n            \"fdaSpecies\": [\n              \"emus\",\n              \"beef_cattle\"\n            ]\n          }\n        ],\n        \"_dose\": \"3.0 ml per kg repeat in 6 hours and again in 24 hours\",\n        \"wtMeatHrs\": 1977596,\n        \"wtMilkHrs\": 24308121,\n        \"nada\": \"wip\",\n        \"tags\": [\n          {\n            \"id\": 8,\n            \"color\": \"#516cc6\",\n            \"name\": \"Ut n\",\n            \"fixes\": [\n              {\n                \"_type\": {\n                  \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"detail\": {\n                  \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"message\": {\n                  \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"title\": {\n                  \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                }\n              },\n              {\n                \"_type\": {\n                  \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"detail\": {\n                  \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"message\": {\n                  \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"title\": {\n                  \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                }\n              }\n            ]\n          },\n          {\n            \"id\": 8,\n            \"color\": \"#516cc6\",\n            \"name\": \"ad veli\",\n            \"fixes\": [\n              {\n                \"_type\": {\n                  \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"detail\": {\n                  \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"message\": {\n                  \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"title\": {\n                  \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                }\n              },\n              {\n                \"_type\": {\n                  \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"detail\": {\n                  \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"message\": {\n                  \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"title\": {\n                  \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                }\n              }\n            ]\n          }\n        ],\n        \"note\": \"<p>a free-form note</p>\",\n        \"amduca\": \"OFFLABEL\"\n      }\n    ],\n    \"tags\": [\n      {\n        \"id\": 8,\n        \"color\": \"#516cc6\",\n        \"name\": \"id Excep\",\n        \"fixes\": [\n          {\n            \"_type\": \"eiusmod enim reprehenderit\",\n            \"detail\": \"eiusmod minim Duis proident\",\n            \"message\": \"commodo do\",\n            \"title\": \"null\"\n          },\n          {\n            \"_type\": \"ipsum proident\",\n            \"detail\": \"commodo ex non\",\n            \"message\": \"in Duis ad\",\n            \"title\": \"consequat ipsum\"\n          }\n        ]\n      },\n      {\n        \"id\": 8,\n        \"color\": \"#516cc6\",\n        \"name\": \"\",\n        \"fixes\": [\n          {\n            \"_type\": \"id ullamco tempor dolor\",\n            \"detail\": \"eiusmod dolore\",\n            \"message\": \"dolore\",\n            \"title\": \"nulla non\"\n          },\n          {\n            \"_type\": \"est ea quis\",\n            \"detail\": \"consectetur nisi\",\n            \"message\": \"aute voluptate nostrud\",\n            \"title\": \"in\"\n          }\n        ]\n      }\n    ],\n    \"diagnoses\": [\n      {\n        \"id\": 8,\n        \"name\": \"Pain/inflammation (musculoskeletal), treatment\"\n      },\n      {\n        \"id\": 8,\n        \"name\": \"Pain/inflammation (musculoskeletal), treatment\"\n      }\n    ],\n    \"eligibilities\": [\n      {\n        \"id\": 1,\n        \"name\": \"Beef Cattle\",\n        \"fdaSpecies\": [\n          \"swine\",\n          \"veal\"\n        ]\n      },\n      {\n        \"id\": 1,\n        \"name\": \"Beef Cattle\",\n        \"fdaSpecies\": [\n          \"salmon\",\n          \"horses\"\n        ]\n      }\n    ],\n    \"promises\": [\n      {\n        \"_type\": \"models.AffirmationPromise\",\n        \"name\": \"ID promise\",\n        \"when\": \"PT0H\",\n        \"id\": 2345,\n        \"ownerId\": 123,\n        \"descrip\": \"You must give ID for each case enrolled\"\n      },\n      {\n        \"_type\": \"models.AffirmationPromise\",\n        \"name\": \"ID promise\",\n        \"when\": \"PT0H\",\n        \"id\": 2345,\n        \"ownerId\": 123,\n        \"descrip\": \"You must give ID for each case enrolled\"\n      }\n    ],\n    \"metadata\": [\n      {\n        \"key\": \"popularity\",\n        \"value\": \"good 1.2\"\n      },\n      {\n        \"key\": \"popularity\",\n        \"value\": \"good 1.2\"\n      }\n    ]\n  },\n  \"refills\": 0,\n  \"expiration\": \"2008-02-18T15:49:44.029Z\",\n  \"emailToClient\": false,\n  \"emailToVOR\": false,\n  \"metadata\": [\n    {\n      \"key\": \"popularity\",\n      \"value\": \"good 1.2\"\n    },\n    {\n      \"key\": \"popularity\",\n      \"value\": \"good 1.2\"\n    }\n  ],\n  \"status\": \"PRESCRIBED\"\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "652cebfc-dece-415e-a312-0e2b584f7faa",
                "type": "text/javascript",
                "exec": [
                  "./portman/pm-login.json",
                  "// Validate status 2xx \npm.test(\"[POST]::/api/protocols/prescriptions - Status code is 2xx\", function () {\n   pm.response.to.be.success;\n});\n"
                ]
              }
            }
          ],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        {
          "id": "20df27a0-6047-4717-b9fd-728bb0da8d31",
          "name": "list of all diagnoses",
          "request": {
            "name": "list of all diagnoses",
            "description": {
              "content": "returns an array of Prescriptions",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "api",
                "protocols",
                ":id",
                "prescriptions"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": [
                {
                  "disabled": false,
                  "description": {
                    "content": "(Required) Protocol ID key",
                    "type": "text/plain"
                  },
                  "type": "any",
                  "value": "97186553",
                  "key": "id"
                }
              ]
            },
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "GET"
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "485826bc-4b65-428f-867d-a870fb7cf4ab",
                "type": "text/javascript",
                "exec": [
                  "./portman/pm-login.json",
                  "// Validate status 2xx \npm.test(\"[GET]::/api/protocols/:id/prescriptions - Status code is 2xx\", function () {\n   pm.response.to.be.success;\n});\n"
                ]
              }
            }
          ]
        },
        {
          "id": "f6a03b15-b712-48eb-9df3-f47ace8b74a4",
          "name": "retrieve prescription by ID",
          "request": {
            "name": "retrieve prescription by ID",
            "description": {
              "content": "Retrieve a Prescription by `prescription.id`.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "api",
                "protocols",
                "prescriptions",
                ":id"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": [
                {
                  "disabled": false,
                  "description": {
                    "content": "(Required) Prescription ID key",
                    "type": "text/plain"
                  },
                  "type": "any",
                  "value": "Vi1y9kbpEj7Upqy7",
                  "key": "id"
                }
              ]
            },
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "GET"
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "4e0e8198-4d7d-4cd8-8559-c2deb75ad00a",
                "type": "text/javascript",
                "exec": [
                  "./portman/pm-login.json",
                  "// Validate status 2xx \npm.test(\"[GET]::/api/protocols/prescriptions/:id - Status code is 2xx\", function () {\n   pm.response.to.be.success;\n});\n"
                ]
              }
            }
          ]
        },
        {
          "id": "edbf74fe-25ff-436e-9b85-84523f4feb74",
          "name": "list of all labelclaims",
          "request": {
            "name": "list of all labelclaims",
            "description": {
              "content": "This endpoint returns the full array of drug labels.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "api",
                "labels"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "GET"
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "ea786293-39fc-4bc3-90e0-1a6f2e26d1ff",
                "type": "text/javascript",
                "exec": [
                  "./portman/pm-login.json"
                ]
              }
            }
          ]
        },
        {
          "id": "c516d393-f857-4f98-8f2d-3cdb61da0bf3",
          "name": "labelclaim",
          "request": {
            "name": "labelclaim",
            "description": {
              "content": "Return specified labelclaim.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "api",
                "labels",
                ":id"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": [
                {
                  "disabled": false,
                  "description": {
                    "content": "(Required) labelclaim  ID",
                    "type": "text/plain"
                  },
                  "type": "any",
                  "value": "32",
                  "key": "id"
                }
              ]
            },
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "GET"
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "5815f987-10f4-43ec-96f9-53615e110f29",
                "type": "text/javascript",
                "exec": [
                  "./portman/pm-login.json"
                ]
              }
            }
          ]
        },
        {
          "id": "28c44414-b9f9-4f80-951c-465dce5864e7",
          "name": "package insert",
          "request": {
            "name": "package insert",
            "description": {
              "content": "Retrieve the product package insert.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "api",
                "labels",
                "inserts",
                ":lxId"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": [
                {
                  "disabled": false,
                  "description": {
                    "content": "(Required) label ID",
                    "type": "text/plain"
                  },
                  "type": "any",
                  "value": "32",
                  "key": "lxId"
                }
              ]
            },
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "GET"
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "cba8fffc-3410-4b00-a845-71f62842b220",
                "type": "text/javascript",
                "exec": [
                  "./portman/pm-login.json"
                ]
              }
            }
          ]
        },
        {
          "id": "a1f17c32-5ac8-4518-b8ac-85321bb53ac6",
          "name": "get detail of a Greenbook Drug as a link",
          "request": {
            "name": "get detail of a Greenbook Drug as a link",
            "description": {
              "content": "This",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "api",
                "spl",
                ":ndc"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": [
                {
                  "disabled": false,
                  "description": {
                    "content": "(Required) unique hyphenated number with up to 10 digits in 2 or 3 segments as labelerCode-productCode-packageCode. packageCode may not be needed.",
                    "type": "text/plain"
                  },
                  "type": "any",
                  "value": "0010-3832",
                  "key": "ndc"
                }
              ]
            },
            "header": [
              {
                "key": "Accept",
                "value": "text/html"
              }
            ],
            "method": "GET"
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "44ea9048-a62f-4f18-bd5e-bda97249f28d",
                "type": "text/javascript",
                "exec": [
                  "./portman/pm-login.json"
                ]
              }
            }
          ]
        },
        {
          "id": "ee27022d-113e-4281-8da0-0cf0cf5a1ec1",
          "name": "get detail of a Greenbook Drug as a link",
          "request": {
            "name": "get detail of a Greenbook Drug as a link",
            "description": {
              "content": "This",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "api",
                "spl",
                ":ndc",
                ":image"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": [
                {
                  "disabled": false,
                  "description": {
                    "content": "(Required) unique hyphenated number with up to 10 digits in 2 or 3 segments as labelerCode-productCode-packageCode. packageCode may not be needed.",
                    "type": "text/plain"
                  },
                  "type": "any",
                  "value": "0010-3495",
                  "key": "ndc"
                },
                {
                  "disabled": false,
                  "description": {
                    "content": "(Required) name of image file",
                    "type": "text/plain"
                  },
                  "type": "any",
                  "value": "601588-image-fake.jpg",
                  "key": "image"
                }
              ]
            },
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "GET"
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "87625966-da42-403c-89bf-94a60e7c9a60",
                "type": "text/javascript",
                "exec": [
                  "./portman/pm-login.json"
                ]
              }
            }
          ]
        },
        {
          "id": "b8f82e17-642f-4383-9e9d-cb47b5be8d5c",
          "name": "retrieve prescription by ID",
          "request": {
            "name": "retrieve prescription by ID",
            "description": {
              "content": "Retrieve a Prescription by `prescription.id`.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "api",
                "prescriptions",
                ":id",
                ""
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": [
                {
                  "disabled": false,
                  "description": {
                    "content": "(Required) Prescription ID key",
                    "type": "text/plain"
                  },
                  "type": "any",
                  "value": "Vi1y9kbpEj7Upqy7",
                  "key": "id"
                }
              ]
            },
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "GET"
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "b8217b8c-9889-4bb7-8939-7b807b763065",
                "type": "text/javascript",
                "exec": [
                  "./portman/pm-login.json"
                ]
              }
            }
          ]
        },
        {
          "id": "403a52cf-1a6c-45d4-b5c9-2a66ea1bfca0",
          "name": "recall or decline a prescription",
          "request": {
            "name": "recall or decline a prescription",
            "description": {
              "content": "Prescriptions are immutable except for metadata, and cannot actually be deleted. This endpoint makes a prescription unavailable for use. If called by the VOR, it sets staus to RECALLED. If called by the MOR to whom it is prescribed, it sets status to DECLINED. New cases  cannot be enrolled if either RECALLED or DECLIENED.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "api",
                "prescriptions",
                ":id",
                ""
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": [
                {
                  "disabled": false,
                  "description": {
                    "content": "(Required) Prescription ID key",
                    "type": "text/plain"
                  },
                  "type": "any",
                  "value": "Vi1y9kbpEj7Upqy7",
                  "key": "id"
                }
              ]
            },
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "DELETE"
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "b8712885-f946-41f7-994f-3d05bcc97c48",
                "type": "text/javascript",
                "exec": [
                  "./portman/pm-login.json"
                ]
              }
            }
          ]
        },
        {
          "id": "62e2174a-c155-438c-8e8e-8899d474f183",
          "name": "enroll case,  deprecated in favor of POST /api/cases2 which will be moved to this path eventually",
          "request": {
            "name": "enroll case,  deprecated in favor of POST /api/cases2 which will be moved to this path eventually",
            "description": {
              "content": "Creates a Case linked to a prescription.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "api",
                "cases"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n  \"id\": 123,\n  \"rxId\": \"gG3pBCR1GCMKm89c\",\n  \"animalId\": \"Bossie34\",\n  \"initiationTime\": \"1947-08-16T06:45:08.955Z\",\n  \"caseData\": {\n    \"_type\": \"models.WeightData\",\n    \"weight\": {\n      \"value\": 50,\n      \"symbol\": \"kg\",\n      \"dimension\": \"Mass\"\n    }\n  },\n  \"note\": \"dolor officia adipisicing quis sit\",\n  \"morId\": 80725575\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "0acafa27-a205-4faa-a839-c27fdd146fd3",
                "type": "text/javascript",
                "exec": [
                  "./portman/pm-login.json"
                ]
              }
            }
          ],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        {
          "id": "1423b28b-c250-45e6-a92d-eab537971a3a",
          "name": "list of cases",
          "request": {
            "name": "list of cases",
            "description": {
              "content": "Get all current cases for this user",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "api",
                "cases"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "GET"
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "d5e97f00-01bb-4477-9867-1adf96a56688",
                "type": "text/javascript",
                "exec": [
                  "./portman/pm-login.json"
                ]
              }
            }
          ]
        },
        {
          "id": "a843ca71-1c71-4840-910f-dcbeb8b31a01",
          "name": "enroll Case returning tasks",
          "request": {
            "name": "enroll Case returning tasks",
            "description": {
              "content": "Enrolls a Case from its Prescription and generates DoseTasks, Promise tasks, and Withhold as specified in the Protocol.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "api",
                "cases2"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n  \"id\": 123,\n  \"rxId\": \"gG3pBCR1GCMKm89c\",\n  \"animalId\": \"Bossie34\",\n  \"initiationTime\": \"1947-08-16T06:45:08.955Z\",\n  \"caseData\": {\n    \"_type\": \"models.WeightData\",\n    \"weight\": {\n      \"value\": 50,\n      \"symbol\": \"kg\",\n      \"dimension\": \"Mass\"\n    }\n  },\n  \"note\": \"dolor officia adipisicing quis sit\",\n  \"morId\": 80725575\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "b6ab6994-b833-4321-a215-6c772ab25071",
                "type": "text/javascript",
                "exec": [
                  "./portman/pm-login.json"
                ]
              }
            }
          ],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        {
          "id": "47c1b36e-193c-44c4-aba3-7f38bcf88683",
          "name": "get history for a single Case (with tasks)",
          "request": {
            "name": "get history for a single Case (with tasks)",
            "description": {
              "content": "Case plus tasks generated for the Case plus any data returned on task execution",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "api",
                "cases",
                ":caseId"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": [
                {
                  "disabled": false,
                  "description": {
                    "content": "(Required) ID number of Case",
                    "type": "text/plain"
                  },
                  "type": "any",
                  "value": "97186553",
                  "key": "caseId"
                }
              ]
            },
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "GET"
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "f51ebb4c-812b-41f8-b037-3d7a541b9deb",
                "type": "text/javascript",
                "exec": [
                  "./portman/pm-login.json"
                ]
              }
            }
          ]
        },
        {
          "id": "7b67c55b-6128-42e3-8c23-7cc22565f154",
          "name": "prescriptions with cases",
          "request": {
            "name": "prescriptions with cases",
            "description": {
              "content": "A filtered list of Prescriptions with Cases enrolled to each.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "api",
                "rx-cases"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": false,
                  "description": {
                    "content": "ID number of prescribing VOR",
                    "type": "text/plain"
                  },
                  "key": "vorId",
                  "value": "97186553"
                },
                {
                  "disabled": false,
                  "description": {
                    "content": "ID number of MOR prescribed to",
                    "type": "text/plain"
                  },
                  "key": "morId",
                  "value": "97186553"
                },
                {
                  "disabled": false,
                  "description": {
                    "content": "ID number of protocol prescribed",
                    "type": "text/plain"
                  },
                  "key": "protocolId",
                  "value": "97186553"
                },
                {
                  "disabled": false,
                  "description": {
                    "content": "last date limit for Case enrollment",
                    "type": "text/plain"
                  },
                  "key": "enrolledBefore",
                  "value": "1992-07-21T15:08:28.850Z"
                },
                {
                  "disabled": false,
                  "description": {
                    "content": "earliest date limit for Case enrollment",
                    "type": "text/plain"
                  },
                  "key": "enrolledAfter",
                  "value": "1985-05-17T09:34:14.487Z"
                },
                {
                  "disabled": false,
                  "description": {
                    "content": "page start",
                    "type": "text/plain"
                  },
                  "key": "offset",
                  "value": "0"
                },
                {
                  "disabled": false,
                  "description": {
                    "content": "maximum page length",
                    "type": "text/plain"
                  },
                  "key": "limit",
                  "value": "20"
                }
              ],
              "variable": []
            },
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "GET"
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "da2e8b9b-c1db-4460-b357-7d57d8518c59",
                "type": "text/javascript",
                "exec": [
                  "./portman/pm-login.json"
                ]
              }
            }
          ]
        },
        {
          "id": "3855e12a-d73b-40ee-82a9-272a6e30e00e",
          "name": "list  of cases for a rx",
          "request": {
            "name": "list  of cases for a rx",
            "description": {
              "content": "Get all current cases for this prescription and this user",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "api",
                "prescriptions",
                ":rxId",
                "cases"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": [
                {
                  "disabled": false,
                  "description": {
                    "content": "(Required) prescription uuid",
                    "type": "text/plain"
                  },
                  "type": "any",
                  "value": "Vi1y9kbpEj7Upqy7",
                  "key": "rxId"
                }
              ]
            },
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "GET"
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "8d45c584-0ad1-4715-ae82-b5fd109680f3",
                "type": "text/javascript",
                "exec": [
                  "./portman/pm-login.json"
                ]
              }
            }
          ]
        },
        {
          "id": "470bbe93-6c06-4860-9aed-3e225174fb9a",
          "name": "execute task",
          "request": {
            "name": "execute task",
            "description": {
              "content": "Mark task status as completed",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "api",
                "users",
                "tasks"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n  \"_type\": \"occaecat esse mollit in ullamco\",\n  \"animalId\": \"this\",\n  \"caseId\": 123,\n  \"detail\": \"tempor veniam dolor voluptate minim\",\n  \"doAt\": \"2022-06-15T14:04:55.013Z\",\n  \"id\": 123,\n  \"morId\": 123,\n  \"status\": \"REQUIRED\",\n  \"vorId\": 123,\n  \"executor\": 123\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "7f5eb8dd-0299-4b93-a872-4b8b42587c93",
                "type": "text/javascript",
                "exec": [
                  "./portman/pm-login.json"
                ]
              }
            }
          ],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        {
          "id": "de2ae7e3-d664-43e7-ad22-c52b7b8d6116",
          "name": "list of cases by Rx",
          "request": {
            "name": "list of cases by Rx",
            "description": {
              "content": "Get all current cases for this Rx",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "api",
                "users",
                "tasks"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "GET"
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "89745602-19bb-4589-a684-0eba85da3327",
                "type": "text/javascript",
                "exec": [
                  "./portman/pm-login.json"
                ]
              }
            }
          ]
        },
        {
          "id": "bbe1d889-0d66-49c9-906b-660ce399cabc",
          "name": "get Greenbook Drug summary by NDC pattern",
          "request": {
            "name": "get Greenbook Drug summary by NDC pattern",
            "description": {
              "content": "This endpoint returns the summary listing of a Greenbook Drug by NDC pattern.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "api",
                "admin",
                "product"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": false,
                  "description": {
                    "content": "first section labeler code of a NDC",
                    "type": "text/plain"
                  },
                  "key": "ndcProd",
                  "value": "97186553"
                },
                {
                  "disabled": false,
                  "description": {
                    "content": "mid section product code of a NDC",
                    "type": "text/plain"
                  },
                  "key": "ndcLabeler",
                  "value": "97186553"
                },
                {
                  "disabled": false,
                  "description": {
                    "content": "end section package code of a NDC",
                    "type": "text/plain"
                  },
                  "key": "ndcBrand",
                  "value": "97186553"
                }
              ],
              "variable": []
            },
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "GET"
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "e460ccfd-5394-458e-89c8-099f5ee7e25d",
                "type": "text/javascript",
                "exec": [
                  "./portman/pm-login.json"
                ]
              }
            }
          ]
        },
        {
          "id": "ddeeabae-1b6a-404f-a630-0e7e02991bae",
          "name": "get summary listing of a Greenbook Drug",
          "request": {
            "name": "get summary listing of a Greenbook Drug",
            "description": {
              "content": "This endpoint returns the summary listing of a Greenbook Drug by ndc identifier.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "api",
                "admin",
                "product",
                ":ndc"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": [
                {
                  "disabled": false,
                  "description": {
                    "content": "(Required) unique 10-digit, 3-segment number. labelerCode-productCode-packageCode",
                    "type": "text/plain"
                  },
                  "type": "any",
                  "value": "0061-4321-03",
                  "key": "ndc"
                }
              ]
            },
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "GET"
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "07cd3f56-09c5-417c-a598-fcd4039559c5",
                "type": "text/javascript",
                "exec": [
                  "./portman/pm-login.json"
                ]
              }
            }
          ]
        },
        {
          "id": "254e09d6-7b7c-46db-9e3c-0b45484a0d2f",
          "name": "get SPL",
          "request": {
            "name": "get SPL",
            "description": {
              "type": "text/plain"
            },
            "url": {
              "path": [
                "api",
                "admin",
                "spl",
                ":ndc"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": [
                {
                  "disabled": false,
                  "description": {
                    "content": "(Required) unique 10-digit, 3-segment number. labelerCode-productCode-packageCode",
                    "type": "text/plain"
                  },
                  "type": "any",
                  "value": "0061-4321-03",
                  "key": "ndc"
                }
              ]
            },
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "GET"
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "2820b894-0bea-45c6-a02b-ddc1bd517e82",
                "type": "text/javascript",
                "exec": [
                  "./portman/pm-login.json"
                ]
              }
            }
          ]
        },
        {
          "id": "f752e355-748c-4c88-bf0d-e77807efa699",
          "name": "record an image",
          "request": {
            "name": "record an image",
            "description": {
              "content": "REcords link for loading an image.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "api",
                "images"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n  \"id\": 888,\n  \"store\": {\n    \"id\": 888,\n    \"uri\": \"eu ut eiusmod adipisi\",\n    \"name\": \"magna dolore veniam deser\",\n    \"headers\": [\n      {\n        \"key\": \"X-Auth-Token\",\n        \"value\": \"est esse\"\n      },\n      {\n        \"key\": \"X-Auth-Token\",\n        \"value\": \"id laborum minim cupidatat\"\n      }\n    ]\n  },\n  \"link\": \"exercitation ipsum\",\n  \"name\": \"in eu\",\n  \"thumbnail\": \"veniam anim ut labore\",\n  \"keywords\": [\n    \"tempor labori\",\n    \"eiusmod adipisicing\"\n  ]\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "fb93ef3d-1580-492d-8257-586312e33b68",
                "type": "text/javascript",
                "exec": [
                  "./portman/pm-login.json"
                ]
              }
            }
          ],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        }
      ],
      "event": []
    },
    {
      "id": "d1c57364-7298-4dbd-879c-55b06e873636",
      "name": "MOR",
      "description": {
        "content": "available to farm managers.",
        "type": "text/plain"
      },
      "item": [
        {
          "id": "67801d39-8cb1-4d5f-a287-59f28b6b2518",
          "name": "load Farm App",
          "request": {
            "name": "load Farm App",
            "description": {
              "content": "load Farm App",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "farm"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Accept",
                "value": "text/html"
              }
            ],
            "method": "GET"
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "a0c6bfb9-5807-4ca9-a9e5-f926e3b1bc10",
                "type": "text/javascript",
                "exec": [
                  "./portman/pm-login.json"
                ]
              }
            }
          ]
        },
        {
          "id": "9487a8d0-b242-4424-b464-41700e0eb0e5",
          "name": "withholds",
          "request": {
            "name": "withholds",
            "description": {
              "content": "get withholds that include present or future time.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "api",
                "users",
                "withholds"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "GET"
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "addb42cf-7502-4a92-b718-12d11dbf4d6e",
                "type": "text/javascript",
                "exec": [
                  "./portman/pm-login.json"
                ]
              }
            }
          ]
        },
        {
          "id": "866480b6-e737-4b27-a965-0b9c868add05",
          "name": "send a message to another user",
          "request": {
            "name": "send a message to another user",
            "description": {
              "content": "send a message to another user",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "api",
                "messages"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": false,
                  "description": {
                    "content": "Mode(s) or channel(s) to use in messaging, defaulting to EMAIL",
                    "type": "text/plain"
                  },
                  "key": "modes",
                  "value": "EMAIL|EMAIL"
                }
              ],
              "variable": []
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n  \"_type\": \"models.SimpleMessage\",\n  \"from\": 99,\n  \"to\": 99,\n  \"subject\": \"laborum enim dolo\",\n  \"message\": \"Hello <b>world</b>\",\n  \"detail\": \"magna enim eiusmod\"\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "e3df6bb8-baef-4f90-9ea7-a4a3eb065b56",
                "type": "text/javascript",
                "exec": [
                  "./portman/pm-login.json"
                ]
              }
            }
          ],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        {
          "id": "d970aa38-9f96-43b8-9f85-9021d9452ca9",
          "name": "recall or decline a prescription",
          "request": {
            "name": "recall or decline a prescription",
            "description": {
              "content": "Prescriptions are immutable except for metadata, and cannot actually be deleted. This endpoint makes a prescription unavailable for use. If called by the VOR, it sets staus to RECALLED. If called by the MOR to whom it is prescribed, it sets status to DECLINED. New cases  cannot be enrolled if either RECALLED or DECLIENED.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "api",
                "prescriptions",
                ":id",
                ""
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": [
                {
                  "disabled": false,
                  "description": {
                    "content": "(Required) Prescription ID key",
                    "type": "text/plain"
                  },
                  "type": "any",
                  "value": "Vi1y9kbpEj7Upqy7",
                  "key": "id"
                }
              ]
            },
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "DELETE"
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "fb97feae-4840-487a-95ef-6791430b95d0",
                "type": "text/javascript",
                "exec": [
                  "./portman/pm-login.json"
                ]
              }
            }
          ]
        },
        {
          "id": "d9c3b6d3-6899-4cd7-ba0d-26fa9668cb1a",
          "name": "enroll case,  deprecated in favor of POST /api/cases2 which will be moved to this path eventually",
          "request": {
            "name": "enroll case,  deprecated in favor of POST /api/cases2 which will be moved to this path eventually",
            "description": {
              "content": "Creates a Case linked to a prescription.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "api",
                "cases"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n  \"id\": 123,\n  \"rxId\": \"gG3pBCR1GCMKm89c\",\n  \"animalId\": \"Bossie34\",\n  \"initiationTime\": \"1947-08-16T06:45:08.955Z\",\n  \"caseData\": {\n    \"_type\": \"models.WeightData\",\n    \"weight\": {\n      \"value\": 50,\n      \"symbol\": \"kg\",\n      \"dimension\": \"Mass\"\n    }\n  },\n  \"note\": \"dolor officia adipisicing quis sit\",\n  \"morId\": 80725575\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "4bd1fca7-7995-460a-bfcb-2861c36bc6c9",
                "type": "text/javascript",
                "exec": [
                  "./portman/pm-login.json"
                ]
              }
            }
          ],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        {
          "id": "e30f9075-8128-4e4c-9927-4632d3863b99",
          "name": "enroll Case returning tasks",
          "request": {
            "name": "enroll Case returning tasks",
            "description": {
              "content": "Enrolls a Case from its Prescription and generates DoseTasks, Promise tasks, and Withhold as specified in the Protocol.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "api",
                "cases2"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n  \"id\": 123,\n  \"rxId\": \"gG3pBCR1GCMKm89c\",\n  \"animalId\": \"Bossie34\",\n  \"initiationTime\": \"1947-08-16T06:45:08.955Z\",\n  \"caseData\": {\n    \"_type\": \"models.WeightData\",\n    \"weight\": {\n      \"value\": 50,\n      \"symbol\": \"kg\",\n      \"dimension\": \"Mass\"\n    }\n  },\n  \"note\": \"dolor officia adipisicing quis sit\",\n  \"morId\": 80725575\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "4d4c387e-e922-426e-8c19-f25fd7703fd4",
                "type": "text/javascript",
                "exec": [
                  "./portman/pm-login.json"
                ]
              }
            }
          ],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        {
          "id": "5112171c-7d07-4a06-a86a-116a4192dc88",
          "name": "get history for a single Case (with tasks)",
          "request": {
            "name": "get history for a single Case (with tasks)",
            "description": {
              "content": "Case plus tasks generated for the Case plus any data returned on task execution",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "api",
                "cases",
                ":caseId"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": [
                {
                  "disabled": false,
                  "description": {
                    "content": "(Required) ID number of Case",
                    "type": "text/plain"
                  },
                  "type": "any",
                  "value": "97186553",
                  "key": "caseId"
                }
              ]
            },
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "GET"
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "b37adb57-38bf-4740-b7ac-b7bbed365012",
                "type": "text/javascript",
                "exec": [
                  "./portman/pm-login.json"
                ]
              }
            }
          ]
        },
        {
          "id": "811c4b30-c6f1-4681-965c-c2d3769fae51",
          "name": "prescriptions with cases",
          "request": {
            "name": "prescriptions with cases",
            "description": {
              "content": "A filtered list of Prescriptions with Cases enrolled to each.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "api",
                "rx-cases"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": false,
                  "description": {
                    "content": "ID number of prescribing VOR",
                    "type": "text/plain"
                  },
                  "key": "vorId",
                  "value": "97186553"
                },
                {
                  "disabled": false,
                  "description": {
                    "content": "ID number of MOR prescribed to",
                    "type": "text/plain"
                  },
                  "key": "morId",
                  "value": "97186553"
                },
                {
                  "disabled": false,
                  "description": {
                    "content": "ID number of protocol prescribed",
                    "type": "text/plain"
                  },
                  "key": "protocolId",
                  "value": "97186553"
                },
                {
                  "disabled": false,
                  "description": {
                    "content": "last date limit for Case enrollment",
                    "type": "text/plain"
                  },
                  "key": "enrolledBefore",
                  "value": "1992-07-21T15:08:28.850Z"
                },
                {
                  "disabled": false,
                  "description": {
                    "content": "earliest date limit for Case enrollment",
                    "type": "text/plain"
                  },
                  "key": "enrolledAfter",
                  "value": "1985-05-17T09:34:14.487Z"
                },
                {
                  "disabled": false,
                  "description": {
                    "content": "page start",
                    "type": "text/plain"
                  },
                  "key": "offset",
                  "value": "0"
                },
                {
                  "disabled": false,
                  "description": {
                    "content": "maximum page length",
                    "type": "text/plain"
                  },
                  "key": "limit",
                  "value": "20"
                }
              ],
              "variable": []
            },
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "GET"
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "c8ac93a2-0ad4-430a-b7ad-139774ac7800",
                "type": "text/javascript",
                "exec": [
                  "./portman/pm-login.json"
                ]
              }
            }
          ]
        },
        {
          "id": "e86ae941-51da-4229-a9a9-f74f56cb8e2f",
          "name": "execute task",
          "request": {
            "name": "execute task",
            "description": {
              "content": "Mark task status as completed",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "api",
                "users",
                "tasks"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n  \"_type\": \"occaecat esse mollit in ullamco\",\n  \"animalId\": \"this\",\n  \"caseId\": 123,\n  \"detail\": \"tempor veniam dolor voluptate minim\",\n  \"doAt\": \"2022-06-15T14:04:55.013Z\",\n  \"id\": 123,\n  \"morId\": 123,\n  \"status\": \"REQUIRED\",\n  \"vorId\": 123,\n  \"executor\": 123\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "f2451413-87f4-427f-b712-84a1b8e711fa",
                "type": "text/javascript",
                "exec": [
                  "./portman/pm-login.json"
                ]
              }
            }
          ],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        {
          "id": "a761437b-0088-4306-a7ae-9fa3f9186369",
          "name": "get SPL",
          "request": {
            "name": "get SPL",
            "description": {
              "type": "text/plain"
            },
            "url": {
              "path": [
                "api",
                "admin",
                "spl",
                ":ndc"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": [
                {
                  "disabled": false,
                  "description": {
                    "content": "(Required) unique 10-digit, 3-segment number. labelerCode-productCode-packageCode",
                    "type": "text/plain"
                  },
                  "type": "any",
                  "value": "0061-4321-03",
                  "key": "ndc"
                }
              ]
            },
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "GET"
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "22457033-f82d-4630-b5b1-a2848d203255",
                "type": "text/javascript",
                "exec": [
                  "./portman/pm-login.json"
                ]
              }
            }
          ]
        },
        {
          "id": "feb6d8f8-ce42-4d0b-bb43-1e004702b8ee",
          "name": "record an image",
          "request": {
            "name": "record an image",
            "description": {
              "content": "REcords link for loading an image.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "api",
                "images"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n  \"id\": 888,\n  \"store\": {\n    \"id\": 888,\n    \"uri\": \"eu ut eiusmod adipisi\",\n    \"name\": \"magna dolore veniam deser\",\n    \"headers\": [\n      {\n        \"key\": \"X-Auth-Token\",\n        \"value\": \"est esse\"\n      },\n      {\n        \"key\": \"X-Auth-Token\",\n        \"value\": \"id laborum minim cupidatat\"\n      }\n    ]\n  },\n  \"link\": \"exercitation ipsum\",\n  \"name\": \"in eu\",\n  \"thumbnail\": \"veniam anim ut labore\",\n  \"keywords\": [\n    \"tempor labori\",\n    \"eiusmod adipisicing\"\n  ]\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "2fb318c3-a19f-4e4a-98f5-ebde502286e8",
                "type": "text/javascript",
                "exec": [
                  "./portman/pm-login.json"
                ]
              }
            }
          ],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        }
      ],
      "event": []
    },
    {
      "id": "c19a7b57-edbd-498e-b201-c8689720c233",
      "name": "ALL_USERS",
      "description": {
        "content": "available to all users.",
        "type": "text/plain"
      },
      "item": [
        {
          "id": "42604431-2778-419d-ace1-3d6658befeee",
          "name": "signin",
          "request": {
            "name": "signin",
            "description": {
              "content": "Log in with user credentials",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "signin"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": false,
                  "description": {
                    "content": "After a successful signin, the server will attempt to redirect to this path, if supplied.",
                    "type": "text/plain"
                  },
                  "key": "returnPath",
                  "value": "/spa/editor"
                }
              ],
              "variable": []
            },
            "header": [
              {
                "key": "Accept",
                "value": "text/html"
              }
            ],
            "method": "GET"
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "7d76e7f1-9b64-4bee-95f6-fa5abba0916b",
                "type": "text/javascript",
                "exec": [
                  "./portman/pm-login.json"
                ]
              }
            }
          ]
        },
        {
          "id": "ccfee802-5e6a-4399-9c75-ed90f176cf58",
          "name": "update user data",
          "request": {
            "name": "update user data",
            "description": {
              "content": "Users may update their own data. A VOR may also update User data of a User in a `CLIENT` relationship with that VOR. A SAOR may update data of any User.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "api",
                "users"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "PUT",
            "body": {
              "mode": "raw",
              "raw": "{\n  \"user\": {\n    \"uname\": \"exampleUser\",\n    \"userType\": \"VOR\",\n    \"firstname\": \"Example\",\n    \"lastname\": \"User\",\n    \"id\": 99,\n    \"email\": \"exampleUser@email.com\",\n    \"suffix\": \"DVM\"\n  }\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "ba60a048-e5a9-4550-aa6a-bcaae6be09ee",
                "type": "text/javascript",
                "exec": [
                  "./portman/pm-login.json"
                ]
              }
            }
          ],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        {
          "id": "6665bf17-43b3-4abd-b797-64ddbe5f8921",
          "name": "user login",
          "request": {
            "name": "user login",
            "description": {
              "content": "Authenticate a User and the app requesting a token, returning a token for use in future secured requests.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "api",
                "users",
                "logins"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n  \"apikey\": \"t0CGzpQ4cgu1OBy44sBt\",\n  \"identifier\": \"someUser\",\n  \"password\": \"somePassword\"\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "4bc0e3f0-0ce2-460e-a3ed-f0aec736aa92",
                "type": "text/javascript",
                "exec": [
                  "./portman/pm-login.json"
                ]
              }
            }
          ],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        {
          "id": "0566986e-bcaa-4b0e-a2b7-503a0110deb2",
          "name": "renew token",
          "request": {
            "name": "renew token",
            "description": {
              "content": "Renews the User's access token for use in future secured requests.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "api",
                "users",
                "logins"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "GET"
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "26b69c44-e5ad-4782-942b-5cb57e210c1e",
                "type": "text/javascript",
                "exec": [
                  "./portman/pm-login.json"
                ]
              }
            }
          ]
        },
        {
          "id": "8a673f1e-5b29-4973-80f7-ebe49338328a",
          "name": "get user data",
          "request": {
            "name": "get user data",
            "description": {
              "content": "Returns User data as specified by User `id`. Any User may get their own data. A VOR may get User data of Users in a `CLIENT` relationship with that VOR. A SAOR may get data of any User.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "api",
                "users",
                ":id"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": [
                {
                  "disabled": false,
                  "description": {
                    "content": "(Required) User ID key",
                    "type": "text/plain"
                  },
                  "type": "any",
                  "value": "2",
                  "key": "id"
                }
              ]
            },
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "GET"
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "1b536802-3af8-4671-8cbf-b414036995cb",
                "type": "text/javascript",
                "exec": [
                  "./portman/pm-login.json"
                ]
              }
            }
          ]
        },
        {
          "id": "361eb81d-3538-45ae-9a0a-8a9748e3e8e7",
          "name": "list of all",
          "request": {
            "name": "list of all",
            "description": {
              "content": "list of .",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "api",
                "visits",
                ":id"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": [
                {
                  "disabled": false,
                  "description": {
                    "content": "(Required) User ID key",
                    "type": "text/plain"
                  },
                  "type": "any",
                  "value": "2",
                  "key": "id"
                }
              ]
            },
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "GET"
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "a50da65e-717f-42c6-8c85-7ab0870e28ec",
                "type": "text/javascript",
                "exec": [
                  "./portman/pm-login.json"
                ]
              }
            }
          ]
        },
        {
          "id": "97f31bf2-4c2a-4251-a5af-d3e6c0375c46",
          "name": "update address",
          "request": {
            "name": "update address",
            "description": {
              "content": "A User may update their own address.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "api",
                "users",
                "addresses"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "PUT",
            "body": {
              "mode": "raw",
              "raw": "{\n  \"user\": {\n    \"uname\": \"exampleUser\",\n    \"userType\": \"VOR\",\n    \"firstname\": \"Example\",\n    \"lastname\": \"User\",\n    \"id\": 99,\n    \"email\": \"exampleUser@email.com\",\n    \"suffix\": \"DVM\"\n  }\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "668f1e4d-9169-4bfc-baf5-a5b322654049",
                "type": "text/javascript",
                "exec": [
                  "./portman/pm-login.json"
                ]
              }
            }
          ],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        {
          "id": "74d0db20-2df8-4895-8050-1d3ddb6baaae",
          "name": "address of user",
          "request": {
            "name": "address of user",
            "description": {
              "content": "Address of user specified by `id`.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "api",
                "users",
                "addresses",
                ":id"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": [
                {
                  "disabled": false,
                  "description": {
                    "content": "(Required) User ID key",
                    "type": "text/plain"
                  },
                  "type": "any",
                  "value": "2",
                  "key": "id"
                }
              ]
            },
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "GET"
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "5995ed6e-3f29-42a7-9825-aa930fd83ca4",
                "type": "text/javascript",
                "exec": [
                  "./portman/pm-login.json"
                ]
              }
            }
          ]
        },
        {
          "id": "7a9ec455-4a2a-40bf-a634-2f8defc9bae7",
          "name": "update profile",
          "request": {
            "name": "update profile",
            "description": {
              "content": "A User may update their own profile.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "api",
                "users",
                "profiles"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "PUT",
            "body": {
              "mode": "raw",
              "raw": "{\n  \"user\": {\n    \"address1\": \"123 Main St.\",\n    \"address2\": \"123 Main St.\",\n    \"emailNews\": true,\n    \"emailTips\": false,\n    \"firstname\": \"Example\",\n    \"lastname\": \"User\",\n    \"rxHeader\": \"fugiat dolor Excepteur irure\",\n    \"sandboxName\": \"sunt fugiat reprehenderit laborum\",\n    \"state\": \"Any State\",\n    \"town\": \"Anytown\",\n    \"uname\": \"exampleUser\",\n    \"userId\": -80823262,\n    \"userType\": \"VOR\",\n    \"zip\": \"12345-abcd\",\n    \"id\": 99,\n    \"email\": \"exampleUser@email.com\",\n    \"suffix\": \"DVM\",\n    \"busName\": \"testVOR Clinic\",\n    \"country\": \"USA\"\n  }\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "86af0235-3184-44ff-b39c-b2f2ac1bf242",
                "type": "text/javascript",
                "exec": [
                  "./portman/pm-login.json"
                ]
              }
            }
          ],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        {
          "id": "c61b69aa-63ea-44cb-998b-8cdf8a74e158",
          "name": "Profile of user",
          "request": {
            "name": "Profile of user",
            "description": {
              "content": "Profile of user specified by `id`.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "api",
                "users",
                "profiles",
                ":id"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": [
                {
                  "disabled": false,
                  "description": {
                    "content": "(Required) User ID key",
                    "type": "text/plain"
                  },
                  "type": "any",
                  "value": "2",
                  "key": "id"
                }
              ]
            },
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "GET"
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "d4b054c4-06d7-40b4-a501-c4f3bb1d59c2",
                "type": "text/javascript",
                "exec": [
                  "./portman/pm-login.json"
                ]
              }
            }
          ]
        },
        {
          "id": "38c75e9f-f79a-4867-bc3c-b59b576d7a86",
          "name": "confirm Token",
          "request": {
            "name": "confirm Token",
            "description": {
              "content": "used for clickable link to confirm a token sent in email.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "api",
                "users",
                "token",
                ":token"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": [
                {
                  "disabled": false,
                  "description": {
                    "content": "(Required) single-use token required for authentication",
                    "type": "text/plain"
                  },
                  "type": "any",
                  "value": "2frfgjty",
                  "key": "token"
                }
              ]
            },
            "header": [
              {
                "key": "Accept",
                "value": "text/html"
              }
            ],
            "method": "GET"
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "d141cd91-d87a-4e9d-8409-d814f8fe21a0",
                "type": "text/javascript",
                "exec": [
                  "./portman/pm-login.json"
                ]
              }
            }
          ]
        },
        {
          "id": "14f188f5-e84f-4ac2-9b57-61277a6f17bb",
          "name": "record a User comment",
          "request": {
            "name": "record a User comment",
            "description": {
              "content": "Records a User comment to the database and emails admin. It supports privacy controls.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "api",
                "users",
                "comments"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n  \"comment\": \"some comment\",\n  \"userId\": 1,\n  \"public\": false\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "899d1fb9-ae00-4d8e-94f5-a21d4e35714d",
                "type": "text/javascript",
                "exec": [
                  "./portman/pm-login.json"
                ]
              }
            }
          ],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        {
          "id": "b7008e68-4379-4775-b569-d829e22aa00a",
          "name": "respond to a message identified by token",
          "request": {
            "name": "respond to a message identified by token",
            "description": {
              "content": "Respond to a message according to the content in the message, secured by a token that links the response to a UserMessage. Typically token expires in 48 hr.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "messages",
                "ok",
                ":token",
                ""
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": false,
                  "description": {
                    "content": "A message may include a question requiring a yes-or-no response. For example, an email message could include links for \"confirm\" or decline\" with only the first setting the response parameter to true.",
                    "type": "text/plain"
                  },
                  "key": "response",
                  "value": "false"
                }
              ],
              "variable": [
                {
                  "disabled": false,
                  "description": {
                    "content": "(Required) a token supplied in a message asking for a response. Token typically expires in 48 hr.",
                    "type": "text/plain"
                  },
                  "type": "any",
                  "value": "est laboris officia",
                  "key": "token"
                }
              ]
            },
            "header": [
              {
                "key": "Accept",
                "value": "text/html"
              }
            ],
            "method": "GET"
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "23ff8b9e-20c9-48f7-a0e8-b97672054669",
                "type": "text/javascript",
                "exec": [
                  "./portman/pm-login.json"
                ]
              }
            }
          ]
        },
        {
          "id": "5347a253-739f-4914-98b5-8abeec19d847",
          "name": "list of all diagnoses",
          "request": {
            "name": "list of all diagnoses",
            "description": {
              "content": "Returns an array of keys used to identify help messages.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "api",
                "helpkeys"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "GET"
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "46471cf7-e425-4482-bbb9-ac998fc2ddc5",
                "type": "text/javascript",
                "exec": [
                  "./portman/pm-login.json"
                ]
              }
            }
          ]
        },
        {
          "id": "2524b9dc-87ba-4081-bf11-d6e563e3524f",
          "name": "help message",
          "request": {
            "name": "help message",
            "description": {
              "content": "return a help message, normally to be displayed in a popup help screen.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "api",
                "help",
                ":key"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": [
                {
                  "disabled": false,
                  "description": {
                    "content": "(Required) help screen key",
                    "type": "text/plain"
                  },
                  "type": "any",
                  "value": "est laboris officia",
                  "key": "key"
                }
              ]
            },
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "GET"
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "80f4f9c6-8737-40d8-b3b6-824ab46703dc",
                "type": "text/javascript",
                "exec": [
                  "./portman/pm-login.json"
                ]
              }
            }
          ]
        },
        {
          "id": "630aeb8b-90b4-4648-a8eb-68a8dadafcd6",
          "name": "confirm VOR",
          "request": {
            "name": "confirm VOR",
            "description": {
              "type": "text/plain"
            },
            "url": {
              "path": [
                "api",
                "admin",
                "ConfirmVOR"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": false,
                  "key": "sendEmail",
                  "value": "true"
                }
              ],
              "variable": []
            },
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "PUT"
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "d46719f6-14a9-41cb-b78f-89fc07d9b9ef",
                "type": "text/javascript",
                "exec": [
                  "./portman/pm-login.json"
                ]
              }
            }
          ]
        },
        {
          "id": "c69ceea9-aef4-473e-9ae9-f1249d781faa",
          "name": "get Image",
          "request": {
            "name": "get Image",
            "description": {
              "type": "text/plain"
            },
            "url": {
              "path": [
                "api",
                "images"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": false,
                  "key": "keywords",
                  "value": "id magna Ut"
                },
                {
                  "disabled": false,
                  "key": "keywords",
                  "value": "sed quis ipsum"
                },
                {
                  "disabled": false,
                  "key": "productId",
                  "value": "97186553"
                },
                {
                  "disabled": false,
                  "key": "dx",
                  "value": "97186553"
                },
                {
                  "disabled": false,
                  "key": "ex",
                  "value": "97186553"
                }
              ],
              "variable": []
            },
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "GET"
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "aade603f-da5a-43a9-89e6-1955352d092a",
                "type": "text/javascript",
                "exec": [
                  "./portman/pm-login.json"
                ]
              }
            }
          ]
        },
        {
          "id": "b5a78a8c-9725-4d6b-805e-47889c22a208",
          "name": "get Image",
          "request": {
            "name": "get Image",
            "description": {
              "type": "text/plain"
            },
            "url": {
              "path": [
                "api",
                "images",
                ":id"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": [
                {
                  "disabled": false,
                  "description": {
                    "content": "(Required) ",
                    "type": "text/plain"
                  },
                  "type": "any",
                  "value": "est laboris officia",
                  "key": "id"
                }
              ]
            },
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "GET"
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "9afc0cf6-044b-401a-b62d-2da86c0a5d59",
                "type": "text/javascript",
                "exec": [
                  "./portman/pm-login.json"
                ]
              }
            }
          ]
        },
        {
          "id": "2c96dee1-a20b-4585-8586-6a6768a686af",
          "name": "get Image Keywards",
          "request": {
            "name": "get Image Keywards",
            "description": {
              "type": "text/plain"
            },
            "url": {
              "path": [
                "api",
                "imagekeywords"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "GET"
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "76e04349-2966-47a8-9692-82b92cbc5f1f",
                "type": "text/javascript",
                "exec": [
                  "./portman/pm-login.json"
                ]
              }
            }
          ]
        },
        {
          "id": "c5c5502a-01f7-48e7-b6d6-6c8d98a1bdcc",
          "name": "get Image Stores",
          "request": {
            "name": "get Image Stores",
            "description": {
              "type": "text/plain"
            },
            "url": {
              "path": [
                "api",
                "imagestores"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "GET"
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "fd76b14d-45fb-4d39-83cc-632013e8e3aa",
                "type": "text/javascript",
                "exec": [
                  "./portman/pm-login.json"
                ]
              }
            }
          ]
        }
      ],
      "event": []
    },
    {
      "id": "1a23621d-1d54-44c8-a376-18bedfb85604",
      "name": "SAOR",
      "description": {
        "content": "available to system administrators.",
        "type": "text/plain"
      },
      "item": [
        {
          "id": "26cb02cc-8050-4591-8673-63ebb636eabe",
          "name": "load Editor",
          "request": {
            "name": "load Editor",
            "description": {
              "content": "load Protocol Editor",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "editor"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Accept",
                "value": "text/html"
              }
            ],
            "method": "GET"
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "c85d884f-fb4f-40ef-87fe-fc23eb0b033a",
                "type": "text/javascript",
                "exec": [
                  "./portman/pm-login.json"
                ]
              }
            }
          ]
        },
        {
          "id": "b8af89a5-4e9c-45c1-adc7-b61c4d732b3c",
          "name": "load Farm App",
          "request": {
            "name": "load Farm App",
            "description": {
              "content": "load Farm App",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "farm"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Accept",
                "value": "text/html"
              }
            ],
            "method": "GET"
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "81c8ba35-132c-4dd9-be6d-77308ce7bd75",
                "type": "text/javascript",
                "exec": [
                  "./portman/pm-login.json"
                ]
              }
            }
          ]
        },
        {
          "id": "c26e62d1-221e-4632-81ca-2f77f2c40133",
          "name": "load Admin App",
          "request": {
            "name": "load Admin App",
            "description": {
              "content": "load Admin app",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "admin"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Accept",
                "value": "text/html"
              }
            ],
            "method": "GET"
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "aa0265b7-7a6f-4961-aed1-c7e82d767f48",
                "type": "text/javascript",
                "exec": [
                  "./portman/pm-login.json"
                ]
              }
            }
          ]
        },
        {
          "id": "d6d9d277-ca3d-40c0-adae-f837c869a58d",
          "name": "delete user",
          "request": {
            "name": "delete user",
            "description": {
              "content": "This endpoint supports the (reversible) \"delete\" of a User by setting user.status to `REMOVED`. Removed Users are not visible in normal queries.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "api",
                "users",
                ":id"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": [
                {
                  "disabled": false,
                  "description": {
                    "content": "(Required) User ID key",
                    "type": "text/plain"
                  },
                  "type": "any",
                  "value": "5",
                  "key": "id"
                }
              ]
            },
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "DELETE"
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "22454515-d86f-4684-8c73-c702aead598e",
                "type": "text/javascript",
                "exec": [
                  "./portman/pm-login.json"
                ]
              }
            }
          ]
        },
        {
          "id": "c22796ec-ea72-405d-a7bc-f45654d713ea",
          "name": "delete sandboxClient",
          "request": {
            "name": "delete sandboxClient",
            "description": {
              "content": "Delete the User and CLIENT Relation records from the database,  irreversibly removing the sandbocx client, but not any existing Prescriptions.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "api",
                "users",
                "sandboxClient"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "DELETE"
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "fec74937-bbe0-48a1-a2a7-c8e9a0f49c2a",
                "type": "text/javascript",
                "exec": [
                  "./portman/pm-login.json"
                ]
              }
            }
          ]
        },
        {
          "id": "8ebb5c5d-b03a-4363-8b8f-fd7b2ec7419d",
          "name": "create Tag",
          "request": {
            "name": "create Tag",
            "description": {
              "content": "Create a Tag.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "api",
                "protocols",
                "tags"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n  \"id\": 8,\n  \"color\": \"#516cc6\",\n  \"name\": \"offi\",\n  \"fixes\": [\n    {\n      \"_type\": \"in labore consectetur\",\n      \"detail\": \"ut aute eiusmod\",\n      \"message\": \"sed voluptate occaecat irure\",\n      \"title\": \"magna incididunt sit anim sunt\"\n    },\n    {\n      \"_type\": \"u\",\n      \"detail\": \"elit par\",\n      \"message\": \"id\",\n      \"title\": \"ipsum ut in Excepteur\"\n    }\n  ]\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "bad21eea-4bda-4ead-b9ee-f3335ea436e9",
                "type": "text/javascript",
                "exec": [
                  "./portman/pm-login.json",
                  "// Validate status 2xx \npm.test(\"[POST]::/api/protocols/tags - Status code is 2xx\", function () {\n   pm.response.to.be.success;\n});\n"
                ]
              }
            }
          ],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        {
          "id": "44e6501b-fe33-443f-be66-b8e4efe4fde6",
          "name": "Tag",
          "request": {
            "name": "Tag",
            "description": {
              "content": "Delete Tag.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "api",
                "protocols",
                "tags",
                ":id"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": [
                {
                  "disabled": false,
                  "description": {
                    "content": "(Required) ",
                    "type": "text/plain"
                  },
                  "type": "any",
                  "value": "97186553",
                  "key": "id"
                }
              ]
            },
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "DELETE"
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "165e5d1d-7395-43ac-952c-6026e3aebab3",
                "type": "text/javascript",
                "exec": [
                  "./portman/pm-login.json",
                  "// Validate status 2xx \npm.test(\"[DELETE]::/api/protocols/tags/:id - Status code is 2xx\", function () {\n   pm.response.to.be.success;\n});\n"
                ]
              }
            }
          ]
        },
        {
          "id": "e7fa37e1-f507-4e4f-a29a-0b7ea04052e0",
          "name": "create a public Promise",
          "request": {
            "name": "create a public Promise",
            "description": {
              "content": "REcord a Promise type that will be public (available to all VORs)",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "api",
                "protocols",
                "publicPromises"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n  \"_type\": \"models.AffirmationPromise\",\n  \"name\": \"ID promise\",\n  \"when\": \"PT0H\",\n  \"id\": 2345,\n  \"ownerId\": 123,\n  \"descrip\": \"You must give ID for each case enrolled\"\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "6e5001df-33a2-4d11-ade3-f3362b033cf6",
                "type": "text/javascript",
                "exec": [
                  "./portman/pm-login.json",
                  "// Validate status 2xx \npm.test(\"[POST]::/api/protocols/publicPromises - Status code is 2xx\", function () {\n   pm.response.to.be.success;\n});\n"
                ]
              }
            }
          ],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        {
          "id": "4c4cc928-c56b-4547-a697-f8d81f8cbbcb",
          "name": "send a message to another user",
          "request": {
            "name": "send a message to another user",
            "description": {
              "content": "send a message to another user",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "api",
                "messages"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": false,
                  "description": {
                    "content": "Mode(s) or channel(s) to use in messaging, defaulting to EMAIL",
                    "type": "text/plain"
                  },
                  "key": "modes",
                  "value": "EMAIL|EMAIL"
                }
              ],
              "variable": []
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n  \"_type\": \"models.SimpleMessage\",\n  \"from\": 99,\n  \"to\": 99,\n  \"subject\": \"laborum enim dolo\",\n  \"message\": \"Hello <b>world</b>\",\n  \"detail\": \"magna enim eiusmod\"\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "54cd4a31-6b51-49a2-9bf5-67fb63079495",
                "type": "text/javascript",
                "exec": [
                  "./portman/pm-login.json"
                ]
              }
            }
          ],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        {
          "id": "487519f6-b22b-4365-ab3d-fa9a0cd7eddf",
          "name": "create Eligibility",
          "request": {
            "name": "create Eligibility",
            "description": {
              "content": "Creation  a Eligibility.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "api",
                "protocols",
                "eligibilities"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n  \"id\": 1,\n  \"name\": \"Beef Cattle\",\n  \"fdaSpecies\": [\n    \"veal\",\n    \"dairy_cattle\"\n  ]\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "89572468-59bd-47bf-a700-60a059d5e783",
                "type": "text/javascript",
                "exec": [
                  "./portman/pm-login.json",
                  "// Validate status 2xx \npm.test(\"[POST]::/api/protocols/eligibilities - Status code is 2xx\", function () {\n   pm.response.to.be.success;\n});\n"
                ]
              }
            }
          ],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        {
          "id": "e95d2648-7bb0-48d4-b51b-d772beddec54",
          "name": "Eligibility",
          "request": {
            "name": "Eligibility",
            "description": {
              "content": "Delete Eligibility.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "api",
                "protocols",
                "eligibilities",
                "{{id}}}"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "DELETE"
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "1b90173d-bd46-4388-888d-d53bd20ffb01",
                "type": "text/javascript",
                "exec": [
                  "./portman/pm-login.json"
                ]
              }
            }
          ]
        },
        {
          "id": "094f8644-d4ff-493b-a2db-cd87b882ffea",
          "name": "create Eligibility",
          "request": {
            "name": "create Eligibility",
            "description": {
              "content": "Create  a Diagnosis.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "api",
                "protocols",
                "diagnoses"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n  \"id\": 8,\n  \"name\": \"Pain/inflammation (musculoskeletal), treatment\"\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "82a2b5fc-677a-4b68-99e6-63a7aafac68b",
                "type": "text/javascript",
                "exec": [
                  "./portman/pm-login.json",
                  "// Validate status 2xx \npm.test(\"[POST]::/api/protocols/diagnoses - Status code is 2xx\", function () {\n   pm.response.to.be.success;\n});\n"
                ]
              }
            }
          ],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        {
          "id": "2451a2a2-1f52-4e54-9877-3c9262f6475d",
          "name": "Diagnosis",
          "request": {
            "name": "Diagnosis",
            "description": {
              "content": "Delete Diagnosis.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "api",
                "protocols",
                "diagnoses",
                ":id"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": [
                {
                  "disabled": false,
                  "description": {
                    "content": "(Required) ",
                    "type": "text/plain"
                  },
                  "type": "any",
                  "value": "97186553",
                  "key": "id"
                }
              ]
            },
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "DELETE"
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "b690f430-dfa8-4e7e-bd84-4126b412fe37",
                "type": "text/javascript",
                "exec": [
                  "./portman/pm-login.json",
                  "// Validate status 2xx \npm.test(\"[DELETE]::/api/protocols/diagnoses/:id - Status code is 2xx\", function () {\n   pm.response.to.be.success;\n});\n"
                ]
              }
            }
          ]
        },
        {
          "id": "807d8944-af24-4e1f-a0cf-7abeb90b355c",
          "name": "create help screen",
          "request": {
            "name": "create help screen",
            "description": {
              "content": "Creation  a help screen.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "api",
                "help",
                ":key"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": [
                {
                  "disabled": false,
                  "description": {
                    "content": "(Required) help screen key",
                    "type": "text/plain"
                  },
                  "type": "any",
                  "value": "est laboris officia",
                  "key": "key"
                }
              ]
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n  \"key\": \"ipsum\",\n  \"msg\": \"Ut occa\",\n  \"lang\": \"reprehenderit cupidatat au\"\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "25c72a99-45c9-4ef0-b42f-fa5ba682d991",
                "type": "text/javascript",
                "exec": [
                  "./portman/pm-login.json"
                ]
              }
            }
          ],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        {
          "id": "5211f79c-8ece-4638-9e7c-197cdcc41caa",
          "name": "delete help screen",
          "request": {
            "name": "delete help screen",
            "description": {
              "content": "Delete help screen.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "api",
                "help",
                ":key"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": [
                {
                  "disabled": false,
                  "description": {
                    "content": "(Required) help screen key",
                    "type": "text/plain"
                  },
                  "type": "any",
                  "value": "est laboris officia",
                  "key": "key"
                }
              ]
            },
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "DELETE"
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "56aba68b-609c-4018-82c3-2e2181cd8295",
                "type": "text/javascript",
                "exec": [
                  "./portman/pm-login.json"
                ]
              }
            }
          ]
        },
        {
          "id": "7d5c5a6b-66ac-4133-8537-ec12f7d00ab9",
          "name": "create labelclaim",
          "request": {
            "name": "create labelclaim",
            "description": {
              "content": "Creation  a labelclaim.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "api",
                "labels"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n  \"id\": 1,\n  \"fdaSpecies\": [\n    \"ChickensBroilers\",\n    \"ChickensBroilers\"\n  ],\n  \"diagnosis\": \"pain (colic), symptomatic treatment\",\n  \"dxId\": 2002,\n  \"product\": \"Prevail™ Flunixin Meglumine Injection\",\n  \"route\": \"intr-corporeal\",\n  \"wtMeatHrs\": 22,\n  \"wtMilkHrs\": 5,\n  \"productId\": 1315018,\n  \"_dose\": \"3.0 ml per kg repeat in 6 hours and again in 24 hours\",\n  \"sequenceFunction\": {\n    \"_type\": \"models.SeqSingleDose\"\n  },\n  \"sizeFunction\": {\n    \"_type\": \"models.FixedDoseFunction\",\n    \"dose\": {\n      \"quantity\": {\n        \"dimension\": \"Mass\",\n        \"value\": 3,\n        \"symbol\": \"oz\"\n      }\n    }\n  },\n  \"doseNote\": \"THis can contain <b>html</b> tags\",\n  \"wtNote\": \"not for dairy animals\",\n  \"ndc\": \"200-308\",\n  \"generic\": \"OXYTETRACYCLINE\"\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "09fb3fb0-d55d-4019-8bde-a7d7f33cd644",
                "type": "text/javascript",
                "exec": [
                  "./portman/pm-login.json"
                ]
              }
            }
          ],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        {
          "id": "7e255c71-86d8-45f1-84d9-35c164ea0738",
          "name": "update labelclaim",
          "request": {
            "name": "update labelclaim",
            "description": {
              "content": "update a labelclaim.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "api",
                "labels"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "PUT",
            "body": {
              "mode": "raw",
              "raw": "{\n  \"id\": 1,\n  \"fdaSpecies\": [\n    \"ChickensBroilers\",\n    \"ChickensBroilers\"\n  ],\n  \"diagnosis\": \"pain (colic), symptomatic treatment\",\n  \"dxId\": 2002,\n  \"product\": \"Prevail™ Flunixin Meglumine Injection\",\n  \"route\": \"intr-corporeal\",\n  \"wtMeatHrs\": 22,\n  \"wtMilkHrs\": 5,\n  \"productId\": 1315018,\n  \"_dose\": \"3.0 ml per kg repeat in 6 hours and again in 24 hours\",\n  \"sequenceFunction\": {\n    \"_type\": \"models.SeqSingleDose\"\n  },\n  \"sizeFunction\": {\n    \"_type\": \"models.FixedDoseFunction\",\n    \"dose\": {\n      \"quantity\": {\n        \"dimension\": \"Mass\",\n        \"value\": 3,\n        \"symbol\": \"oz\"\n      }\n    }\n  },\n  \"doseNote\": \"THis can contain <b>html</b> tags\",\n  \"wtNote\": \"not for dairy animals\",\n  \"ndc\": \"200-308\",\n  \"generic\": \"OXYTETRACYCLINE\"\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "224535b4-0786-4fff-96c6-a695c3d35acb",
                "type": "text/javascript",
                "exec": [
                  "./portman/pm-login.json"
                ]
              }
            }
          ],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        {
          "id": "84130936-dbe1-4241-9915-5bd69d312dea",
          "name": "get SPL",
          "request": {
            "name": "get SPL",
            "description": {
              "type": "text/plain"
            },
            "url": {
              "path": [
                "api",
                "admin",
                "spl",
                ":ndc"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": [
                {
                  "disabled": false,
                  "description": {
                    "content": "(Required) unique 10-digit, 3-segment number. labelerCode-productCode-packageCode",
                    "type": "text/plain"
                  },
                  "type": "any",
                  "value": "0061-4321-03",
                  "key": "ndc"
                }
              ]
            },
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "GET"
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "716beab1-50bb-423a-87ee-834b9e143ba6",
                "type": "text/javascript",
                "exec": [
                  "./portman/pm-login.json"
                ]
              }
            }
          ]
        },
        {
          "id": "dad2e3f9-e925-469e-aecc-1643bff668e8",
          "name": "greenbook drugs",
          "request": {
            "name": "greenbook drugs",
            "description": {
              "content": "Return GBDs.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "api",
                "admin",
                "gbd"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": false,
                  "description": {
                    "content": "first section labeler code of a NDC",
                    "type": "text/plain"
                  },
                  "key": "ndcProd",
                  "value": "97186553"
                },
                {
                  "disabled": false,
                  "description": {
                    "content": "mid section product code of a NDC",
                    "type": "text/plain"
                  },
                  "key": "ndcLabeler",
                  "value": "97186553"
                },
                {
                  "disabled": false,
                  "description": {
                    "content": "starting row number in GBD table",
                    "type": "text/plain"
                  },
                  "key": "ndcBrand",
                  "value": "97186553"
                },
                {
                  "disabled": false,
                  "description": {
                    "content": "maximum number of rows to return",
                    "type": "text/plain"
                  },
                  "key": "offset",
                  "value": "97186553"
                },
                {
                  "disabled": false,
                  "description": {
                    "content": "end section package code of a NDC",
                    "type": "text/plain"
                  },
                  "key": "eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJleUp3Y205MmFXUmxja2xFSWpvaVkzSmxaR1Z1ZEdsaGJITWlMQ0p3Y205MmFXUmxja3RsZVNJNkluUmxjM1JXVDFJaWZRPT0iLCJpc3MiOiJwbGF5LXNpbGhvdWV0dGUiLCJle***...",
                  "value": "97186553"
                }
              ],
              "variable": []
            },
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "GET"
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "a9d90aea-1f47-4c57-86a5-9189456e6f94",
                "type": "text/javascript",
                "exec": [
                  "./portman/pm-login.json"
                ]
              }
            }
          ]
        },
        {
          "id": "8ee04384-d697-4b79-930d-589a369e1b25",
          "name": "update GBD",
          "request": {
            "name": "update GBD",
            "description": {
              "content": "M",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "api",
                "admin",
                "gbd"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "PUT",
            "body": {
              "mode": "raw",
              "raw": "{\n  \"ndc\": \"0010-3495\",\n  \"proprietery\": \"Bio-Mycin 200\",\n  \"nonProp\": \"OXYTETRACYCLINE\",\n  \"ingredients\": \"OXYTETRACYCLINE\",\n  \"labeler\": \"Boehringer Ingelheim Vetmedica, Inc.\",\n  \"productType\": \"OTC ANIMAL DRUG\",\n  \"marketCat\": \"ANADA\",\n  \"appNumber\": \"ANADA200008\",\n  \"link\": \"https://www.accessdata.fda.gov/spl/data/c9491ada-6813-4548-8872-57bb38a58feb/c9491ada-6813-4548-8872-57bb38a58feb.xml\",\n  \"status\": 0,\n  \"lastChanged\": \"1967-10-02T23:27:01.558Z\"\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "4f80ef74-c1fd-4d9f-a35f-77de511ab103",
                "type": "text/javascript",
                "exec": [
                  "./portman/pm-login.json"
                ]
              }
            }
          ],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        {
          "id": "60aa022a-7546-49ad-be13-e8bd369abf15",
          "name": "get Greenbook Drug",
          "request": {
            "name": "get Greenbook Drug",
            "description": {
              "type": "text/plain"
            },
            "url": {
              "path": [
                "api",
                "admin",
                "gbd",
                ":ndc"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": [
                {
                  "disabled": false,
                  "description": {
                    "content": "(Required) unique 10-digit, 3-segment number. labelerCode-productCode-packageCode",
                    "type": "text/plain"
                  },
                  "type": "any",
                  "value": "0061-4321-03",
                  "key": "ndc"
                }
              ]
            },
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "GET"
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "968acdcb-3dc2-4d40-a347-11f5c33609f4",
                "type": "text/javascript",
                "exec": [
                  "./portman/pm-login.json"
                ]
              }
            }
          ]
        }
      ],
      "event": []
    },
    {
      "id": "9b47b891-f7fb-4299-bdc3-10f9539b9606",
      "name": "TOR",
      "description": {
        "content": "available to farm employees.",
        "type": "text/plain"
      },
      "item": [],
      "event": []
    },
    {
      "id": "935a0dd3-15cf-4fda-adba-4a19d734ae9e",
      "name": "LOR",
      "description": {
        "content": "available to pharmacy curators.",
        "type": "text/plain"
      },
      "item": [],
      "event": []
    },
    {
      "id": "cc13ab2e-d3e0-4410-b185-9217c23e8a59",
      "name": "FARM",
      "description": {
        "content": "available to farm accounts.",
        "type": "text/plain"
      },
      "item": [],
      "event": []
    },
    {
      "id": "9e2679a0-f921-471a-a5c7-f4619dd3a4e2",
      "name": "CLINIC",
      "description": {
        "content": "available to vet clinic accounts.",
        "type": "text/plain"
      },
      "item": [],
      "event": []
    },
    {
      "id": "633ddf04-6ccb-4601-ad2f-7ade1c03e21f",
      "name": "User",
      "description": {
        "content": "Endpoints and models related to user management.",
        "type": "text/plain"
      },
      "item": [],
      "event": []
    },
    {
      "id": "dce7fb0f-ffff-45c9-893b-f75de4e97cbf",
      "name": "Protocol",
      "description": {
        "content": "Endpoints and models related to protocol management.",
        "type": "text/plain"
      },
      "item": [],
      "event": []
    },
    {
      "id": "10298e5b-633b-4048-a66c-fea48c32a3d3",
      "name": "Prescription",
      "description": {
        "content": "Endpoints and models related to prescription management.",
        "type": "text/plain"
      },
      "item": [],
      "event": []
    },
    {
      "id": "189b3479-3f3d-4bc1-a95b-2a3677100bf3",
      "name": "Case",
      "description": {
        "content": "Endpoints and models related to case management.",
        "type": "text/plain"
      },
      "item": [],
      "event": []
    },
    {
      "id": "4102531e-434d-4701-b005-65555055e496",
      "name": "Promise",
      "description": {
        "content": "Endpoints and models related to promise management.",
        "type": "text/plain"
      },
      "item": [],
      "event": []
    },
    {
      "id": "cba86dcf-37ae-4614-8f20-13fc6b5f8106",
      "name": "ANY_USER",
      "description": {
        "content": "",
        "type": "text/plain"
      },
      "item": [
        {
          "id": "8cf27cc4-8987-425c-a900-e2eec10aa8df",
          "name": "log a message to server",
          "request": {
            "name": "log a message to server",
            "description": {
              "content": "adds a timestamped entry to server logs",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "api",
                "logging"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": false,
                  "description": {
                    "content": "logging level severity, defaulting to INFO",
                    "type": "text/plain"
                  },
                  "key": "severity",
                  "value": "INFO"
                }
              ],
              "variable": []
            },
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "POST"
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "d78b33fe-c020-47a9-84c7-dfbf4a7f7dbb",
                "type": "text/javascript",
                "exec": [
                  "./portman/pm-login.json"
                ]
              }
            }
          ]
        }
      ],
      "event": []
    },
    {
      "id": "16924722-0ed5-42a1-80f7-5150b24c530b",
      "name": "create profile",
      "request": {
        "name": "create profile",
        "description": {
          "content": "Create a User with Address, and UserPrefs.",
          "type": "text/plain"
        },
        "url": {
          "path": [
            "api",
            "users",
            "profiles"
          ],
          "host": [
            "{{baseUrl}}"
          ],
          "query": [],
          "variable": []
        },
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json"
          },
          {
            "key": "Accept",
            "value": "application/json"
          }
        ],
        "method": "POST",
        "body": {
          "mode": "raw",
          "raw": "{\n  \"user\": {\n    \"address1\": \"123 Main St.\",\n    \"address2\": \"123 Main St.\",\n    \"emailNews\": true,\n    \"emailTips\": false,\n    \"firstname\": \"Example\",\n    \"lastname\": \"User\",\n    \"rxHeader\": \"fugiat dolor Excepteur irure\",\n    \"sandboxName\": \"sunt fugiat reprehenderit laborum\",\n    \"state\": \"Any State\",\n    \"town\": \"Anytown\",\n    \"uname\": \"exampleUser\",\n    \"userId\": -80823262,\n    \"userType\": \"VOR\",\n    \"zip\": \"12345-abcd\",\n    \"id\": 99,\n    \"email\": \"exampleUser@email.com\",\n    \"suffix\": \"DVM\",\n    \"busName\": \"testVOR Clinic\",\n    \"country\": \"USA\"\n  }\n}",
          "options": {
            "raw": {
              "language": "json"
            }
          }
        }
      },
      "response": [
        {
          "_": {
            "postman_previewlanguage": "json"
          },
          "id": "d0350542-00d8-4243-bf3e-cb0b34ff861a",
          "name": "the created Profile",
          "originalRequest": {
            "url": {
              "path": [
                "api",
                "users",
                "profiles"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "description": {
                  "content": "Added as a part of security scheme: apikey",
                  "type": "text/plain"
                },
                "key": "X-APIKEY",
                "value": "<API Key>"
              }
            ],
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n  \"user\": {\n    \"address1\": \"123 Main St.\",\n    \"address2\": \"123 Main St.\",\n    \"emailNews\": true,\n    \"emailTips\": false,\n    \"firstname\": \"Example\",\n    \"lastname\": \"User\",\n    \"rxHeader\": \"fugiat dolor Excepteur irure\",\n    \"sandboxName\": \"sunt fugiat reprehenderit laborum\",\n    \"state\": \"Any State\",\n    \"town\": \"Anytown\",\n    \"uname\": \"exampleUser\",\n    \"userId\": -80823262,\n    \"userType\": \"VOR\",\n    \"zip\": \"12345-abcd\",\n    \"id\": 99,\n    \"email\": \"exampleUser@email.com\",\n    \"suffix\": \"DVM\",\n    \"busName\": \"testVOR Clinic\",\n    \"country\": \"USA\"\n  }\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            }
          },
          "status": "OK",
          "code": 200,
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "body": "{\n  \"address1\": \"123 Main St.\",\n  \"address2\": \"123 Main St.\",\n  \"emailNews\": false,\n  \"emailTips\": true,\n  \"firstname\": \"Example\",\n  \"lastname\": \"User\",\n  \"rxHeader\": \"amet\",\n  \"sandboxName\": \"dolore nul\",\n  \"state\": \"Any State\",\n  \"town\": \"Anytown\",\n  \"uname\": \"exampleUser\",\n  \"userId\": -20861845,\n  \"userType\": \"VOR\",\n  \"zip\": \"12345-abcd\",\n  \"id\": 99,\n  \"email\": \"exampleUser@email.com\",\n  \"suffix\": \"DVM\",\n  \"busName\": \"testVOR Clinic\",\n  \"country\": \"USA\"\n}",
          "cookie": []
        },
        {
          "_": {
            "postman_previewlanguage": "json"
          },
          "id": "10c3e301-f449-4c27-95a0-ffbc621d298f",
          "name": "Authorization required",
          "originalRequest": {
            "url": {
              "path": [
                "api",
                "users",
                "profiles"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "description": {
                  "content": "Added as a part of security scheme: apikey",
                  "type": "text/plain"
                },
                "key": "X-APIKEY",
                "value": "<API Key>"
              }
            ],
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n  \"user\": {\n    \"address1\": \"123 Main St.\",\n    \"address2\": \"123 Main St.\",\n    \"emailNews\": true,\n    \"emailTips\": false,\n    \"firstname\": \"Example\",\n    \"lastname\": \"User\",\n    \"rxHeader\": \"fugiat dolor Excepteur irure\",\n    \"sandboxName\": \"sunt fugiat reprehenderit laborum\",\n    \"state\": \"Any State\",\n    \"town\": \"Anytown\",\n    \"uname\": \"exampleUser\",\n    \"userId\": -80823262,\n    \"userType\": \"VOR\",\n    \"zip\": \"12345-abcd\",\n    \"id\": 99,\n    \"email\": \"exampleUser@email.com\",\n    \"suffix\": \"DVM\",\n    \"busName\": \"testVOR Clinic\",\n    \"country\": \"USA\"\n  }\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            }
          },
          "status": "Unauthorized",
          "code": 401,
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "body": "{\n  \"title\": \"incorrect username or password\",\n  \"status\": 404,\n  \"errorType\": \"/errors/incorrect-user-pass\",\n  \"detail\": \"Authentication failed due to incorrect username or password.\",\n  \"instance\": \"/login/log/abc123\"\n}",
          "cookie": []
        }
      ],
      "event": [
        {
          "listen": "test",
          "script": {
            "id": "e7438e34-706c-4905-b5a3-6796de10b684",
            "type": "text/javascript",
            "exec": [
              "./portman/pm-login.json"
            ]
          }
        }
      ],
      "protocolProfileBehavior": {
        "disableBodyPruning": true
      }
    }
  ],
  "auth": {
    "type": "apikey",
    "apikey": [
      {
        "type": "any",
        "value": "X-APIKEY",
        "key": "key"
      },
      {
        "type": "any",
        "value": "<API Key>",
        "key": "value"
      },
      {
        "type": "any",
        "value": "header",
        "key": "in"
      }
    ]
  },
  "event": [],
  "variable": [
    {
      "type": "string",
      "value": "https://test.vcpr.org",
      "key": "baseUrl"
    },
    {
      "disabled": false,
      "description": {
        "content": "(Required) ",
        "type": "text/plain"
      },
      "type": "any",
      "value": "97186553",
      "key": "id"
    }
  ],
  "info": {
    "_postman_id": "9dedd342-06ef-4d82-b129-08ec4881cae6",
    "name": "PublicAPI",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
    "description": {
      "content": "API serving the Veterinary Protocol Manager&trade; application. &copy; DairySight LLC, Argyle NY 2020\n\nContact Support:\n Name: Jim Ehrlich, DVM\n Email: jehrlich@vcpr.org",
      "type": "text/plain"
    }
  }
}
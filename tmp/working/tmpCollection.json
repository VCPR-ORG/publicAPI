{
    "item": [
        {
            "id": "d168a846-3735-4695-9b2c-0d91184aa2d0",
            "name": "VOR",
            "description": {
                "content": "available to veterinarians.",
                "type": "text/plain"
            },
            "item": [
                {
                    "id": "a82b0b43-b93f-4916-a11c-a57472a7e43d",
                    "name": "load Editor",
                    "request": {
                        "name": "load Editor",
                        "description": {
                            "content": "load Protocol Editor",
                            "type": "text/plain"
                        },
                        "url": {
                            "path": [
                                "editor"
                            ],
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "query": [],
                            "variable": []
                        },
                        "header": [
                            {
                                "key": "Accept",
                                "value": "text/html"
                            }
                        ],
                        "method": "GET",
                        "auth": null
                    },
                    "response": [
                        {
                            "id": "f9815ae8-8c05-4dda-8fde-14ba57480029",
                            "name": "load Protocol Editor",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "editor"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "description": {
                                            "content": "Added as a part of security scheme: apikey",
                                            "type": "text/plain"
                                        },
                                        "key": "X-Auth-Token",
                                        "value": "<API Key>"
                                    }
                                ],
                                "method": "GET",
                                "body": {}
                            },
                            "status": "OK",
                            "code": 200,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "text/html"
                                }
                            ],
                            "body": "",
                            "cookie": [],
                            "_postman_previewlanguage": "text"
                        },
                        {
                            "id": "eb414bfb-e903-49df-aaa9-47ce97f03ae3",
                            "name": "Authorization required",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "editor"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "description": {
                                            "content": "Added as a part of security scheme: apikey",
                                            "type": "text/plain"
                                        },
                                        "key": "X-Auth-Token",
                                        "value": "<API Key>"
                                    }
                                ],
                                "method": "GET",
                                "body": {}
                            },
                            "status": "Unauthorized",
                            "code": 401,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "text/plain"
                                }
                            ],
                            "body": "",
                            "cookie": [],
                            "_postman_previewlanguage": "text"
                        }
                    ],
                    "event": []
                },
                {
                    "id": "e17858c2-49f7-4084-90c8-ce1076312691",
                    "name": "load Farm App",
                    "request": {
                        "name": "load Farm App",
                        "description": {
                            "content": "load Farm App",
                            "type": "text/plain"
                        },
                        "url": {
                            "path": [
                                "farm"
                            ],
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "query": [],
                            "variable": []
                        },
                        "header": [
                            {
                                "key": "Accept",
                                "value": "text/html"
                            }
                        ],
                        "method": "GET",
                        "auth": null
                    },
                    "response": [
                        {
                            "id": "9898b6fd-e432-4138-9b2b-30a38e768aa0",
                            "name": "load Farm App",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "farm"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "description": {
                                            "content": "Added as a part of security scheme: apikey",
                                            "type": "text/plain"
                                        },
                                        "key": "X-Auth-Token",
                                        "value": "<API Key>"
                                    }
                                ],
                                "method": "GET",
                                "body": {}
                            },
                            "status": "OK",
                            "code": 200,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "text/html"
                                }
                            ],
                            "body": "",
                            "cookie": [],
                            "_postman_previewlanguage": "text"
                        },
                        {
                            "id": "2f28c653-5a7b-4c02-bd97-229ffbbe8602",
                            "name": "Authorization required",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "farm"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "description": {
                                            "content": "Added as a part of security scheme: apikey",
                                            "type": "text/plain"
                                        },
                                        "key": "X-Auth-Token",
                                        "value": "<API Key>"
                                    }
                                ],
                                "method": "GET",
                                "body": {}
                            },
                            "status": "Unauthorized",
                            "code": 401,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "text/plain"
                                }
                            ],
                            "body": "",
                            "cookie": [],
                            "_postman_previewlanguage": "text"
                        }
                    ],
                    "event": []
                },
                {
                    "id": "5b5f397d-5017-4eaf-bd78-94d3582f37f5",
                    "name": "list of Users IDs",
                    "request": {
                        "name": "list of Users IDs",
                        "description": {
                            "content": "Returns the ID and names of all active Users of the type(s) specified.",
                            "type": "text/plain"
                        },
                        "url": {
                            "path": [
                                "api",
                                "users"
                            ],
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "query": [],
                            "variable": [
                                {
                                    "disabled": false,
                                    "type": "any",
                                    "value": "VOR",
                                    "key": "usertypes",
                                    "description": "(Required) User types to include"
                                }
                            ]
                        },
                        "header": [
                            {
                                "key": "Accept",
                                "value": "application/json"
                            }
                        ],
                        "method": "GET",
                        "auth": null
                    },
                    "response": [
                        {
                            "id": "31cc89aa-19db-4dcc-86cc-33c28fd91485",
                            "name": "OK",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "api",
                                        "users"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": [
                                        {
                                            "disabled": false,
                                            "type": "any",
                                            "value": "VOR",
                                            "key": "usertypes",
                                            "description": "(Required) User types to include"
                                        }
                                    ]
                                },
                                "header": [
                                    {
                                        "description": {
                                            "content": "Added as a part of security scheme: apikey",
                                            "type": "text/plain"
                                        },
                                        "key": "X-Auth-Token",
                                        "value": "<API Key>"
                                    }
                                ],
                                "method": "GET",
                                "body": {}
                            },
                            "status": "OK",
                            "code": 200,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"vors\": [\n    {\n      \"users\": 93786558\n    },\n    {\n      \"users\": 32063439\n    }\n  ]\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "767df3e1-78f0-434e-babf-607f8036d9da",
                            "name": "Authorization required",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "api",
                                        "users"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": [
                                        {
                                            "disabled": false,
                                            "type": "any",
                                            "value": "VOR",
                                            "key": "usertypes",
                                            "description": "(Required) User types to include"
                                        }
                                    ]
                                },
                                "header": [
                                    {
                                        "description": {
                                            "content": "Added as a part of security scheme: apikey",
                                            "type": "text/plain"
                                        },
                                        "key": "X-Auth-Token",
                                        "value": "<API Key>"
                                    }
                                ],
                                "method": "GET",
                                "body": {}
                            },
                            "status": "Unauthorized",
                            "code": 401,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "text/plain"
                                }
                            ],
                            "body": "",
                            "cookie": [],
                            "_postman_previewlanguage": "text"
                        },
                        {
                            "id": "b11442d2-9030-4a89-baec-e1ed34e9c3e9",
                            "name": "The user does not have access rights to the content.",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "api",
                                        "users"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": [
                                        {
                                            "disabled": false,
                                            "type": "any",
                                            "value": "VOR",
                                            "key": "usertypes",
                                            "description": "(Required) User types to include"
                                        }
                                    ]
                                },
                                "header": [
                                    {
                                        "description": {
                                            "content": "Added as a part of security scheme: apikey",
                                            "type": "text/plain"
                                        },
                                        "key": "X-Auth-Token",
                                        "value": "<API Key>"
                                    }
                                ],
                                "method": "GET",
                                "body": {}
                            },
                            "status": "Forbidden",
                            "code": 403,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "text/plain"
                                }
                            ],
                            "body": "",
                            "cookie": [],
                            "_postman_previewlanguage": "text"
                        }
                    ],
                    "event": []
                },
                {
                    "id": "03b359ed-c6b3-4e4a-a5be-a1ad46bf8787",
                    "name": "list of VORs",
                    "request": {
                        "name": "list of VORs",
                        "description": {
                            "content": "list of VOR users.",
                            "type": "text/plain"
                        },
                        "url": {
                            "path": [
                                "api",
                                "users",
                                "vors"
                            ],
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "query": [],
                            "variable": []
                        },
                        "header": [
                            {
                                "key": "Accept",
                                "value": "application/json"
                            }
                        ],
                        "method": "GET",
                        "auth": null
                    },
                    "response": [
                        {
                            "id": "96cd48ac-fb28-41fc-b55c-2c2d5f3dd378",
                            "name": "OK",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "api",
                                        "users",
                                        "vors"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "description": {
                                            "content": "Added as a part of security scheme: apikey",
                                            "type": "text/plain"
                                        },
                                        "key": "X-Auth-Token",
                                        "value": "<API Key>"
                                    }
                                ],
                                "method": "GET",
                                "body": {}
                            },
                            "status": "OK",
                            "code": 200,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"vors\": [\n    {\n      \"id\": -6604851,\n      \"name\": \"sint nulla\"\n    },\n    {\n      \"id\": 99509117,\n      \"name\": \"in eiusmod cillum et\"\n    }\n  ]\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "e1a27b66-d0d3-4d97-bc93-0ef133ce7ca9",
                            "name": "Authorization required",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "api",
                                        "users",
                                        "vors"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "description": {
                                            "content": "Added as a part of security scheme: apikey",
                                            "type": "text/plain"
                                        },
                                        "key": "X-Auth-Token",
                                        "value": "<API Key>"
                                    }
                                ],
                                "method": "GET",
                                "body": {}
                            },
                            "status": "Unauthorized",
                            "code": 401,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "text/plain"
                                }
                            ],
                            "body": "",
                            "cookie": [],
                            "_postman_previewlanguage": "text"
                        },
                        {
                            "id": "9d784a07-464f-4ce2-aabb-d30e6d28c0ff",
                            "name": "The user does not have access rights to the content.",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "api",
                                        "users",
                                        "vors"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "description": {
                                            "content": "Added as a part of security scheme: apikey",
                                            "type": "text/plain"
                                        },
                                        "key": "X-Auth-Token",
                                        "value": "<API Key>"
                                    }
                                ],
                                "method": "GET",
                                "body": {}
                            },
                            "status": "Forbidden",
                            "code": 403,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "text/plain"
                                }
                            ],
                            "body": "",
                            "cookie": [],
                            "_postman_previewlanguage": "text"
                        }
                    ],
                    "event": []
                },
                {
                    "id": "83fa12a1-11fb-4a3f-813f-d04555340c28",
                    "name": "delete user",
                    "request": {
                        "name": "delete user",
                        "description": {
                            "content": "This endpoint supports the (reversible) \"delete\" of a User by setting user.status to `REMOVED`. Removed Users are not visible in normal queries.",
                            "type": "text/plain"
                        },
                        "url": {
                            "path": [
                                "api",
                                "users",
                                ":id"
                            ],
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "query": [],
                            "variable": [
                                {
                                    "disabled": false,
                                    "type": "any",
                                    "value": "5",
                                    "key": "id",
                                    "description": "(Required) User ID key"
                                }
                            ]
                        },
                        "header": [
                            {
                                "key": "Accept",
                                "value": "application/json"
                            }
                        ],
                        "method": "DELETE",
                        "auth": null
                    },
                    "response": [
                        {
                            "id": "906429f1-1002-41e3-a13a-473f1cb3c593",
                            "name": "User deleted",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "api",
                                        "users",
                                        ":id"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": [
                                        {
                                            "disabled": false,
                                            "type": "any",
                                            "value": "5",
                                            "key": "id",
                                            "description": "(Required) User ID key"
                                        }
                                    ]
                                },
                                "header": [
                                    {
                                        "description": {
                                            "content": "Added as a part of security scheme: apikey",
                                            "type": "text/plain"
                                        },
                                        "key": "X-Auth-Token",
                                        "value": "<API Key>"
                                    }
                                ],
                                "method": "DELETE",
                                "body": {}
                            },
                            "status": "OK",
                            "code": 200,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"deleted\": -12819518\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "60dcb229-c6f3-4459-ba5a-8c5f74c20d48",
                            "name": "Authorization required",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "api",
                                        "users",
                                        ":id"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": [
                                        {
                                            "disabled": false,
                                            "type": "any",
                                            "value": "5",
                                            "key": "id",
                                            "description": "(Required) User ID key"
                                        }
                                    ]
                                },
                                "header": [
                                    {
                                        "description": {
                                            "content": "Added as a part of security scheme: apikey",
                                            "type": "text/plain"
                                        },
                                        "key": "X-Auth-Token",
                                        "value": "<API Key>"
                                    }
                                ],
                                "method": "DELETE",
                                "body": {}
                            },
                            "status": "Unauthorized",
                            "code": 401,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "text/plain"
                                }
                            ],
                            "body": "",
                            "cookie": [],
                            "_postman_previewlanguage": "text"
                        },
                        {
                            "id": "fb29c30b-fd83-4324-beb5-190bc7ddae3c",
                            "name": "The user does not have access rights to the content.",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "api",
                                        "users",
                                        ":id"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": [
                                        {
                                            "disabled": false,
                                            "type": "any",
                                            "value": "5",
                                            "key": "id",
                                            "description": "(Required) User ID key"
                                        }
                                    ]
                                },
                                "header": [
                                    {
                                        "description": {
                                            "content": "Added as a part of security scheme: apikey",
                                            "type": "text/plain"
                                        },
                                        "key": "X-Auth-Token",
                                        "value": "<API Key>"
                                    }
                                ],
                                "method": "DELETE",
                                "body": {}
                            },
                            "status": "Forbidden",
                            "code": 403,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "text/plain"
                                }
                            ],
                            "body": "",
                            "cookie": [],
                            "_postman_previewlanguage": "text"
                        }
                    ],
                    "event": []
                },
                {
                    "id": "dda96dbf-5a41-42cb-aaf8-d2a217efad0d",
                    "name": "create a sandbox user",
                    "request": {
                        "name": "create a sandbox user",
                        "description": {
                            "content": "Create a sandbox user of MOR `UserType` who is a `CLIENT` of logged-in VOR. This allows the VOR to prescribe to the sandbox client, then view prescriptions from the client's point of view using the Farm App.",
                            "type": "text/plain"
                        },
                        "url": {
                            "path": [
                                "api",
                                "users",
                                "sandboxClient"
                            ],
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "query": [],
                            "variable": []
                        },
                        "header": [
                            {
                                "key": "Content-Type",
                                "value": "application/json"
                            },
                            {
                                "key": "Accept",
                                "value": "application/json"
                            }
                        ],
                        "method": "POST",
                        "auth": null,
                        "body": {
                            "mode": "raw",
                            "raw": "\"sed est proident\"",
                            "options": {
                                "raw": {
                                    "language": "json"
                                }
                            }
                        }
                    },
                    "response": [
                        {
                            "id": "91589a32-97be-4a37-8344-a405f12c080f",
                            "name": "Sandbox user created",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "api",
                                        "users",
                                        "sandboxClient"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "description": {
                                            "content": "Added as a part of security scheme: apikey",
                                            "type": "text/plain"
                                        },
                                        "key": "X-Auth-Token",
                                        "value": "<API Key>"
                                    }
                                ],
                                "method": "POST",
                                "body": {
                                    "mode": "raw",
                                    "raw": "\"sed est proident\"",
                                    "options": {
                                        "raw": {
                                            "language": "json"
                                        }
                                    }
                                }
                            },
                            "status": "OK",
                            "code": 200,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"sandboxClient\": \"dolor minim\"\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "f5be5a38-94ee-4e7c-828f-d0103abdd7fe",
                            "name": "The server can not understand the request due to invalid syntax.",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "api",
                                        "users",
                                        "sandboxClient"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "description": {
                                            "content": "Added as a part of security scheme: apikey",
                                            "type": "text/plain"
                                        },
                                        "key": "X-Auth-Token",
                                        "value": "<API Key>"
                                    }
                                ],
                                "method": "POST",
                                "body": {
                                    "mode": "raw",
                                    "raw": "\"sed est proident\"",
                                    "options": {
                                        "raw": {
                                            "language": "json"
                                        }
                                    }
                                }
                            },
                            "status": "Bad Request",
                            "code": 400,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"title\": \"incorrect username or password\",\n  \"status\": 404,\n  \"errorType\": \"/errors/incorrect-user-pass\",\n  \"detail\": \"Authentication failed due to incorrect username or password.\",\n  \"instance\": \"/login/log/abc123\"\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "e1a26e28-417a-48b1-a679-c495081f1c78",
                            "name": "Authorization required",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "api",
                                        "users",
                                        "sandboxClient"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "description": {
                                            "content": "Added as a part of security scheme: apikey",
                                            "type": "text/plain"
                                        },
                                        "key": "X-Auth-Token",
                                        "value": "<API Key>"
                                    }
                                ],
                                "method": "POST",
                                "body": {
                                    "mode": "raw",
                                    "raw": "\"sed est proident\"",
                                    "options": {
                                        "raw": {
                                            "language": "json"
                                        }
                                    }
                                }
                            },
                            "status": "Forbidden",
                            "code": 403,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "text/plain"
                                }
                            ],
                            "body": "",
                            "cookie": [],
                            "_postman_previewlanguage": "text"
                        }
                    ],
                    "event": [],
                    "protocolProfileBehavior": {
                        "disableBodyPruning": true
                    }
                },
                {
                    "id": "e50c2978-7d67-43b3-b643-794ef6105789",
                    "name": "delete sandboxClient",
                    "request": {
                        "name": "delete sandboxClient",
                        "description": {
                            "content": "Delete the User and CLIENT Relation records from the database,  irreversibly removing the sandbocx client, but not any existing Prescriptions.",
                            "type": "text/plain"
                        },
                        "url": {
                            "path": [
                                "api",
                                "users",
                                "sandboxClient"
                            ],
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "query": [],
                            "variable": []
                        },
                        "header": [
                            {
                                "key": "Accept",
                                "value": "application/json"
                            }
                        ],
                        "method": "DELETE",
                        "auth": null
                    },
                    "response": [
                        {
                            "id": "d85c84d9-a529-4ef0-94ad-a9d9de1b058a",
                            "name": "Sandbox user deleted",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "api",
                                        "users",
                                        "sandboxClient"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "description": {
                                            "content": "Added as a part of security scheme: apikey",
                                            "type": "text/plain"
                                        },
                                        "key": "X-Auth-Token",
                                        "value": "<API Key>"
                                    }
                                ],
                                "method": "DELETE",
                                "body": {}
                            },
                            "status": "OK",
                            "code": 200,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"deleted\": -12819518\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "144bf5bf-4746-4360-b605-f697b99c5e2b",
                            "name": "The server can not understand the request due to invalid syntax.",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "api",
                                        "users",
                                        "sandboxClient"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "description": {
                                            "content": "Added as a part of security scheme: apikey",
                                            "type": "text/plain"
                                        },
                                        "key": "X-Auth-Token",
                                        "value": "<API Key>"
                                    }
                                ],
                                "method": "DELETE",
                                "body": {}
                            },
                            "status": "Bad Request",
                            "code": 400,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"title\": \"incorrect username or password\",\n  \"status\": 404,\n  \"errorType\": \"/errors/incorrect-user-pass\",\n  \"detail\": \"Authentication failed due to incorrect username or password.\",\n  \"instance\": \"/login/log/abc123\"\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "4f70cd33-4596-4852-9709-4a1f05626eb8",
                            "name": "Authorization required",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "api",
                                        "users",
                                        "sandboxClient"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "description": {
                                            "content": "Added as a part of security scheme: apikey",
                                            "type": "text/plain"
                                        },
                                        "key": "X-Auth-Token",
                                        "value": "<API Key>"
                                    }
                                ],
                                "method": "DELETE",
                                "body": {}
                            },
                            "status": "Forbidden",
                            "code": 403,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "text/plain"
                                }
                            ],
                            "body": "",
                            "cookie": [],
                            "_postman_previewlanguage": "text"
                        }
                    ],
                    "event": []
                },
                {
                    "id": "4468e903-3869-4c9d-a78a-7d5bbfc7d5ec",
                    "name": "add a relationship",
                    "request": {
                        "name": "add a relationship",
                        "description": {
                            "content": "adds a relationship of the type specified by `name` to the current User, who must be a VOR. Defaults to CLIENT relationship.",
                            "type": "text/plain"
                        },
                        "url": {
                            "path": [
                                "api",
                                "users",
                                "relations"
                            ],
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "query": [],
                            "variable": []
                        },
                        "header": [
                            {
                                "key": "Content-Type",
                                "value": "application/json"
                            },
                            {
                                "key": "Accept",
                                "value": "application/json"
                            }
                        ],
                        "method": "POST",
                        "auth": null,
                        "body": {
                            "mode": "raw",
                            "raw": "\"CLIENT\"",
                            "options": {
                                "raw": {
                                    "language": "json"
                                }
                            }
                        }
                    },
                    "response": [
                        {
                            "id": "df990392-4b93-46e5-ac69-5cc5699b17cb",
                            "name": "related User",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "api",
                                        "users",
                                        "relations"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "description": {
                                            "content": "Added as a part of security scheme: apikey",
                                            "type": "text/plain"
                                        },
                                        "key": "X-Auth-Token",
                                        "value": "<API Key>"
                                    }
                                ],
                                "method": "POST",
                                "body": {
                                    "mode": "raw",
                                    "raw": "\"CLIENT\"",
                                    "options": {
                                        "raw": {
                                            "language": "json"
                                        }
                                    }
                                }
                            },
                            "status": "OK",
                            "code": 200,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "\"officia Lorem\"",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "75baca36-bffc-4f27-b818-0de38b9a122a",
                            "name": "The server can not understand the request due to invalid syntax.",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "api",
                                        "users",
                                        "relations"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "description": {
                                            "content": "Added as a part of security scheme: apikey",
                                            "type": "text/plain"
                                        },
                                        "key": "X-Auth-Token",
                                        "value": "<API Key>"
                                    }
                                ],
                                "method": "POST",
                                "body": {
                                    "mode": "raw",
                                    "raw": "\"CLIENT\"",
                                    "options": {
                                        "raw": {
                                            "language": "json"
                                        }
                                    }
                                }
                            },
                            "status": "Bad Request",
                            "code": 400,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"title\": \"incorrect username or password\",\n  \"status\": 404,\n  \"errorType\": \"/errors/incorrect-user-pass\",\n  \"detail\": \"Authentication failed due to incorrect username or password.\",\n  \"instance\": \"/login/log/abc123\"\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "1961d1a2-f63f-4313-a66b-ef383df8c0ab",
                            "name": "Authorization required",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "api",
                                        "users",
                                        "relations"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "description": {
                                            "content": "Added as a part of security scheme: apikey",
                                            "type": "text/plain"
                                        },
                                        "key": "X-Auth-Token",
                                        "value": "<API Key>"
                                    }
                                ],
                                "method": "POST",
                                "body": {
                                    "mode": "raw",
                                    "raw": "\"CLIENT\"",
                                    "options": {
                                        "raw": {
                                            "language": "json"
                                        }
                                    }
                                }
                            },
                            "status": "Forbidden",
                            "code": 403,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "text/plain"
                                }
                            ],
                            "body": "",
                            "cookie": [],
                            "_postman_previewlanguage": "text"
                        }
                    ],
                    "event": [],
                    "protocolProfileBehavior": {
                        "disableBodyPruning": true
                    }
                },
                {
                    "id": "d894433d-f833-499f-b9cf-c6fe9e362d50",
                    "name": "get my right-related users",
                    "request": {
                        "name": "get my right-related users",
                        "description": {
                            "content": "get my right-related users",
                            "type": "text/plain"
                        },
                        "url": {
                            "path": [
                                "api",
                                "users",
                                "my-right-relations"
                            ],
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "query": [
                                {
                                    "disabled": false,
                                    "key": "relationship",
                                    "value": "CLIENT"
                                },
                                {
                                    "disabled": false,
                                    "key": "withAddress",
                                    "value": "false",
                                    "description": "whether to return user's addresses too"
                                }
                            ],
                            "variable": []
                        },
                        "header": [
                            {
                                "key": "Accept",
                                "value": "application/json"
                            }
                        ],
                        "method": "GET",
                        "auth": null
                    },
                    "response": [
                        {
                            "id": "dc026585-aa37-4dcf-ba3e-1397142485a9",
                            "name": "OK",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "api",
                                        "users",
                                        "my-right-relations"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [
                                        {
                                            "key": "relationship",
                                            "value": "CLIENT"
                                        },
                                        {
                                            "key": "withAddress",
                                            "value": "false"
                                        }
                                    ],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "description": {
                                            "content": "Added as a part of security scheme: apikey",
                                            "type": "text/plain"
                                        },
                                        "key": "X-Auth-Token",
                                        "value": "<API Key>"
                                    }
                                ],
                                "method": "GET",
                                "body": {}
                            },
                            "status": "OK",
                            "code": 200,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"prescriptions\": [\n    {\n      \"id\": 1,\n      \"uname\": \"exampleUser\",\n      \"userType\": \"VOR\",\n      \"firstname\": \"Example\",\n      \"lastname\": \"User\",\n      \"email\": \"exampleUser@email.com\",\n      \"suffix\": \"DVM\"\n    },\n    {\n      \"id\": 1,\n      \"uname\": \"exampleUser\",\n      \"userType\": \"VOR\",\n      \"firstname\": \"Example\",\n      \"lastname\": \"User\",\n      \"email\": \"exampleUser@email.com\",\n      \"suffix\": \"DVM\"\n    }\n  ]\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "cdb977a1-904e-4c30-bc1b-6d74a4fcd731",
                            "name": "The server can not understand the request due to invalid syntax.",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "api",
                                        "users",
                                        "my-right-relations"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [
                                        {
                                            "key": "relationship",
                                            "value": "CLIENT"
                                        },
                                        {
                                            "key": "withAddress",
                                            "value": "false"
                                        }
                                    ],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "description": {
                                            "content": "Added as a part of security scheme: apikey",
                                            "type": "text/plain"
                                        },
                                        "key": "X-Auth-Token",
                                        "value": "<API Key>"
                                    }
                                ],
                                "method": "GET",
                                "body": {}
                            },
                            "status": "Bad Request",
                            "code": 400,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"title\": \"incorrect username or password\",\n  \"status\": 404,\n  \"errorType\": \"/errors/incorrect-user-pass\",\n  \"detail\": \"Authentication failed due to incorrect username or password.\",\n  \"instance\": \"/login/log/abc123\"\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "a687aba7-359b-4017-bac3-e59db4fbc728",
                            "name": "Authorization required",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "api",
                                        "users",
                                        "my-right-relations"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [
                                        {
                                            "key": "relationship",
                                            "value": "CLIENT"
                                        },
                                        {
                                            "key": "withAddress",
                                            "value": "false"
                                        }
                                    ],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "description": {
                                            "content": "Added as a part of security scheme: apikey",
                                            "type": "text/plain"
                                        },
                                        "key": "X-Auth-Token",
                                        "value": "<API Key>"
                                    }
                                ],
                                "method": "GET",
                                "body": {}
                            },
                            "status": "Forbidden",
                            "code": 403,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "text/plain"
                                }
                            ],
                            "body": "",
                            "cookie": [],
                            "_postman_previewlanguage": "text"
                        }
                    ],
                    "event": []
                },
                {
                    "id": "95fe30fe-2595-4996-876e-96ac9ee6cfee",
                    "name": "add a User with relationship",
                    "request": {
                        "name": "add a User with relationship",
                        "description": {
                            "content": "This endpoint adds a User and a relationship of the type specified by `name` to the current User, who must be a VOR. Defaults to CLIENT relationship.",
                            "type": "text/plain"
                        },
                        "url": {
                            "path": [
                                "api",
                                "users",
                                "my-right-relations"
                            ],
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "query": [
                                {
                                    "disabled": false,
                                    "key": "relationship",
                                    "value": "CLIENT",
                                    "description": "(Required) "
                                },
                                {
                                    "disabled": false,
                                    "key": "usertype",
                                    "value": "VOR",
                                    "description": "(Required) "
                                }
                            ],
                            "variable": []
                        },
                        "header": [
                            {
                                "key": "Content-Type",
                                "value": "application/json"
                            },
                            {
                                "key": "Accept",
                                "value": "application/json"
                            }
                        ],
                        "method": "POST",
                        "auth": null,
                        "body": {
                            "mode": "raw",
                            "raw": "{\n  \"id\": 1,\n  \"uname\": \"exampleUser\",\n  \"userType\": \"VOR\",\n  \"firstname\": \"Example\",\n  \"lastname\": \"User\",\n  \"email\": \"exampleUser@email.com\",\n  \"suffix\": \"DVM\"\n}",
                            "options": {
                                "raw": {
                                    "language": "json"
                                }
                            }
                        }
                    },
                    "response": [
                        {
                            "id": "1071cdcf-1135-4f51-97c7-61f79d13d122",
                            "name": "related User",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "api",
                                        "users",
                                        "my-right-relations"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [
                                        {
                                            "key": "relationship",
                                            "value": "CLIENT"
                                        },
                                        {
                                            "key": "usertype",
                                            "value": "VOR"
                                        }
                                    ],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "description": {
                                            "content": "Added as a part of security scheme: apikey",
                                            "type": "text/plain"
                                        },
                                        "key": "X-Auth-Token",
                                        "value": "<API Key>"
                                    }
                                ],
                                "method": "POST",
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n  \"id\": 1,\n  \"uname\": \"exampleUser\",\n  \"userType\": \"VOR\",\n  \"firstname\": \"Example\",\n  \"lastname\": \"User\",\n  \"email\": \"exampleUser@email.com\",\n  \"suffix\": \"DVM\"\n}",
                                    "options": {
                                        "raw": {
                                            "language": "json"
                                        }
                                    }
                                }
                            },
                            "status": "OK",
                            "code": 200,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"user\": {\n    \"id\": 1,\n    \"uname\": \"exampleUser\",\n    \"userType\": \"VOR\",\n    \"firstname\": \"Example\",\n    \"lastname\": \"User\",\n    \"email\": \"exampleUser@email.com\",\n    \"suffix\": \"DVM\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "6f4a82f3-378b-4340-b64a-0650286b4e50",
                            "name": "The server can not understand the request due to invalid syntax.",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "api",
                                        "users",
                                        "my-right-relations"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [
                                        {
                                            "key": "relationship",
                                            "value": "CLIENT"
                                        },
                                        {
                                            "key": "usertype",
                                            "value": "VOR"
                                        }
                                    ],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "description": {
                                            "content": "Added as a part of security scheme: apikey",
                                            "type": "text/plain"
                                        },
                                        "key": "X-Auth-Token",
                                        "value": "<API Key>"
                                    }
                                ],
                                "method": "POST",
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n  \"id\": 1,\n  \"uname\": \"exampleUser\",\n  \"userType\": \"VOR\",\n  \"firstname\": \"Example\",\n  \"lastname\": \"User\",\n  \"email\": \"exampleUser@email.com\",\n  \"suffix\": \"DVM\"\n}",
                                    "options": {
                                        "raw": {
                                            "language": "json"
                                        }
                                    }
                                }
                            },
                            "status": "Bad Request",
                            "code": 400,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"title\": \"incorrect username or password\",\n  \"status\": 404,\n  \"errorType\": \"/errors/incorrect-user-pass\",\n  \"detail\": \"Authentication failed due to incorrect username or password.\",\n  \"instance\": \"/login/log/abc123\"\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "6fcd99ec-f39c-446d-91e7-03401a0b4342",
                            "name": "Authorization required",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "api",
                                        "users",
                                        "my-right-relations"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [
                                        {
                                            "key": "relationship",
                                            "value": "CLIENT"
                                        },
                                        {
                                            "key": "usertype",
                                            "value": "VOR"
                                        }
                                    ],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "description": {
                                            "content": "Added as a part of security scheme: apikey",
                                            "type": "text/plain"
                                        },
                                        "key": "X-Auth-Token",
                                        "value": "<API Key>"
                                    }
                                ],
                                "method": "POST",
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n  \"id\": 1,\n  \"uname\": \"exampleUser\",\n  \"userType\": \"VOR\",\n  \"firstname\": \"Example\",\n  \"lastname\": \"User\",\n  \"email\": \"exampleUser@email.com\",\n  \"suffix\": \"DVM\"\n}",
                                    "options": {
                                        "raw": {
                                            "language": "json"
                                        }
                                    }
                                }
                            },
                            "status": "Forbidden",
                            "code": 403,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "text/plain"
                                }
                            ],
                            "body": "",
                            "cookie": [],
                            "_postman_previewlanguage": "text"
                        }
                    ],
                    "event": [],
                    "protocolProfileBehavior": {
                        "disableBodyPruning": true
                    }
                },
                {
                    "id": "b203dee6-e5e9-4e71-9b99-311604d8d6fb",
                    "name": "get my prescriptions",
                    "request": {
                        "name": "get my prescriptions",
                        "description": {
                            "content": "get prescriptions prescribed by the current User.",
                            "type": "text/plain"
                        },
                        "url": {
                            "path": [
                                "api",
                                "protocols",
                                "prescriptions",
                                "by"
                            ],
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "query": [],
                            "variable": []
                        },
                        "header": [
                            {
                                "key": "Accept",
                                "value": "application/json"
                            }
                        ],
                        "method": "GET",
                        "auth": null
                    },
                    "response": [
                        {
                            "id": "ee9de231-0b89-41f4-b0c4-917a2c6b88ce",
                            "name": "OK",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "api",
                                        "protocols",
                                        "prescriptions",
                                        "by"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "description": {
                                            "content": "Added as a part of security scheme: apikey",
                                            "type": "text/plain"
                                        },
                                        "key": "X-Auth-Token",
                                        "value": "<API Key>"
                                    }
                                ],
                                "method": "GET",
                                "body": {}
                            },
                            "status": "OK",
                            "code": 200,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"prescriptions\": [\n    {\n      \"vorId\": 1,\n      \"morId\": 2,\n      \"protocol\": {\n        \"ownerId\": 1,\n        \"name\": \"wip\",\n        \"status\": \"PRESCRIBED\",\n        \"instructions\": {\n          \"considerations\": \"<p>This is just an example, not a real protocol.</p>\",\n          \"restrictions\": \"<p>Not for use on real animals.</p>\",\n          \"dothis\": \"<h3>Examinations to perform</h3>\",\n          \"recordthis\": \"<p>record every step in your notebook.</p>\",\n          \"success\": \"<p>All problems are gone</p>\",\n          \"failure\": \"<p>One or more problems remain</p>\",\n          \"references\": \"<a href=\\\"https://en.wikipedia.org/wiki/Rickrolling\\\">Wikipedia</a>\"\n        },\n        \"id\": 12345,\n        \"shortname\": \"wip\",\n        \"created\": \"2020-01-10T10:30:37Z\",\n        \"edited\": \"2020-02-10T10:30:37Z\",\n        \"vetNote\": \"consider prescribing protocol x instead\",\n        \"wtMeatHrs\": 22,\n        \"wtMilkHrs\": 5,\n        \"shareAll\": true,\n        \"shareClonable\": true,\n        \"caseDefinition\": {\n          \"requireId\": false,\n          \"requireMor\": false,\n          \"contraindications\": \"\",\n          \"medical\": \"if fever is present, consider Protocol 12345 instead.\",\n          \"economic\": \"\",\n          \"note\": \"\"\n        },\n        \"treatments\": [\n          {\n            \"product\": \"MiracleMed\",\n            \"route\": \"wip\",\n            \"dosage\": {\n              \"doseId\": 77582340\n            },\n            \"sequenceFunction\": {\n              \"_type\": \"models.SeqSingleDose\"\n            },\n            \"sizeFunction\": {\n              \"dose\": {\n                \"quantity\": {\n                  \"dimension\": \"Volume\",\n                  \"value\": 3,\n                  \"symbol\": \"ml\"\n                }\n              },\n              \"_type\": \"models.FixedDoseFunction\"\n            },\n            \"id\": \"B-123\",\n            \"ownerId\": 0,\n            \"description\": \"3.0 ml per kg repeat\",\n            \"eligibilities\": [\n              {\n                \"id\": 1,\n                \"name\": \"Beef Cattle\",\n                \"fdaSpecies\": [\n                  \"emus\",\n                  \"turkeys\"\n                ]\n              },\n              {\n                \"id\": 1,\n                \"name\": \"Beef Cattle\",\n                \"fdaSpecies\": [\n                  \"sheep\",\n                  \"goats\"\n                ]\n              }\n            ],\n            \"_dose\": \"3.0 ml per kg repeat in 6 hours and again in 24 hours\",\n            \"wtMeatHrs\": 92610709,\n            \"wtMilkHrs\": -24143105,\n            \"nada\": \"wip\",\n            \"tags\": [\n              {\n                \"id\": 8,\n                \"color\": \"#516cc6\",\n                \"name\": \"\",\n                \"fixes\": [\n                  {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                  },\n                  {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                  }\n                ]\n              },\n              {\n                \"id\": 8,\n                \"color\": \"#516cc6\",\n                \"name\": \"adipisicing ul\",\n                \"fixes\": [\n                  {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                  },\n                  {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                  }\n                ]\n              }\n            ],\n            \"note\": \"<p>a free-form note</p>\",\n            \"amduca\": \"UNIDENTIFIED\"\n          },\n          {\n            \"product\": \"MiracleMed\",\n            \"route\": \"wip\",\n            \"dosage\": {\n              \"doseId\": -49733008\n            },\n            \"sequenceFunction\": {\n              \"_type\": \"models.SeqSingleDose\"\n            },\n            \"sizeFunction\": {\n              \"dose\": {\n                \"quantity\": {\n                  \"dimension\": \"Volume\",\n                  \"value\": 3,\n                  \"symbol\": \"ml\"\n                }\n              },\n              \"_type\": \"models.FixedDoseFunction\"\n            },\n            \"id\": \"B-123\",\n            \"ownerId\": 0,\n            \"description\": \"3.0 ml per kg repeat\",\n            \"eligibilities\": [\n              {\n                \"id\": 1,\n                \"name\": \"Beef Cattle\",\n                \"fdaSpecies\": [\n                  \"catfish\",\n                  \"dogs\"\n                ]\n              },\n              {\n                \"id\": 1,\n                \"name\": \"Beef Cattle\",\n                \"fdaSpecies\": [\n                  \"dairy_cattle\",\n                  \"gamebirds\"\n                ]\n              }\n            ],\n            \"_dose\": \"3.0 ml per kg repeat in 6 hours and again in 24 hours\",\n            \"wtMeatHrs\": 11407928,\n            \"wtMilkHrs\": -61492061,\n            \"nada\": \"wip\",\n            \"tags\": [\n              {\n                \"id\": 8,\n                \"color\": \"#516cc6\",\n                \"name\": \"anim\",\n                \"fixes\": [\n                  {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                  },\n                  {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                  }\n                ]\n              },\n              {\n                \"id\": 8,\n                \"color\": \"#516cc6\",\n                \"name\": \"es\",\n                \"fixes\": [\n                  {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                  },\n                  {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                  }\n                ]\n              }\n            ],\n            \"note\": \"<p>a free-form note</p>\",\n            \"amduca\": \"OFFLABEL\"\n          }\n        ],\n        \"tags\": [\n          {\n            \"id\": 8,\n            \"color\": \"#516cc6\",\n            \"name\": \"sit \",\n            \"fixes\": [\n              {\n                \"_type\": {\n                  \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"detail\": {\n                  \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"message\": {\n                  \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"title\": {\n                  \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                }\n              },\n              {\n                \"_type\": {\n                  \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"detail\": {\n                  \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"message\": {\n                  \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"title\": {\n                  \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                }\n              }\n            ]\n          },\n          {\n            \"id\": 8,\n            \"color\": \"#516cc6\",\n            \"name\": \"u\",\n            \"fixes\": [\n              {\n                \"_type\": {\n                  \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"detail\": {\n                  \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"message\": {\n                  \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"title\": {\n                  \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                }\n              },\n              {\n                \"_type\": {\n                  \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"detail\": {\n                  \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"message\": {\n                  \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"title\": {\n                  \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                }\n              }\n            ]\n          }\n        ],\n        \"diagnoses\": [\n          {\n            \"id\": 8,\n            \"name\": \"Pain/inflammation (musculoskeletal), treatment\"\n          },\n          {\n            \"id\": 8,\n            \"name\": \"Pain/inflammation (musculoskeletal), treatment\"\n          }\n        ],\n        \"eligibilities\": [\n          {\n            \"id\": 1,\n            \"name\": \"Beef Cattle\",\n            \"fdaSpecies\": [\n              \"horses\",\n              \"goats\"\n            ]\n          },\n          {\n            \"id\": 1,\n            \"name\": \"Beef Cattle\",\n            \"fdaSpecies\": [\n              \"dairy_cattle\",\n              \"bison\"\n            ]\n          }\n        ],\n        \"promises\": [\n          {\n            \"_type\": \"models.IdPromise\",\n            \"name\": \"ID promise\",\n            \"descrip\": \"You must give ID for each case enrolled\",\n            \"query\": \"What is the animal's name or number?\",\n            \"when\": \"PT0H\",\n            \"id\": 2345\n          },\n          {\n            \"_type\": \"models.IdPromise\",\n            \"name\": \"ID promise\",\n            \"descrip\": \"You must give ID for each case enrolled\",\n            \"query\": \"What is the animal's name or number?\",\n            \"when\": \"PT0H\",\n            \"id\": 2345\n          }\n        ],\n        \"metadata\": [\n          {\n            \"key\": \"popularity\",\n            \"value\": \"good 1.2\"\n          },\n          {\n            \"key\": \"popularity\",\n            \"value\": \"good 1.2\"\n          }\n        ]\n      },\n      \"status\": \"PRESCRIBED\",\n      \"rxId\": \"gG3pBCR1GCMKm89c\",\n      \"refills\": 0,\n      \"expiration\": \"2021-01-10T10:30:37Z\",\n      \"created\": \"2021-08-10T10:30:37Z\",\n      \"metadata\": [\n        {\n          \"key\": \"popularity\",\n          \"value\": \"good 1.2\"\n        },\n        {\n          \"key\": \"popularity\",\n          \"value\": \"good 1.2\"\n        }\n      ]\n    },\n    {\n      \"vorId\": 1,\n      \"morId\": 2,\n      \"protocol\": {\n        \"ownerId\": 1,\n        \"name\": \"wip\",\n        \"status\": \"PRESCRIBED\",\n        \"instructions\": {\n          \"considerations\": \"<p>This is just an example, not a real protocol.</p>\",\n          \"restrictions\": \"<p>Not for use on real animals.</p>\",\n          \"dothis\": \"<h3>Examinations to perform</h3>\",\n          \"recordthis\": \"<p>record every step in your notebook.</p>\",\n          \"success\": \"<p>All problems are gone</p>\",\n          \"failure\": \"<p>One or more problems remain</p>\",\n          \"references\": \"<a href=\\\"https://en.wikipedia.org/wiki/Rickrolling\\\">Wikipedia</a>\"\n        },\n        \"id\": 12345,\n        \"shortname\": \"wip\",\n        \"created\": \"2020-01-10T10:30:37Z\",\n        \"edited\": \"2020-02-10T10:30:37Z\",\n        \"vetNote\": \"consider prescribing protocol x instead\",\n        \"wtMeatHrs\": 22,\n        \"wtMilkHrs\": 5,\n        \"shareAll\": true,\n        \"shareClonable\": true,\n        \"caseDefinition\": {\n          \"requireId\": false,\n          \"requireMor\": false,\n          \"contraindications\": \"\",\n          \"medical\": \"if fever is present, consider Protocol 12345 instead.\",\n          \"economic\": \"\",\n          \"note\": \"\"\n        },\n        \"treatments\": [\n          {\n            \"product\": \"MiracleMed\",\n            \"route\": \"wip\",\n            \"dosage\": {\n              \"doseId\": -53333366\n            },\n            \"sequenceFunction\": {\n              \"_type\": \"models.SeqSingleDose\"\n            },\n            \"sizeFunction\": {\n              \"dose\": {\n                \"quantity\": {\n                  \"dimension\": \"Volume\",\n                  \"value\": 3,\n                  \"symbol\": \"ml\"\n                }\n              },\n              \"_type\": \"models.FixedDoseFunction\"\n            },\n            \"id\": \"B-123\",\n            \"ownerId\": 0,\n            \"description\": \"3.0 ml per kg repeat\",\n            \"eligibilities\": [\n              {\n                \"id\": 1,\n                \"name\": \"Beef Cattle\",\n                \"fdaSpecies\": [\n                  \"beef_cattle\",\n                  \"unidentified\"\n                ]\n              },\n              {\n                \"id\": 1,\n                \"name\": \"Beef Cattle\",\n                \"fdaSpecies\": [\n                  \"salmon\",\n                  \"cats\"\n                ]\n              }\n            ],\n            \"_dose\": \"3.0 ml per kg repeat in 6 hours and again in 24 hours\",\n            \"wtMeatHrs\": 52965362,\n            \"wtMilkHrs\": -60665076,\n            \"nada\": \"wip\",\n            \"tags\": [\n              {\n                \"id\": 8,\n                \"color\": \"#516cc6\",\n                \"name\": \"in irure ani\",\n                \"fixes\": [\n                  {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                  },\n                  {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                  }\n                ]\n              },\n              {\n                \"id\": 8,\n                \"color\": \"#516cc6\",\n                \"name\": \"veniam occa\",\n                \"fixes\": [\n                  {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                  },\n                  {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                  }\n                ]\n              }\n            ],\n            \"note\": \"<p>a free-form note</p>\",\n            \"amduca\": \"OFFLABEL\"\n          },\n          {\n            \"product\": \"MiracleMed\",\n            \"route\": \"wip\",\n            \"dosage\": {\n              \"doseId\": -50899112\n            },\n            \"sequenceFunction\": {\n              \"_type\": \"models.SeqSingleDose\"\n            },\n            \"sizeFunction\": {\n              \"dose\": {\n                \"quantity\": {\n                  \"dimension\": \"Volume\",\n                  \"value\": 3,\n                  \"symbol\": \"ml\"\n                }\n              },\n              \"_type\": \"models.FixedDoseFunction\"\n            },\n            \"id\": \"B-123\",\n            \"ownerId\": 0,\n            \"description\": \"3.0 ml per kg repeat\",\n            \"eligibilities\": [\n              {\n                \"id\": 1,\n                \"name\": \"Beef Cattle\",\n                \"fdaSpecies\": [\n                  \"dairy_cattle\",\n                  \"horses\"\n                ]\n              },\n              {\n                \"id\": 1,\n                \"name\": \"Beef Cattle\",\n                \"fdaSpecies\": [\n                  \"turkeys\",\n                  \"other\"\n                ]\n              }\n            ],\n            \"_dose\": \"3.0 ml per kg repeat in 6 hours and again in 24 hours\",\n            \"wtMeatHrs\": -92066580,\n            \"wtMilkHrs\": 35722249,\n            \"nada\": \"wip\",\n            \"tags\": [\n              {\n                \"id\": 8,\n                \"color\": \"#516cc6\",\n                \"name\": \"mol\",\n                \"fixes\": [\n                  {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                  },\n                  {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                  }\n                ]\n              },\n              {\n                \"id\": 8,\n                \"color\": \"#516cc6\",\n                \"name\": \"do l\",\n                \"fixes\": [\n                  {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                  },\n                  {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                  }\n                ]\n              }\n            ],\n            \"note\": \"<p>a free-form note</p>\",\n            \"amduca\": \"UNIDENTIFIED\"\n          }\n        ],\n        \"tags\": [\n          {\n            \"id\": 8,\n            \"color\": \"#516cc6\",\n            \"name\": \"ex cillum sin\",\n            \"fixes\": [\n              {\n                \"_type\": {\n                  \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"detail\": {\n                  \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"message\": {\n                  \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"title\": {\n                  \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                }\n              },\n              {\n                \"_type\": {\n                  \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"detail\": {\n                  \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"message\": {\n                  \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"title\": {\n                  \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                }\n              }\n            ]\n          },\n          {\n            \"id\": 8,\n            \"color\": \"#516cc6\",\n            \"name\": \"aliquip eiusm\",\n            \"fixes\": [\n              {\n                \"_type\": {\n                  \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"detail\": {\n                  \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"message\": {\n                  \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"title\": {\n                  \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                }\n              },\n              {\n                \"_type\": {\n                  \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"detail\": {\n                  \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"message\": {\n                  \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"title\": {\n                  \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                }\n              }\n            ]\n          }\n        ],\n        \"diagnoses\": [\n          {\n            \"id\": 8,\n            \"name\": \"Pain/inflammation (musculoskeletal), treatment\"\n          },\n          {\n            \"id\": 8,\n            \"name\": \"Pain/inflammation (musculoskeletal), treatment\"\n          }\n        ],\n        \"eligibilities\": [\n          {\n            \"id\": 1,\n            \"name\": \"Beef Cattle\",\n            \"fdaSpecies\": [\n              \"fish\",\n              \"dogs\"\n            ]\n          },\n          {\n            \"id\": 1,\n            \"name\": \"Beef Cattle\",\n            \"fdaSpecies\": [\n              \"goats\",\n              \"goats\"\n            ]\n          }\n        ],\n        \"promises\": [\n          {\n            \"_type\": \"models.IdPromise\",\n            \"name\": \"ID promise\",\n            \"descrip\": \"You must give ID for each case enrolled\",\n            \"query\": \"What is the animal's name or number?\",\n            \"when\": \"PT0H\",\n            \"id\": 2345\n          },\n          {\n            \"_type\": \"models.IdPromise\",\n            \"name\": \"ID promise\",\n            \"descrip\": \"You must give ID for each case enrolled\",\n            \"query\": \"What is the animal's name or number?\",\n            \"when\": \"PT0H\",\n            \"id\": 2345\n          }\n        ],\n        \"metadata\": [\n          {\n            \"key\": \"popularity\",\n            \"value\": \"good 1.2\"\n          },\n          {\n            \"key\": \"popularity\",\n            \"value\": \"good 1.2\"\n          }\n        ]\n      },\n      \"status\": \"PRESCRIBED\",\n      \"rxId\": \"gG3pBCR1GCMKm89c\",\n      \"refills\": 0,\n      \"expiration\": \"2021-01-10T10:30:37Z\",\n      \"created\": \"2021-08-10T10:30:37Z\",\n      \"metadata\": [\n        {\n          \"key\": \"popularity\",\n          \"value\": \"good 1.2\"\n        },\n        {\n          \"key\": \"popularity\",\n          \"value\": \"good 1.2\"\n        }\n      ]\n    }\n  ]\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "f1da0c7d-e2d7-47ea-9c5a-8e5ef044979f",
                            "name": "The server can not understand the request due to invalid syntax.",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "api",
                                        "protocols",
                                        "prescriptions",
                                        "by"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "description": {
                                            "content": "Added as a part of security scheme: apikey",
                                            "type": "text/plain"
                                        },
                                        "key": "X-Auth-Token",
                                        "value": "<API Key>"
                                    }
                                ],
                                "method": "GET",
                                "body": {}
                            },
                            "status": "Bad Request",
                            "code": 400,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"title\": \"incorrect username or password\",\n  \"status\": 404,\n  \"errorType\": \"/errors/incorrect-user-pass\",\n  \"detail\": \"Authentication failed due to incorrect username or password.\",\n  \"instance\": \"/login/log/abc123\"\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "ce9f04fc-8496-4c33-9ada-7c1fd1e725c2",
                            "name": "Authorization required",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "api",
                                        "protocols",
                                        "prescriptions",
                                        "by"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "description": {
                                            "content": "Added as a part of security scheme: apikey",
                                            "type": "text/plain"
                                        },
                                        "key": "X-Auth-Token",
                                        "value": "<API Key>"
                                    }
                                ],
                                "method": "GET",
                                "body": {}
                            },
                            "status": "Forbidden",
                            "code": 403,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "text/plain"
                                }
                            ],
                            "body": "",
                            "cookie": [],
                            "_postman_previewlanguage": "text"
                        }
                    ],
                    "event": []
                },
                {
                    "id": "91951a88-6f19-47f3-8cca-1a5e00340d66",
                    "name": "get my prescriptions",
                    "request": {
                        "name": "get my prescriptions",
                        "description": {
                            "content": "get prescriptions prescribed to the current User.",
                            "type": "text/plain"
                        },
                        "url": {
                            "path": [
                                "api",
                                "protocols",
                                "prescriptions",
                                "to"
                            ],
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "query": [],
                            "variable": []
                        },
                        "header": [
                            {
                                "key": "Accept",
                                "value": "application/json"
                            }
                        ],
                        "method": "GET",
                        "auth": null
                    },
                    "response": [
                        {
                            "id": "12777f57-2a91-45e9-b998-d9d08f1e2115",
                            "name": "OK",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "api",
                                        "protocols",
                                        "prescriptions",
                                        "to"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "description": {
                                            "content": "Added as a part of security scheme: apikey",
                                            "type": "text/plain"
                                        },
                                        "key": "X-Auth-Token",
                                        "value": "<API Key>"
                                    }
                                ],
                                "method": "GET",
                                "body": {}
                            },
                            "status": "OK",
                            "code": 200,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"prescriptions\": [\n    {\n      \"vorId\": 1,\n      \"morId\": 2,\n      \"protocol\": {\n        \"ownerId\": 1,\n        \"name\": \"wip\",\n        \"status\": \"PRESCRIBED\",\n        \"instructions\": {\n          \"considerations\": \"<p>This is just an example, not a real protocol.</p>\",\n          \"restrictions\": \"<p>Not for use on real animals.</p>\",\n          \"dothis\": \"<h3>Examinations to perform</h3>\",\n          \"recordthis\": \"<p>record every step in your notebook.</p>\",\n          \"success\": \"<p>All problems are gone</p>\",\n          \"failure\": \"<p>One or more problems remain</p>\",\n          \"references\": \"<a href=\\\"https://en.wikipedia.org/wiki/Rickrolling\\\">Wikipedia</a>\"\n        },\n        \"id\": 12345,\n        \"shortname\": \"wip\",\n        \"created\": \"2020-01-10T10:30:37Z\",\n        \"edited\": \"2020-02-10T10:30:37Z\",\n        \"vetNote\": \"consider prescribing protocol x instead\",\n        \"wtMeatHrs\": 22,\n        \"wtMilkHrs\": 5,\n        \"shareAll\": true,\n        \"shareClonable\": true,\n        \"caseDefinition\": {\n          \"requireId\": false,\n          \"requireMor\": false,\n          \"contraindications\": \"\",\n          \"medical\": \"if fever is present, consider Protocol 12345 instead.\",\n          \"economic\": \"\",\n          \"note\": \"\"\n        },\n        \"treatments\": [\n          {\n            \"product\": \"MiracleMed\",\n            \"route\": \"wip\",\n            \"dosage\": {\n              \"doseId\": 14078524\n            },\n            \"sequenceFunction\": {\n              \"_type\": \"models.SeqSingleDose\"\n            },\n            \"sizeFunction\": {\n              \"dose\": {\n                \"quantity\": {\n                  \"dimension\": \"Volume\",\n                  \"value\": 3,\n                  \"symbol\": \"ml\"\n                }\n              },\n              \"_type\": \"models.FixedDoseFunction\"\n            },\n            \"id\": \"B-123\",\n            \"ownerId\": 0,\n            \"description\": \"3.0 ml per kg repeat\",\n            \"eligibilities\": [\n              {\n                \"id\": 1,\n                \"name\": \"Beef Cattle\",\n                \"fdaSpecies\": [\n                  \"veal\",\n                  \"catfish\"\n                ]\n              },\n              {\n                \"id\": 1,\n                \"name\": \"Beef Cattle\",\n                \"fdaSpecies\": [\n                  \"unidentified\",\n                  \"sheep\"\n                ]\n              }\n            ],\n            \"_dose\": \"3.0 ml per kg repeat in 6 hours and again in 24 hours\",\n            \"wtMeatHrs\": 73901599,\n            \"wtMilkHrs\": 84375270,\n            \"nada\": \"wip\",\n            \"tags\": [\n              {\n                \"id\": 8,\n                \"color\": \"#516cc6\",\n                \"name\": \"minim\",\n                \"fixes\": [\n                  {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                  },\n                  {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                  }\n                ]\n              },\n              {\n                \"id\": 8,\n                \"color\": \"#516cc6\",\n                \"name\": \"par\",\n                \"fixes\": [\n                  {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                  },\n                  {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                  }\n                ]\n              }\n            ],\n            \"note\": \"<p>a free-form note</p>\",\n            \"amduca\": \"UNIDENTIFIED\"\n          },\n          {\n            \"product\": \"MiracleMed\",\n            \"route\": \"wip\",\n            \"dosage\": {\n              \"doseId\": -29716785\n            },\n            \"sequenceFunction\": {\n              \"_type\": \"models.SeqSingleDose\"\n            },\n            \"sizeFunction\": {\n              \"dose\": {\n                \"quantity\": {\n                  \"dimension\": \"Volume\",\n                  \"value\": 3,\n                  \"symbol\": \"ml\"\n                }\n              },\n              \"_type\": \"models.FixedDoseFunction\"\n            },\n            \"id\": \"B-123\",\n            \"ownerId\": 0,\n            \"description\": \"3.0 ml per kg repeat\",\n            \"eligibilities\": [\n              {\n                \"id\": 1,\n                \"name\": \"Beef Cattle\",\n                \"fdaSpecies\": [\n                  \"turkeys\",\n                  \"dairy_cattle\"\n                ]\n              },\n              {\n                \"id\": 1,\n                \"name\": \"Beef Cattle\",\n                \"fdaSpecies\": [\n                  \"unidentified\",\n                  \"swine\"\n                ]\n              }\n            ],\n            \"_dose\": \"3.0 ml per kg repeat in 6 hours and again in 24 hours\",\n            \"wtMeatHrs\": 85103226,\n            \"wtMilkHrs\": 27860362,\n            \"nada\": \"wip\",\n            \"tags\": [\n              {\n                \"id\": 8,\n                \"color\": \"#516cc6\",\n                \"name\": \"nostrud exer\",\n                \"fixes\": [\n                  {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                  },\n                  {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                  }\n                ]\n              },\n              {\n                \"id\": 8,\n                \"color\": \"#516cc6\",\n                \"name\": \"amet d\",\n                \"fixes\": [\n                  {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                  },\n                  {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                  }\n                ]\n              }\n            ],\n            \"note\": \"<p>a free-form note</p>\",\n            \"amduca\": \"OFFLABEL\"\n          }\n        ],\n        \"tags\": [\n          {\n            \"id\": 8,\n            \"color\": \"#516cc6\",\n            \"name\": \"nulla aliqua n\",\n            \"fixes\": [\n              {\n                \"_type\": {\n                  \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"detail\": {\n                  \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"message\": {\n                  \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"title\": {\n                  \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                }\n              },\n              {\n                \"_type\": {\n                  \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"detail\": {\n                  \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"message\": {\n                  \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"title\": {\n                  \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                }\n              }\n            ]\n          },\n          {\n            \"id\": 8,\n            \"color\": \"#516cc6\",\n            \"name\": \"\",\n            \"fixes\": [\n              {\n                \"_type\": {\n                  \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"detail\": {\n                  \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"message\": {\n                  \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"title\": {\n                  \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                }\n              },\n              {\n                \"_type\": {\n                  \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"detail\": {\n                  \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"message\": {\n                  \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"title\": {\n                  \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                }\n              }\n            ]\n          }\n        ],\n        \"diagnoses\": [\n          {\n            \"id\": 8,\n            \"name\": \"Pain/inflammation (musculoskeletal), treatment\"\n          },\n          {\n            \"id\": 8,\n            \"name\": \"Pain/inflammation (musculoskeletal), treatment\"\n          }\n        ],\n        \"eligibilities\": [\n          {\n            \"id\": 1,\n            \"name\": \"Beef Cattle\",\n            \"fdaSpecies\": [\n              \"bison\",\n              \"horses\"\n            ]\n          },\n          {\n            \"id\": 1,\n            \"name\": \"Beef Cattle\",\n            \"fdaSpecies\": [\n              \"swine\",\n              \"fish\"\n            ]\n          }\n        ],\n        \"promises\": [\n          {\n            \"_type\": \"models.IdPromise\",\n            \"name\": \"ID promise\",\n            \"descrip\": \"You must give ID for each case enrolled\",\n            \"query\": \"What is the animal's name or number?\",\n            \"when\": \"PT0H\",\n            \"id\": 2345\n          },\n          {\n            \"_type\": \"models.IdPromise\",\n            \"name\": \"ID promise\",\n            \"descrip\": \"You must give ID for each case enrolled\",\n            \"query\": \"What is the animal's name or number?\",\n            \"when\": \"PT0H\",\n            \"id\": 2345\n          }\n        ],\n        \"metadata\": [\n          {\n            \"key\": \"popularity\",\n            \"value\": \"good 1.2\"\n          },\n          {\n            \"key\": \"popularity\",\n            \"value\": \"good 1.2\"\n          }\n        ]\n      },\n      \"status\": \"PRESCRIBED\",\n      \"rxId\": \"gG3pBCR1GCMKm89c\",\n      \"refills\": 0,\n      \"expiration\": \"2021-01-10T10:30:37Z\",\n      \"created\": \"2021-08-10T10:30:37Z\",\n      \"metadata\": [\n        {\n          \"key\": \"popularity\",\n          \"value\": \"good 1.2\"\n        },\n        {\n          \"key\": \"popularity\",\n          \"value\": \"good 1.2\"\n        }\n      ]\n    },\n    {\n      \"vorId\": 1,\n      \"morId\": 2,\n      \"protocol\": {\n        \"ownerId\": 1,\n        \"name\": \"wip\",\n        \"status\": \"PRESCRIBED\",\n        \"instructions\": {\n          \"considerations\": \"<p>This is just an example, not a real protocol.</p>\",\n          \"restrictions\": \"<p>Not for use on real animals.</p>\",\n          \"dothis\": \"<h3>Examinations to perform</h3>\",\n          \"recordthis\": \"<p>record every step in your notebook.</p>\",\n          \"success\": \"<p>All problems are gone</p>\",\n          \"failure\": \"<p>One or more problems remain</p>\",\n          \"references\": \"<a href=\\\"https://en.wikipedia.org/wiki/Rickrolling\\\">Wikipedia</a>\"\n        },\n        \"id\": 12345,\n        \"shortname\": \"wip\",\n        \"created\": \"2020-01-10T10:30:37Z\",\n        \"edited\": \"2020-02-10T10:30:37Z\",\n        \"vetNote\": \"consider prescribing protocol x instead\",\n        \"wtMeatHrs\": 22,\n        \"wtMilkHrs\": 5,\n        \"shareAll\": true,\n        \"shareClonable\": true,\n        \"caseDefinition\": {\n          \"requireId\": false,\n          \"requireMor\": false,\n          \"contraindications\": \"\",\n          \"medical\": \"if fever is present, consider Protocol 12345 instead.\",\n          \"economic\": \"\",\n          \"note\": \"\"\n        },\n        \"treatments\": [\n          {\n            \"product\": \"MiracleMed\",\n            \"route\": \"wip\",\n            \"dosage\": {\n              \"doseId\": -60202655\n            },\n            \"sequenceFunction\": {\n              \"_type\": \"models.SeqSingleDose\"\n            },\n            \"sizeFunction\": {\n              \"dose\": {\n                \"quantity\": {\n                  \"dimension\": \"Volume\",\n                  \"value\": 3,\n                  \"symbol\": \"ml\"\n                }\n              },\n              \"_type\": \"models.FixedDoseFunction\"\n            },\n            \"id\": \"B-123\",\n            \"ownerId\": 0,\n            \"description\": \"3.0 ml per kg repeat\",\n            \"eligibilities\": [\n              {\n                \"id\": 1,\n                \"name\": \"Beef Cattle\",\n                \"fdaSpecies\": [\n                  \"bison\",\n                  \"catfish\"\n                ]\n              },\n              {\n                \"id\": 1,\n                \"name\": \"Beef Cattle\",\n                \"fdaSpecies\": [\n                  \"fish\",\n                  \"horses\"\n                ]\n              }\n            ],\n            \"_dose\": \"3.0 ml per kg repeat in 6 hours and again in 24 hours\",\n            \"wtMeatHrs\": 25256702,\n            \"wtMilkHrs\": -11610455,\n            \"nada\": \"wip\",\n            \"tags\": [\n              {\n                \"id\": 8,\n                \"color\": \"#516cc6\",\n                \"name\": \"si\",\n                \"fixes\": [\n                  {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                  },\n                  {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                  }\n                ]\n              },\n              {\n                \"id\": 8,\n                \"color\": \"#516cc6\",\n                \"name\": \"dolore fu\",\n                \"fixes\": [\n                  {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                  },\n                  {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                  }\n                ]\n              }\n            ],\n            \"note\": \"<p>a free-form note</p>\",\n            \"amduca\": \"UNIDENTIFIED\"\n          },\n          {\n            \"product\": \"MiracleMed\",\n            \"route\": \"wip\",\n            \"dosage\": {\n              \"doseId\": 93675434\n            },\n            \"sequenceFunction\": {\n              \"_type\": \"models.SeqSingleDose\"\n            },\n            \"sizeFunction\": {\n              \"dose\": {\n                \"quantity\": {\n                  \"dimension\": \"Volume\",\n                  \"value\": 3,\n                  \"symbol\": \"ml\"\n                }\n              },\n              \"_type\": \"models.FixedDoseFunction\"\n            },\n            \"id\": \"B-123\",\n            \"ownerId\": 0,\n            \"description\": \"3.0 ml per kg repeat\",\n            \"eligibilities\": [\n              {\n                \"id\": 1,\n                \"name\": \"Beef Cattle\",\n                \"fdaSpecies\": [\n                  \"salmon\",\n                  \"dairy_cattle\"\n                ]\n              },\n              {\n                \"id\": 1,\n                \"name\": \"Beef Cattle\",\n                \"fdaSpecies\": [\n                  \"emus\",\n                  \"unidentified\"\n                ]\n              }\n            ],\n            \"_dose\": \"3.0 ml per kg repeat in 6 hours and again in 24 hours\",\n            \"wtMeatHrs\": -86940550,\n            \"wtMilkHrs\": 10439145,\n            \"nada\": \"wip\",\n            \"tags\": [\n              {\n                \"id\": 8,\n                \"color\": \"#516cc6\",\n                \"name\": \"enim\",\n                \"fixes\": [\n                  {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                  },\n                  {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                  }\n                ]\n              },\n              {\n                \"id\": 8,\n                \"color\": \"#516cc6\",\n                \"name\": \"consequa\",\n                \"fixes\": [\n                  {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                  },\n                  {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                  }\n                ]\n              }\n            ],\n            \"note\": \"<p>a free-form note</p>\",\n            \"amduca\": \"UNIDENTIFIED\"\n          }\n        ],\n        \"tags\": [\n          {\n            \"id\": 8,\n            \"color\": \"#516cc6\",\n            \"name\": \"Duis \",\n            \"fixes\": [\n              {\n                \"_type\": {\n                  \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"detail\": {\n                  \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"message\": {\n                  \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"title\": {\n                  \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                }\n              },\n              {\n                \"_type\": {\n                  \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"detail\": {\n                  \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"message\": {\n                  \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"title\": {\n                  \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                }\n              }\n            ]\n          },\n          {\n            \"id\": 8,\n            \"color\": \"#516cc6\",\n            \"name\": \"sint\",\n            \"fixes\": [\n              {\n                \"_type\": {\n                  \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"detail\": {\n                  \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"message\": {\n                  \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"title\": {\n                  \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                }\n              },\n              {\n                \"_type\": {\n                  \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"detail\": {\n                  \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"message\": {\n                  \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"title\": {\n                  \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                }\n              }\n            ]\n          }\n        ],\n        \"diagnoses\": [\n          {\n            \"id\": 8,\n            \"name\": \"Pain/inflammation (musculoskeletal), treatment\"\n          },\n          {\n            \"id\": 8,\n            \"name\": \"Pain/inflammation (musculoskeletal), treatment\"\n          }\n        ],\n        \"eligibilities\": [\n          {\n            \"id\": 1,\n            \"name\": \"Beef Cattle\",\n            \"fdaSpecies\": [\n              \"dairy_cattle\",\n              \"emus\"\n            ]\n          },\n          {\n            \"id\": 1,\n            \"name\": \"Beef Cattle\",\n            \"fdaSpecies\": [\n              \"sheep\",\n              \"turkeys\"\n            ]\n          }\n        ],\n        \"promises\": [\n          {\n            \"_type\": \"models.IdPromise\",\n            \"name\": \"ID promise\",\n            \"descrip\": \"You must give ID for each case enrolled\",\n            \"query\": \"What is the animal's name or number?\",\n            \"when\": \"PT0H\",\n            \"id\": 2345\n          },\n          {\n            \"_type\": \"models.IdPromise\",\n            \"name\": \"ID promise\",\n            \"descrip\": \"You must give ID for each case enrolled\",\n            \"query\": \"What is the animal's name or number?\",\n            \"when\": \"PT0H\",\n            \"id\": 2345\n          }\n        ],\n        \"metadata\": [\n          {\n            \"key\": \"popularity\",\n            \"value\": \"good 1.2\"\n          },\n          {\n            \"key\": \"popularity\",\n            \"value\": \"good 1.2\"\n          }\n        ]\n      },\n      \"status\": \"PRESCRIBED\",\n      \"rxId\": \"gG3pBCR1GCMKm89c\",\n      \"refills\": 0,\n      \"expiration\": \"2021-01-10T10:30:37Z\",\n      \"created\": \"2021-08-10T10:30:37Z\",\n      \"metadata\": [\n        {\n          \"key\": \"popularity\",\n          \"value\": \"good 1.2\"\n        },\n        {\n          \"key\": \"popularity\",\n          \"value\": \"good 1.2\"\n        }\n      ]\n    }\n  ]\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        }
                    ],
                    "event": []
                },
                {
                    "id": "7247a93f-f478-4502-9ade-78937db4521f",
                    "name": "get my protocol shares",
                    "request": {
                        "name": "get my protocol shares",
                        "description": {
                            "content": "This endpoint retrieves a User's Protocol shares, optionally filtered by Protocol and recipient.",
                            "type": "text/plain"
                        },
                        "url": {
                            "path": [
                                "api",
                                "protocols",
                                "shares"
                            ],
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "query": [
                                {
                                    "disabled": false,
                                    "key": "pxFilter",
                                    "value": "-41001206",
                                    "description": "select only shares of this Protocol ID"
                                },
                                {
                                    "disabled": false,
                                    "key": "toFilter",
                                    "value": "-41001206",
                                    "description": "select only shares to this VOR User"
                                }
                            ],
                            "variable": []
                        },
                        "header": [
                            {
                                "key": "Accept",
                                "value": "application/json"
                            }
                        ],
                        "method": "GET",
                        "auth": null
                    },
                    "response": [
                        {
                            "id": "61077e55-47fe-482a-bb95-4265fa4dd241",
                            "name": "OK",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "api",
                                        "protocols",
                                        "shares"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [
                                        {
                                            "key": "pxFilter",
                                            "value": "-41001206"
                                        },
                                        {
                                            "key": "toFilter",
                                            "value": "-41001206"
                                        }
                                    ],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "description": {
                                            "content": "Added as a part of security scheme: apikey",
                                            "type": "text/plain"
                                        },
                                        "key": "X-Auth-Token",
                                        "value": "<API Key>"
                                    }
                                ],
                                "method": "GET",
                                "body": {}
                            },
                            "status": "OK",
                            "code": 200,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"shares\": [\n    {\n      \"px-id\": 1,\n      \"share-to\": 2,\n      \"clonable\": true\n    },\n    {\n      \"px-id\": 1,\n      \"share-to\": 2,\n      \"clonable\": true\n    }\n  ]\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "578967ab-a081-44f3-a807-599addf337f0",
                            "name": "The server can not understand the request due to invalid syntax.",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "api",
                                        "protocols",
                                        "shares"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [
                                        {
                                            "key": "pxFilter",
                                            "value": "-41001206"
                                        },
                                        {
                                            "key": "toFilter",
                                            "value": "-41001206"
                                        }
                                    ],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "description": {
                                            "content": "Added as a part of security scheme: apikey",
                                            "type": "text/plain"
                                        },
                                        "key": "X-Auth-Token",
                                        "value": "<API Key>"
                                    }
                                ],
                                "method": "GET",
                                "body": {}
                            },
                            "status": "Bad Request",
                            "code": 400,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"title\": \"incorrect username or password\",\n  \"status\": 404,\n  \"errorType\": \"/errors/incorrect-user-pass\",\n  \"detail\": \"Authentication failed due to incorrect username or password.\",\n  \"instance\": \"/login/log/abc123\"\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "ceac88a5-dced-4091-8e19-388391a21dff",
                            "name": "Authorization required",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "api",
                                        "protocols",
                                        "shares"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [
                                        {
                                            "key": "pxFilter",
                                            "value": "-41001206"
                                        },
                                        {
                                            "key": "toFilter",
                                            "value": "-41001206"
                                        }
                                    ],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "description": {
                                            "content": "Added as a part of security scheme: apikey",
                                            "type": "text/plain"
                                        },
                                        "key": "X-Auth-Token",
                                        "value": "<API Key>"
                                    }
                                ],
                                "method": "GET",
                                "body": {}
                            },
                            "status": "Forbidden",
                            "code": 403,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "text/plain"
                                }
                            ],
                            "body": "",
                            "cookie": [],
                            "_postman_previewlanguage": "text"
                        }
                    ],
                    "event": []
                },
                {
                    "id": "d446dfcc-169c-49ff-956e-5d741d7f17a2",
                    "name": "create protocol share",
                    "request": {
                        "name": "create protocol share",
                        "description": {
                            "content": "This endpoint shares a protocol with another VOR User.",
                            "type": "text/plain"
                        },
                        "url": {
                            "path": [
                                "api",
                                "protocols",
                                "shares"
                            ],
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "query": [],
                            "variable": []
                        },
                        "header": [
                            {
                                "key": "Content-Type",
                                "value": "application/json"
                            },
                            {
                                "key": "Accept",
                                "value": "application/json"
                            }
                        ],
                        "method": "POST",
                        "auth": null,
                        "body": {
                            "mode": "raw",
                            "raw": "{\n  \"px-id\": 1,\n  \"share-to\": 2,\n  \"clonable\": true\n}",
                            "options": {
                                "raw": {
                                    "language": "json"
                                }
                            }
                        }
                    },
                    "response": [
                        {
                            "id": "e9540197-d421-4d1b-9c3a-13cf537a1ff4",
                            "name": "protocol shared",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "api",
                                        "protocols",
                                        "shares"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "description": {
                                            "content": "Added as a part of security scheme: apikey",
                                            "type": "text/plain"
                                        },
                                        "key": "X-Auth-Token",
                                        "value": "<API Key>"
                                    }
                                ],
                                "method": "POST",
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n  \"px-id\": 1,\n  \"share-to\": 2,\n  \"clonable\": true\n}",
                                    "options": {
                                        "raw": {
                                            "language": "json"
                                        }
                                    }
                                }
                            },
                            "status": "OK",
                            "code": 200,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"shared\": 1\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "235773b6-436e-44aa-909b-0cb28ee2224e",
                            "name": "The server can not understand the request due to invalid syntax.",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "api",
                                        "protocols",
                                        "shares"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "description": {
                                            "content": "Added as a part of security scheme: apikey",
                                            "type": "text/plain"
                                        },
                                        "key": "X-Auth-Token",
                                        "value": "<API Key>"
                                    }
                                ],
                                "method": "POST",
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n  \"px-id\": 1,\n  \"share-to\": 2,\n  \"clonable\": true\n}",
                                    "options": {
                                        "raw": {
                                            "language": "json"
                                        }
                                    }
                                }
                            },
                            "status": "Bad Request",
                            "code": 400,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"title\": \"incorrect username or password\",\n  \"status\": 404,\n  \"errorType\": \"/errors/incorrect-user-pass\",\n  \"detail\": \"Authentication failed due to incorrect username or password.\",\n  \"instance\": \"/login/log/abc123\"\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "108f2dfa-1f02-415b-a0af-fcc32eef1dac",
                            "name": "Authorization required",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "api",
                                        "protocols",
                                        "shares"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "description": {
                                            "content": "Added as a part of security scheme: apikey",
                                            "type": "text/plain"
                                        },
                                        "key": "X-Auth-Token",
                                        "value": "<API Key>"
                                    }
                                ],
                                "method": "POST",
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n  \"px-id\": 1,\n  \"share-to\": 2,\n  \"clonable\": true\n}",
                                    "options": {
                                        "raw": {
                                            "language": "json"
                                        }
                                    }
                                }
                            },
                            "status": "Forbidden",
                            "code": 403,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "text/plain"
                                }
                            ],
                            "body": "",
                            "cookie": [],
                            "_postman_previewlanguage": "text"
                        }
                    ],
                    "event": [],
                    "protocolProfileBehavior": {
                        "disableBodyPruning": true
                    }
                },
                {
                    "id": "86bd71d0-ba99-47d2-9373-88d513f6f8d3",
                    "name": "delete protocol share",
                    "request": {
                        "name": "delete protocol share",
                        "description": {
                            "content": "This endpoint retracts a Protocol share with another VOR User.",
                            "type": "text/plain"
                        },
                        "url": {
                            "path": [
                                "api",
                                "protocols",
                                "shares"
                            ],
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "query": [
                                {
                                    "disabled": false,
                                    "key": "pxId",
                                    "value": "-41001206",
                                    "description": "(Required) Protocol ID"
                                },
                                {
                                    "disabled": false,
                                    "key": "toVor",
                                    "value": "-41001206",
                                    "description": "(Required) ID of VOR to whom Protocol was shared"
                                }
                            ],
                            "variable": []
                        },
                        "header": [
                            {
                                "key": "Accept",
                                "value": "application/json"
                            }
                        ],
                        "method": "DELETE",
                        "auth": null
                    },
                    "response": [
                        {
                            "id": "a739c1e9-052c-412b-9c64-d79c869811c3",
                            "name": "Success – Protocol share deleted",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "api",
                                        "protocols",
                                        "shares"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [
                                        {
                                            "key": "pxId",
                                            "value": "-41001206"
                                        },
                                        {
                                            "key": "toVor",
                                            "value": "-41001206"
                                        }
                                    ],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "description": {
                                            "content": "Added as a part of security scheme: apikey",
                                            "type": "text/plain"
                                        },
                                        "key": "X-Auth-Token",
                                        "value": "<API Key>"
                                    }
                                ],
                                "method": "DELETE",
                                "body": {}
                            },
                            "status": "OK",
                            "code": 200,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"un-shared\": 12614543\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "21fb9a80-8e92-47fd-93eb-f9000590eb29",
                            "name": "The server can not understand the request due to invalid syntax.",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "api",
                                        "protocols",
                                        "shares"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [
                                        {
                                            "key": "pxId",
                                            "value": "-41001206"
                                        },
                                        {
                                            "key": "toVor",
                                            "value": "-41001206"
                                        }
                                    ],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "description": {
                                            "content": "Added as a part of security scheme: apikey",
                                            "type": "text/plain"
                                        },
                                        "key": "X-Auth-Token",
                                        "value": "<API Key>"
                                    }
                                ],
                                "method": "DELETE",
                                "body": {}
                            },
                            "status": "Bad Request",
                            "code": 400,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"title\": \"incorrect username or password\",\n  \"status\": 404,\n  \"errorType\": \"/errors/incorrect-user-pass\",\n  \"detail\": \"Authentication failed due to incorrect username or password.\",\n  \"instance\": \"/login/log/abc123\"\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "a57ede4f-c7dc-429a-a9ab-4dd06d729977",
                            "name": "Authorization required",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "api",
                                        "protocols",
                                        "shares"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [
                                        {
                                            "key": "pxId",
                                            "value": "-41001206"
                                        },
                                        {
                                            "key": "toVor",
                                            "value": "-41001206"
                                        }
                                    ],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "description": {
                                            "content": "Added as a part of security scheme: apikey",
                                            "type": "text/plain"
                                        },
                                        "key": "X-Auth-Token",
                                        "value": "<API Key>"
                                    }
                                ],
                                "method": "DELETE",
                                "body": {}
                            },
                            "status": "Forbidden",
                            "code": 403,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "text/plain"
                                }
                            ],
                            "body": "",
                            "cookie": [],
                            "_postman_previewlanguage": "text"
                        }
                    ],
                    "event": []
                },
                {
                    "id": "b84399cd-bc9f-405f-8b0e-23cc23f68f92",
                    "name": "list of User's shared protocols",
                    "request": {
                        "name": "list of User's shared protocols",
                        "description": {
                            "content": "This endpoint retrieves a list of User's protocols shared to all VORs.",
                            "type": "text/plain"
                        },
                        "url": {
                            "path": [
                                "api",
                                "protocols",
                                "sharesToAll",
                                ""
                            ],
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "query": [],
                            "variable": []
                        },
                        "header": [
                            {
                                "key": "Accept",
                                "value": "application/json"
                            }
                        ],
                        "method": "GET",
                        "auth": null
                    },
                    "response": [
                        {
                            "id": "c1ac6cf0-e5aa-4cd5-b9a6-7210bc83cf6c",
                            "name": "OK",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "api",
                                        "protocols",
                                        "sharesToAll",
                                        ""
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "description": {
                                            "content": "Added as a part of security scheme: apikey",
                                            "type": "text/plain"
                                        },
                                        "key": "X-Auth-Token",
                                        "value": "<API Key>"
                                    }
                                ],
                                "method": "GET",
                                "body": {}
                            },
                            "status": "OK",
                            "code": 200,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"shares\": [\n    {\n      \"pxId\": 1,\n      \"name\": \"example protocol\",\n      \"clonable\": false\n    }\n  ]\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "8e10e4aa-7639-48c4-bf29-624d81d1fd0e",
                            "name": "The server can not understand the request due to invalid syntax.",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "api",
                                        "protocols",
                                        "sharesToAll",
                                        ""
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "description": {
                                            "content": "Added as a part of security scheme: apikey",
                                            "type": "text/plain"
                                        },
                                        "key": "X-Auth-Token",
                                        "value": "<API Key>"
                                    }
                                ],
                                "method": "GET",
                                "body": {}
                            },
                            "status": "Bad Request",
                            "code": 400,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"title\": \"incorrect username or password\",\n  \"status\": 404,\n  \"errorType\": \"/errors/incorrect-user-pass\",\n  \"detail\": \"Authentication failed due to incorrect username or password.\",\n  \"instance\": \"/login/log/abc123\"\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "541362a6-056d-454d-b7e2-f2bbb475de61",
                            "name": "Authorization required",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "api",
                                        "protocols",
                                        "sharesToAll",
                                        ""
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "description": {
                                            "content": "Added as a part of security scheme: apikey",
                                            "type": "text/plain"
                                        },
                                        "key": "X-Auth-Token",
                                        "value": "<API Key>"
                                    }
                                ],
                                "method": "GET",
                                "body": {}
                            },
                            "status": "Forbidden",
                            "code": 403,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "text/plain"
                                }
                            ],
                            "body": "",
                            "cookie": [],
                            "_postman_previewlanguage": "text"
                        }
                    ],
                    "event": []
                },
                {
                    "id": "75accf7e-425a-49c2-974f-21e4c01d9077",
                    "name": "share Protocol with all VOR Users",
                    "request": {
                        "name": "share Protocol with all VOR Users",
                        "description": {
                            "content": "This endpoint shares a User's protocol with all VOR Users.",
                            "type": "text/plain"
                        },
                        "url": {
                            "path": [
                                "api",
                                "protocols",
                                "sharesToAll",
                                ":pxId"
                            ],
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "query": [
                                {
                                    "disabled": false,
                                    "key": "clonable",
                                    "value": "false"
                                }
                            ],
                            "variable": [
                                {
                                    "disabled": false,
                                    "type": "any",
                                    "value": "-41001206",
                                    "key": "pxId",
                                    "description": "(Required) ID of Protocol to be shared"
                                }
                            ]
                        },
                        "header": [
                            {
                                "key": "Accept",
                                "value": "application/json"
                            }
                        ],
                        "method": "POST",
                        "auth": null
                    },
                    "response": [
                        {
                            "id": "9ffa0692-e9b3-49f9-b72f-ba1f4638ec5a",
                            "name": "There is no content to send for this request.",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "api",
                                        "protocols",
                                        "sharesToAll",
                                        ":pxId"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [
                                        {
                                            "key": "clonable",
                                            "value": "true"
                                        }
                                    ],
                                    "variable": [
                                        {
                                            "disabled": false,
                                            "type": "any",
                                            "value": "-41001206",
                                            "key": "pxId",
                                            "description": "(Required) ID of Protocol to be shared"
                                        }
                                    ]
                                },
                                "header": [
                                    {
                                        "description": {
                                            "content": "Added as a part of security scheme: apikey",
                                            "type": "text/plain"
                                        },
                                        "key": "X-Auth-Token",
                                        "value": "<API Key>"
                                    }
                                ],
                                "method": "POST",
                                "body": {}
                            },
                            "status": "No Content",
                            "code": 204,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "text/plain"
                                }
                            ],
                            "body": "",
                            "cookie": [],
                            "_postman_previewlanguage": "text"
                        },
                        {
                            "id": "02c15a3c-8b71-4b1f-a4e9-12620fa9a9fd",
                            "name": "The server can not understand the request due to invalid syntax.",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "api",
                                        "protocols",
                                        "sharesToAll",
                                        ":pxId"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [
                                        {
                                            "key": "clonable",
                                            "value": "true"
                                        }
                                    ],
                                    "variable": [
                                        {
                                            "disabled": false,
                                            "type": "any",
                                            "value": "-41001206",
                                            "key": "pxId",
                                            "description": "(Required) ID of Protocol to be shared"
                                        }
                                    ]
                                },
                                "header": [
                                    {
                                        "description": {
                                            "content": "Added as a part of security scheme: apikey",
                                            "type": "text/plain"
                                        },
                                        "key": "X-Auth-Token",
                                        "value": "<API Key>"
                                    }
                                ],
                                "method": "POST",
                                "body": {}
                            },
                            "status": "Bad Request",
                            "code": 400,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"title\": \"incorrect username or password\",\n  \"status\": 404,\n  \"errorType\": \"/errors/incorrect-user-pass\",\n  \"detail\": \"Authentication failed due to incorrect username or password.\",\n  \"instance\": \"/login/log/abc123\"\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        }
                    ],
                    "event": []
                },
                {
                    "id": "1b201f94-d0a2-4060-ab0a-e1636574f8ca",
                    "name": "cancel sharing",
                    "request": {
                        "name": "cancel sharing",
                        "description": {
                            "content": "wip -- This endpoint probably unshares protocols to all.",
                            "type": "text/plain"
                        },
                        "url": {
                            "path": [
                                "api",
                                "protocols",
                                "sharesToAll",
                                ":pxId"
                            ],
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "query": [],
                            "variable": [
                                {
                                    "disabled": false,
                                    "type": "any",
                                    "value": "1",
                                    "key": "pxId",
                                    "description": "(Required) ID of Protocol"
                                }
                            ]
                        },
                        "method": "DELETE",
                        "auth": null
                    },
                    "response": [
                        {
                            "id": "afe0fc28-b8c2-4b57-be74-0e9ebffeb743",
                            "name": "no content",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "api",
                                        "protocols",
                                        "sharesToAll",
                                        ":pxId"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": [
                                        {
                                            "disabled": false,
                                            "type": "any",
                                            "value": "1",
                                            "key": "pxId",
                                            "description": "(Required) ID of Protocol"
                                        }
                                    ]
                                },
                                "header": [
                                    {
                                        "description": {
                                            "content": "Added as a part of security scheme: apikey",
                                            "type": "text/plain"
                                        },
                                        "key": "X-Auth-Token",
                                        "value": "<API Key>"
                                    }
                                ],
                                "method": "DELETE",
                                "body": {}
                            },
                            "status": "No Content",
                            "code": 204,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "text/plain"
                                }
                            ],
                            "body": "",
                            "cookie": [],
                            "_postman_previewlanguage": "text"
                        }
                    ],
                    "event": []
                },
                {
                    "id": "4bf16221-19ba-409d-81ab-70f6da5c0d49",
                    "name": "AMDUCA-tag protocol",
                    "request": {
                        "name": "AMDUCA-tag protocol",
                        "description": {
                            "content": "add tags to protocol per AMDUCA rules",
                            "type": "text/plain"
                        },
                        "url": {
                            "path": [
                                "api",
                                "protocols",
                                "amducatags"
                            ],
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "query": [],
                            "variable": []
                        },
                        "header": [
                            {
                                "key": "Content-Type",
                                "value": "application/json"
                            },
                            {
                                "key": "Accept",
                                "value": "application/json"
                            }
                        ],
                        "method": "PUT",
                        "auth": null,
                        "body": {
                            "mode": "raw",
                            "raw": "{\n  \"ownerId\": 1,\n  \"name\": \"wip\",\n  \"status\": \"PRESCRIBED\",\n  \"instructions\": {\n    \"considerations\": \"<p>This is just an example, not a real protocol.</p>\",\n    \"restrictions\": \"<p>Not for use on real animals.</p>\",\n    \"dothis\": \"<h3>Examinations to perform</h3>\",\n    \"recordthis\": \"<p>record every step in your notebook.</p>\",\n    \"success\": \"<p>All problems are gone</p>\",\n    \"failure\": \"<p>One or more problems remain</p>\",\n    \"references\": \"<a href=\\\"https://en.wikipedia.org/wiki/Rickrolling\\\">Wikipedia</a>\"\n  },\n  \"id\": 12345,\n  \"shortname\": \"wip\",\n  \"created\": \"2020-01-10T10:30:37Z\",\n  \"edited\": \"2020-02-10T10:30:37Z\",\n  \"vetNote\": \"consider prescribing protocol x instead\",\n  \"wtMeatHrs\": 22,\n  \"wtMilkHrs\": 5,\n  \"shareAll\": true,\n  \"shareClonable\": true,\n  \"caseDefinition\": {\n    \"requireId\": false,\n    \"requireMor\": false,\n    \"contraindications\": \"\",\n    \"medical\": \"if fever is present, consider Protocol 12345 instead.\",\n    \"economic\": \"\",\n    \"note\": \"\"\n  },\n  \"treatments\": [\n    {\n      \"product\": \"MiracleMed\",\n      \"route\": \"wip\",\n      \"dosage\": {\n        \"doseId\": 69015374\n      },\n      \"sequenceFunction\": {\n        \"_type\": \"models.SeqSingleDose\"\n      },\n      \"sizeFunction\": {\n        \"_type\": \"models.FixedDoseFunction\",\n        \"dose\": {\n          \"quantity\": {\n            \"dimension\": \"Mass\",\n            \"value\": 3,\n            \"symbol\": \"oz\"\n          }\n        }\n      },\n      \"id\": \"B-123\",\n      \"ownerId\": 0,\n      \"description\": \"3.0 ml per kg repeat\",\n      \"eligibilities\": [\n        {\n          \"id\": 1,\n          \"name\": \"Beef Cattle\",\n          \"fdaSpecies\": [\n            \"chickens\",\n            \"unidentified\"\n          ]\n        },\n        {\n          \"id\": 1,\n          \"name\": \"Beef Cattle\",\n          \"fdaSpecies\": [\n            \"unidentified\",\n            \"veal\"\n          ]\n        }\n      ],\n      \"_dose\": \"3.0 ml per kg repeat in 6 hours and again in 24 hours\",\n      \"wtMeatHrs\": 27424849,\n      \"wtMilkHrs\": -87261637,\n      \"nada\": \"wip\",\n      \"tags\": [\n        {\n          \"id\": 8,\n          \"color\": \"#516cc6\",\n          \"name\": \"occaecat Duis \",\n          \"fixes\": [\n            {\n              \"_type\": \"Excepteur exercitation qui aliquip\",\n              \"detail\": \"aute ut nulla irure\",\n              \"message\": \"eiusmod laborum elit magna aute\",\n              \"title\": \"Duis esse exercitation\"\n            },\n            {\n              \"_type\": \"labore\",\n              \"detail\": \"officia velit magna ut\",\n              \"message\": \"eu sit elit dolore veniam\",\n              \"title\": \"irure minim\"\n            }\n          ]\n        },\n        {\n          \"id\": 8,\n          \"color\": \"#516cc6\",\n          \"name\": \"irure inci\",\n          \"fixes\": [\n            {\n              \"_type\": \"aliqua ut dolor dolor occaecat\",\n              \"detail\": \"occaecat deserunt Lorem mollit labore\",\n              \"message\": \"sit ut voluptate\",\n              \"title\": \"ut occaecat irure\"\n            },\n            {\n              \"_type\": \"labore dolore reprehenderit quis\",\n              \"detail\": \"dolore dolor\",\n              \"message\": \"id dolor\",\n              \"title\": \"\"\n            }\n          ]\n        }\n      ],\n      \"note\": \"<p>a free-form note</p>\",\n      \"amduca\": \"OFFLABEL\"\n    },\n    {\n      \"product\": \"MiracleMed\",\n      \"route\": \"wip\",\n      \"dosage\": {\n        \"doseId\": 35781694\n      },\n      \"sequenceFunction\": {\n        \"_type\": \"models.SeqSingleDose\"\n      },\n      \"sizeFunction\": {\n        \"_type\": \"models.FixedDoseFunction\",\n        \"dose\": {\n          \"quantity\": {\n            \"dimension\": \"Mass\",\n            \"value\": 3,\n            \"symbol\": \"oz\"\n          }\n        }\n      },\n      \"id\": \"B-123\",\n      \"ownerId\": 0,\n      \"description\": \"3.0 ml per kg repeat\",\n      \"eligibilities\": [\n        {\n          \"id\": 1,\n          \"name\": \"Beef Cattle\",\n          \"fdaSpecies\": [\n            \"bison\",\n            \"gamebirds\"\n          ]\n        },\n        {\n          \"id\": 1,\n          \"name\": \"Beef Cattle\",\n          \"fdaSpecies\": [\n            \"salmon\",\n            \"emus\"\n          ]\n        }\n      ],\n      \"_dose\": \"3.0 ml per kg repeat in 6 hours and again in 24 hours\",\n      \"wtMeatHrs\": 37808317,\n      \"wtMilkHrs\": 69116765,\n      \"nada\": \"wip\",\n      \"tags\": [\n        {\n          \"id\": 8,\n          \"color\": \"#516cc6\",\n          \"name\": \"proiden\",\n          \"fixes\": [\n            {\n              \"_type\": \"occaecat commodo tempor non\",\n              \"detail\": \"sunt cupidatat labore\",\n              \"message\": \"aliqua ut adipisicing\",\n              \"title\": \"magna dolore aute anim\"\n            },\n            {\n              \"_type\": \"dolor quis\",\n              \"detail\": \"voluptate cillum ut\",\n              \"message\": \"elit laboris\",\n              \"title\": \"adipisicing sun\"\n            }\n          ]\n        },\n        {\n          \"id\": 8,\n          \"color\": \"#516cc6\",\n          \"name\": \"mol\",\n          \"fixes\": [\n            {\n              \"_type\": \"ad fugiat\",\n              \"detail\": \"fugiat\",\n              \"message\": \"ut quis ullamco\",\n              \"title\": \"Ut commodo aliqua\"\n            },\n            {\n              \"_type\": \"cillum tempor qui exercitation\",\n              \"detail\": \"sunt quis Excepteur\",\n              \"message\": \"aliquip fugiat\",\n              \"title\": \"ut in\"\n            }\n          ]\n        }\n      ],\n      \"note\": \"<p>a free-form note</p>\",\n      \"amduca\": \"UNIDENTIFIED\"\n    }\n  ],\n  \"tags\": [\n    {\n      \"id\": 8,\n      \"color\": \"#516cc6\",\n      \"name\": \"ex e\",\n      \"fixes\": [\n        {\n          \"_type\": \"irure dolor ad culpa\",\n          \"detail\": \"in officia mollit dolor\",\n          \"message\": \"sit\",\n          \"title\": \"laborum irure ut\"\n        },\n        {\n          \"_type\": \"laborum\",\n          \"detail\": \"commodo sunt tempor\",\n          \"message\": \"proident\",\n          \"title\": \"exercitation sit dolore nulla\"\n        }\n      ]\n    },\n    {\n      \"id\": 8,\n      \"color\": \"#516cc6\",\n      \"name\": \"dolor aute e\",\n      \"fixes\": [\n        {\n          \"_type\": \"dolore ut\",\n          \"detail\": \"cupidatat culpa fugiat dolor\",\n          \"message\": \"in\",\n          \"title\": \"velit minim qui\"\n        },\n        {\n          \"_type\": \"dolor\",\n          \"detail\": \"dolor nulla\",\n          \"message\": \"dolor ut aliqua sit\",\n          \"title\": \"culpa pariatur tempor est\"\n        }\n      ]\n    }\n  ],\n  \"diagnoses\": [\n    {\n      \"id\": 8,\n      \"name\": \"Pain/inflammation (musculoskeletal), treatment\"\n    },\n    {\n      \"id\": 8,\n      \"name\": \"Pain/inflammation (musculoskeletal), treatment\"\n    }\n  ],\n  \"eligibilities\": [\n    {\n      \"id\": 1,\n      \"name\": \"Beef Cattle\",\n      \"fdaSpecies\": [\n        \"llamas\",\n        \"llamas\"\n      ]\n    },\n    {\n      \"id\": 1,\n      \"name\": \"Beef Cattle\",\n      \"fdaSpecies\": [\n        \"sheep\",\n        \"horses\"\n      ]\n    }\n  ],\n  \"promises\": [\n    {\n      \"_type\": \"models.IdPromise\",\n      \"name\": \"ID promise\",\n      \"descrip\": \"You must give ID for each case enrolled\",\n      \"query\": \"What is the animal's name or number?\",\n      \"when\": \"PT0H\",\n      \"id\": 2345\n    },\n    {\n      \"_type\": \"models.IdPromise\",\n      \"name\": \"ID promise\",\n      \"descrip\": \"You must give ID for each case enrolled\",\n      \"query\": \"What is the animal's name or number?\",\n      \"when\": \"PT0H\",\n      \"id\": 2345\n    }\n  ],\n  \"metadata\": [\n    {\n      \"key\": \"popularity\",\n      \"value\": \"good 1.2\"\n    },\n    {\n      \"key\": \"popularity\",\n      \"value\": \"good 1.2\"\n    }\n  ]\n}",
                            "options": {
                                "raw": {
                                    "language": "json"
                                }
                            }
                        }
                    },
                    "response": [
                        {
                            "id": "36814ae4-5304-4d7a-8cf5-b3b6df71c0af",
                            "name": "Success – updated Protocol",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "api",
                                        "protocols",
                                        "amducatags"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "description": {
                                            "content": "Added as a part of security scheme: apikey",
                                            "type": "text/plain"
                                        },
                                        "key": "X-Auth-Token",
                                        "value": "<API Key>"
                                    }
                                ],
                                "method": "PUT",
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n  \"ownerId\": 1,\n  \"name\": \"wip\",\n  \"status\": \"PRESCRIBED\",\n  \"instructions\": {\n    \"considerations\": \"<p>This is just an example, not a real protocol.</p>\",\n    \"restrictions\": \"<p>Not for use on real animals.</p>\",\n    \"dothis\": \"<h3>Examinations to perform</h3>\",\n    \"recordthis\": \"<p>record every step in your notebook.</p>\",\n    \"success\": \"<p>All problems are gone</p>\",\n    \"failure\": \"<p>One or more problems remain</p>\",\n    \"references\": \"<a href=\\\"https://en.wikipedia.org/wiki/Rickrolling\\\">Wikipedia</a>\"\n  },\n  \"id\": 12345,\n  \"shortname\": \"wip\",\n  \"created\": \"2020-01-10T10:30:37Z\",\n  \"edited\": \"2020-02-10T10:30:37Z\",\n  \"vetNote\": \"consider prescribing protocol x instead\",\n  \"wtMeatHrs\": 22,\n  \"wtMilkHrs\": 5,\n  \"shareAll\": true,\n  \"shareClonable\": true,\n  \"caseDefinition\": {\n    \"requireId\": false,\n    \"requireMor\": false,\n    \"contraindications\": \"\",\n    \"medical\": \"if fever is present, consider Protocol 12345 instead.\",\n    \"economic\": \"\",\n    \"note\": \"\"\n  },\n  \"treatments\": [\n    {\n      \"product\": \"MiracleMed\",\n      \"route\": \"wip\",\n      \"dosage\": {\n        \"doseId\": 69015374\n      },\n      \"sequenceFunction\": {\n        \"_type\": \"models.SeqSingleDose\"\n      },\n      \"sizeFunction\": {\n        \"_type\": \"models.FixedDoseFunction\",\n        \"dose\": {\n          \"quantity\": {\n            \"dimension\": \"Mass\",\n            \"value\": 3,\n            \"symbol\": \"oz\"\n          }\n        }\n      },\n      \"id\": \"B-123\",\n      \"ownerId\": 0,\n      \"description\": \"3.0 ml per kg repeat\",\n      \"eligibilities\": [\n        {\n          \"id\": 1,\n          \"name\": \"Beef Cattle\",\n          \"fdaSpecies\": [\n            \"chickens\",\n            \"unidentified\"\n          ]\n        },\n        {\n          \"id\": 1,\n          \"name\": \"Beef Cattle\",\n          \"fdaSpecies\": [\n            \"unidentified\",\n            \"veal\"\n          ]\n        }\n      ],\n      \"_dose\": \"3.0 ml per kg repeat in 6 hours and again in 24 hours\",\n      \"wtMeatHrs\": 27424849,\n      \"wtMilkHrs\": -87261637,\n      \"nada\": \"wip\",\n      \"tags\": [\n        {\n          \"id\": 8,\n          \"color\": \"#516cc6\",\n          \"name\": \"occaecat Duis \",\n          \"fixes\": [\n            {\n              \"_type\": \"Excepteur exercitation qui aliquip\",\n              \"detail\": \"aute ut nulla irure\",\n              \"message\": \"eiusmod laborum elit magna aute\",\n              \"title\": \"Duis esse exercitation\"\n            },\n            {\n              \"_type\": \"labore\",\n              \"detail\": \"officia velit magna ut\",\n              \"message\": \"eu sit elit dolore veniam\",\n              \"title\": \"irure minim\"\n            }\n          ]\n        },\n        {\n          \"id\": 8,\n          \"color\": \"#516cc6\",\n          \"name\": \"irure inci\",\n          \"fixes\": [\n            {\n              \"_type\": \"aliqua ut dolor dolor occaecat\",\n              \"detail\": \"occaecat deserunt Lorem mollit labore\",\n              \"message\": \"sit ut voluptate\",\n              \"title\": \"ut occaecat irure\"\n            },\n            {\n              \"_type\": \"labore dolore reprehenderit quis\",\n              \"detail\": \"dolore dolor\",\n              \"message\": \"id dolor\",\n              \"title\": \"\"\n            }\n          ]\n        }\n      ],\n      \"note\": \"<p>a free-form note</p>\",\n      \"amduca\": \"OFFLABEL\"\n    },\n    {\n      \"product\": \"MiracleMed\",\n      \"route\": \"wip\",\n      \"dosage\": {\n        \"doseId\": 35781694\n      },\n      \"sequenceFunction\": {\n        \"_type\": \"models.SeqSingleDose\"\n      },\n      \"sizeFunction\": {\n        \"_type\": \"models.FixedDoseFunction\",\n        \"dose\": {\n          \"quantity\": {\n            \"dimension\": \"Mass\",\n            \"value\": 3,\n            \"symbol\": \"oz\"\n          }\n        }\n      },\n      \"id\": \"B-123\",\n      \"ownerId\": 0,\n      \"description\": \"3.0 ml per kg repeat\",\n      \"eligibilities\": [\n        {\n          \"id\": 1,\n          \"name\": \"Beef Cattle\",\n          \"fdaSpecies\": [\n            \"bison\",\n            \"gamebirds\"\n          ]\n        },\n        {\n          \"id\": 1,\n          \"name\": \"Beef Cattle\",\n          \"fdaSpecies\": [\n            \"salmon\",\n            \"emus\"\n          ]\n        }\n      ],\n      \"_dose\": \"3.0 ml per kg repeat in 6 hours and again in 24 hours\",\n      \"wtMeatHrs\": 37808317,\n      \"wtMilkHrs\": 69116765,\n      \"nada\": \"wip\",\n      \"tags\": [\n        {\n          \"id\": 8,\n          \"color\": \"#516cc6\",\n          \"name\": \"proiden\",\n          \"fixes\": [\n            {\n              \"_type\": \"occaecat commodo tempor non\",\n              \"detail\": \"sunt cupidatat labore\",\n              \"message\": \"aliqua ut adipisicing\",\n              \"title\": \"magna dolore aute anim\"\n            },\n            {\n              \"_type\": \"dolor quis\",\n              \"detail\": \"voluptate cillum ut\",\n              \"message\": \"elit laboris\",\n              \"title\": \"adipisicing sun\"\n            }\n          ]\n        },\n        {\n          \"id\": 8,\n          \"color\": \"#516cc6\",\n          \"name\": \"mol\",\n          \"fixes\": [\n            {\n              \"_type\": \"ad fugiat\",\n              \"detail\": \"fugiat\",\n              \"message\": \"ut quis ullamco\",\n              \"title\": \"Ut commodo aliqua\"\n            },\n            {\n              \"_type\": \"cillum tempor qui exercitation\",\n              \"detail\": \"sunt quis Excepteur\",\n              \"message\": \"aliquip fugiat\",\n              \"title\": \"ut in\"\n            }\n          ]\n        }\n      ],\n      \"note\": \"<p>a free-form note</p>\",\n      \"amduca\": \"UNIDENTIFIED\"\n    }\n  ],\n  \"tags\": [\n    {\n      \"id\": 8,\n      \"color\": \"#516cc6\",\n      \"name\": \"ex e\",\n      \"fixes\": [\n        {\n          \"_type\": \"irure dolor ad culpa\",\n          \"detail\": \"in officia mollit dolor\",\n          \"message\": \"sit\",\n          \"title\": \"laborum irure ut\"\n        },\n        {\n          \"_type\": \"laborum\",\n          \"detail\": \"commodo sunt tempor\",\n          \"message\": \"proident\",\n          \"title\": \"exercitation sit dolore nulla\"\n        }\n      ]\n    },\n    {\n      \"id\": 8,\n      \"color\": \"#516cc6\",\n      \"name\": \"dolor aute e\",\n      \"fixes\": [\n        {\n          \"_type\": \"dolore ut\",\n          \"detail\": \"cupidatat culpa fugiat dolor\",\n          \"message\": \"in\",\n          \"title\": \"velit minim qui\"\n        },\n        {\n          \"_type\": \"dolor\",\n          \"detail\": \"dolor nulla\",\n          \"message\": \"dolor ut aliqua sit\",\n          \"title\": \"culpa pariatur tempor est\"\n        }\n      ]\n    }\n  ],\n  \"diagnoses\": [\n    {\n      \"id\": 8,\n      \"name\": \"Pain/inflammation (musculoskeletal), treatment\"\n    },\n    {\n      \"id\": 8,\n      \"name\": \"Pain/inflammation (musculoskeletal), treatment\"\n    }\n  ],\n  \"eligibilities\": [\n    {\n      \"id\": 1,\n      \"name\": \"Beef Cattle\",\n      \"fdaSpecies\": [\n        \"llamas\",\n        \"llamas\"\n      ]\n    },\n    {\n      \"id\": 1,\n      \"name\": \"Beef Cattle\",\n      \"fdaSpecies\": [\n        \"sheep\",\n        \"horses\"\n      ]\n    }\n  ],\n  \"promises\": [\n    {\n      \"_type\": \"models.IdPromise\",\n      \"name\": \"ID promise\",\n      \"descrip\": \"You must give ID for each case enrolled\",\n      \"query\": \"What is the animal's name or number?\",\n      \"when\": \"PT0H\",\n      \"id\": 2345\n    },\n    {\n      \"_type\": \"models.IdPromise\",\n      \"name\": \"ID promise\",\n      \"descrip\": \"You must give ID for each case enrolled\",\n      \"query\": \"What is the animal's name or number?\",\n      \"when\": \"PT0H\",\n      \"id\": 2345\n    }\n  ],\n  \"metadata\": [\n    {\n      \"key\": \"popularity\",\n      \"value\": \"good 1.2\"\n    },\n    {\n      \"key\": \"popularity\",\n      \"value\": \"good 1.2\"\n    }\n  ]\n}",
                                    "options": {
                                        "raw": {
                                            "language": "json"
                                        }
                                    }
                                }
                            },
                            "status": "OK",
                            "code": 200,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"protocol\": {\n    \"ownerId\": 1,\n    \"name\": \"wip\",\n    \"status\": \"PRESCRIBED\",\n    \"instructions\": {\n      \"considerations\": \"<p>This is just an example, not a real protocol.</p>\",\n      \"restrictions\": \"<p>Not for use on real animals.</p>\",\n      \"dothis\": \"<h3>Examinations to perform</h3>\",\n      \"recordthis\": \"<p>record every step in your notebook.</p>\",\n      \"success\": \"<p>All problems are gone</p>\",\n      \"failure\": \"<p>One or more problems remain</p>\",\n      \"references\": \"<a href=\\\"https://en.wikipedia.org/wiki/Rickrolling\\\">Wikipedia</a>\"\n    },\n    \"id\": 12345,\n    \"shortname\": \"wip\",\n    \"created\": \"2020-01-10T10:30:37Z\",\n    \"edited\": \"2020-02-10T10:30:37Z\",\n    \"vetNote\": \"consider prescribing protocol x instead\",\n    \"wtMeatHrs\": 22,\n    \"wtMilkHrs\": 5,\n    \"shareAll\": true,\n    \"shareClonable\": true,\n    \"caseDefinition\": {\n      \"requireId\": false,\n      \"requireMor\": false,\n      \"contraindications\": \"\",\n      \"medical\": \"if fever is present, consider Protocol 12345 instead.\",\n      \"economic\": \"\",\n      \"note\": \"\"\n    },\n    \"treatments\": [\n      {\n        \"product\": \"MiracleMed\",\n        \"route\": \"wip\",\n        \"dosage\": {\n          \"doseId\": -82710886\n        },\n        \"sequenceFunction\": {\n          \"_type\": \"models.SeqSingleDose\"\n        },\n        \"sizeFunction\": {\n          \"_type\": \"models.FixedDoseFunction\",\n          \"dose\": {\n            \"quantity\": {\n              \"dimension\": \"Mass\",\n              \"value\": 3,\n              \"symbol\": \"oz\"\n            }\n          }\n        },\n        \"id\": \"B-123\",\n        \"ownerId\": 0,\n        \"description\": \"3.0 ml per kg repeat\",\n        \"eligibilities\": [\n          {\n            \"id\": 1,\n            \"name\": \"Beef Cattle\",\n            \"fdaSpecies\": [\n              \"gamebirds\",\n              \"cats\"\n            ]\n          },\n          {\n            \"id\": 1,\n            \"name\": \"Beef Cattle\",\n            \"fdaSpecies\": [\n              \"catfish\",\n              \"chickens\"\n            ]\n          }\n        ],\n        \"_dose\": \"3.0 ml per kg repeat in 6 hours and again in 24 hours\",\n        \"wtMeatHrs\": 3764921,\n        \"wtMilkHrs\": -43140473,\n        \"nada\": \"wip\",\n        \"tags\": [\n          {\n            \"id\": 8,\n            \"color\": \"#516cc6\",\n            \"name\": \"pariatur e\",\n            \"fixes\": [\n              {\n                \"_type\": {\n                  \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"detail\": {\n                  \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"message\": {\n                  \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"title\": {\n                  \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                }\n              },\n              {\n                \"_type\": {\n                  \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"detail\": {\n                  \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"message\": {\n                  \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"title\": {\n                  \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                }\n              }\n            ]\n          },\n          {\n            \"id\": 8,\n            \"color\": \"#516cc6\",\n            \"name\": \"est labor\",\n            \"fixes\": [\n              {\n                \"_type\": {\n                  \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"detail\": {\n                  \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"message\": {\n                  \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"title\": {\n                  \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                }\n              },\n              {\n                \"_type\": {\n                  \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"detail\": {\n                  \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"message\": {\n                  \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"title\": {\n                  \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                }\n              }\n            ]\n          }\n        ],\n        \"note\": \"<p>a free-form note</p>\",\n        \"amduca\": \"ONLABEL\"\n      },\n      {\n        \"product\": \"MiracleMed\",\n        \"route\": \"wip\",\n        \"dosage\": {\n          \"doseId\": 90743195\n        },\n        \"sequenceFunction\": {\n          \"_type\": \"models.SeqSingleDose\"\n        },\n        \"sizeFunction\": {\n          \"_type\": \"models.FixedDoseFunction\",\n          \"dose\": {\n            \"quantity\": {\n              \"dimension\": \"Mass\",\n              \"value\": 3,\n              \"symbol\": \"oz\"\n            }\n          }\n        },\n        \"id\": \"B-123\",\n        \"ownerId\": 0,\n        \"description\": \"3.0 ml per kg repeat\",\n        \"eligibilities\": [\n          {\n            \"id\": 1,\n            \"name\": \"Beef Cattle\",\n            \"fdaSpecies\": [\n              \"emus\",\n              \"bison\"\n            ]\n          },\n          {\n            \"id\": 1,\n            \"name\": \"Beef Cattle\",\n            \"fdaSpecies\": [\n              \"llamas\",\n              \"emus\"\n            ]\n          }\n        ],\n        \"_dose\": \"3.0 ml per kg repeat in 6 hours and again in 24 hours\",\n        \"wtMeatHrs\": -43055535,\n        \"wtMilkHrs\": -97115862,\n        \"nada\": \"wip\",\n        \"tags\": [\n          {\n            \"id\": 8,\n            \"color\": \"#516cc6\",\n            \"name\": \"fugiat do\",\n            \"fixes\": [\n              {\n                \"_type\": {\n                  \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"detail\": {\n                  \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"message\": {\n                  \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"title\": {\n                  \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                }\n              },\n              {\n                \"_type\": {\n                  \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"detail\": {\n                  \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"message\": {\n                  \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"title\": {\n                  \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                }\n              }\n            ]\n          },\n          {\n            \"id\": 8,\n            \"color\": \"#516cc6\",\n            \"name\": \"in\",\n            \"fixes\": [\n              {\n                \"_type\": {\n                  \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"detail\": {\n                  \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"message\": {\n                  \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"title\": {\n                  \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                }\n              },\n              {\n                \"_type\": {\n                  \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"detail\": {\n                  \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"message\": {\n                  \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"title\": {\n                  \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                }\n              }\n            ]\n          }\n        ],\n        \"note\": \"<p>a free-form note</p>\",\n        \"amduca\": \"UNIDENTIFIED\"\n      }\n    ],\n    \"tags\": [\n      {\n        \"id\": 8,\n        \"color\": \"#516cc6\",\n        \"name\": \"dolor Lorem\",\n        \"fixes\": [\n          {\n            \"_type\": \"do\",\n            \"detail\": \"cillum irure incididunt ad\",\n            \"message\": \"sit\",\n            \"title\": \"officia ut\"\n          },\n          {\n            \"_type\": \"commodo cillum non\",\n            \"detail\": \"ut cupidatat\",\n            \"message\": \"Lorem laboris\",\n            \"title\": \"sed Excepteur\"\n          }\n        ]\n      },\n      {\n        \"id\": 8,\n        \"color\": \"#516cc6\",\n        \"name\": \"proident volu\",\n        \"fixes\": [\n          {\n            \"_type\": \"ipsum reprehenderit velit\",\n            \"detail\": \"irure\",\n            \"message\": \"Ut\",\n            \"title\": \"Excepteur officia non qui\"\n          },\n          {\n            \"_type\": \"est sunt laboris ad\",\n            \"detail\": \"mollit sed deserunt\",\n            \"message\": \"nisi veniam\",\n            \"title\": \"adipisicing do irure\"\n          }\n        ]\n      }\n    ],\n    \"diagnoses\": [\n      {\n        \"id\": 8,\n        \"name\": \"Pain/inflammation (musculoskeletal), treatment\"\n      },\n      {\n        \"id\": 8,\n        \"name\": \"Pain/inflammation (musculoskeletal), treatment\"\n      }\n    ],\n    \"eligibilities\": [\n      {\n        \"id\": 1,\n        \"name\": \"Beef Cattle\",\n        \"fdaSpecies\": [\n          \"salmon\",\n          \"other\"\n        ]\n      },\n      {\n        \"id\": 1,\n        \"name\": \"Beef Cattle\",\n        \"fdaSpecies\": [\n          \"salmon\",\n          \"fish\"\n        ]\n      }\n    ],\n    \"promises\": [\n      {\n        \"_type\": \"models.IdPromise\",\n        \"name\": \"ID promise\",\n        \"descrip\": \"You must give ID for each case enrolled\",\n        \"query\": \"What is the animal's name or number?\",\n        \"when\": \"PT0H\",\n        \"id\": 2345\n      },\n      {\n        \"_type\": \"models.IdPromise\",\n        \"name\": \"ID promise\",\n        \"descrip\": \"You must give ID for each case enrolled\",\n        \"query\": \"What is the animal's name or number?\",\n        \"when\": \"PT0H\",\n        \"id\": 2345\n      }\n    ],\n    \"metadata\": [\n      {\n        \"key\": \"popularity\",\n        \"value\": \"good 1.2\"\n      },\n      {\n        \"key\": \"popularity\",\n        \"value\": \"good 1.2\"\n      }\n    ]\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "24b84542-eb76-4ae1-b58d-e3795ba197a0",
                            "name": "The server can not understand the request due to invalid syntax.",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "api",
                                        "protocols",
                                        "amducatags"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "description": {
                                            "content": "Added as a part of security scheme: apikey",
                                            "type": "text/plain"
                                        },
                                        "key": "X-Auth-Token",
                                        "value": "<API Key>"
                                    }
                                ],
                                "method": "PUT",
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n  \"ownerId\": 1,\n  \"name\": \"wip\",\n  \"status\": \"PRESCRIBED\",\n  \"instructions\": {\n    \"considerations\": \"<p>This is just an example, not a real protocol.</p>\",\n    \"restrictions\": \"<p>Not for use on real animals.</p>\",\n    \"dothis\": \"<h3>Examinations to perform</h3>\",\n    \"recordthis\": \"<p>record every step in your notebook.</p>\",\n    \"success\": \"<p>All problems are gone</p>\",\n    \"failure\": \"<p>One or more problems remain</p>\",\n    \"references\": \"<a href=\\\"https://en.wikipedia.org/wiki/Rickrolling\\\">Wikipedia</a>\"\n  },\n  \"id\": 12345,\n  \"shortname\": \"wip\",\n  \"created\": \"2020-01-10T10:30:37Z\",\n  \"edited\": \"2020-02-10T10:30:37Z\",\n  \"vetNote\": \"consider prescribing protocol x instead\",\n  \"wtMeatHrs\": 22,\n  \"wtMilkHrs\": 5,\n  \"shareAll\": true,\n  \"shareClonable\": true,\n  \"caseDefinition\": {\n    \"requireId\": false,\n    \"requireMor\": false,\n    \"contraindications\": \"\",\n    \"medical\": \"if fever is present, consider Protocol 12345 instead.\",\n    \"economic\": \"\",\n    \"note\": \"\"\n  },\n  \"treatments\": [\n    {\n      \"product\": \"MiracleMed\",\n      \"route\": \"wip\",\n      \"dosage\": {\n        \"doseId\": 69015374\n      },\n      \"sequenceFunction\": {\n        \"_type\": \"models.SeqSingleDose\"\n      },\n      \"sizeFunction\": {\n        \"_type\": \"models.FixedDoseFunction\",\n        \"dose\": {\n          \"quantity\": {\n            \"dimension\": \"Mass\",\n            \"value\": 3,\n            \"symbol\": \"oz\"\n          }\n        }\n      },\n      \"id\": \"B-123\",\n      \"ownerId\": 0,\n      \"description\": \"3.0 ml per kg repeat\",\n      \"eligibilities\": [\n        {\n          \"id\": 1,\n          \"name\": \"Beef Cattle\",\n          \"fdaSpecies\": [\n            \"chickens\",\n            \"unidentified\"\n          ]\n        },\n        {\n          \"id\": 1,\n          \"name\": \"Beef Cattle\",\n          \"fdaSpecies\": [\n            \"unidentified\",\n            \"veal\"\n          ]\n        }\n      ],\n      \"_dose\": \"3.0 ml per kg repeat in 6 hours and again in 24 hours\",\n      \"wtMeatHrs\": 27424849,\n      \"wtMilkHrs\": -87261637,\n      \"nada\": \"wip\",\n      \"tags\": [\n        {\n          \"id\": 8,\n          \"color\": \"#516cc6\",\n          \"name\": \"occaecat Duis \",\n          \"fixes\": [\n            {\n              \"_type\": \"Excepteur exercitation qui aliquip\",\n              \"detail\": \"aute ut nulla irure\",\n              \"message\": \"eiusmod laborum elit magna aute\",\n              \"title\": \"Duis esse exercitation\"\n            },\n            {\n              \"_type\": \"labore\",\n              \"detail\": \"officia velit magna ut\",\n              \"message\": \"eu sit elit dolore veniam\",\n              \"title\": \"irure minim\"\n            }\n          ]\n        },\n        {\n          \"id\": 8,\n          \"color\": \"#516cc6\",\n          \"name\": \"irure inci\",\n          \"fixes\": [\n            {\n              \"_type\": \"aliqua ut dolor dolor occaecat\",\n              \"detail\": \"occaecat deserunt Lorem mollit labore\",\n              \"message\": \"sit ut voluptate\",\n              \"title\": \"ut occaecat irure\"\n            },\n            {\n              \"_type\": \"labore dolore reprehenderit quis\",\n              \"detail\": \"dolore dolor\",\n              \"message\": \"id dolor\",\n              \"title\": \"\"\n            }\n          ]\n        }\n      ],\n      \"note\": \"<p>a free-form note</p>\",\n      \"amduca\": \"OFFLABEL\"\n    },\n    {\n      \"product\": \"MiracleMed\",\n      \"route\": \"wip\",\n      \"dosage\": {\n        \"doseId\": 35781694\n      },\n      \"sequenceFunction\": {\n        \"_type\": \"models.SeqSingleDose\"\n      },\n      \"sizeFunction\": {\n        \"_type\": \"models.FixedDoseFunction\",\n        \"dose\": {\n          \"quantity\": {\n            \"dimension\": \"Mass\",\n            \"value\": 3,\n            \"symbol\": \"oz\"\n          }\n        }\n      },\n      \"id\": \"B-123\",\n      \"ownerId\": 0,\n      \"description\": \"3.0 ml per kg repeat\",\n      \"eligibilities\": [\n        {\n          \"id\": 1,\n          \"name\": \"Beef Cattle\",\n          \"fdaSpecies\": [\n            \"bison\",\n            \"gamebirds\"\n          ]\n        },\n        {\n          \"id\": 1,\n          \"name\": \"Beef Cattle\",\n          \"fdaSpecies\": [\n            \"salmon\",\n            \"emus\"\n          ]\n        }\n      ],\n      \"_dose\": \"3.0 ml per kg repeat in 6 hours and again in 24 hours\",\n      \"wtMeatHrs\": 37808317,\n      \"wtMilkHrs\": 69116765,\n      \"nada\": \"wip\",\n      \"tags\": [\n        {\n          \"id\": 8,\n          \"color\": \"#516cc6\",\n          \"name\": \"proiden\",\n          \"fixes\": [\n            {\n              \"_type\": \"occaecat commodo tempor non\",\n              \"detail\": \"sunt cupidatat labore\",\n              \"message\": \"aliqua ut adipisicing\",\n              \"title\": \"magna dolore aute anim\"\n            },\n            {\n              \"_type\": \"dolor quis\",\n              \"detail\": \"voluptate cillum ut\",\n              \"message\": \"elit laboris\",\n              \"title\": \"adipisicing sun\"\n            }\n          ]\n        },\n        {\n          \"id\": 8,\n          \"color\": \"#516cc6\",\n          \"name\": \"mol\",\n          \"fixes\": [\n            {\n              \"_type\": \"ad fugiat\",\n              \"detail\": \"fugiat\",\n              \"message\": \"ut quis ullamco\",\n              \"title\": \"Ut commodo aliqua\"\n            },\n            {\n              \"_type\": \"cillum tempor qui exercitation\",\n              \"detail\": \"sunt quis Excepteur\",\n              \"message\": \"aliquip fugiat\",\n              \"title\": \"ut in\"\n            }\n          ]\n        }\n      ],\n      \"note\": \"<p>a free-form note</p>\",\n      \"amduca\": \"UNIDENTIFIED\"\n    }\n  ],\n  \"tags\": [\n    {\n      \"id\": 8,\n      \"color\": \"#516cc6\",\n      \"name\": \"ex e\",\n      \"fixes\": [\n        {\n          \"_type\": \"irure dolor ad culpa\",\n          \"detail\": \"in officia mollit dolor\",\n          \"message\": \"sit\",\n          \"title\": \"laborum irure ut\"\n        },\n        {\n          \"_type\": \"laborum\",\n          \"detail\": \"commodo sunt tempor\",\n          \"message\": \"proident\",\n          \"title\": \"exercitation sit dolore nulla\"\n        }\n      ]\n    },\n    {\n      \"id\": 8,\n      \"color\": \"#516cc6\",\n      \"name\": \"dolor aute e\",\n      \"fixes\": [\n        {\n          \"_type\": \"dolore ut\",\n          \"detail\": \"cupidatat culpa fugiat dolor\",\n          \"message\": \"in\",\n          \"title\": \"velit minim qui\"\n        },\n        {\n          \"_type\": \"dolor\",\n          \"detail\": \"dolor nulla\",\n          \"message\": \"dolor ut aliqua sit\",\n          \"title\": \"culpa pariatur tempor est\"\n        }\n      ]\n    }\n  ],\n  \"diagnoses\": [\n    {\n      \"id\": 8,\n      \"name\": \"Pain/inflammation (musculoskeletal), treatment\"\n    },\n    {\n      \"id\": 8,\n      \"name\": \"Pain/inflammation (musculoskeletal), treatment\"\n    }\n  ],\n  \"eligibilities\": [\n    {\n      \"id\": 1,\n      \"name\": \"Beef Cattle\",\n      \"fdaSpecies\": [\n        \"llamas\",\n        \"llamas\"\n      ]\n    },\n    {\n      \"id\": 1,\n      \"name\": \"Beef Cattle\",\n      \"fdaSpecies\": [\n        \"sheep\",\n        \"horses\"\n      ]\n    }\n  ],\n  \"promises\": [\n    {\n      \"_type\": \"models.IdPromise\",\n      \"name\": \"ID promise\",\n      \"descrip\": \"You must give ID for each case enrolled\",\n      \"query\": \"What is the animal's name or number?\",\n      \"when\": \"PT0H\",\n      \"id\": 2345\n    },\n    {\n      \"_type\": \"models.IdPromise\",\n      \"name\": \"ID promise\",\n      \"descrip\": \"You must give ID for each case enrolled\",\n      \"query\": \"What is the animal's name or number?\",\n      \"when\": \"PT0H\",\n      \"id\": 2345\n    }\n  ],\n  \"metadata\": [\n    {\n      \"key\": \"popularity\",\n      \"value\": \"good 1.2\"\n    },\n    {\n      \"key\": \"popularity\",\n      \"value\": \"good 1.2\"\n    }\n  ]\n}",
                                    "options": {
                                        "raw": {
                                            "language": "json"
                                        }
                                    }
                                }
                            },
                            "status": "Bad Request",
                            "code": 400,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"title\": \"incorrect username or password\",\n  \"status\": 404,\n  \"errorType\": \"/errors/incorrect-user-pass\",\n  \"detail\": \"Authentication failed due to incorrect username or password.\",\n  \"instance\": \"/login/log/abc123\"\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "f02fa84e-84a8-47f8-bb6d-b52efcd967d6",
                            "name": "Authorization required",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "api",
                                        "protocols",
                                        "amducatags"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "description": {
                                            "content": "Added as a part of security scheme: apikey",
                                            "type": "text/plain"
                                        },
                                        "key": "X-Auth-Token",
                                        "value": "<API Key>"
                                    }
                                ],
                                "method": "PUT",
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n  \"ownerId\": 1,\n  \"name\": \"wip\",\n  \"status\": \"PRESCRIBED\",\n  \"instructions\": {\n    \"considerations\": \"<p>This is just an example, not a real protocol.</p>\",\n    \"restrictions\": \"<p>Not for use on real animals.</p>\",\n    \"dothis\": \"<h3>Examinations to perform</h3>\",\n    \"recordthis\": \"<p>record every step in your notebook.</p>\",\n    \"success\": \"<p>All problems are gone</p>\",\n    \"failure\": \"<p>One or more problems remain</p>\",\n    \"references\": \"<a href=\\\"https://en.wikipedia.org/wiki/Rickrolling\\\">Wikipedia</a>\"\n  },\n  \"id\": 12345,\n  \"shortname\": \"wip\",\n  \"created\": \"2020-01-10T10:30:37Z\",\n  \"edited\": \"2020-02-10T10:30:37Z\",\n  \"vetNote\": \"consider prescribing protocol x instead\",\n  \"wtMeatHrs\": 22,\n  \"wtMilkHrs\": 5,\n  \"shareAll\": true,\n  \"shareClonable\": true,\n  \"caseDefinition\": {\n    \"requireId\": false,\n    \"requireMor\": false,\n    \"contraindications\": \"\",\n    \"medical\": \"if fever is present, consider Protocol 12345 instead.\",\n    \"economic\": \"\",\n    \"note\": \"\"\n  },\n  \"treatments\": [\n    {\n      \"product\": \"MiracleMed\",\n      \"route\": \"wip\",\n      \"dosage\": {\n        \"doseId\": 69015374\n      },\n      \"sequenceFunction\": {\n        \"_type\": \"models.SeqSingleDose\"\n      },\n      \"sizeFunction\": {\n        \"_type\": \"models.FixedDoseFunction\",\n        \"dose\": {\n          \"quantity\": {\n            \"dimension\": \"Mass\",\n            \"value\": 3,\n            \"symbol\": \"oz\"\n          }\n        }\n      },\n      \"id\": \"B-123\",\n      \"ownerId\": 0,\n      \"description\": \"3.0 ml per kg repeat\",\n      \"eligibilities\": [\n        {\n          \"id\": 1,\n          \"name\": \"Beef Cattle\",\n          \"fdaSpecies\": [\n            \"chickens\",\n            \"unidentified\"\n          ]\n        },\n        {\n          \"id\": 1,\n          \"name\": \"Beef Cattle\",\n          \"fdaSpecies\": [\n            \"unidentified\",\n            \"veal\"\n          ]\n        }\n      ],\n      \"_dose\": \"3.0 ml per kg repeat in 6 hours and again in 24 hours\",\n      \"wtMeatHrs\": 27424849,\n      \"wtMilkHrs\": -87261637,\n      \"nada\": \"wip\",\n      \"tags\": [\n        {\n          \"id\": 8,\n          \"color\": \"#516cc6\",\n          \"name\": \"occaecat Duis \",\n          \"fixes\": [\n            {\n              \"_type\": \"Excepteur exercitation qui aliquip\",\n              \"detail\": \"aute ut nulla irure\",\n              \"message\": \"eiusmod laborum elit magna aute\",\n              \"title\": \"Duis esse exercitation\"\n            },\n            {\n              \"_type\": \"labore\",\n              \"detail\": \"officia velit magna ut\",\n              \"message\": \"eu sit elit dolore veniam\",\n              \"title\": \"irure minim\"\n            }\n          ]\n        },\n        {\n          \"id\": 8,\n          \"color\": \"#516cc6\",\n          \"name\": \"irure inci\",\n          \"fixes\": [\n            {\n              \"_type\": \"aliqua ut dolor dolor occaecat\",\n              \"detail\": \"occaecat deserunt Lorem mollit labore\",\n              \"message\": \"sit ut voluptate\",\n              \"title\": \"ut occaecat irure\"\n            },\n            {\n              \"_type\": \"labore dolore reprehenderit quis\",\n              \"detail\": \"dolore dolor\",\n              \"message\": \"id dolor\",\n              \"title\": \"\"\n            }\n          ]\n        }\n      ],\n      \"note\": \"<p>a free-form note</p>\",\n      \"amduca\": \"OFFLABEL\"\n    },\n    {\n      \"product\": \"MiracleMed\",\n      \"route\": \"wip\",\n      \"dosage\": {\n        \"doseId\": 35781694\n      },\n      \"sequenceFunction\": {\n        \"_type\": \"models.SeqSingleDose\"\n      },\n      \"sizeFunction\": {\n        \"_type\": \"models.FixedDoseFunction\",\n        \"dose\": {\n          \"quantity\": {\n            \"dimension\": \"Mass\",\n            \"value\": 3,\n            \"symbol\": \"oz\"\n          }\n        }\n      },\n      \"id\": \"B-123\",\n      \"ownerId\": 0,\n      \"description\": \"3.0 ml per kg repeat\",\n      \"eligibilities\": [\n        {\n          \"id\": 1,\n          \"name\": \"Beef Cattle\",\n          \"fdaSpecies\": [\n            \"bison\",\n            \"gamebirds\"\n          ]\n        },\n        {\n          \"id\": 1,\n          \"name\": \"Beef Cattle\",\n          \"fdaSpecies\": [\n            \"salmon\",\n            \"emus\"\n          ]\n        }\n      ],\n      \"_dose\": \"3.0 ml per kg repeat in 6 hours and again in 24 hours\",\n      \"wtMeatHrs\": 37808317,\n      \"wtMilkHrs\": 69116765,\n      \"nada\": \"wip\",\n      \"tags\": [\n        {\n          \"id\": 8,\n          \"color\": \"#516cc6\",\n          \"name\": \"proiden\",\n          \"fixes\": [\n            {\n              \"_type\": \"occaecat commodo tempor non\",\n              \"detail\": \"sunt cupidatat labore\",\n              \"message\": \"aliqua ut adipisicing\",\n              \"title\": \"magna dolore aute anim\"\n            },\n            {\n              \"_type\": \"dolor quis\",\n              \"detail\": \"voluptate cillum ut\",\n              \"message\": \"elit laboris\",\n              \"title\": \"adipisicing sun\"\n            }\n          ]\n        },\n        {\n          \"id\": 8,\n          \"color\": \"#516cc6\",\n          \"name\": \"mol\",\n          \"fixes\": [\n            {\n              \"_type\": \"ad fugiat\",\n              \"detail\": \"fugiat\",\n              \"message\": \"ut quis ullamco\",\n              \"title\": \"Ut commodo aliqua\"\n            },\n            {\n              \"_type\": \"cillum tempor qui exercitation\",\n              \"detail\": \"sunt quis Excepteur\",\n              \"message\": \"aliquip fugiat\",\n              \"title\": \"ut in\"\n            }\n          ]\n        }\n      ],\n      \"note\": \"<p>a free-form note</p>\",\n      \"amduca\": \"UNIDENTIFIED\"\n    }\n  ],\n  \"tags\": [\n    {\n      \"id\": 8,\n      \"color\": \"#516cc6\",\n      \"name\": \"ex e\",\n      \"fixes\": [\n        {\n          \"_type\": \"irure dolor ad culpa\",\n          \"detail\": \"in officia mollit dolor\",\n          \"message\": \"sit\",\n          \"title\": \"laborum irure ut\"\n        },\n        {\n          \"_type\": \"laborum\",\n          \"detail\": \"commodo sunt tempor\",\n          \"message\": \"proident\",\n          \"title\": \"exercitation sit dolore nulla\"\n        }\n      ]\n    },\n    {\n      \"id\": 8,\n      \"color\": \"#516cc6\",\n      \"name\": \"dolor aute e\",\n      \"fixes\": [\n        {\n          \"_type\": \"dolore ut\",\n          \"detail\": \"cupidatat culpa fugiat dolor\",\n          \"message\": \"in\",\n          \"title\": \"velit minim qui\"\n        },\n        {\n          \"_type\": \"dolor\",\n          \"detail\": \"dolor nulla\",\n          \"message\": \"dolor ut aliqua sit\",\n          \"title\": \"culpa pariatur tempor est\"\n        }\n      ]\n    }\n  ],\n  \"diagnoses\": [\n    {\n      \"id\": 8,\n      \"name\": \"Pain/inflammation (musculoskeletal), treatment\"\n    },\n    {\n      \"id\": 8,\n      \"name\": \"Pain/inflammation (musculoskeletal), treatment\"\n    }\n  ],\n  \"eligibilities\": [\n    {\n      \"id\": 1,\n      \"name\": \"Beef Cattle\",\n      \"fdaSpecies\": [\n        \"llamas\",\n        \"llamas\"\n      ]\n    },\n    {\n      \"id\": 1,\n      \"name\": \"Beef Cattle\",\n      \"fdaSpecies\": [\n        \"sheep\",\n        \"horses\"\n      ]\n    }\n  ],\n  \"promises\": [\n    {\n      \"_type\": \"models.IdPromise\",\n      \"name\": \"ID promise\",\n      \"descrip\": \"You must give ID for each case enrolled\",\n      \"query\": \"What is the animal's name or number?\",\n      \"when\": \"PT0H\",\n      \"id\": 2345\n    },\n    {\n      \"_type\": \"models.IdPromise\",\n      \"name\": \"ID promise\",\n      \"descrip\": \"You must give ID for each case enrolled\",\n      \"query\": \"What is the animal's name or number?\",\n      \"when\": \"PT0H\",\n      \"id\": 2345\n    }\n  ],\n  \"metadata\": [\n    {\n      \"key\": \"popularity\",\n      \"value\": \"good 1.2\"\n    },\n    {\n      \"key\": \"popularity\",\n      \"value\": \"good 1.2\"\n    }\n  ]\n}",
                                    "options": {
                                        "raw": {
                                            "language": "json"
                                        }
                                    }
                                }
                            },
                            "status": "Forbidden",
                            "code": 403,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "text/plain"
                                }
                            ],
                            "body": "",
                            "cookie": [],
                            "_postman_previewlanguage": "text"
                        }
                    ],
                    "event": [],
                    "protocolProfileBehavior": {
                        "disableBodyPruning": true
                    }
                },
                {
                    "id": "b6cd6b68-c434-40f9-9c41-eec538bf4ebf",
                    "name": "list of all Tags",
                    "request": {
                        "name": "list of all Tags",
                        "description": {
                            "content": "Returns the full array of tags for protocols and treatments.",
                            "type": "text/plain"
                        },
                        "url": {
                            "path": [
                                "api",
                                "protocols",
                                "tags"
                            ],
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "query": [],
                            "variable": []
                        },
                        "header": [
                            {
                                "key": "Accept",
                                "value": "application/json"
                            }
                        ],
                        "method": "GET",
                        "auth": null
                    },
                    "response": [
                        {
                            "id": "b616ae87-cca1-4e69-a39a-34e84d66ec7b",
                            "name": "OK",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "api",
                                        "protocols",
                                        "tags"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "description": {
                                            "content": "Added as a part of security scheme: apikey",
                                            "type": "text/plain"
                                        },
                                        "key": "X-Auth-Token",
                                        "value": "<API Key>"
                                    }
                                ],
                                "method": "GET",
                                "body": {}
                            },
                            "status": "OK",
                            "code": 200,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"tags\": [\n    {\n      \"id\": 8,\n      \"color\": \"#516cc6\",\n      \"name\": \"fugiat \",\n      \"fixes\": [\n        {\n          \"_type\": \"dolore fugiat cul\",\n          \"detail\": \"Duis in commodo proident\",\n          \"message\": \"dolore cillum ut\",\n          \"title\": \"esse\"\n        },\n        {\n          \"_type\": \"deserunt nostrud ut cillum\",\n          \"detail\": \"ea cupidatat\",\n          \"message\": \"cillum aute mollit\",\n          \"title\": \"commodo Lorem id eu\"\n        }\n      ]\n    },\n    {\n      \"id\": 8,\n      \"color\": \"#516cc6\",\n      \"name\": \"c\",\n      \"fixes\": [\n        {\n          \"_type\": \"est ipsum o\",\n          \"detail\": \"labore sed pariatur\",\n          \"message\": \"quis\",\n          \"title\": \"id ipsum veniam labore\"\n        },\n        {\n          \"_type\": \"qui aliqua sint culpa\",\n          \"detail\": \"officia dolor commodo\",\n          \"message\": \"amet ipsum commodo\",\n          \"title\": \"cillum anim ea\"\n        }\n      ]\n    }\n  ]\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        }
                    ],
                    "event": []
                },
                {
                    "id": "bb0e9f3c-a33a-4f91-96a8-4d90de87a549",
                    "name": "execute Remedy",
                    "request": {
                        "name": "execute Remedy",
                        "description": {
                            "content": "Apply a Remedy to a Protocol, returning the fixed Protocol.",
                            "type": "text/plain"
                        },
                        "url": {
                            "path": [
                                "api",
                                "protocols",
                                "tags",
                                "remedies"
                            ],
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "query": [],
                            "variable": []
                        },
                        "header": [
                            {
                                "key": "Content-Type",
                                "value": "application/json"
                            },
                            {
                                "key": "Accept",
                                "value": "application/json"
                            }
                        ],
                        "method": "PUT",
                        "auth": null,
                        "body": {
                            "mode": "raw",
                            "raw": "{\n  \"protocol\": {\n    \"ownerId\": 1,\n    \"name\": \"wip\",\n    \"status\": \"PRESCRIBED\",\n    \"instructions\": {\n      \"considerations\": \"<p>This is just an example, not a real protocol.</p>\",\n      \"restrictions\": \"<p>Not for use on real animals.</p>\",\n      \"dothis\": \"<h3>Examinations to perform</h3>\",\n      \"recordthis\": \"<p>record every step in your notebook.</p>\",\n      \"success\": \"<p>All problems are gone</p>\",\n      \"failure\": \"<p>One or more problems remain</p>\",\n      \"references\": \"<a href=\\\"https://en.wikipedia.org/wiki/Rickrolling\\\">Wikipedia</a>\"\n    },\n    \"id\": 12345,\n    \"shortname\": \"wip\",\n    \"created\": \"2020-01-10T10:30:37Z\",\n    \"edited\": \"2020-02-10T10:30:37Z\",\n    \"vetNote\": \"consider prescribing protocol x instead\",\n    \"wtMeatHrs\": 22,\n    \"wtMilkHrs\": 5,\n    \"shareAll\": true,\n    \"shareClonable\": true,\n    \"caseDefinition\": {\n      \"requireId\": false,\n      \"requireMor\": false,\n      \"contraindications\": \"\",\n      \"medical\": \"if fever is present, consider Protocol 12345 instead.\",\n      \"economic\": \"\",\n      \"note\": \"\"\n    },\n    \"treatments\": [\n      {\n        \"product\": \"MiracleMed\",\n        \"route\": \"wip\",\n        \"dosage\": {\n          \"doseId\": 37601077\n        },\n        \"sequenceFunction\": {\n          \"_type\": \"models.SeqSingleDose\"\n        },\n        \"sizeFunction\": {\n          \"_type\": \"models.FixedDoseFunction\",\n          \"dose\": {\n            \"quantity\": {\n              \"dimension\": \"Mass\",\n              \"value\": 3,\n              \"symbol\": \"oz\"\n            }\n          }\n        },\n        \"id\": \"B-123\",\n        \"ownerId\": 0,\n        \"description\": \"3.0 ml per kg repeat\",\n        \"eligibilities\": [\n          {\n            \"id\": 1,\n            \"name\": \"Beef Cattle\",\n            \"fdaSpecies\": [\n              \"beef_cattle\",\n              \"catfish\"\n            ]\n          },\n          {\n            \"id\": 1,\n            \"name\": \"Beef Cattle\",\n            \"fdaSpecies\": [\n              \"cats\",\n              \"chickens\"\n            ]\n          }\n        ],\n        \"_dose\": \"3.0 ml per kg repeat in 6 hours and again in 24 hours\",\n        \"wtMeatHrs\": 63116508,\n        \"wtMilkHrs\": -52127182,\n        \"nada\": \"wip\",\n        \"tags\": [\n          {\n            \"id\": 8,\n            \"color\": \"#516cc6\",\n            \"name\": \"cillum dol\",\n            \"fixes\": [\n              {\n                \"_type\": {\n                  \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"detail\": {\n                  \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"message\": {\n                  \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"title\": {\n                  \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                }\n              },\n              {\n                \"_type\": {\n                  \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"detail\": {\n                  \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"message\": {\n                  \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"title\": {\n                  \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                }\n              }\n            ]\n          },\n          {\n            \"id\": 8,\n            \"color\": \"#516cc6\",\n            \"name\": \"amet et sed\",\n            \"fixes\": [\n              {\n                \"_type\": {\n                  \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"detail\": {\n                  \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"message\": {\n                  \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"title\": {\n                  \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                }\n              },\n              {\n                \"_type\": {\n                  \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"detail\": {\n                  \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"message\": {\n                  \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"title\": {\n                  \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                }\n              }\n            ]\n          }\n        ],\n        \"note\": \"<p>a free-form note</p>\",\n        \"amduca\": \"OFFLABEL\"\n      },\n      {\n        \"product\": \"MiracleMed\",\n        \"route\": \"wip\",\n        \"dosage\": {\n          \"doseId\": -95998222\n        },\n        \"sequenceFunction\": {\n          \"_type\": \"models.SeqSingleDose\"\n        },\n        \"sizeFunction\": {\n          \"_type\": \"models.FixedDoseFunction\",\n          \"dose\": {\n            \"quantity\": {\n              \"dimension\": \"Mass\",\n              \"value\": 3,\n              \"symbol\": \"oz\"\n            }\n          }\n        },\n        \"id\": \"B-123\",\n        \"ownerId\": 0,\n        \"description\": \"3.0 ml per kg repeat\",\n        \"eligibilities\": [\n          {\n            \"id\": 1,\n            \"name\": \"Beef Cattle\",\n            \"fdaSpecies\": [\n              \"veal\",\n              \"sheep\"\n            ]\n          },\n          {\n            \"id\": 1,\n            \"name\": \"Beef Cattle\",\n            \"fdaSpecies\": [\n              \"salmon\",\n              \"beef_cattle\"\n            ]\n          }\n        ],\n        \"_dose\": \"3.0 ml per kg repeat in 6 hours and again in 24 hours\",\n        \"wtMeatHrs\": 4823315,\n        \"wtMilkHrs\": 67813094,\n        \"nada\": \"wip\",\n        \"tags\": [\n          {\n            \"id\": 8,\n            \"color\": \"#516cc6\",\n            \"name\": \"fugiat cul\",\n            \"fixes\": [\n              {\n                \"_type\": {\n                  \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"detail\": {\n                  \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"message\": {\n                  \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"title\": {\n                  \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                }\n              },\n              {\n                \"_type\": {\n                  \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"detail\": {\n                  \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"message\": {\n                  \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"title\": {\n                  \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                }\n              }\n            ]\n          },\n          {\n            \"id\": 8,\n            \"color\": \"#516cc6\",\n            \"name\": \"labore dolor \",\n            \"fixes\": [\n              {\n                \"_type\": {\n                  \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"detail\": {\n                  \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"message\": {\n                  \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"title\": {\n                  \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                }\n              },\n              {\n                \"_type\": {\n                  \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"detail\": {\n                  \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"message\": {\n                  \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"title\": {\n                  \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                }\n              }\n            ]\n          }\n        ],\n        \"note\": \"<p>a free-form note</p>\",\n        \"amduca\": \"OFFLABEL\"\n      }\n    ],\n    \"tags\": [\n      {\n        \"id\": 8,\n        \"color\": \"#516cc6\",\n        \"name\": \"sunt Ut\",\n        \"fixes\": [\n          {\n            \"_type\": \"commodo officia l\",\n            \"detail\": \"in Excepteur id nisi\",\n            \"message\": \"ipsum cillum nulla\",\n            \"title\": \"nisi nostrud\"\n          },\n          {\n            \"_type\": \"ut ullamco\",\n            \"detail\": \"dolore sint magna\",\n            \"message\": \"ex non\",\n            \"title\": \"in ullamco cillum sed\"\n          }\n        ]\n      },\n      {\n        \"id\": 8,\n        \"color\": \"#516cc6\",\n        \"name\": \"fug\",\n        \"fixes\": [\n          {\n            \"_type\": \"elit anim\",\n            \"detail\": \"mollit officia fugiat\",\n            \"message\": \"id Duis\",\n            \"title\": \"dolor Duis eiusmod Lorem\"\n          },\n          {\n            \"_type\": \"ut irure\",\n            \"detail\": \"dolor ut\",\n            \"message\": \"eiusmod sed anim elit\",\n            \"title\": \"commodo\"\n          }\n        ]\n      }\n    ],\n    \"diagnoses\": [\n      {\n        \"id\": 8,\n        \"name\": \"Pain/inflammation (musculoskeletal), treatment\"\n      },\n      {\n        \"id\": 8,\n        \"name\": \"Pain/inflammation (musculoskeletal), treatment\"\n      }\n    ],\n    \"eligibilities\": [\n      {\n        \"id\": 1,\n        \"name\": \"Beef Cattle\",\n        \"fdaSpecies\": [\n          \"chickens\",\n          \"horses\"\n        ]\n      },\n      {\n        \"id\": 1,\n        \"name\": \"Beef Cattle\",\n        \"fdaSpecies\": [\n          \"dairy_cattle\",\n          \"dogs\"\n        ]\n      }\n    ],\n    \"promises\": [\n      {\n        \"_type\": \"models.IdPromise\",\n        \"name\": \"ID promise\",\n        \"descrip\": \"You must give ID for each case enrolled\",\n        \"query\": \"What is the animal's name or number?\",\n        \"when\": \"PT0H\",\n        \"id\": 2345\n      },\n      {\n        \"_type\": \"models.IdPromise\",\n        \"name\": \"ID promise\",\n        \"descrip\": \"You must give ID for each case enrolled\",\n        \"query\": \"What is the animal's name or number?\",\n        \"when\": \"PT0H\",\n        \"id\": 2345\n      }\n    ],\n    \"metadata\": [\n      {\n        \"key\": \"popularity\",\n        \"value\": \"good 1.2\"\n      },\n      {\n        \"key\": \"popularity\",\n        \"value\": \"good 1.2\"\n      }\n    ]\n  },\n  \"remedy\": {\n    \"_type\": \"consequat minim\",\n    \"detail\": \"commodo dolore consectetur exercitation\",\n    \"message\": \"officia consequat tem\",\n    \"title\": \"laboris dolore enim reprehenderit\"\n  }\n}",
                            "options": {
                                "raw": {
                                    "language": "json"
                                }
                            }
                        }
                    },
                    "response": [
                        {
                            "id": "45675e5a-ca14-4d35-a02c-3a30e8242168",
                            "name": "OK",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "api",
                                        "protocols",
                                        "tags",
                                        "remedies"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "description": {
                                            "content": "Added as a part of security scheme: apikey",
                                            "type": "text/plain"
                                        },
                                        "key": "X-Auth-Token",
                                        "value": "<API Key>"
                                    }
                                ],
                                "method": "PUT",
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n  \"protocol\": {\n    \"ownerId\": 1,\n    \"name\": \"wip\",\n    \"status\": \"PRESCRIBED\",\n    \"instructions\": {\n      \"considerations\": \"<p>This is just an example, not a real protocol.</p>\",\n      \"restrictions\": \"<p>Not for use on real animals.</p>\",\n      \"dothis\": \"<h3>Examinations to perform</h3>\",\n      \"recordthis\": \"<p>record every step in your notebook.</p>\",\n      \"success\": \"<p>All problems are gone</p>\",\n      \"failure\": \"<p>One or more problems remain</p>\",\n      \"references\": \"<a href=\\\"https://en.wikipedia.org/wiki/Rickrolling\\\">Wikipedia</a>\"\n    },\n    \"id\": 12345,\n    \"shortname\": \"wip\",\n    \"created\": \"2020-01-10T10:30:37Z\",\n    \"edited\": \"2020-02-10T10:30:37Z\",\n    \"vetNote\": \"consider prescribing protocol x instead\",\n    \"wtMeatHrs\": 22,\n    \"wtMilkHrs\": 5,\n    \"shareAll\": true,\n    \"shareClonable\": true,\n    \"caseDefinition\": {\n      \"requireId\": false,\n      \"requireMor\": false,\n      \"contraindications\": \"\",\n      \"medical\": \"if fever is present, consider Protocol 12345 instead.\",\n      \"economic\": \"\",\n      \"note\": \"\"\n    },\n    \"treatments\": [\n      {\n        \"product\": \"MiracleMed\",\n        \"route\": \"wip\",\n        \"dosage\": {\n          \"doseId\": 37601077\n        },\n        \"sequenceFunction\": {\n          \"_type\": \"models.SeqSingleDose\"\n        },\n        \"sizeFunction\": {\n          \"_type\": \"models.FixedDoseFunction\",\n          \"dose\": {\n            \"quantity\": {\n              \"dimension\": \"Mass\",\n              \"value\": 3,\n              \"symbol\": \"oz\"\n            }\n          }\n        },\n        \"id\": \"B-123\",\n        \"ownerId\": 0,\n        \"description\": \"3.0 ml per kg repeat\",\n        \"eligibilities\": [\n          {\n            \"id\": 1,\n            \"name\": \"Beef Cattle\",\n            \"fdaSpecies\": [\n              \"beef_cattle\",\n              \"catfish\"\n            ]\n          },\n          {\n            \"id\": 1,\n            \"name\": \"Beef Cattle\",\n            \"fdaSpecies\": [\n              \"cats\",\n              \"chickens\"\n            ]\n          }\n        ],\n        \"_dose\": \"3.0 ml per kg repeat in 6 hours and again in 24 hours\",\n        \"wtMeatHrs\": 63116508,\n        \"wtMilkHrs\": -52127182,\n        \"nada\": \"wip\",\n        \"tags\": [\n          {\n            \"id\": 8,\n            \"color\": \"#516cc6\",\n            \"name\": \"cillum dol\",\n            \"fixes\": [\n              {\n                \"_type\": {\n                  \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"detail\": {\n                  \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"message\": {\n                  \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"title\": {\n                  \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                }\n              },\n              {\n                \"_type\": {\n                  \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"detail\": {\n                  \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"message\": {\n                  \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"title\": {\n                  \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                }\n              }\n            ]\n          },\n          {\n            \"id\": 8,\n            \"color\": \"#516cc6\",\n            \"name\": \"amet et sed\",\n            \"fixes\": [\n              {\n                \"_type\": {\n                  \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"detail\": {\n                  \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"message\": {\n                  \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"title\": {\n                  \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                }\n              },\n              {\n                \"_type\": {\n                  \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"detail\": {\n                  \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"message\": {\n                  \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"title\": {\n                  \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                }\n              }\n            ]\n          }\n        ],\n        \"note\": \"<p>a free-form note</p>\",\n        \"amduca\": \"OFFLABEL\"\n      },\n      {\n        \"product\": \"MiracleMed\",\n        \"route\": \"wip\",\n        \"dosage\": {\n          \"doseId\": -95998222\n        },\n        \"sequenceFunction\": {\n          \"_type\": \"models.SeqSingleDose\"\n        },\n        \"sizeFunction\": {\n          \"_type\": \"models.FixedDoseFunction\",\n          \"dose\": {\n            \"quantity\": {\n              \"dimension\": \"Mass\",\n              \"value\": 3,\n              \"symbol\": \"oz\"\n            }\n          }\n        },\n        \"id\": \"B-123\",\n        \"ownerId\": 0,\n        \"description\": \"3.0 ml per kg repeat\",\n        \"eligibilities\": [\n          {\n            \"id\": 1,\n            \"name\": \"Beef Cattle\",\n            \"fdaSpecies\": [\n              \"veal\",\n              \"sheep\"\n            ]\n          },\n          {\n            \"id\": 1,\n            \"name\": \"Beef Cattle\",\n            \"fdaSpecies\": [\n              \"salmon\",\n              \"beef_cattle\"\n            ]\n          }\n        ],\n        \"_dose\": \"3.0 ml per kg repeat in 6 hours and again in 24 hours\",\n        \"wtMeatHrs\": 4823315,\n        \"wtMilkHrs\": 67813094,\n        \"nada\": \"wip\",\n        \"tags\": [\n          {\n            \"id\": 8,\n            \"color\": \"#516cc6\",\n            \"name\": \"fugiat cul\",\n            \"fixes\": [\n              {\n                \"_type\": {\n                  \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"detail\": {\n                  \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"message\": {\n                  \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"title\": {\n                  \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                }\n              },\n              {\n                \"_type\": {\n                  \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"detail\": {\n                  \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"message\": {\n                  \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"title\": {\n                  \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                }\n              }\n            ]\n          },\n          {\n            \"id\": 8,\n            \"color\": \"#516cc6\",\n            \"name\": \"labore dolor \",\n            \"fixes\": [\n              {\n                \"_type\": {\n                  \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"detail\": {\n                  \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"message\": {\n                  \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"title\": {\n                  \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                }\n              },\n              {\n                \"_type\": {\n                  \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"detail\": {\n                  \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"message\": {\n                  \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"title\": {\n                  \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                }\n              }\n            ]\n          }\n        ],\n        \"note\": \"<p>a free-form note</p>\",\n        \"amduca\": \"OFFLABEL\"\n      }\n    ],\n    \"tags\": [\n      {\n        \"id\": 8,\n        \"color\": \"#516cc6\",\n        \"name\": \"sunt Ut\",\n        \"fixes\": [\n          {\n            \"_type\": \"commodo officia l\",\n            \"detail\": \"in Excepteur id nisi\",\n            \"message\": \"ipsum cillum nulla\",\n            \"title\": \"nisi nostrud\"\n          },\n          {\n            \"_type\": \"ut ullamco\",\n            \"detail\": \"dolore sint magna\",\n            \"message\": \"ex non\",\n            \"title\": \"in ullamco cillum sed\"\n          }\n        ]\n      },\n      {\n        \"id\": 8,\n        \"color\": \"#516cc6\",\n        \"name\": \"fug\",\n        \"fixes\": [\n          {\n            \"_type\": \"elit anim\",\n            \"detail\": \"mollit officia fugiat\",\n            \"message\": \"id Duis\",\n            \"title\": \"dolor Duis eiusmod Lorem\"\n          },\n          {\n            \"_type\": \"ut irure\",\n            \"detail\": \"dolor ut\",\n            \"message\": \"eiusmod sed anim elit\",\n            \"title\": \"commodo\"\n          }\n        ]\n      }\n    ],\n    \"diagnoses\": [\n      {\n        \"id\": 8,\n        \"name\": \"Pain/inflammation (musculoskeletal), treatment\"\n      },\n      {\n        \"id\": 8,\n        \"name\": \"Pain/inflammation (musculoskeletal), treatment\"\n      }\n    ],\n    \"eligibilities\": [\n      {\n        \"id\": 1,\n        \"name\": \"Beef Cattle\",\n        \"fdaSpecies\": [\n          \"chickens\",\n          \"horses\"\n        ]\n      },\n      {\n        \"id\": 1,\n        \"name\": \"Beef Cattle\",\n        \"fdaSpecies\": [\n          \"dairy_cattle\",\n          \"dogs\"\n        ]\n      }\n    ],\n    \"promises\": [\n      {\n        \"_type\": \"models.IdPromise\",\n        \"name\": \"ID promise\",\n        \"descrip\": \"You must give ID for each case enrolled\",\n        \"query\": \"What is the animal's name or number?\",\n        \"when\": \"PT0H\",\n        \"id\": 2345\n      },\n      {\n        \"_type\": \"models.IdPromise\",\n        \"name\": \"ID promise\",\n        \"descrip\": \"You must give ID for each case enrolled\",\n        \"query\": \"What is the animal's name or number?\",\n        \"when\": \"PT0H\",\n        \"id\": 2345\n      }\n    ],\n    \"metadata\": [\n      {\n        \"key\": \"popularity\",\n        \"value\": \"good 1.2\"\n      },\n      {\n        \"key\": \"popularity\",\n        \"value\": \"good 1.2\"\n      }\n    ]\n  },\n  \"remedy\": {\n    \"_type\": \"consequat minim\",\n    \"detail\": \"commodo dolore consectetur exercitation\",\n    \"message\": \"officia consequat tem\",\n    \"title\": \"laboris dolore enim reprehenderit\"\n  }\n}",
                                    "options": {
                                        "raw": {
                                            "language": "json"
                                        }
                                    }
                                }
                            },
                            "status": "OK",
                            "code": 200,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"ownerId\": 1,\n  \"name\": \"wip\",\n  \"status\": \"PRESCRIBED\",\n  \"instructions\": {\n    \"considerations\": \"<p>This is just an example, not a real protocol.</p>\",\n    \"restrictions\": \"<p>Not for use on real animals.</p>\",\n    \"dothis\": \"<h3>Examinations to perform</h3>\",\n    \"recordthis\": \"<p>record every step in your notebook.</p>\",\n    \"success\": \"<p>All problems are gone</p>\",\n    \"failure\": \"<p>One or more problems remain</p>\",\n    \"references\": \"<a href=\\\"https://en.wikipedia.org/wiki/Rickrolling\\\">Wikipedia</a>\"\n  },\n  \"id\": 12345,\n  \"shortname\": \"wip\",\n  \"created\": \"2020-01-10T10:30:37Z\",\n  \"edited\": \"2020-02-10T10:30:37Z\",\n  \"vetNote\": \"consider prescribing protocol x instead\",\n  \"wtMeatHrs\": 22,\n  \"wtMilkHrs\": 5,\n  \"shareAll\": true,\n  \"shareClonable\": true,\n  \"caseDefinition\": {\n    \"requireId\": false,\n    \"requireMor\": false,\n    \"contraindications\": \"\",\n    \"medical\": \"if fever is present, consider Protocol 12345 instead.\",\n    \"economic\": \"\",\n    \"note\": \"\"\n  },\n  \"treatments\": [\n    {\n      \"product\": \"MiracleMed\",\n      \"route\": \"wip\",\n      \"dosage\": {\n        \"doseId\": 69015374\n      },\n      \"sequenceFunction\": {\n        \"_type\": \"models.SeqSingleDose\"\n      },\n      \"sizeFunction\": {\n        \"_type\": \"models.FixedDoseFunction\",\n        \"dose\": {\n          \"quantity\": {\n            \"dimension\": \"Mass\",\n            \"value\": 3,\n            \"symbol\": \"oz\"\n          }\n        }\n      },\n      \"id\": \"B-123\",\n      \"ownerId\": 0,\n      \"description\": \"3.0 ml per kg repeat\",\n      \"eligibilities\": [\n        {\n          \"id\": 1,\n          \"name\": \"Beef Cattle\",\n          \"fdaSpecies\": [\n            \"chickens\",\n            \"unidentified\"\n          ]\n        },\n        {\n          \"id\": 1,\n          \"name\": \"Beef Cattle\",\n          \"fdaSpecies\": [\n            \"unidentified\",\n            \"veal\"\n          ]\n        }\n      ],\n      \"_dose\": \"3.0 ml per kg repeat in 6 hours and again in 24 hours\",\n      \"wtMeatHrs\": 27424849,\n      \"wtMilkHrs\": -87261637,\n      \"nada\": \"wip\",\n      \"tags\": [\n        {\n          \"id\": 8,\n          \"color\": \"#516cc6\",\n          \"name\": \"occaecat Duis \",\n          \"fixes\": [\n            {\n              \"_type\": \"Excepteur exercitation qui aliquip\",\n              \"detail\": \"aute ut nulla irure\",\n              \"message\": \"eiusmod laborum elit magna aute\",\n              \"title\": \"Duis esse exercitation\"\n            },\n            {\n              \"_type\": \"labore\",\n              \"detail\": \"officia velit magna ut\",\n              \"message\": \"eu sit elit dolore veniam\",\n              \"title\": \"irure minim\"\n            }\n          ]\n        },\n        {\n          \"id\": 8,\n          \"color\": \"#516cc6\",\n          \"name\": \"irure inci\",\n          \"fixes\": [\n            {\n              \"_type\": \"aliqua ut dolor dolor occaecat\",\n              \"detail\": \"occaecat deserunt Lorem mollit labore\",\n              \"message\": \"sit ut voluptate\",\n              \"title\": \"ut occaecat irure\"\n            },\n            {\n              \"_type\": \"labore dolore reprehenderit quis\",\n              \"detail\": \"dolore dolor\",\n              \"message\": \"id dolor\",\n              \"title\": \"\"\n            }\n          ]\n        }\n      ],\n      \"note\": \"<p>a free-form note</p>\",\n      \"amduca\": \"OFFLABEL\"\n    },\n    {\n      \"product\": \"MiracleMed\",\n      \"route\": \"wip\",\n      \"dosage\": {\n        \"doseId\": 35781694\n      },\n      \"sequenceFunction\": {\n        \"_type\": \"models.SeqSingleDose\"\n      },\n      \"sizeFunction\": {\n        \"_type\": \"models.FixedDoseFunction\",\n        \"dose\": {\n          \"quantity\": {\n            \"dimension\": \"Mass\",\n            \"value\": 3,\n            \"symbol\": \"oz\"\n          }\n        }\n      },\n      \"id\": \"B-123\",\n      \"ownerId\": 0,\n      \"description\": \"3.0 ml per kg repeat\",\n      \"eligibilities\": [\n        {\n          \"id\": 1,\n          \"name\": \"Beef Cattle\",\n          \"fdaSpecies\": [\n            \"bison\",\n            \"gamebirds\"\n          ]\n        },\n        {\n          \"id\": 1,\n          \"name\": \"Beef Cattle\",\n          \"fdaSpecies\": [\n            \"salmon\",\n            \"emus\"\n          ]\n        }\n      ],\n      \"_dose\": \"3.0 ml per kg repeat in 6 hours and again in 24 hours\",\n      \"wtMeatHrs\": 37808317,\n      \"wtMilkHrs\": 69116765,\n      \"nada\": \"wip\",\n      \"tags\": [\n        {\n          \"id\": 8,\n          \"color\": \"#516cc6\",\n          \"name\": \"proiden\",\n          \"fixes\": [\n            {\n              \"_type\": \"occaecat commodo tempor non\",\n              \"detail\": \"sunt cupidatat labore\",\n              \"message\": \"aliqua ut adipisicing\",\n              \"title\": \"magna dolore aute anim\"\n            },\n            {\n              \"_type\": \"dolor quis\",\n              \"detail\": \"voluptate cillum ut\",\n              \"message\": \"elit laboris\",\n              \"title\": \"adipisicing sun\"\n            }\n          ]\n        },\n        {\n          \"id\": 8,\n          \"color\": \"#516cc6\",\n          \"name\": \"mol\",\n          \"fixes\": [\n            {\n              \"_type\": \"ad fugiat\",\n              \"detail\": \"fugiat\",\n              \"message\": \"ut quis ullamco\",\n              \"title\": \"Ut commodo aliqua\"\n            },\n            {\n              \"_type\": \"cillum tempor qui exercitation\",\n              \"detail\": \"sunt quis Excepteur\",\n              \"message\": \"aliquip fugiat\",\n              \"title\": \"ut in\"\n            }\n          ]\n        }\n      ],\n      \"note\": \"<p>a free-form note</p>\",\n      \"amduca\": \"UNIDENTIFIED\"\n    }\n  ],\n  \"tags\": [\n    {\n      \"id\": 8,\n      \"color\": \"#516cc6\",\n      \"name\": \"ex e\",\n      \"fixes\": [\n        {\n          \"_type\": \"irure dolor ad culpa\",\n          \"detail\": \"in officia mollit dolor\",\n          \"message\": \"sit\",\n          \"title\": \"laborum irure ut\"\n        },\n        {\n          \"_type\": \"laborum\",\n          \"detail\": \"commodo sunt tempor\",\n          \"message\": \"proident\",\n          \"title\": \"exercitation sit dolore nulla\"\n        }\n      ]\n    },\n    {\n      \"id\": 8,\n      \"color\": \"#516cc6\",\n      \"name\": \"dolor aute e\",\n      \"fixes\": [\n        {\n          \"_type\": \"dolore ut\",\n          \"detail\": \"cupidatat culpa fugiat dolor\",\n          \"message\": \"in\",\n          \"title\": \"velit minim qui\"\n        },\n        {\n          \"_type\": \"dolor\",\n          \"detail\": \"dolor nulla\",\n          \"message\": \"dolor ut aliqua sit\",\n          \"title\": \"culpa pariatur tempor est\"\n        }\n      ]\n    }\n  ],\n  \"diagnoses\": [\n    {\n      \"id\": 8,\n      \"name\": \"Pain/inflammation (musculoskeletal), treatment\"\n    },\n    {\n      \"id\": 8,\n      \"name\": \"Pain/inflammation (musculoskeletal), treatment\"\n    }\n  ],\n  \"eligibilities\": [\n    {\n      \"id\": 1,\n      \"name\": \"Beef Cattle\",\n      \"fdaSpecies\": [\n        \"llamas\",\n        \"llamas\"\n      ]\n    },\n    {\n      \"id\": 1,\n      \"name\": \"Beef Cattle\",\n      \"fdaSpecies\": [\n        \"sheep\",\n        \"horses\"\n      ]\n    }\n  ],\n  \"promises\": [\n    {\n      \"_type\": \"models.IdPromise\",\n      \"name\": \"ID promise\",\n      \"descrip\": \"You must give ID for each case enrolled\",\n      \"query\": \"What is the animal's name or number?\",\n      \"when\": \"PT0H\",\n      \"id\": 2345\n    },\n    {\n      \"_type\": \"models.IdPromise\",\n      \"name\": \"ID promise\",\n      \"descrip\": \"You must give ID for each case enrolled\",\n      \"query\": \"What is the animal's name or number?\",\n      \"when\": \"PT0H\",\n      \"id\": 2345\n    }\n  ],\n  \"metadata\": [\n    {\n      \"key\": \"popularity\",\n      \"value\": \"good 1.2\"\n    },\n    {\n      \"key\": \"popularity\",\n      \"value\": \"good 1.2\"\n    }\n  ]\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "87b92fbc-adc9-42ed-94b4-c90c6871048a",
                            "name": "The server can not understand the request due to invalid syntax.",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "api",
                                        "protocols",
                                        "tags",
                                        "remedies"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "description": {
                                            "content": "Added as a part of security scheme: apikey",
                                            "type": "text/plain"
                                        },
                                        "key": "X-Auth-Token",
                                        "value": "<API Key>"
                                    }
                                ],
                                "method": "PUT",
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n  \"protocol\": {\n    \"ownerId\": 1,\n    \"name\": \"wip\",\n    \"status\": \"PRESCRIBED\",\n    \"instructions\": {\n      \"considerations\": \"<p>This is just an example, not a real protocol.</p>\",\n      \"restrictions\": \"<p>Not for use on real animals.</p>\",\n      \"dothis\": \"<h3>Examinations to perform</h3>\",\n      \"recordthis\": \"<p>record every step in your notebook.</p>\",\n      \"success\": \"<p>All problems are gone</p>\",\n      \"failure\": \"<p>One or more problems remain</p>\",\n      \"references\": \"<a href=\\\"https://en.wikipedia.org/wiki/Rickrolling\\\">Wikipedia</a>\"\n    },\n    \"id\": 12345,\n    \"shortname\": \"wip\",\n    \"created\": \"2020-01-10T10:30:37Z\",\n    \"edited\": \"2020-02-10T10:30:37Z\",\n    \"vetNote\": \"consider prescribing protocol x instead\",\n    \"wtMeatHrs\": 22,\n    \"wtMilkHrs\": 5,\n    \"shareAll\": true,\n    \"shareClonable\": true,\n    \"caseDefinition\": {\n      \"requireId\": false,\n      \"requireMor\": false,\n      \"contraindications\": \"\",\n      \"medical\": \"if fever is present, consider Protocol 12345 instead.\",\n      \"economic\": \"\",\n      \"note\": \"\"\n    },\n    \"treatments\": [\n      {\n        \"product\": \"MiracleMed\",\n        \"route\": \"wip\",\n        \"dosage\": {\n          \"doseId\": 37601077\n        },\n        \"sequenceFunction\": {\n          \"_type\": \"models.SeqSingleDose\"\n        },\n        \"sizeFunction\": {\n          \"_type\": \"models.FixedDoseFunction\",\n          \"dose\": {\n            \"quantity\": {\n              \"dimension\": \"Mass\",\n              \"value\": 3,\n              \"symbol\": \"oz\"\n            }\n          }\n        },\n        \"id\": \"B-123\",\n        \"ownerId\": 0,\n        \"description\": \"3.0 ml per kg repeat\",\n        \"eligibilities\": [\n          {\n            \"id\": 1,\n            \"name\": \"Beef Cattle\",\n            \"fdaSpecies\": [\n              \"beef_cattle\",\n              \"catfish\"\n            ]\n          },\n          {\n            \"id\": 1,\n            \"name\": \"Beef Cattle\",\n            \"fdaSpecies\": [\n              \"cats\",\n              \"chickens\"\n            ]\n          }\n        ],\n        \"_dose\": \"3.0 ml per kg repeat in 6 hours and again in 24 hours\",\n        \"wtMeatHrs\": 63116508,\n        \"wtMilkHrs\": -52127182,\n        \"nada\": \"wip\",\n        \"tags\": [\n          {\n            \"id\": 8,\n            \"color\": \"#516cc6\",\n            \"name\": \"cillum dol\",\n            \"fixes\": [\n              {\n                \"_type\": {\n                  \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"detail\": {\n                  \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"message\": {\n                  \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"title\": {\n                  \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                }\n              },\n              {\n                \"_type\": {\n                  \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"detail\": {\n                  \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"message\": {\n                  \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"title\": {\n                  \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                }\n              }\n            ]\n          },\n          {\n            \"id\": 8,\n            \"color\": \"#516cc6\",\n            \"name\": \"amet et sed\",\n            \"fixes\": [\n              {\n                \"_type\": {\n                  \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"detail\": {\n                  \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"message\": {\n                  \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"title\": {\n                  \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                }\n              },\n              {\n                \"_type\": {\n                  \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"detail\": {\n                  \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"message\": {\n                  \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"title\": {\n                  \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                }\n              }\n            ]\n          }\n        ],\n        \"note\": \"<p>a free-form note</p>\",\n        \"amduca\": \"OFFLABEL\"\n      },\n      {\n        \"product\": \"MiracleMed\",\n        \"route\": \"wip\",\n        \"dosage\": {\n          \"doseId\": -95998222\n        },\n        \"sequenceFunction\": {\n          \"_type\": \"models.SeqSingleDose\"\n        },\n        \"sizeFunction\": {\n          \"_type\": \"models.FixedDoseFunction\",\n          \"dose\": {\n            \"quantity\": {\n              \"dimension\": \"Mass\",\n              \"value\": 3,\n              \"symbol\": \"oz\"\n            }\n          }\n        },\n        \"id\": \"B-123\",\n        \"ownerId\": 0,\n        \"description\": \"3.0 ml per kg repeat\",\n        \"eligibilities\": [\n          {\n            \"id\": 1,\n            \"name\": \"Beef Cattle\",\n            \"fdaSpecies\": [\n              \"veal\",\n              \"sheep\"\n            ]\n          },\n          {\n            \"id\": 1,\n            \"name\": \"Beef Cattle\",\n            \"fdaSpecies\": [\n              \"salmon\",\n              \"beef_cattle\"\n            ]\n          }\n        ],\n        \"_dose\": \"3.0 ml per kg repeat in 6 hours and again in 24 hours\",\n        \"wtMeatHrs\": 4823315,\n        \"wtMilkHrs\": 67813094,\n        \"nada\": \"wip\",\n        \"tags\": [\n          {\n            \"id\": 8,\n            \"color\": \"#516cc6\",\n            \"name\": \"fugiat cul\",\n            \"fixes\": [\n              {\n                \"_type\": {\n                  \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"detail\": {\n                  \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"message\": {\n                  \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"title\": {\n                  \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                }\n              },\n              {\n                \"_type\": {\n                  \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"detail\": {\n                  \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"message\": {\n                  \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"title\": {\n                  \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                }\n              }\n            ]\n          },\n          {\n            \"id\": 8,\n            \"color\": \"#516cc6\",\n            \"name\": \"labore dolor \",\n            \"fixes\": [\n              {\n                \"_type\": {\n                  \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"detail\": {\n                  \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"message\": {\n                  \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"title\": {\n                  \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                }\n              },\n              {\n                \"_type\": {\n                  \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"detail\": {\n                  \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"message\": {\n                  \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"title\": {\n                  \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                }\n              }\n            ]\n          }\n        ],\n        \"note\": \"<p>a free-form note</p>\",\n        \"amduca\": \"OFFLABEL\"\n      }\n    ],\n    \"tags\": [\n      {\n        \"id\": 8,\n        \"color\": \"#516cc6\",\n        \"name\": \"sunt Ut\",\n        \"fixes\": [\n          {\n            \"_type\": \"commodo officia l\",\n            \"detail\": \"in Excepteur id nisi\",\n            \"message\": \"ipsum cillum nulla\",\n            \"title\": \"nisi nostrud\"\n          },\n          {\n            \"_type\": \"ut ullamco\",\n            \"detail\": \"dolore sint magna\",\n            \"message\": \"ex non\",\n            \"title\": \"in ullamco cillum sed\"\n          }\n        ]\n      },\n      {\n        \"id\": 8,\n        \"color\": \"#516cc6\",\n        \"name\": \"fug\",\n        \"fixes\": [\n          {\n            \"_type\": \"elit anim\",\n            \"detail\": \"mollit officia fugiat\",\n            \"message\": \"id Duis\",\n            \"title\": \"dolor Duis eiusmod Lorem\"\n          },\n          {\n            \"_type\": \"ut irure\",\n            \"detail\": \"dolor ut\",\n            \"message\": \"eiusmod sed anim elit\",\n            \"title\": \"commodo\"\n          }\n        ]\n      }\n    ],\n    \"diagnoses\": [\n      {\n        \"id\": 8,\n        \"name\": \"Pain/inflammation (musculoskeletal), treatment\"\n      },\n      {\n        \"id\": 8,\n        \"name\": \"Pain/inflammation (musculoskeletal), treatment\"\n      }\n    ],\n    \"eligibilities\": [\n      {\n        \"id\": 1,\n        \"name\": \"Beef Cattle\",\n        \"fdaSpecies\": [\n          \"chickens\",\n          \"horses\"\n        ]\n      },\n      {\n        \"id\": 1,\n        \"name\": \"Beef Cattle\",\n        \"fdaSpecies\": [\n          \"dairy_cattle\",\n          \"dogs\"\n        ]\n      }\n    ],\n    \"promises\": [\n      {\n        \"_type\": \"models.IdPromise\",\n        \"name\": \"ID promise\",\n        \"descrip\": \"You must give ID for each case enrolled\",\n        \"query\": \"What is the animal's name or number?\",\n        \"when\": \"PT0H\",\n        \"id\": 2345\n      },\n      {\n        \"_type\": \"models.IdPromise\",\n        \"name\": \"ID promise\",\n        \"descrip\": \"You must give ID for each case enrolled\",\n        \"query\": \"What is the animal's name or number?\",\n        \"when\": \"PT0H\",\n        \"id\": 2345\n      }\n    ],\n    \"metadata\": [\n      {\n        \"key\": \"popularity\",\n        \"value\": \"good 1.2\"\n      },\n      {\n        \"key\": \"popularity\",\n        \"value\": \"good 1.2\"\n      }\n    ]\n  },\n  \"remedy\": {\n    \"_type\": \"consequat minim\",\n    \"detail\": \"commodo dolore consectetur exercitation\",\n    \"message\": \"officia consequat tem\",\n    \"title\": \"laboris dolore enim reprehenderit\"\n  }\n}",
                                    "options": {
                                        "raw": {
                                            "language": "json"
                                        }
                                    }
                                }
                            },
                            "status": "Bad Request",
                            "code": 400,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"title\": \"incorrect username or password\",\n  \"status\": 404,\n  \"errorType\": \"/errors/incorrect-user-pass\",\n  \"detail\": \"Authentication failed due to incorrect username or password.\",\n  \"instance\": \"/login/log/abc123\"\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "effcea5e-fdc1-44da-96d3-eddbeb19f671",
                            "name": "Authorization required",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "api",
                                        "protocols",
                                        "tags",
                                        "remedies"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "description": {
                                            "content": "Added as a part of security scheme: apikey",
                                            "type": "text/plain"
                                        },
                                        "key": "X-Auth-Token",
                                        "value": "<API Key>"
                                    }
                                ],
                                "method": "PUT",
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n  \"protocol\": {\n    \"ownerId\": 1,\n    \"name\": \"wip\",\n    \"status\": \"PRESCRIBED\",\n    \"instructions\": {\n      \"considerations\": \"<p>This is just an example, not a real protocol.</p>\",\n      \"restrictions\": \"<p>Not for use on real animals.</p>\",\n      \"dothis\": \"<h3>Examinations to perform</h3>\",\n      \"recordthis\": \"<p>record every step in your notebook.</p>\",\n      \"success\": \"<p>All problems are gone</p>\",\n      \"failure\": \"<p>One or more problems remain</p>\",\n      \"references\": \"<a href=\\\"https://en.wikipedia.org/wiki/Rickrolling\\\">Wikipedia</a>\"\n    },\n    \"id\": 12345,\n    \"shortname\": \"wip\",\n    \"created\": \"2020-01-10T10:30:37Z\",\n    \"edited\": \"2020-02-10T10:30:37Z\",\n    \"vetNote\": \"consider prescribing protocol x instead\",\n    \"wtMeatHrs\": 22,\n    \"wtMilkHrs\": 5,\n    \"shareAll\": true,\n    \"shareClonable\": true,\n    \"caseDefinition\": {\n      \"requireId\": false,\n      \"requireMor\": false,\n      \"contraindications\": \"\",\n      \"medical\": \"if fever is present, consider Protocol 12345 instead.\",\n      \"economic\": \"\",\n      \"note\": \"\"\n    },\n    \"treatments\": [\n      {\n        \"product\": \"MiracleMed\",\n        \"route\": \"wip\",\n        \"dosage\": {\n          \"doseId\": 37601077\n        },\n        \"sequenceFunction\": {\n          \"_type\": \"models.SeqSingleDose\"\n        },\n        \"sizeFunction\": {\n          \"_type\": \"models.FixedDoseFunction\",\n          \"dose\": {\n            \"quantity\": {\n              \"dimension\": \"Mass\",\n              \"value\": 3,\n              \"symbol\": \"oz\"\n            }\n          }\n        },\n        \"id\": \"B-123\",\n        \"ownerId\": 0,\n        \"description\": \"3.0 ml per kg repeat\",\n        \"eligibilities\": [\n          {\n            \"id\": 1,\n            \"name\": \"Beef Cattle\",\n            \"fdaSpecies\": [\n              \"beef_cattle\",\n              \"catfish\"\n            ]\n          },\n          {\n            \"id\": 1,\n            \"name\": \"Beef Cattle\",\n            \"fdaSpecies\": [\n              \"cats\",\n              \"chickens\"\n            ]\n          }\n        ],\n        \"_dose\": \"3.0 ml per kg repeat in 6 hours and again in 24 hours\",\n        \"wtMeatHrs\": 63116508,\n        \"wtMilkHrs\": -52127182,\n        \"nada\": \"wip\",\n        \"tags\": [\n          {\n            \"id\": 8,\n            \"color\": \"#516cc6\",\n            \"name\": \"cillum dol\",\n            \"fixes\": [\n              {\n                \"_type\": {\n                  \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"detail\": {\n                  \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"message\": {\n                  \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"title\": {\n                  \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                }\n              },\n              {\n                \"_type\": {\n                  \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"detail\": {\n                  \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"message\": {\n                  \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"title\": {\n                  \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                }\n              }\n            ]\n          },\n          {\n            \"id\": 8,\n            \"color\": \"#516cc6\",\n            \"name\": \"amet et sed\",\n            \"fixes\": [\n              {\n                \"_type\": {\n                  \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"detail\": {\n                  \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"message\": {\n                  \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"title\": {\n                  \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                }\n              },\n              {\n                \"_type\": {\n                  \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"detail\": {\n                  \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"message\": {\n                  \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"title\": {\n                  \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                }\n              }\n            ]\n          }\n        ],\n        \"note\": \"<p>a free-form note</p>\",\n        \"amduca\": \"OFFLABEL\"\n      },\n      {\n        \"product\": \"MiracleMed\",\n        \"route\": \"wip\",\n        \"dosage\": {\n          \"doseId\": -95998222\n        },\n        \"sequenceFunction\": {\n          \"_type\": \"models.SeqSingleDose\"\n        },\n        \"sizeFunction\": {\n          \"_type\": \"models.FixedDoseFunction\",\n          \"dose\": {\n            \"quantity\": {\n              \"dimension\": \"Mass\",\n              \"value\": 3,\n              \"symbol\": \"oz\"\n            }\n          }\n        },\n        \"id\": \"B-123\",\n        \"ownerId\": 0,\n        \"description\": \"3.0 ml per kg repeat\",\n        \"eligibilities\": [\n          {\n            \"id\": 1,\n            \"name\": \"Beef Cattle\",\n            \"fdaSpecies\": [\n              \"veal\",\n              \"sheep\"\n            ]\n          },\n          {\n            \"id\": 1,\n            \"name\": \"Beef Cattle\",\n            \"fdaSpecies\": [\n              \"salmon\",\n              \"beef_cattle\"\n            ]\n          }\n        ],\n        \"_dose\": \"3.0 ml per kg repeat in 6 hours and again in 24 hours\",\n        \"wtMeatHrs\": 4823315,\n        \"wtMilkHrs\": 67813094,\n        \"nada\": \"wip\",\n        \"tags\": [\n          {\n            \"id\": 8,\n            \"color\": \"#516cc6\",\n            \"name\": \"fugiat cul\",\n            \"fixes\": [\n              {\n                \"_type\": {\n                  \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"detail\": {\n                  \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"message\": {\n                  \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"title\": {\n                  \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                }\n              },\n              {\n                \"_type\": {\n                  \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"detail\": {\n                  \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"message\": {\n                  \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"title\": {\n                  \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                }\n              }\n            ]\n          },\n          {\n            \"id\": 8,\n            \"color\": \"#516cc6\",\n            \"name\": \"labore dolor \",\n            \"fixes\": [\n              {\n                \"_type\": {\n                  \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"detail\": {\n                  \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"message\": {\n                  \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"title\": {\n                  \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                }\n              },\n              {\n                \"_type\": {\n                  \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"detail\": {\n                  \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"message\": {\n                  \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"title\": {\n                  \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                }\n              }\n            ]\n          }\n        ],\n        \"note\": \"<p>a free-form note</p>\",\n        \"amduca\": \"OFFLABEL\"\n      }\n    ],\n    \"tags\": [\n      {\n        \"id\": 8,\n        \"color\": \"#516cc6\",\n        \"name\": \"sunt Ut\",\n        \"fixes\": [\n          {\n            \"_type\": \"commodo officia l\",\n            \"detail\": \"in Excepteur id nisi\",\n            \"message\": \"ipsum cillum nulla\",\n            \"title\": \"nisi nostrud\"\n          },\n          {\n            \"_type\": \"ut ullamco\",\n            \"detail\": \"dolore sint magna\",\n            \"message\": \"ex non\",\n            \"title\": \"in ullamco cillum sed\"\n          }\n        ]\n      },\n      {\n        \"id\": 8,\n        \"color\": \"#516cc6\",\n        \"name\": \"fug\",\n        \"fixes\": [\n          {\n            \"_type\": \"elit anim\",\n            \"detail\": \"mollit officia fugiat\",\n            \"message\": \"id Duis\",\n            \"title\": \"dolor Duis eiusmod Lorem\"\n          },\n          {\n            \"_type\": \"ut irure\",\n            \"detail\": \"dolor ut\",\n            \"message\": \"eiusmod sed anim elit\",\n            \"title\": \"commodo\"\n          }\n        ]\n      }\n    ],\n    \"diagnoses\": [\n      {\n        \"id\": 8,\n        \"name\": \"Pain/inflammation (musculoskeletal), treatment\"\n      },\n      {\n        \"id\": 8,\n        \"name\": \"Pain/inflammation (musculoskeletal), treatment\"\n      }\n    ],\n    \"eligibilities\": [\n      {\n        \"id\": 1,\n        \"name\": \"Beef Cattle\",\n        \"fdaSpecies\": [\n          \"chickens\",\n          \"horses\"\n        ]\n      },\n      {\n        \"id\": 1,\n        \"name\": \"Beef Cattle\",\n        \"fdaSpecies\": [\n          \"dairy_cattle\",\n          \"dogs\"\n        ]\n      }\n    ],\n    \"promises\": [\n      {\n        \"_type\": \"models.IdPromise\",\n        \"name\": \"ID promise\",\n        \"descrip\": \"You must give ID for each case enrolled\",\n        \"query\": \"What is the animal's name or number?\",\n        \"when\": \"PT0H\",\n        \"id\": 2345\n      },\n      {\n        \"_type\": \"models.IdPromise\",\n        \"name\": \"ID promise\",\n        \"descrip\": \"You must give ID for each case enrolled\",\n        \"query\": \"What is the animal's name or number?\",\n        \"when\": \"PT0H\",\n        \"id\": 2345\n      }\n    ],\n    \"metadata\": [\n      {\n        \"key\": \"popularity\",\n        \"value\": \"good 1.2\"\n      },\n      {\n        \"key\": \"popularity\",\n        \"value\": \"good 1.2\"\n      }\n    ]\n  },\n  \"remedy\": {\n    \"_type\": \"consequat minim\",\n    \"detail\": \"commodo dolore consectetur exercitation\",\n    \"message\": \"officia consequat tem\",\n    \"title\": \"laboris dolore enim reprehenderit\"\n  }\n}",
                                    "options": {
                                        "raw": {
                                            "language": "json"
                                        }
                                    }
                                }
                            },
                            "status": "Forbidden",
                            "code": 403,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "text/plain"
                                }
                            ],
                            "body": "",
                            "cookie": [],
                            "_postman_previewlanguage": "text"
                        }
                    ],
                    "event": [],
                    "protocolProfileBehavior": {
                        "disableBodyPruning": true
                    }
                },
                {
                    "id": "fd9ec613-d04f-4926-b7f7-52825d7e5b30",
                    "name": "list of all Promises",
                    "request": {
                        "name": "list of all Promises",
                        "description": {
                            "content": "This endpoint returns the full array of available Promises.",
                            "type": "text/plain"
                        },
                        "url": {
                            "path": [
                                "api",
                                "protocols",
                                "promises"
                            ],
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "query": [],
                            "variable": []
                        },
                        "header": [
                            {
                                "key": "Accept",
                                "value": "application/json"
                            }
                        ],
                        "method": "GET",
                        "auth": null
                    },
                    "response": [
                        {
                            "id": "9229bf7b-e20e-4447-be98-14864bf3e7a3",
                            "name": "OK",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "api",
                                        "protocols",
                                        "promises"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "description": {
                                            "content": "Added as a part of security scheme: apikey",
                                            "type": "text/plain"
                                        },
                                        "key": "X-Auth-Token",
                                        "value": "<API Key>"
                                    }
                                ],
                                "method": "GET",
                                "body": {}
                            },
                            "status": "OK",
                            "code": 200,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"labels\": [\n    {\n      \"_type\": \"models.IdPromise\",\n      \"name\": \"ID promise\",\n      \"descrip\": \"You must give ID for each case enrolled\",\n      \"query\": \"What is the animal's name or number?\",\n      \"when\": \"PT0H\",\n      \"id\": 2345\n    },\n    {\n      \"_type\": \"models.IdPromise\",\n      \"name\": \"ID promise\",\n      \"descrip\": \"You must give ID for each case enrolled\",\n      \"query\": \"What is the animal's name or number?\",\n      \"when\": \"PT0H\",\n      \"id\": 2345\n    }\n  ]\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        }
                    ],
                    "event": []
                },
                {
                    "id": "a62c7e1a-ba16-40e6-b33e-bcd7a033993a",
                    "name": "Promises in a Protocol",
                    "request": {
                        "name": "Promises in a Protocol",
                        "description": {
                            "content": "Return Promises contained within a Protocol.",
                            "type": "text/plain"
                        },
                        "url": {
                            "path": [
                                "api",
                                "protocols",
                                "promises",
                                ":id"
                            ],
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "query": [],
                            "variable": [
                                {
                                    "disabled": false,
                                    "type": "any",
                                    "value": "32",
                                    "key": "id",
                                    "description": "(Required) protocol  ID"
                                }
                            ]
                        },
                        "header": [
                            {
                                "key": "Accept",
                                "value": "application/json"
                            }
                        ],
                        "method": "GET",
                        "auth": null
                    },
                    "response": [
                        {
                            "id": "56c0021f-c073-4d79-a0cd-287d87f71396",
                            "name": "OK",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "api",
                                        "protocols",
                                        "promises",
                                        ":id"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": [
                                        {
                                            "disabled": false,
                                            "type": "any",
                                            "value": "32",
                                            "key": "id",
                                            "description": "(Required) protocol  ID"
                                        }
                                    ]
                                },
                                "header": [
                                    {
                                        "description": {
                                            "content": "Added as a part of security scheme: apikey",
                                            "type": "text/plain"
                                        },
                                        "key": "X-Auth-Token",
                                        "value": "<API Key>"
                                    }
                                ],
                                "method": "GET",
                                "body": {}
                            },
                            "status": "OK",
                            "code": 200,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"id\": 1,\n  \"fdaSpecies\": [\n    \"ChickensBroilers\",\n    \"ChickensBroilers\"\n  ],\n  \"diagnosis\": \"pain (colic), symptomatic treatment\",\n  \"dxId\": 2002,\n  \"product\": \"Prevail™ Flunixin Meglumine Injection\",\n  \"route\": \"intr-corporeal\",\n  \"wtMeatHrs\": 22,\n  \"wtMilkHrs\": 5,\n  \"productId\": 1315018,\n  \"_dose\": \"3.0 ml per kg repeat in 6 hours and again in 24 hours\",\n  \"sequenceFunction\": {\n    \"_type\": \"models.SeqSingleDose\"\n  },\n  \"sizeFunction\": {\n    \"_type\": \"models.FixedDoseFunction\",\n    \"dose\": {\n      \"quantity\": {\n        \"dimension\": \"Mass\",\n        \"value\": 3,\n        \"symbol\": \"oz\"\n      }\n    }\n  },\n  \"doseNote\": \"THis can contain <b>html</b> tags\",\n  \"wtNote\": \"not for dairy animals\",\n  \"ndc\": \"200-308\",\n  \"generic\": \"OXYTETRACYCLINE\"\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        }
                    ],
                    "event": []
                },
                {
                    "id": "c7072f14-97c9-4dcc-81b1-60547efa1708",
                    "name": "protocols owned by user",
                    "request": {
                        "name": "protocols owned by user",
                        "description": {
                            "content": "Retrieve all Protocols owned by, or shared with, the current User. The default excludes deleted (status DEPRECATED) protocols.",
                            "type": "text/plain"
                        },
                        "url": {
                            "path": [
                                "api",
                                "protocols"
                            ],
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "query": [
                                {
                                    "disabled": false,
                                    "key": "status",
                                    "value": "PRESCRIBED|PRESCRIBED",
                                    "description": "filter Protocols to include only Protocols with listed statuses. If this parameter is omitted, the query defaults to all status values **except** DEPRECATED."
                                }
                            ],
                            "variable": []
                        },
                        "header": [
                            {
                                "key": "Accept",
                                "value": "application/json"
                            }
                        ],
                        "method": "GET",
                        "auth": null
                    },
                    "response": [
                        {
                            "id": "2d23357a-f481-48f2-aace-270b84af390f",
                            "name": "OK",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "api",
                                        "protocols"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [
                                        {
                                            "key": "status",
                                            "value": "PRESCRIBED|PRESCRIBED"
                                        }
                                    ],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "description": {
                                            "content": "Added as a part of security scheme: apikey",
                                            "type": "text/plain"
                                        },
                                        "key": "X-Auth-Token",
                                        "value": "<API Key>"
                                    }
                                ],
                                "method": "GET",
                                "body": {}
                            },
                            "status": "OK",
                            "code": 200,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"protocols\": [\n    {\n      \"ownerId\": 1,\n      \"name\": \"wip\",\n      \"status\": \"PRESCRIBED\",\n      \"instructions\": {\n        \"considerations\": \"<p>This is just an example, not a real protocol.</p>\",\n        \"restrictions\": \"<p>Not for use on real animals.</p>\",\n        \"dothis\": \"<h3>Examinations to perform</h3>\",\n        \"recordthis\": \"<p>record every step in your notebook.</p>\",\n        \"success\": \"<p>All problems are gone</p>\",\n        \"failure\": \"<p>One or more problems remain</p>\",\n        \"references\": \"<a href=\\\"https://en.wikipedia.org/wiki/Rickrolling\\\">Wikipedia</a>\"\n      },\n      \"id\": 12345,\n      \"shortname\": \"wip\",\n      \"created\": \"2020-01-10T10:30:37Z\",\n      \"edited\": \"2020-02-10T10:30:37Z\",\n      \"vetNote\": \"consider prescribing protocol x instead\",\n      \"wtMeatHrs\": 22,\n      \"wtMilkHrs\": 5,\n      \"shareAll\": true,\n      \"shareClonable\": true,\n      \"caseDefinition\": {\n        \"requireId\": false,\n        \"requireMor\": false,\n        \"contraindications\": \"\",\n        \"medical\": \"if fever is present, consider Protocol 12345 instead.\",\n        \"economic\": \"\",\n        \"note\": \"\"\n      },\n      \"treatments\": [\n        {\n          \"product\": \"MiracleMed\",\n          \"route\": \"wip\",\n          \"dosage\": {\n            \"doseId\": 61224075\n          },\n          \"sequenceFunction\": {\n            \"_type\": \"models.SeqSingleDose\"\n          },\n          \"sizeFunction\": {\n            \"dose\": {\n              \"quantity\": {\n                \"dimension\": \"Volume\",\n                \"value\": 3,\n                \"symbol\": \"ml\"\n              }\n            },\n            \"_type\": \"models.FixedDoseFunction\"\n          },\n          \"id\": \"B-123\",\n          \"ownerId\": 0,\n          \"description\": \"3.0 ml per kg repeat\",\n          \"eligibilities\": [\n            {\n              \"id\": 1,\n              \"name\": \"Beef Cattle\",\n              \"fdaSpecies\": [\n                \"sheep\",\n                \"chickens\"\n              ]\n            },\n            {\n              \"id\": 1,\n              \"name\": \"Beef Cattle\",\n              \"fdaSpecies\": [\n                \"horses\",\n                \"dogs\"\n              ]\n            }\n          ],\n          \"_dose\": \"3.0 ml per kg repeat in 6 hours and again in 24 hours\",\n          \"wtMeatHrs\": -9796381,\n          \"wtMilkHrs\": -94845426,\n          \"nada\": \"wip\",\n          \"tags\": [\n            {\n              \"id\": 8,\n              \"color\": \"#516cc6\",\n              \"name\": \"elit nost\",\n              \"fixes\": [\n                {\n                  \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                {\n                  \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                }\n              ]\n            },\n            {\n              \"id\": 8,\n              \"color\": \"#516cc6\",\n              \"name\": \"f\",\n              \"fixes\": [\n                {\n                  \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                {\n                  \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                }\n              ]\n            }\n          ],\n          \"note\": \"<p>a free-form note</p>\",\n          \"amduca\": \"UNIDENTIFIED\"\n        },\n        {\n          \"product\": \"MiracleMed\",\n          \"route\": \"wip\",\n          \"dosage\": {\n            \"doseId\": -87694991\n          },\n          \"sequenceFunction\": {\n            \"_type\": \"models.SeqSingleDose\"\n          },\n          \"sizeFunction\": {\n            \"dose\": {\n              \"quantity\": {\n                \"dimension\": \"Volume\",\n                \"value\": 3,\n                \"symbol\": \"ml\"\n              }\n            },\n            \"_type\": \"models.FixedDoseFunction\"\n          },\n          \"id\": \"B-123\",\n          \"ownerId\": 0,\n          \"description\": \"3.0 ml per kg repeat\",\n          \"eligibilities\": [\n            {\n              \"id\": 1,\n              \"name\": \"Beef Cattle\",\n              \"fdaSpecies\": [\n                \"sheep\",\n                \"turkeys\"\n              ]\n            },\n            {\n              \"id\": 1,\n              \"name\": \"Beef Cattle\",\n              \"fdaSpecies\": [\n                \"llamas\",\n                \"swine\"\n              ]\n            }\n          ],\n          \"_dose\": \"3.0 ml per kg repeat in 6 hours and again in 24 hours\",\n          \"wtMeatHrs\": -6907872,\n          \"wtMilkHrs\": -72964836,\n          \"nada\": \"wip\",\n          \"tags\": [\n            {\n              \"id\": 8,\n              \"color\": \"#516cc6\",\n              \"name\": \"irure mini\",\n              \"fixes\": [\n                {\n                  \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                {\n                  \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                }\n              ]\n            },\n            {\n              \"id\": 8,\n              \"color\": \"#516cc6\",\n              \"name\": \"non qui \",\n              \"fixes\": [\n                {\n                  \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                {\n                  \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                }\n              ]\n            }\n          ],\n          \"note\": \"<p>a free-form note</p>\",\n          \"amduca\": \"ONLABEL\"\n        }\n      ],\n      \"tags\": [\n        {\n          \"id\": 8,\n          \"color\": \"#516cc6\",\n          \"name\": \"et id repreh\",\n          \"fixes\": [\n            {\n              \"_type\": \"Excepteur molli\",\n              \"detail\": \"sit ut\",\n              \"message\": \"consequat irure dolore\",\n              \"title\": \"veniam reprehenderit ipsum\"\n            },\n            {\n              \"_type\": \"do ullamco irure\",\n              \"detail\": \"aliqua anim nostrud ut \",\n              \"message\": \"Lorem laboris nostrud\",\n              \"title\": \"eu est ut culpa\"\n            }\n          ]\n        },\n        {\n          \"id\": 8,\n          \"color\": \"#516cc6\",\n          \"name\": \"in u\",\n          \"fixes\": [\n            {\n              \"_type\": \"voluptat\",\n              \"detail\": \"sint dolor o\",\n              \"message\": \"eu ullamco\",\n              \"title\": \"dolore tempor est laboris\"\n            },\n            {\n              \"_type\": \"Lorem reprehenderit\",\n              \"detail\": \"sunt cillum id\",\n              \"message\": \"cupidatat\",\n              \"title\": \"dolore dolor velit mollit\"\n            }\n          ]\n        }\n      ],\n      \"diagnoses\": [\n        {\n          \"id\": 8,\n          \"name\": \"Pain/inflammation (musculoskeletal), treatment\"\n        },\n        {\n          \"id\": 8,\n          \"name\": \"Pain/inflammation (musculoskeletal), treatment\"\n        }\n      ],\n      \"eligibilities\": [\n        {\n          \"id\": 1,\n          \"name\": \"Beef Cattle\",\n          \"fdaSpecies\": [\n            \"goats\",\n            \"fish\"\n          ]\n        },\n        {\n          \"id\": 1,\n          \"name\": \"Beef Cattle\",\n          \"fdaSpecies\": [\n            \"llamas\",\n            \"salmon\"\n          ]\n        }\n      ],\n      \"promises\": [\n        {\n          \"_type\": \"models.IdPromise\",\n          \"name\": \"ID promise\",\n          \"descrip\": \"You must give ID for each case enrolled\",\n          \"query\": \"What is the animal's name or number?\",\n          \"when\": \"PT0H\",\n          \"id\": 2345\n        },\n        {\n          \"_type\": \"models.IdPromise\",\n          \"name\": \"ID promise\",\n          \"descrip\": \"You must give ID for each case enrolled\",\n          \"query\": \"What is the animal's name or number?\",\n          \"when\": \"PT0H\",\n          \"id\": 2345\n        }\n      ],\n      \"metadata\": [\n        {\n          \"key\": \"popularity\",\n          \"value\": \"good 1.2\"\n        },\n        {\n          \"key\": \"popularity\",\n          \"value\": \"good 1.2\"\n        }\n      ]\n    },\n    {\n      \"ownerId\": 1,\n      \"name\": \"wip\",\n      \"status\": \"PRESCRIBED\",\n      \"instructions\": {\n        \"considerations\": \"<p>This is just an example, not a real protocol.</p>\",\n        \"restrictions\": \"<p>Not for use on real animals.</p>\",\n        \"dothis\": \"<h3>Examinations to perform</h3>\",\n        \"recordthis\": \"<p>record every step in your notebook.</p>\",\n        \"success\": \"<p>All problems are gone</p>\",\n        \"failure\": \"<p>One or more problems remain</p>\",\n        \"references\": \"<a href=\\\"https://en.wikipedia.org/wiki/Rickrolling\\\">Wikipedia</a>\"\n      },\n      \"id\": 12345,\n      \"shortname\": \"wip\",\n      \"created\": \"2020-01-10T10:30:37Z\",\n      \"edited\": \"2020-02-10T10:30:37Z\",\n      \"vetNote\": \"consider prescribing protocol x instead\",\n      \"wtMeatHrs\": 22,\n      \"wtMilkHrs\": 5,\n      \"shareAll\": true,\n      \"shareClonable\": true,\n      \"caseDefinition\": {\n        \"requireId\": false,\n        \"requireMor\": false,\n        \"contraindications\": \"\",\n        \"medical\": \"if fever is present, consider Protocol 12345 instead.\",\n        \"economic\": \"\",\n        \"note\": \"\"\n      },\n      \"treatments\": [\n        {\n          \"product\": \"MiracleMed\",\n          \"route\": \"wip\",\n          \"dosage\": {\n            \"doseId\": -62492668\n          },\n          \"sequenceFunction\": {\n            \"_type\": \"models.SeqSingleDose\"\n          },\n          \"sizeFunction\": {\n            \"dose\": {\n              \"quantity\": {\n                \"dimension\": \"Volume\",\n                \"value\": 3,\n                \"symbol\": \"ml\"\n              }\n            },\n            \"_type\": \"models.FixedDoseFunction\"\n          },\n          \"id\": \"B-123\",\n          \"ownerId\": 0,\n          \"description\": \"3.0 ml per kg repeat\",\n          \"eligibilities\": [\n            {\n              \"id\": 1,\n              \"name\": \"Beef Cattle\",\n              \"fdaSpecies\": [\n                \"beef_cattle\",\n                \"unidentified\"\n              ]\n            },\n            {\n              \"id\": 1,\n              \"name\": \"Beef Cattle\",\n              \"fdaSpecies\": [\n                \"salmon\",\n                \"dogs\"\n              ]\n            }\n          ],\n          \"_dose\": \"3.0 ml per kg repeat in 6 hours and again in 24 hours\",\n          \"wtMeatHrs\": 67182059,\n          \"wtMilkHrs\": 5652209,\n          \"nada\": \"wip\",\n          \"tags\": [\n            {\n              \"id\": 8,\n              \"color\": \"#516cc6\",\n              \"name\": \"anim\",\n              \"fixes\": [\n                {\n                  \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                {\n                  \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                }\n              ]\n            },\n            {\n              \"id\": 8,\n              \"color\": \"#516cc6\",\n              \"name\": \"Duis laborum \",\n              \"fixes\": [\n                {\n                  \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                {\n                  \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                }\n              ]\n            }\n          ],\n          \"note\": \"<p>a free-form note</p>\",\n          \"amduca\": \"UNIDENTIFIED\"\n        },\n        {\n          \"product\": \"MiracleMed\",\n          \"route\": \"wip\",\n          \"dosage\": {\n            \"doseId\": -36182633\n          },\n          \"sequenceFunction\": {\n            \"_type\": \"models.SeqSingleDose\"\n          },\n          \"sizeFunction\": {\n            \"dose\": {\n              \"quantity\": {\n                \"dimension\": \"Volume\",\n                \"value\": 3,\n                \"symbol\": \"ml\"\n              }\n            },\n            \"_type\": \"models.FixedDoseFunction\"\n          },\n          \"id\": \"B-123\",\n          \"ownerId\": 0,\n          \"description\": \"3.0 ml per kg repeat\",\n          \"eligibilities\": [\n            {\n              \"id\": 1,\n              \"name\": \"Beef Cattle\",\n              \"fdaSpecies\": [\n                \"sheep\",\n                \"sheep\"\n              ]\n            },\n            {\n              \"id\": 1,\n              \"name\": \"Beef Cattle\",\n              \"fdaSpecies\": [\n                \"turkeys\",\n                \"catfish\"\n              ]\n            }\n          ],\n          \"_dose\": \"3.0 ml per kg repeat in 6 hours and again in 24 hours\",\n          \"wtMeatHrs\": 25189685,\n          \"wtMilkHrs\": -37664054,\n          \"nada\": \"wip\",\n          \"tags\": [\n            {\n              \"id\": 8,\n              \"color\": \"#516cc6\",\n              \"name\": \"velit\",\n              \"fixes\": [\n                {\n                  \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                {\n                  \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                }\n              ]\n            },\n            {\n              \"id\": 8,\n              \"color\": \"#516cc6\",\n              \"name\": \"in v\",\n              \"fixes\": [\n                {\n                  \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                {\n                  \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                }\n              ]\n            }\n          ],\n          \"note\": \"<p>a free-form note</p>\",\n          \"amduca\": \"UNIDENTIFIED\"\n        }\n      ],\n      \"tags\": [\n        {\n          \"id\": 8,\n          \"color\": \"#516cc6\",\n          \"name\": \"Ut commodo\",\n          \"fixes\": [\n            {\n              \"_type\": \"ut dolor incididunt\",\n              \"detail\": \"magna aliquip culpa\",\n              \"message\": \"deserunt cupidatat ut proident dolor\",\n              \"title\": \"sint non\"\n            },\n            {\n              \"_type\": \"proident culpa\",\n              \"detail\": \"cupidatat aliqua dolor\",\n              \"message\": \"quis ea\",\n              \"title\": \"ullamco cupidatat\"\n            }\n          ]\n        },\n        {\n          \"id\": 8,\n          \"color\": \"#516cc6\",\n          \"name\": \"pr\",\n          \"fixes\": [\n            {\n              \"_type\": \"labore aliqua\",\n              \"detail\": \"Duis proident voluptate\",\n              \"message\": \"ea voluptate ipsum incididunt\",\n              \"title\": \"cillum Lorem\"\n            },\n            {\n              \"_type\": \"reprehenderit sunt dolore\",\n              \"detail\": \"in voluptate dolore\",\n              \"message\": \"irure tempor ipsum\",\n              \"title\": \"labore incididunt\"\n            }\n          ]\n        }\n      ],\n      \"diagnoses\": [\n        {\n          \"id\": 8,\n          \"name\": \"Pain/inflammation (musculoskeletal), treatment\"\n        },\n        {\n          \"id\": 8,\n          \"name\": \"Pain/inflammation (musculoskeletal), treatment\"\n        }\n      ],\n      \"eligibilities\": [\n        {\n          \"id\": 1,\n          \"name\": \"Beef Cattle\",\n          \"fdaSpecies\": [\n            \"gamebirds\",\n            \"salmon\"\n          ]\n        },\n        {\n          \"id\": 1,\n          \"name\": \"Beef Cattle\",\n          \"fdaSpecies\": [\n            \"goats\",\n            \"other\"\n          ]\n        }\n      ],\n      \"promises\": [\n        {\n          \"_type\": \"models.IdPromise\",\n          \"name\": \"ID promise\",\n          \"descrip\": \"You must give ID for each case enrolled\",\n          \"query\": \"What is the animal's name or number?\",\n          \"when\": \"PT0H\",\n          \"id\": 2345\n        },\n        {\n          \"_type\": \"models.IdPromise\",\n          \"name\": \"ID promise\",\n          \"descrip\": \"You must give ID for each case enrolled\",\n          \"query\": \"What is the animal's name or number?\",\n          \"when\": \"PT0H\",\n          \"id\": 2345\n        }\n      ],\n      \"metadata\": [\n        {\n          \"key\": \"popularity\",\n          \"value\": \"good 1.2\"\n        },\n        {\n          \"key\": \"popularity\",\n          \"value\": \"good 1.2\"\n        }\n      ]\n    }\n  ]\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "09151158-9f99-4947-8021-b7dd72c6f17f",
                            "name": "The server can not understand the request due to invalid syntax.",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "api",
                                        "protocols"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [
                                        {
                                            "key": "status",
                                            "value": "PRESCRIBED|PRESCRIBED"
                                        }
                                    ],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "description": {
                                            "content": "Added as a part of security scheme: apikey",
                                            "type": "text/plain"
                                        },
                                        "key": "X-Auth-Token",
                                        "value": "<API Key>"
                                    }
                                ],
                                "method": "GET",
                                "body": {}
                            },
                            "status": "Bad Request",
                            "code": 400,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"title\": \"incorrect username or password\",\n  \"status\": 404,\n  \"errorType\": \"/errors/incorrect-user-pass\",\n  \"detail\": \"Authentication failed due to incorrect username or password.\",\n  \"instance\": \"/login/log/abc123\"\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "89768646-2789-4fa2-a9c2-a890dc8a9c55",
                            "name": "Authorization required",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "api",
                                        "protocols"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [
                                        {
                                            "key": "status",
                                            "value": "PRESCRIBED|PRESCRIBED"
                                        }
                                    ],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "description": {
                                            "content": "Added as a part of security scheme: apikey",
                                            "type": "text/plain"
                                        },
                                        "key": "X-Auth-Token",
                                        "value": "<API Key>"
                                    }
                                ],
                                "method": "GET",
                                "body": {}
                            },
                            "status": "Forbidden",
                            "code": 403,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "text/plain"
                                }
                            ],
                            "body": "",
                            "cookie": [],
                            "_postman_previewlanguage": "text"
                        }
                    ],
                    "event": []
                },
                {
                    "id": "4202663a-747f-4163-bf44-a107c15af6c2",
                    "name": "record and validate aprotocol",
                    "request": {
                        "name": "record and validate aprotocol",
                        "description": {
                            "content": "This endpoint saves and validates a Protocol.",
                            "type": "text/plain"
                        },
                        "url": {
                            "path": [
                                "api",
                                "protocols"
                            ],
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "query": [],
                            "variable": []
                        },
                        "header": [
                            {
                                "key": "Content-Type",
                                "value": "application/json"
                            },
                            {
                                "key": "Accept",
                                "value": "application/json"
                            }
                        ],
                        "method": "POST",
                        "auth": null,
                        "body": {
                            "mode": "raw",
                            "raw": "{\n  \"ownerId\": 1,\n  \"name\": \"wip\",\n  \"status\": \"PRESCRIBED\",\n  \"instructions\": {\n    \"considerations\": \"<p>This is just an example, not a real protocol.</p>\",\n    \"restrictions\": \"<p>Not for use on real animals.</p>\",\n    \"dothis\": \"<h3>Examinations to perform</h3>\",\n    \"recordthis\": \"<p>record every step in your notebook.</p>\",\n    \"success\": \"<p>All problems are gone</p>\",\n    \"failure\": \"<p>One or more problems remain</p>\",\n    \"references\": \"<a href=\\\"https://en.wikipedia.org/wiki/Rickrolling\\\">Wikipedia</a>\"\n  },\n  \"id\": 12345,\n  \"shortname\": \"wip\",\n  \"created\": \"2020-01-10T10:30:37Z\",\n  \"edited\": \"2020-02-10T10:30:37Z\",\n  \"vetNote\": \"consider prescribing protocol x instead\",\n  \"wtMeatHrs\": 22,\n  \"wtMilkHrs\": 5,\n  \"shareAll\": true,\n  \"shareClonable\": true,\n  \"caseDefinition\": {\n    \"requireId\": false,\n    \"requireMor\": false,\n    \"contraindications\": \"\",\n    \"medical\": \"if fever is present, consider Protocol 12345 instead.\",\n    \"economic\": \"\",\n    \"note\": \"\"\n  },\n  \"treatments\": [\n    {\n      \"product\": \"MiracleMed\",\n      \"route\": \"wip\",\n      \"dosage\": {\n        \"doseId\": 69015374\n      },\n      \"sequenceFunction\": {\n        \"_type\": \"models.SeqSingleDose\"\n      },\n      \"sizeFunction\": {\n        \"_type\": \"models.FixedDoseFunction\",\n        \"dose\": {\n          \"quantity\": {\n            \"dimension\": \"Mass\",\n            \"value\": 3,\n            \"symbol\": \"oz\"\n          }\n        }\n      },\n      \"id\": \"B-123\",\n      \"ownerId\": 0,\n      \"description\": \"3.0 ml per kg repeat\",\n      \"eligibilities\": [\n        {\n          \"id\": 1,\n          \"name\": \"Beef Cattle\",\n          \"fdaSpecies\": [\n            \"chickens\",\n            \"unidentified\"\n          ]\n        },\n        {\n          \"id\": 1,\n          \"name\": \"Beef Cattle\",\n          \"fdaSpecies\": [\n            \"unidentified\",\n            \"veal\"\n          ]\n        }\n      ],\n      \"_dose\": \"3.0 ml per kg repeat in 6 hours and again in 24 hours\",\n      \"wtMeatHrs\": 27424849,\n      \"wtMilkHrs\": -87261637,\n      \"nada\": \"wip\",\n      \"tags\": [\n        {\n          \"id\": 8,\n          \"color\": \"#516cc6\",\n          \"name\": \"occaecat Duis \",\n          \"fixes\": [\n            {\n              \"_type\": \"Excepteur exercitation qui aliquip\",\n              \"detail\": \"aute ut nulla irure\",\n              \"message\": \"eiusmod laborum elit magna aute\",\n              \"title\": \"Duis esse exercitation\"\n            },\n            {\n              \"_type\": \"labore\",\n              \"detail\": \"officia velit magna ut\",\n              \"message\": \"eu sit elit dolore veniam\",\n              \"title\": \"irure minim\"\n            }\n          ]\n        },\n        {\n          \"id\": 8,\n          \"color\": \"#516cc6\",\n          \"name\": \"irure inci\",\n          \"fixes\": [\n            {\n              \"_type\": \"aliqua ut dolor dolor occaecat\",\n              \"detail\": \"occaecat deserunt Lorem mollit labore\",\n              \"message\": \"sit ut voluptate\",\n              \"title\": \"ut occaecat irure\"\n            },\n            {\n              \"_type\": \"labore dolore reprehenderit quis\",\n              \"detail\": \"dolore dolor\",\n              \"message\": \"id dolor\",\n              \"title\": \"\"\n            }\n          ]\n        }\n      ],\n      \"note\": \"<p>a free-form note</p>\",\n      \"amduca\": \"OFFLABEL\"\n    },\n    {\n      \"product\": \"MiracleMed\",\n      \"route\": \"wip\",\n      \"dosage\": {\n        \"doseId\": 35781694\n      },\n      \"sequenceFunction\": {\n        \"_type\": \"models.SeqSingleDose\"\n      },\n      \"sizeFunction\": {\n        \"_type\": \"models.FixedDoseFunction\",\n        \"dose\": {\n          \"quantity\": {\n            \"dimension\": \"Mass\",\n            \"value\": 3,\n            \"symbol\": \"oz\"\n          }\n        }\n      },\n      \"id\": \"B-123\",\n      \"ownerId\": 0,\n      \"description\": \"3.0 ml per kg repeat\",\n      \"eligibilities\": [\n        {\n          \"id\": 1,\n          \"name\": \"Beef Cattle\",\n          \"fdaSpecies\": [\n            \"bison\",\n            \"gamebirds\"\n          ]\n        },\n        {\n          \"id\": 1,\n          \"name\": \"Beef Cattle\",\n          \"fdaSpecies\": [\n            \"salmon\",\n            \"emus\"\n          ]\n        }\n      ],\n      \"_dose\": \"3.0 ml per kg repeat in 6 hours and again in 24 hours\",\n      \"wtMeatHrs\": 37808317,\n      \"wtMilkHrs\": 69116765,\n      \"nada\": \"wip\",\n      \"tags\": [\n        {\n          \"id\": 8,\n          \"color\": \"#516cc6\",\n          \"name\": \"proiden\",\n          \"fixes\": [\n            {\n              \"_type\": \"occaecat commodo tempor non\",\n              \"detail\": \"sunt cupidatat labore\",\n              \"message\": \"aliqua ut adipisicing\",\n              \"title\": \"magna dolore aute anim\"\n            },\n            {\n              \"_type\": \"dolor quis\",\n              \"detail\": \"voluptate cillum ut\",\n              \"message\": \"elit laboris\",\n              \"title\": \"adipisicing sun\"\n            }\n          ]\n        },\n        {\n          \"id\": 8,\n          \"color\": \"#516cc6\",\n          \"name\": \"mol\",\n          \"fixes\": [\n            {\n              \"_type\": \"ad fugiat\",\n              \"detail\": \"fugiat\",\n              \"message\": \"ut quis ullamco\",\n              \"title\": \"Ut commodo aliqua\"\n            },\n            {\n              \"_type\": \"cillum tempor qui exercitation\",\n              \"detail\": \"sunt quis Excepteur\",\n              \"message\": \"aliquip fugiat\",\n              \"title\": \"ut in\"\n            }\n          ]\n        }\n      ],\n      \"note\": \"<p>a free-form note</p>\",\n      \"amduca\": \"UNIDENTIFIED\"\n    }\n  ],\n  \"tags\": [\n    {\n      \"id\": 8,\n      \"color\": \"#516cc6\",\n      \"name\": \"ex e\",\n      \"fixes\": [\n        {\n          \"_type\": \"irure dolor ad culpa\",\n          \"detail\": \"in officia mollit dolor\",\n          \"message\": \"sit\",\n          \"title\": \"laborum irure ut\"\n        },\n        {\n          \"_type\": \"laborum\",\n          \"detail\": \"commodo sunt tempor\",\n          \"message\": \"proident\",\n          \"title\": \"exercitation sit dolore nulla\"\n        }\n      ]\n    },\n    {\n      \"id\": 8,\n      \"color\": \"#516cc6\",\n      \"name\": \"dolor aute e\",\n      \"fixes\": [\n        {\n          \"_type\": \"dolore ut\",\n          \"detail\": \"cupidatat culpa fugiat dolor\",\n          \"message\": \"in\",\n          \"title\": \"velit minim qui\"\n        },\n        {\n          \"_type\": \"dolor\",\n          \"detail\": \"dolor nulla\",\n          \"message\": \"dolor ut aliqua sit\",\n          \"title\": \"culpa pariatur tempor est\"\n        }\n      ]\n    }\n  ],\n  \"diagnoses\": [\n    {\n      \"id\": 8,\n      \"name\": \"Pain/inflammation (musculoskeletal), treatment\"\n    },\n    {\n      \"id\": 8,\n      \"name\": \"Pain/inflammation (musculoskeletal), treatment\"\n    }\n  ],\n  \"eligibilities\": [\n    {\n      \"id\": 1,\n      \"name\": \"Beef Cattle\",\n      \"fdaSpecies\": [\n        \"llamas\",\n        \"llamas\"\n      ]\n    },\n    {\n      \"id\": 1,\n      \"name\": \"Beef Cattle\",\n      \"fdaSpecies\": [\n        \"sheep\",\n        \"horses\"\n      ]\n    }\n  ],\n  \"promises\": [\n    {\n      \"_type\": \"models.IdPromise\",\n      \"name\": \"ID promise\",\n      \"descrip\": \"You must give ID for each case enrolled\",\n      \"query\": \"What is the animal's name or number?\",\n      \"when\": \"PT0H\",\n      \"id\": 2345\n    },\n    {\n      \"_type\": \"models.IdPromise\",\n      \"name\": \"ID promise\",\n      \"descrip\": \"You must give ID for each case enrolled\",\n      \"query\": \"What is the animal's name or number?\",\n      \"when\": \"PT0H\",\n      \"id\": 2345\n    }\n  ],\n  \"metadata\": [\n    {\n      \"key\": \"popularity\",\n      \"value\": \"good 1.2\"\n    },\n    {\n      \"key\": \"popularity\",\n      \"value\": \"good 1.2\"\n    }\n  ]\n}",
                            "options": {
                                "raw": {
                                    "language": "json"
                                }
                            }
                        }
                    },
                    "response": [
                        {
                            "id": "22fb6e20-b157-4f09-9cce-846ba0abadbf",
                            "name": "Success – recorded Protocol",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "api",
                                        "protocols"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "description": {
                                            "content": "Added as a part of security scheme: apikey",
                                            "type": "text/plain"
                                        },
                                        "key": "X-Auth-Token",
                                        "value": "<API Key>"
                                    }
                                ],
                                "method": "POST",
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n  \"ownerId\": 1,\n  \"name\": \"wip\",\n  \"status\": \"PRESCRIBED\",\n  \"instructions\": {\n    \"considerations\": \"<p>This is just an example, not a real protocol.</p>\",\n    \"restrictions\": \"<p>Not for use on real animals.</p>\",\n    \"dothis\": \"<h3>Examinations to perform</h3>\",\n    \"recordthis\": \"<p>record every step in your notebook.</p>\",\n    \"success\": \"<p>All problems are gone</p>\",\n    \"failure\": \"<p>One or more problems remain</p>\",\n    \"references\": \"<a href=\\\"https://en.wikipedia.org/wiki/Rickrolling\\\">Wikipedia</a>\"\n  },\n  \"id\": 12345,\n  \"shortname\": \"wip\",\n  \"created\": \"2020-01-10T10:30:37Z\",\n  \"edited\": \"2020-02-10T10:30:37Z\",\n  \"vetNote\": \"consider prescribing protocol x instead\",\n  \"wtMeatHrs\": 22,\n  \"wtMilkHrs\": 5,\n  \"shareAll\": true,\n  \"shareClonable\": true,\n  \"caseDefinition\": {\n    \"requireId\": false,\n    \"requireMor\": false,\n    \"contraindications\": \"\",\n    \"medical\": \"if fever is present, consider Protocol 12345 instead.\",\n    \"economic\": \"\",\n    \"note\": \"\"\n  },\n  \"treatments\": [\n    {\n      \"product\": \"MiracleMed\",\n      \"route\": \"wip\",\n      \"dosage\": {\n        \"doseId\": 69015374\n      },\n      \"sequenceFunction\": {\n        \"_type\": \"models.SeqSingleDose\"\n      },\n      \"sizeFunction\": {\n        \"_type\": \"models.FixedDoseFunction\",\n        \"dose\": {\n          \"quantity\": {\n            \"dimension\": \"Mass\",\n            \"value\": 3,\n            \"symbol\": \"oz\"\n          }\n        }\n      },\n      \"id\": \"B-123\",\n      \"ownerId\": 0,\n      \"description\": \"3.0 ml per kg repeat\",\n      \"eligibilities\": [\n        {\n          \"id\": 1,\n          \"name\": \"Beef Cattle\",\n          \"fdaSpecies\": [\n            \"chickens\",\n            \"unidentified\"\n          ]\n        },\n        {\n          \"id\": 1,\n          \"name\": \"Beef Cattle\",\n          \"fdaSpecies\": [\n            \"unidentified\",\n            \"veal\"\n          ]\n        }\n      ],\n      \"_dose\": \"3.0 ml per kg repeat in 6 hours and again in 24 hours\",\n      \"wtMeatHrs\": 27424849,\n      \"wtMilkHrs\": -87261637,\n      \"nada\": \"wip\",\n      \"tags\": [\n        {\n          \"id\": 8,\n          \"color\": \"#516cc6\",\n          \"name\": \"occaecat Duis \",\n          \"fixes\": [\n            {\n              \"_type\": \"Excepteur exercitation qui aliquip\",\n              \"detail\": \"aute ut nulla irure\",\n              \"message\": \"eiusmod laborum elit magna aute\",\n              \"title\": \"Duis esse exercitation\"\n            },\n            {\n              \"_type\": \"labore\",\n              \"detail\": \"officia velit magna ut\",\n              \"message\": \"eu sit elit dolore veniam\",\n              \"title\": \"irure minim\"\n            }\n          ]\n        },\n        {\n          \"id\": 8,\n          \"color\": \"#516cc6\",\n          \"name\": \"irure inci\",\n          \"fixes\": [\n            {\n              \"_type\": \"aliqua ut dolor dolor occaecat\",\n              \"detail\": \"occaecat deserunt Lorem mollit labore\",\n              \"message\": \"sit ut voluptate\",\n              \"title\": \"ut occaecat irure\"\n            },\n            {\n              \"_type\": \"labore dolore reprehenderit quis\",\n              \"detail\": \"dolore dolor\",\n              \"message\": \"id dolor\",\n              \"title\": \"\"\n            }\n          ]\n        }\n      ],\n      \"note\": \"<p>a free-form note</p>\",\n      \"amduca\": \"OFFLABEL\"\n    },\n    {\n      \"product\": \"MiracleMed\",\n      \"route\": \"wip\",\n      \"dosage\": {\n        \"doseId\": 35781694\n      },\n      \"sequenceFunction\": {\n        \"_type\": \"models.SeqSingleDose\"\n      },\n      \"sizeFunction\": {\n        \"_type\": \"models.FixedDoseFunction\",\n        \"dose\": {\n          \"quantity\": {\n            \"dimension\": \"Mass\",\n            \"value\": 3,\n            \"symbol\": \"oz\"\n          }\n        }\n      },\n      \"id\": \"B-123\",\n      \"ownerId\": 0,\n      \"description\": \"3.0 ml per kg repeat\",\n      \"eligibilities\": [\n        {\n          \"id\": 1,\n          \"name\": \"Beef Cattle\",\n          \"fdaSpecies\": [\n            \"bison\",\n            \"gamebirds\"\n          ]\n        },\n        {\n          \"id\": 1,\n          \"name\": \"Beef Cattle\",\n          \"fdaSpecies\": [\n            \"salmon\",\n            \"emus\"\n          ]\n        }\n      ],\n      \"_dose\": \"3.0 ml per kg repeat in 6 hours and again in 24 hours\",\n      \"wtMeatHrs\": 37808317,\n      \"wtMilkHrs\": 69116765,\n      \"nada\": \"wip\",\n      \"tags\": [\n        {\n          \"id\": 8,\n          \"color\": \"#516cc6\",\n          \"name\": \"proiden\",\n          \"fixes\": [\n            {\n              \"_type\": \"occaecat commodo tempor non\",\n              \"detail\": \"sunt cupidatat labore\",\n              \"message\": \"aliqua ut adipisicing\",\n              \"title\": \"magna dolore aute anim\"\n            },\n            {\n              \"_type\": \"dolor quis\",\n              \"detail\": \"voluptate cillum ut\",\n              \"message\": \"elit laboris\",\n              \"title\": \"adipisicing sun\"\n            }\n          ]\n        },\n        {\n          \"id\": 8,\n          \"color\": \"#516cc6\",\n          \"name\": \"mol\",\n          \"fixes\": [\n            {\n              \"_type\": \"ad fugiat\",\n              \"detail\": \"fugiat\",\n              \"message\": \"ut quis ullamco\",\n              \"title\": \"Ut commodo aliqua\"\n            },\n            {\n              \"_type\": \"cillum tempor qui exercitation\",\n              \"detail\": \"sunt quis Excepteur\",\n              \"message\": \"aliquip fugiat\",\n              \"title\": \"ut in\"\n            }\n          ]\n        }\n      ],\n      \"note\": \"<p>a free-form note</p>\",\n      \"amduca\": \"UNIDENTIFIED\"\n    }\n  ],\n  \"tags\": [\n    {\n      \"id\": 8,\n      \"color\": \"#516cc6\",\n      \"name\": \"ex e\",\n      \"fixes\": [\n        {\n          \"_type\": \"irure dolor ad culpa\",\n          \"detail\": \"in officia mollit dolor\",\n          \"message\": \"sit\",\n          \"title\": \"laborum irure ut\"\n        },\n        {\n          \"_type\": \"laborum\",\n          \"detail\": \"commodo sunt tempor\",\n          \"message\": \"proident\",\n          \"title\": \"exercitation sit dolore nulla\"\n        }\n      ]\n    },\n    {\n      \"id\": 8,\n      \"color\": \"#516cc6\",\n      \"name\": \"dolor aute e\",\n      \"fixes\": [\n        {\n          \"_type\": \"dolore ut\",\n          \"detail\": \"cupidatat culpa fugiat dolor\",\n          \"message\": \"in\",\n          \"title\": \"velit minim qui\"\n        },\n        {\n          \"_type\": \"dolor\",\n          \"detail\": \"dolor nulla\",\n          \"message\": \"dolor ut aliqua sit\",\n          \"title\": \"culpa pariatur tempor est\"\n        }\n      ]\n    }\n  ],\n  \"diagnoses\": [\n    {\n      \"id\": 8,\n      \"name\": \"Pain/inflammation (musculoskeletal), treatment\"\n    },\n    {\n      \"id\": 8,\n      \"name\": \"Pain/inflammation (musculoskeletal), treatment\"\n    }\n  ],\n  \"eligibilities\": [\n    {\n      \"id\": 1,\n      \"name\": \"Beef Cattle\",\n      \"fdaSpecies\": [\n        \"llamas\",\n        \"llamas\"\n      ]\n    },\n    {\n      \"id\": 1,\n      \"name\": \"Beef Cattle\",\n      \"fdaSpecies\": [\n        \"sheep\",\n        \"horses\"\n      ]\n    }\n  ],\n  \"promises\": [\n    {\n      \"_type\": \"models.IdPromise\",\n      \"name\": \"ID promise\",\n      \"descrip\": \"You must give ID for each case enrolled\",\n      \"query\": \"What is the animal's name or number?\",\n      \"when\": \"PT0H\",\n      \"id\": 2345\n    },\n    {\n      \"_type\": \"models.IdPromise\",\n      \"name\": \"ID promise\",\n      \"descrip\": \"You must give ID for each case enrolled\",\n      \"query\": \"What is the animal's name or number?\",\n      \"when\": \"PT0H\",\n      \"id\": 2345\n    }\n  ],\n  \"metadata\": [\n    {\n      \"key\": \"popularity\",\n      \"value\": \"good 1.2\"\n    },\n    {\n      \"key\": \"popularity\",\n      \"value\": \"good 1.2\"\n    }\n  ]\n}",
                                    "options": {
                                        "raw": {
                                            "language": "json"
                                        }
                                    }
                                }
                            },
                            "status": "OK",
                            "code": 200,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"protocol\": {\n    \"ownerId\": 1,\n    \"name\": \"wip\",\n    \"status\": \"PRESCRIBED\",\n    \"instructions\": {\n      \"considerations\": \"<p>This is just an example, not a real protocol.</p>\",\n      \"restrictions\": \"<p>Not for use on real animals.</p>\",\n      \"dothis\": \"<h3>Examinations to perform</h3>\",\n      \"recordthis\": \"<p>record every step in your notebook.</p>\",\n      \"success\": \"<p>All problems are gone</p>\",\n      \"failure\": \"<p>One or more problems remain</p>\",\n      \"references\": \"<a href=\\\"https://en.wikipedia.org/wiki/Rickrolling\\\">Wikipedia</a>\"\n    },\n    \"id\": 12345,\n    \"shortname\": \"wip\",\n    \"created\": \"2020-01-10T10:30:37Z\",\n    \"edited\": \"2020-02-10T10:30:37Z\",\n    \"vetNote\": \"consider prescribing protocol x instead\",\n    \"wtMeatHrs\": 22,\n    \"wtMilkHrs\": 5,\n    \"shareAll\": true,\n    \"shareClonable\": true,\n    \"caseDefinition\": {\n      \"requireId\": false,\n      \"requireMor\": false,\n      \"contraindications\": \"\",\n      \"medical\": \"if fever is present, consider Protocol 12345 instead.\",\n      \"economic\": \"\",\n      \"note\": \"\"\n    },\n    \"treatments\": [\n      {\n        \"product\": \"MiracleMed\",\n        \"route\": \"wip\",\n        \"dosage\": {\n          \"doseId\": -82710886\n        },\n        \"sequenceFunction\": {\n          \"_type\": \"models.SeqSingleDose\"\n        },\n        \"sizeFunction\": {\n          \"_type\": \"models.FixedDoseFunction\",\n          \"dose\": {\n            \"quantity\": {\n              \"dimension\": \"Mass\",\n              \"value\": 3,\n              \"symbol\": \"oz\"\n            }\n          }\n        },\n        \"id\": \"B-123\",\n        \"ownerId\": 0,\n        \"description\": \"3.0 ml per kg repeat\",\n        \"eligibilities\": [\n          {\n            \"id\": 1,\n            \"name\": \"Beef Cattle\",\n            \"fdaSpecies\": [\n              \"gamebirds\",\n              \"cats\"\n            ]\n          },\n          {\n            \"id\": 1,\n            \"name\": \"Beef Cattle\",\n            \"fdaSpecies\": [\n              \"catfish\",\n              \"chickens\"\n            ]\n          }\n        ],\n        \"_dose\": \"3.0 ml per kg repeat in 6 hours and again in 24 hours\",\n        \"wtMeatHrs\": 3764921,\n        \"wtMilkHrs\": -43140473,\n        \"nada\": \"wip\",\n        \"tags\": [\n          {\n            \"id\": 8,\n            \"color\": \"#516cc6\",\n            \"name\": \"pariatur e\",\n            \"fixes\": [\n              {\n                \"_type\": {\n                  \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"detail\": {\n                  \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"message\": {\n                  \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"title\": {\n                  \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                }\n              },\n              {\n                \"_type\": {\n                  \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"detail\": {\n                  \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"message\": {\n                  \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"title\": {\n                  \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                }\n              }\n            ]\n          },\n          {\n            \"id\": 8,\n            \"color\": \"#516cc6\",\n            \"name\": \"est labor\",\n            \"fixes\": [\n              {\n                \"_type\": {\n                  \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"detail\": {\n                  \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"message\": {\n                  \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"title\": {\n                  \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                }\n              },\n              {\n                \"_type\": {\n                  \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"detail\": {\n                  \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"message\": {\n                  \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"title\": {\n                  \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                }\n              }\n            ]\n          }\n        ],\n        \"note\": \"<p>a free-form note</p>\",\n        \"amduca\": \"ONLABEL\"\n      },\n      {\n        \"product\": \"MiracleMed\",\n        \"route\": \"wip\",\n        \"dosage\": {\n          \"doseId\": 90743195\n        },\n        \"sequenceFunction\": {\n          \"_type\": \"models.SeqSingleDose\"\n        },\n        \"sizeFunction\": {\n          \"_type\": \"models.FixedDoseFunction\",\n          \"dose\": {\n            \"quantity\": {\n              \"dimension\": \"Mass\",\n              \"value\": 3,\n              \"symbol\": \"oz\"\n            }\n          }\n        },\n        \"id\": \"B-123\",\n        \"ownerId\": 0,\n        \"description\": \"3.0 ml per kg repeat\",\n        \"eligibilities\": [\n          {\n            \"id\": 1,\n            \"name\": \"Beef Cattle\",\n            \"fdaSpecies\": [\n              \"emus\",\n              \"bison\"\n            ]\n          },\n          {\n            \"id\": 1,\n            \"name\": \"Beef Cattle\",\n            \"fdaSpecies\": [\n              \"llamas\",\n              \"emus\"\n            ]\n          }\n        ],\n        \"_dose\": \"3.0 ml per kg repeat in 6 hours and again in 24 hours\",\n        \"wtMeatHrs\": -43055535,\n        \"wtMilkHrs\": -97115862,\n        \"nada\": \"wip\",\n        \"tags\": [\n          {\n            \"id\": 8,\n            \"color\": \"#516cc6\",\n            \"name\": \"fugiat do\",\n            \"fixes\": [\n              {\n                \"_type\": {\n                  \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"detail\": {\n                  \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"message\": {\n                  \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"title\": {\n                  \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                }\n              },\n              {\n                \"_type\": {\n                  \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"detail\": {\n                  \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"message\": {\n                  \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"title\": {\n                  \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                }\n              }\n            ]\n          },\n          {\n            \"id\": 8,\n            \"color\": \"#516cc6\",\n            \"name\": \"in\",\n            \"fixes\": [\n              {\n                \"_type\": {\n                  \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"detail\": {\n                  \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"message\": {\n                  \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"title\": {\n                  \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                }\n              },\n              {\n                \"_type\": {\n                  \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"detail\": {\n                  \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"message\": {\n                  \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"title\": {\n                  \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                }\n              }\n            ]\n          }\n        ],\n        \"note\": \"<p>a free-form note</p>\",\n        \"amduca\": \"UNIDENTIFIED\"\n      }\n    ],\n    \"tags\": [\n      {\n        \"id\": 8,\n        \"color\": \"#516cc6\",\n        \"name\": \"dolor Lorem\",\n        \"fixes\": [\n          {\n            \"_type\": \"do\",\n            \"detail\": \"cillum irure incididunt ad\",\n            \"message\": \"sit\",\n            \"title\": \"officia ut\"\n          },\n          {\n            \"_type\": \"commodo cillum non\",\n            \"detail\": \"ut cupidatat\",\n            \"message\": \"Lorem laboris\",\n            \"title\": \"sed Excepteur\"\n          }\n        ]\n      },\n      {\n        \"id\": 8,\n        \"color\": \"#516cc6\",\n        \"name\": \"proident volu\",\n        \"fixes\": [\n          {\n            \"_type\": \"ipsum reprehenderit velit\",\n            \"detail\": \"irure\",\n            \"message\": \"Ut\",\n            \"title\": \"Excepteur officia non qui\"\n          },\n          {\n            \"_type\": \"est sunt laboris ad\",\n            \"detail\": \"mollit sed deserunt\",\n            \"message\": \"nisi veniam\",\n            \"title\": \"adipisicing do irure\"\n          }\n        ]\n      }\n    ],\n    \"diagnoses\": [\n      {\n        \"id\": 8,\n        \"name\": \"Pain/inflammation (musculoskeletal), treatment\"\n      },\n      {\n        \"id\": 8,\n        \"name\": \"Pain/inflammation (musculoskeletal), treatment\"\n      }\n    ],\n    \"eligibilities\": [\n      {\n        \"id\": 1,\n        \"name\": \"Beef Cattle\",\n        \"fdaSpecies\": [\n          \"salmon\",\n          \"other\"\n        ]\n      },\n      {\n        \"id\": 1,\n        \"name\": \"Beef Cattle\",\n        \"fdaSpecies\": [\n          \"salmon\",\n          \"fish\"\n        ]\n      }\n    ],\n    \"promises\": [\n      {\n        \"_type\": \"models.IdPromise\",\n        \"name\": \"ID promise\",\n        \"descrip\": \"You must give ID for each case enrolled\",\n        \"query\": \"What is the animal's name or number?\",\n        \"when\": \"PT0H\",\n        \"id\": 2345\n      },\n      {\n        \"_type\": \"models.IdPromise\",\n        \"name\": \"ID promise\",\n        \"descrip\": \"You must give ID for each case enrolled\",\n        \"query\": \"What is the animal's name or number?\",\n        \"when\": \"PT0H\",\n        \"id\": 2345\n      }\n    ],\n    \"metadata\": [\n      {\n        \"key\": \"popularity\",\n        \"value\": \"good 1.2\"\n      },\n      {\n        \"key\": \"popularity\",\n        \"value\": \"good 1.2\"\n      }\n    ]\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "b7fdb071-791c-4c0d-9d2b-39aa9270ba01",
                            "name": "The server can not understand the request due to invalid syntax.",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "api",
                                        "protocols"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "description": {
                                            "content": "Added as a part of security scheme: apikey",
                                            "type": "text/plain"
                                        },
                                        "key": "X-Auth-Token",
                                        "value": "<API Key>"
                                    }
                                ],
                                "method": "POST",
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n  \"ownerId\": 1,\n  \"name\": \"wip\",\n  \"status\": \"PRESCRIBED\",\n  \"instructions\": {\n    \"considerations\": \"<p>This is just an example, not a real protocol.</p>\",\n    \"restrictions\": \"<p>Not for use on real animals.</p>\",\n    \"dothis\": \"<h3>Examinations to perform</h3>\",\n    \"recordthis\": \"<p>record every step in your notebook.</p>\",\n    \"success\": \"<p>All problems are gone</p>\",\n    \"failure\": \"<p>One or more problems remain</p>\",\n    \"references\": \"<a href=\\\"https://en.wikipedia.org/wiki/Rickrolling\\\">Wikipedia</a>\"\n  },\n  \"id\": 12345,\n  \"shortname\": \"wip\",\n  \"created\": \"2020-01-10T10:30:37Z\",\n  \"edited\": \"2020-02-10T10:30:37Z\",\n  \"vetNote\": \"consider prescribing protocol x instead\",\n  \"wtMeatHrs\": 22,\n  \"wtMilkHrs\": 5,\n  \"shareAll\": true,\n  \"shareClonable\": true,\n  \"caseDefinition\": {\n    \"requireId\": false,\n    \"requireMor\": false,\n    \"contraindications\": \"\",\n    \"medical\": \"if fever is present, consider Protocol 12345 instead.\",\n    \"economic\": \"\",\n    \"note\": \"\"\n  },\n  \"treatments\": [\n    {\n      \"product\": \"MiracleMed\",\n      \"route\": \"wip\",\n      \"dosage\": {\n        \"doseId\": 69015374\n      },\n      \"sequenceFunction\": {\n        \"_type\": \"models.SeqSingleDose\"\n      },\n      \"sizeFunction\": {\n        \"_type\": \"models.FixedDoseFunction\",\n        \"dose\": {\n          \"quantity\": {\n            \"dimension\": \"Mass\",\n            \"value\": 3,\n            \"symbol\": \"oz\"\n          }\n        }\n      },\n      \"id\": \"B-123\",\n      \"ownerId\": 0,\n      \"description\": \"3.0 ml per kg repeat\",\n      \"eligibilities\": [\n        {\n          \"id\": 1,\n          \"name\": \"Beef Cattle\",\n          \"fdaSpecies\": [\n            \"chickens\",\n            \"unidentified\"\n          ]\n        },\n        {\n          \"id\": 1,\n          \"name\": \"Beef Cattle\",\n          \"fdaSpecies\": [\n            \"unidentified\",\n            \"veal\"\n          ]\n        }\n      ],\n      \"_dose\": \"3.0 ml per kg repeat in 6 hours and again in 24 hours\",\n      \"wtMeatHrs\": 27424849,\n      \"wtMilkHrs\": -87261637,\n      \"nada\": \"wip\",\n      \"tags\": [\n        {\n          \"id\": 8,\n          \"color\": \"#516cc6\",\n          \"name\": \"occaecat Duis \",\n          \"fixes\": [\n            {\n              \"_type\": \"Excepteur exercitation qui aliquip\",\n              \"detail\": \"aute ut nulla irure\",\n              \"message\": \"eiusmod laborum elit magna aute\",\n              \"title\": \"Duis esse exercitation\"\n            },\n            {\n              \"_type\": \"labore\",\n              \"detail\": \"officia velit magna ut\",\n              \"message\": \"eu sit elit dolore veniam\",\n              \"title\": \"irure minim\"\n            }\n          ]\n        },\n        {\n          \"id\": 8,\n          \"color\": \"#516cc6\",\n          \"name\": \"irure inci\",\n          \"fixes\": [\n            {\n              \"_type\": \"aliqua ut dolor dolor occaecat\",\n              \"detail\": \"occaecat deserunt Lorem mollit labore\",\n              \"message\": \"sit ut voluptate\",\n              \"title\": \"ut occaecat irure\"\n            },\n            {\n              \"_type\": \"labore dolore reprehenderit quis\",\n              \"detail\": \"dolore dolor\",\n              \"message\": \"id dolor\",\n              \"title\": \"\"\n            }\n          ]\n        }\n      ],\n      \"note\": \"<p>a free-form note</p>\",\n      \"amduca\": \"OFFLABEL\"\n    },\n    {\n      \"product\": \"MiracleMed\",\n      \"route\": \"wip\",\n      \"dosage\": {\n        \"doseId\": 35781694\n      },\n      \"sequenceFunction\": {\n        \"_type\": \"models.SeqSingleDose\"\n      },\n      \"sizeFunction\": {\n        \"_type\": \"models.FixedDoseFunction\",\n        \"dose\": {\n          \"quantity\": {\n            \"dimension\": \"Mass\",\n            \"value\": 3,\n            \"symbol\": \"oz\"\n          }\n        }\n      },\n      \"id\": \"B-123\",\n      \"ownerId\": 0,\n      \"description\": \"3.0 ml per kg repeat\",\n      \"eligibilities\": [\n        {\n          \"id\": 1,\n          \"name\": \"Beef Cattle\",\n          \"fdaSpecies\": [\n            \"bison\",\n            \"gamebirds\"\n          ]\n        },\n        {\n          \"id\": 1,\n          \"name\": \"Beef Cattle\",\n          \"fdaSpecies\": [\n            \"salmon\",\n            \"emus\"\n          ]\n        }\n      ],\n      \"_dose\": \"3.0 ml per kg repeat in 6 hours and again in 24 hours\",\n      \"wtMeatHrs\": 37808317,\n      \"wtMilkHrs\": 69116765,\n      \"nada\": \"wip\",\n      \"tags\": [\n        {\n          \"id\": 8,\n          \"color\": \"#516cc6\",\n          \"name\": \"proiden\",\n          \"fixes\": [\n            {\n              \"_type\": \"occaecat commodo tempor non\",\n              \"detail\": \"sunt cupidatat labore\",\n              \"message\": \"aliqua ut adipisicing\",\n              \"title\": \"magna dolore aute anim\"\n            },\n            {\n              \"_type\": \"dolor quis\",\n              \"detail\": \"voluptate cillum ut\",\n              \"message\": \"elit laboris\",\n              \"title\": \"adipisicing sun\"\n            }\n          ]\n        },\n        {\n          \"id\": 8,\n          \"color\": \"#516cc6\",\n          \"name\": \"mol\",\n          \"fixes\": [\n            {\n              \"_type\": \"ad fugiat\",\n              \"detail\": \"fugiat\",\n              \"message\": \"ut quis ullamco\",\n              \"title\": \"Ut commodo aliqua\"\n            },\n            {\n              \"_type\": \"cillum tempor qui exercitation\",\n              \"detail\": \"sunt quis Excepteur\",\n              \"message\": \"aliquip fugiat\",\n              \"title\": \"ut in\"\n            }\n          ]\n        }\n      ],\n      \"note\": \"<p>a free-form note</p>\",\n      \"amduca\": \"UNIDENTIFIED\"\n    }\n  ],\n  \"tags\": [\n    {\n      \"id\": 8,\n      \"color\": \"#516cc6\",\n      \"name\": \"ex e\",\n      \"fixes\": [\n        {\n          \"_type\": \"irure dolor ad culpa\",\n          \"detail\": \"in officia mollit dolor\",\n          \"message\": \"sit\",\n          \"title\": \"laborum irure ut\"\n        },\n        {\n          \"_type\": \"laborum\",\n          \"detail\": \"commodo sunt tempor\",\n          \"message\": \"proident\",\n          \"title\": \"exercitation sit dolore nulla\"\n        }\n      ]\n    },\n    {\n      \"id\": 8,\n      \"color\": \"#516cc6\",\n      \"name\": \"dolor aute e\",\n      \"fixes\": [\n        {\n          \"_type\": \"dolore ut\",\n          \"detail\": \"cupidatat culpa fugiat dolor\",\n          \"message\": \"in\",\n          \"title\": \"velit minim qui\"\n        },\n        {\n          \"_type\": \"dolor\",\n          \"detail\": \"dolor nulla\",\n          \"message\": \"dolor ut aliqua sit\",\n          \"title\": \"culpa pariatur tempor est\"\n        }\n      ]\n    }\n  ],\n  \"diagnoses\": [\n    {\n      \"id\": 8,\n      \"name\": \"Pain/inflammation (musculoskeletal), treatment\"\n    },\n    {\n      \"id\": 8,\n      \"name\": \"Pain/inflammation (musculoskeletal), treatment\"\n    }\n  ],\n  \"eligibilities\": [\n    {\n      \"id\": 1,\n      \"name\": \"Beef Cattle\",\n      \"fdaSpecies\": [\n        \"llamas\",\n        \"llamas\"\n      ]\n    },\n    {\n      \"id\": 1,\n      \"name\": \"Beef Cattle\",\n      \"fdaSpecies\": [\n        \"sheep\",\n        \"horses\"\n      ]\n    }\n  ],\n  \"promises\": [\n    {\n      \"_type\": \"models.IdPromise\",\n      \"name\": \"ID promise\",\n      \"descrip\": \"You must give ID for each case enrolled\",\n      \"query\": \"What is the animal's name or number?\",\n      \"when\": \"PT0H\",\n      \"id\": 2345\n    },\n    {\n      \"_type\": \"models.IdPromise\",\n      \"name\": \"ID promise\",\n      \"descrip\": \"You must give ID for each case enrolled\",\n      \"query\": \"What is the animal's name or number?\",\n      \"when\": \"PT0H\",\n      \"id\": 2345\n    }\n  ],\n  \"metadata\": [\n    {\n      \"key\": \"popularity\",\n      \"value\": \"good 1.2\"\n    },\n    {\n      \"key\": \"popularity\",\n      \"value\": \"good 1.2\"\n    }\n  ]\n}",
                                    "options": {
                                        "raw": {
                                            "language": "json"
                                        }
                                    }
                                }
                            },
                            "status": "Bad Request",
                            "code": 400,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"title\": \"incorrect username or password\",\n  \"status\": 404,\n  \"errorType\": \"/errors/incorrect-user-pass\",\n  \"detail\": \"Authentication failed due to incorrect username or password.\",\n  \"instance\": \"/login/log/abc123\"\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "dbd75c5f-e64d-42a0-afa1-82ece54bfb25",
                            "name": "Authorization required",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "api",
                                        "protocols"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "description": {
                                            "content": "Added as a part of security scheme: apikey",
                                            "type": "text/plain"
                                        },
                                        "key": "X-Auth-Token",
                                        "value": "<API Key>"
                                    }
                                ],
                                "method": "POST",
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n  \"ownerId\": 1,\n  \"name\": \"wip\",\n  \"status\": \"PRESCRIBED\",\n  \"instructions\": {\n    \"considerations\": \"<p>This is just an example, not a real protocol.</p>\",\n    \"restrictions\": \"<p>Not for use on real animals.</p>\",\n    \"dothis\": \"<h3>Examinations to perform</h3>\",\n    \"recordthis\": \"<p>record every step in your notebook.</p>\",\n    \"success\": \"<p>All problems are gone</p>\",\n    \"failure\": \"<p>One or more problems remain</p>\",\n    \"references\": \"<a href=\\\"https://en.wikipedia.org/wiki/Rickrolling\\\">Wikipedia</a>\"\n  },\n  \"id\": 12345,\n  \"shortname\": \"wip\",\n  \"created\": \"2020-01-10T10:30:37Z\",\n  \"edited\": \"2020-02-10T10:30:37Z\",\n  \"vetNote\": \"consider prescribing protocol x instead\",\n  \"wtMeatHrs\": 22,\n  \"wtMilkHrs\": 5,\n  \"shareAll\": true,\n  \"shareClonable\": true,\n  \"caseDefinition\": {\n    \"requireId\": false,\n    \"requireMor\": false,\n    \"contraindications\": \"\",\n    \"medical\": \"if fever is present, consider Protocol 12345 instead.\",\n    \"economic\": \"\",\n    \"note\": \"\"\n  },\n  \"treatments\": [\n    {\n      \"product\": \"MiracleMed\",\n      \"route\": \"wip\",\n      \"dosage\": {\n        \"doseId\": 69015374\n      },\n      \"sequenceFunction\": {\n        \"_type\": \"models.SeqSingleDose\"\n      },\n      \"sizeFunction\": {\n        \"_type\": \"models.FixedDoseFunction\",\n        \"dose\": {\n          \"quantity\": {\n            \"dimension\": \"Mass\",\n            \"value\": 3,\n            \"symbol\": \"oz\"\n          }\n        }\n      },\n      \"id\": \"B-123\",\n      \"ownerId\": 0,\n      \"description\": \"3.0 ml per kg repeat\",\n      \"eligibilities\": [\n        {\n          \"id\": 1,\n          \"name\": \"Beef Cattle\",\n          \"fdaSpecies\": [\n            \"chickens\",\n            \"unidentified\"\n          ]\n        },\n        {\n          \"id\": 1,\n          \"name\": \"Beef Cattle\",\n          \"fdaSpecies\": [\n            \"unidentified\",\n            \"veal\"\n          ]\n        }\n      ],\n      \"_dose\": \"3.0 ml per kg repeat in 6 hours and again in 24 hours\",\n      \"wtMeatHrs\": 27424849,\n      \"wtMilkHrs\": -87261637,\n      \"nada\": \"wip\",\n      \"tags\": [\n        {\n          \"id\": 8,\n          \"color\": \"#516cc6\",\n          \"name\": \"occaecat Duis \",\n          \"fixes\": [\n            {\n              \"_type\": \"Excepteur exercitation qui aliquip\",\n              \"detail\": \"aute ut nulla irure\",\n              \"message\": \"eiusmod laborum elit magna aute\",\n              \"title\": \"Duis esse exercitation\"\n            },\n            {\n              \"_type\": \"labore\",\n              \"detail\": \"officia velit magna ut\",\n              \"message\": \"eu sit elit dolore veniam\",\n              \"title\": \"irure minim\"\n            }\n          ]\n        },\n        {\n          \"id\": 8,\n          \"color\": \"#516cc6\",\n          \"name\": \"irure inci\",\n          \"fixes\": [\n            {\n              \"_type\": \"aliqua ut dolor dolor occaecat\",\n              \"detail\": \"occaecat deserunt Lorem mollit labore\",\n              \"message\": \"sit ut voluptate\",\n              \"title\": \"ut occaecat irure\"\n            },\n            {\n              \"_type\": \"labore dolore reprehenderit quis\",\n              \"detail\": \"dolore dolor\",\n              \"message\": \"id dolor\",\n              \"title\": \"\"\n            }\n          ]\n        }\n      ],\n      \"note\": \"<p>a free-form note</p>\",\n      \"amduca\": \"OFFLABEL\"\n    },\n    {\n      \"product\": \"MiracleMed\",\n      \"route\": \"wip\",\n      \"dosage\": {\n        \"doseId\": 35781694\n      },\n      \"sequenceFunction\": {\n        \"_type\": \"models.SeqSingleDose\"\n      },\n      \"sizeFunction\": {\n        \"_type\": \"models.FixedDoseFunction\",\n        \"dose\": {\n          \"quantity\": {\n            \"dimension\": \"Mass\",\n            \"value\": 3,\n            \"symbol\": \"oz\"\n          }\n        }\n      },\n      \"id\": \"B-123\",\n      \"ownerId\": 0,\n      \"description\": \"3.0 ml per kg repeat\",\n      \"eligibilities\": [\n        {\n          \"id\": 1,\n          \"name\": \"Beef Cattle\",\n          \"fdaSpecies\": [\n            \"bison\",\n            \"gamebirds\"\n          ]\n        },\n        {\n          \"id\": 1,\n          \"name\": \"Beef Cattle\",\n          \"fdaSpecies\": [\n            \"salmon\",\n            \"emus\"\n          ]\n        }\n      ],\n      \"_dose\": \"3.0 ml per kg repeat in 6 hours and again in 24 hours\",\n      \"wtMeatHrs\": 37808317,\n      \"wtMilkHrs\": 69116765,\n      \"nada\": \"wip\",\n      \"tags\": [\n        {\n          \"id\": 8,\n          \"color\": \"#516cc6\",\n          \"name\": \"proiden\",\n          \"fixes\": [\n            {\n              \"_type\": \"occaecat commodo tempor non\",\n              \"detail\": \"sunt cupidatat labore\",\n              \"message\": \"aliqua ut adipisicing\",\n              \"title\": \"magna dolore aute anim\"\n            },\n            {\n              \"_type\": \"dolor quis\",\n              \"detail\": \"voluptate cillum ut\",\n              \"message\": \"elit laboris\",\n              \"title\": \"adipisicing sun\"\n            }\n          ]\n        },\n        {\n          \"id\": 8,\n          \"color\": \"#516cc6\",\n          \"name\": \"mol\",\n          \"fixes\": [\n            {\n              \"_type\": \"ad fugiat\",\n              \"detail\": \"fugiat\",\n              \"message\": \"ut quis ullamco\",\n              \"title\": \"Ut commodo aliqua\"\n            },\n            {\n              \"_type\": \"cillum tempor qui exercitation\",\n              \"detail\": \"sunt quis Excepteur\",\n              \"message\": \"aliquip fugiat\",\n              \"title\": \"ut in\"\n            }\n          ]\n        }\n      ],\n      \"note\": \"<p>a free-form note</p>\",\n      \"amduca\": \"UNIDENTIFIED\"\n    }\n  ],\n  \"tags\": [\n    {\n      \"id\": 8,\n      \"color\": \"#516cc6\",\n      \"name\": \"ex e\",\n      \"fixes\": [\n        {\n          \"_type\": \"irure dolor ad culpa\",\n          \"detail\": \"in officia mollit dolor\",\n          \"message\": \"sit\",\n          \"title\": \"laborum irure ut\"\n        },\n        {\n          \"_type\": \"laborum\",\n          \"detail\": \"commodo sunt tempor\",\n          \"message\": \"proident\",\n          \"title\": \"exercitation sit dolore nulla\"\n        }\n      ]\n    },\n    {\n      \"id\": 8,\n      \"color\": \"#516cc6\",\n      \"name\": \"dolor aute e\",\n      \"fixes\": [\n        {\n          \"_type\": \"dolore ut\",\n          \"detail\": \"cupidatat culpa fugiat dolor\",\n          \"message\": \"in\",\n          \"title\": \"velit minim qui\"\n        },\n        {\n          \"_type\": \"dolor\",\n          \"detail\": \"dolor nulla\",\n          \"message\": \"dolor ut aliqua sit\",\n          \"title\": \"culpa pariatur tempor est\"\n        }\n      ]\n    }\n  ],\n  \"diagnoses\": [\n    {\n      \"id\": 8,\n      \"name\": \"Pain/inflammation (musculoskeletal), treatment\"\n    },\n    {\n      \"id\": 8,\n      \"name\": \"Pain/inflammation (musculoskeletal), treatment\"\n    }\n  ],\n  \"eligibilities\": [\n    {\n      \"id\": 1,\n      \"name\": \"Beef Cattle\",\n      \"fdaSpecies\": [\n        \"llamas\",\n        \"llamas\"\n      ]\n    },\n    {\n      \"id\": 1,\n      \"name\": \"Beef Cattle\",\n      \"fdaSpecies\": [\n        \"sheep\",\n        \"horses\"\n      ]\n    }\n  ],\n  \"promises\": [\n    {\n      \"_type\": \"models.IdPromise\",\n      \"name\": \"ID promise\",\n      \"descrip\": \"You must give ID for each case enrolled\",\n      \"query\": \"What is the animal's name or number?\",\n      \"when\": \"PT0H\",\n      \"id\": 2345\n    },\n    {\n      \"_type\": \"models.IdPromise\",\n      \"name\": \"ID promise\",\n      \"descrip\": \"You must give ID for each case enrolled\",\n      \"query\": \"What is the animal's name or number?\",\n      \"when\": \"PT0H\",\n      \"id\": 2345\n    }\n  ],\n  \"metadata\": [\n    {\n      \"key\": \"popularity\",\n      \"value\": \"good 1.2\"\n    },\n    {\n      \"key\": \"popularity\",\n      \"value\": \"good 1.2\"\n    }\n  ]\n}",
                                    "options": {
                                        "raw": {
                                            "language": "json"
                                        }
                                    }
                                }
                            },
                            "status": "Forbidden",
                            "code": 403,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "text/plain"
                                }
                            ],
                            "body": "",
                            "cookie": [],
                            "_postman_previewlanguage": "text"
                        }
                    ],
                    "event": [],
                    "protocolProfileBehavior": {
                        "disableBodyPruning": true
                    }
                },
                {
                    "id": "be45e9bc-e152-4bb6-aa85-d1fc058c7e7e",
                    "name": "update protocol",
                    "request": {
                        "name": "update protocol",
                        "description": {
                            "content": "This endpoint updates and validates a Protocol.",
                            "type": "text/plain"
                        },
                        "url": {
                            "path": [
                                "api",
                                "protocols"
                            ],
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "query": [],
                            "variable": []
                        },
                        "header": [
                            {
                                "key": "Content-Type",
                                "value": "application/json"
                            },
                            {
                                "key": "Accept",
                                "value": "application/json"
                            }
                        ],
                        "method": "PUT",
                        "auth": null,
                        "body": {
                            "mode": "raw",
                            "raw": "{\n  \"ownerId\": 1,\n  \"name\": \"wip\",\n  \"status\": \"PRESCRIBED\",\n  \"instructions\": {\n    \"considerations\": \"<p>This is just an example, not a real protocol.</p>\",\n    \"restrictions\": \"<p>Not for use on real animals.</p>\",\n    \"dothis\": \"<h3>Examinations to perform</h3>\",\n    \"recordthis\": \"<p>record every step in your notebook.</p>\",\n    \"success\": \"<p>All problems are gone</p>\",\n    \"failure\": \"<p>One or more problems remain</p>\",\n    \"references\": \"<a href=\\\"https://en.wikipedia.org/wiki/Rickrolling\\\">Wikipedia</a>\"\n  },\n  \"id\": 12345,\n  \"shortname\": \"wip\",\n  \"created\": \"2020-01-10T10:30:37Z\",\n  \"edited\": \"2020-02-10T10:30:37Z\",\n  \"vetNote\": \"consider prescribing protocol x instead\",\n  \"wtMeatHrs\": 22,\n  \"wtMilkHrs\": 5,\n  \"shareAll\": true,\n  \"shareClonable\": true,\n  \"caseDefinition\": {\n    \"requireId\": false,\n    \"requireMor\": false,\n    \"contraindications\": \"\",\n    \"medical\": \"if fever is present, consider Protocol 12345 instead.\",\n    \"economic\": \"\",\n    \"note\": \"\"\n  },\n  \"treatments\": [\n    {\n      \"product\": \"MiracleMed\",\n      \"route\": \"wip\",\n      \"dosage\": {\n        \"doseId\": 69015374\n      },\n      \"sequenceFunction\": {\n        \"_type\": \"models.SeqSingleDose\"\n      },\n      \"sizeFunction\": {\n        \"_type\": \"models.FixedDoseFunction\",\n        \"dose\": {\n          \"quantity\": {\n            \"dimension\": \"Mass\",\n            \"value\": 3,\n            \"symbol\": \"oz\"\n          }\n        }\n      },\n      \"id\": \"B-123\",\n      \"ownerId\": 0,\n      \"description\": \"3.0 ml per kg repeat\",\n      \"eligibilities\": [\n        {\n          \"id\": 1,\n          \"name\": \"Beef Cattle\",\n          \"fdaSpecies\": [\n            \"chickens\",\n            \"unidentified\"\n          ]\n        },\n        {\n          \"id\": 1,\n          \"name\": \"Beef Cattle\",\n          \"fdaSpecies\": [\n            \"unidentified\",\n            \"veal\"\n          ]\n        }\n      ],\n      \"_dose\": \"3.0 ml per kg repeat in 6 hours and again in 24 hours\",\n      \"wtMeatHrs\": 27424849,\n      \"wtMilkHrs\": -87261637,\n      \"nada\": \"wip\",\n      \"tags\": [\n        {\n          \"id\": 8,\n          \"color\": \"#516cc6\",\n          \"name\": \"occaecat Duis \",\n          \"fixes\": [\n            {\n              \"_type\": \"Excepteur exercitation qui aliquip\",\n              \"detail\": \"aute ut nulla irure\",\n              \"message\": \"eiusmod laborum elit magna aute\",\n              \"title\": \"Duis esse exercitation\"\n            },\n            {\n              \"_type\": \"labore\",\n              \"detail\": \"officia velit magna ut\",\n              \"message\": \"eu sit elit dolore veniam\",\n              \"title\": \"irure minim\"\n            }\n          ]\n        },\n        {\n          \"id\": 8,\n          \"color\": \"#516cc6\",\n          \"name\": \"irure inci\",\n          \"fixes\": [\n            {\n              \"_type\": \"aliqua ut dolor dolor occaecat\",\n              \"detail\": \"occaecat deserunt Lorem mollit labore\",\n              \"message\": \"sit ut voluptate\",\n              \"title\": \"ut occaecat irure\"\n            },\n            {\n              \"_type\": \"labore dolore reprehenderit quis\",\n              \"detail\": \"dolore dolor\",\n              \"message\": \"id dolor\",\n              \"title\": \"\"\n            }\n          ]\n        }\n      ],\n      \"note\": \"<p>a free-form note</p>\",\n      \"amduca\": \"OFFLABEL\"\n    },\n    {\n      \"product\": \"MiracleMed\",\n      \"route\": \"wip\",\n      \"dosage\": {\n        \"doseId\": 35781694\n      },\n      \"sequenceFunction\": {\n        \"_type\": \"models.SeqSingleDose\"\n      },\n      \"sizeFunction\": {\n        \"_type\": \"models.FixedDoseFunction\",\n        \"dose\": {\n          \"quantity\": {\n            \"dimension\": \"Mass\",\n            \"value\": 3,\n            \"symbol\": \"oz\"\n          }\n        }\n      },\n      \"id\": \"B-123\",\n      \"ownerId\": 0,\n      \"description\": \"3.0 ml per kg repeat\",\n      \"eligibilities\": [\n        {\n          \"id\": 1,\n          \"name\": \"Beef Cattle\",\n          \"fdaSpecies\": [\n            \"bison\",\n            \"gamebirds\"\n          ]\n        },\n        {\n          \"id\": 1,\n          \"name\": \"Beef Cattle\",\n          \"fdaSpecies\": [\n            \"salmon\",\n            \"emus\"\n          ]\n        }\n      ],\n      \"_dose\": \"3.0 ml per kg repeat in 6 hours and again in 24 hours\",\n      \"wtMeatHrs\": 37808317,\n      \"wtMilkHrs\": 69116765,\n      \"nada\": \"wip\",\n      \"tags\": [\n        {\n          \"id\": 8,\n          \"color\": \"#516cc6\",\n          \"name\": \"proiden\",\n          \"fixes\": [\n            {\n              \"_type\": \"occaecat commodo tempor non\",\n              \"detail\": \"sunt cupidatat labore\",\n              \"message\": \"aliqua ut adipisicing\",\n              \"title\": \"magna dolore aute anim\"\n            },\n            {\n              \"_type\": \"dolor quis\",\n              \"detail\": \"voluptate cillum ut\",\n              \"message\": \"elit laboris\",\n              \"title\": \"adipisicing sun\"\n            }\n          ]\n        },\n        {\n          \"id\": 8,\n          \"color\": \"#516cc6\",\n          \"name\": \"mol\",\n          \"fixes\": [\n            {\n              \"_type\": \"ad fugiat\",\n              \"detail\": \"fugiat\",\n              \"message\": \"ut quis ullamco\",\n              \"title\": \"Ut commodo aliqua\"\n            },\n            {\n              \"_type\": \"cillum tempor qui exercitation\",\n              \"detail\": \"sunt quis Excepteur\",\n              \"message\": \"aliquip fugiat\",\n              \"title\": \"ut in\"\n            }\n          ]\n        }\n      ],\n      \"note\": \"<p>a free-form note</p>\",\n      \"amduca\": \"UNIDENTIFIED\"\n    }\n  ],\n  \"tags\": [\n    {\n      \"id\": 8,\n      \"color\": \"#516cc6\",\n      \"name\": \"ex e\",\n      \"fixes\": [\n        {\n          \"_type\": \"irure dolor ad culpa\",\n          \"detail\": \"in officia mollit dolor\",\n          \"message\": \"sit\",\n          \"title\": \"laborum irure ut\"\n        },\n        {\n          \"_type\": \"laborum\",\n          \"detail\": \"commodo sunt tempor\",\n          \"message\": \"proident\",\n          \"title\": \"exercitation sit dolore nulla\"\n        }\n      ]\n    },\n    {\n      \"id\": 8,\n      \"color\": \"#516cc6\",\n      \"name\": \"dolor aute e\",\n      \"fixes\": [\n        {\n          \"_type\": \"dolore ut\",\n          \"detail\": \"cupidatat culpa fugiat dolor\",\n          \"message\": \"in\",\n          \"title\": \"velit minim qui\"\n        },\n        {\n          \"_type\": \"dolor\",\n          \"detail\": \"dolor nulla\",\n          \"message\": \"dolor ut aliqua sit\",\n          \"title\": \"culpa pariatur tempor est\"\n        }\n      ]\n    }\n  ],\n  \"diagnoses\": [\n    {\n      \"id\": 8,\n      \"name\": \"Pain/inflammation (musculoskeletal), treatment\"\n    },\n    {\n      \"id\": 8,\n      \"name\": \"Pain/inflammation (musculoskeletal), treatment\"\n    }\n  ],\n  \"eligibilities\": [\n    {\n      \"id\": 1,\n      \"name\": \"Beef Cattle\",\n      \"fdaSpecies\": [\n        \"llamas\",\n        \"llamas\"\n      ]\n    },\n    {\n      \"id\": 1,\n      \"name\": \"Beef Cattle\",\n      \"fdaSpecies\": [\n        \"sheep\",\n        \"horses\"\n      ]\n    }\n  ],\n  \"promises\": [\n    {\n      \"_type\": \"models.IdPromise\",\n      \"name\": \"ID promise\",\n      \"descrip\": \"You must give ID for each case enrolled\",\n      \"query\": \"What is the animal's name or number?\",\n      \"when\": \"PT0H\",\n      \"id\": 2345\n    },\n    {\n      \"_type\": \"models.IdPromise\",\n      \"name\": \"ID promise\",\n      \"descrip\": \"You must give ID for each case enrolled\",\n      \"query\": \"What is the animal's name or number?\",\n      \"when\": \"PT0H\",\n      \"id\": 2345\n    }\n  ],\n  \"metadata\": [\n    {\n      \"key\": \"popularity\",\n      \"value\": \"good 1.2\"\n    },\n    {\n      \"key\": \"popularity\",\n      \"value\": \"good 1.2\"\n    }\n  ]\n}",
                            "options": {
                                "raw": {
                                    "language": "json"
                                }
                            }
                        }
                    },
                    "response": [
                        {
                            "id": "f42a0091-95ab-47b5-86c7-8503f1da29db",
                            "name": "Success – updated Protocol",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "api",
                                        "protocols"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "description": {
                                            "content": "Added as a part of security scheme: apikey",
                                            "type": "text/plain"
                                        },
                                        "key": "X-Auth-Token",
                                        "value": "<API Key>"
                                    }
                                ],
                                "method": "PUT",
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n  \"ownerId\": 1,\n  \"name\": \"wip\",\n  \"status\": \"PRESCRIBED\",\n  \"instructions\": {\n    \"considerations\": \"<p>This is just an example, not a real protocol.</p>\",\n    \"restrictions\": \"<p>Not for use on real animals.</p>\",\n    \"dothis\": \"<h3>Examinations to perform</h3>\",\n    \"recordthis\": \"<p>record every step in your notebook.</p>\",\n    \"success\": \"<p>All problems are gone</p>\",\n    \"failure\": \"<p>One or more problems remain</p>\",\n    \"references\": \"<a href=\\\"https://en.wikipedia.org/wiki/Rickrolling\\\">Wikipedia</a>\"\n  },\n  \"id\": 12345,\n  \"shortname\": \"wip\",\n  \"created\": \"2020-01-10T10:30:37Z\",\n  \"edited\": \"2020-02-10T10:30:37Z\",\n  \"vetNote\": \"consider prescribing protocol x instead\",\n  \"wtMeatHrs\": 22,\n  \"wtMilkHrs\": 5,\n  \"shareAll\": true,\n  \"shareClonable\": true,\n  \"caseDefinition\": {\n    \"requireId\": false,\n    \"requireMor\": false,\n    \"contraindications\": \"\",\n    \"medical\": \"if fever is present, consider Protocol 12345 instead.\",\n    \"economic\": \"\",\n    \"note\": \"\"\n  },\n  \"treatments\": [\n    {\n      \"product\": \"MiracleMed\",\n      \"route\": \"wip\",\n      \"dosage\": {\n        \"doseId\": 69015374\n      },\n      \"sequenceFunction\": {\n        \"_type\": \"models.SeqSingleDose\"\n      },\n      \"sizeFunction\": {\n        \"_type\": \"models.FixedDoseFunction\",\n        \"dose\": {\n          \"quantity\": {\n            \"dimension\": \"Mass\",\n            \"value\": 3,\n            \"symbol\": \"oz\"\n          }\n        }\n      },\n      \"id\": \"B-123\",\n      \"ownerId\": 0,\n      \"description\": \"3.0 ml per kg repeat\",\n      \"eligibilities\": [\n        {\n          \"id\": 1,\n          \"name\": \"Beef Cattle\",\n          \"fdaSpecies\": [\n            \"chickens\",\n            \"unidentified\"\n          ]\n        },\n        {\n          \"id\": 1,\n          \"name\": \"Beef Cattle\",\n          \"fdaSpecies\": [\n            \"unidentified\",\n            \"veal\"\n          ]\n        }\n      ],\n      \"_dose\": \"3.0 ml per kg repeat in 6 hours and again in 24 hours\",\n      \"wtMeatHrs\": 27424849,\n      \"wtMilkHrs\": -87261637,\n      \"nada\": \"wip\",\n      \"tags\": [\n        {\n          \"id\": 8,\n          \"color\": \"#516cc6\",\n          \"name\": \"occaecat Duis \",\n          \"fixes\": [\n            {\n              \"_type\": \"Excepteur exercitation qui aliquip\",\n              \"detail\": \"aute ut nulla irure\",\n              \"message\": \"eiusmod laborum elit magna aute\",\n              \"title\": \"Duis esse exercitation\"\n            },\n            {\n              \"_type\": \"labore\",\n              \"detail\": \"officia velit magna ut\",\n              \"message\": \"eu sit elit dolore veniam\",\n              \"title\": \"irure minim\"\n            }\n          ]\n        },\n        {\n          \"id\": 8,\n          \"color\": \"#516cc6\",\n          \"name\": \"irure inci\",\n          \"fixes\": [\n            {\n              \"_type\": \"aliqua ut dolor dolor occaecat\",\n              \"detail\": \"occaecat deserunt Lorem mollit labore\",\n              \"message\": \"sit ut voluptate\",\n              \"title\": \"ut occaecat irure\"\n            },\n            {\n              \"_type\": \"labore dolore reprehenderit quis\",\n              \"detail\": \"dolore dolor\",\n              \"message\": \"id dolor\",\n              \"title\": \"\"\n            }\n          ]\n        }\n      ],\n      \"note\": \"<p>a free-form note</p>\",\n      \"amduca\": \"OFFLABEL\"\n    },\n    {\n      \"product\": \"MiracleMed\",\n      \"route\": \"wip\",\n      \"dosage\": {\n        \"doseId\": 35781694\n      },\n      \"sequenceFunction\": {\n        \"_type\": \"models.SeqSingleDose\"\n      },\n      \"sizeFunction\": {\n        \"_type\": \"models.FixedDoseFunction\",\n        \"dose\": {\n          \"quantity\": {\n            \"dimension\": \"Mass\",\n            \"value\": 3,\n            \"symbol\": \"oz\"\n          }\n        }\n      },\n      \"id\": \"B-123\",\n      \"ownerId\": 0,\n      \"description\": \"3.0 ml per kg repeat\",\n      \"eligibilities\": [\n        {\n          \"id\": 1,\n          \"name\": \"Beef Cattle\",\n          \"fdaSpecies\": [\n            \"bison\",\n            \"gamebirds\"\n          ]\n        },\n        {\n          \"id\": 1,\n          \"name\": \"Beef Cattle\",\n          \"fdaSpecies\": [\n            \"salmon\",\n            \"emus\"\n          ]\n        }\n      ],\n      \"_dose\": \"3.0 ml per kg repeat in 6 hours and again in 24 hours\",\n      \"wtMeatHrs\": 37808317,\n      \"wtMilkHrs\": 69116765,\n      \"nada\": \"wip\",\n      \"tags\": [\n        {\n          \"id\": 8,\n          \"color\": \"#516cc6\",\n          \"name\": \"proiden\",\n          \"fixes\": [\n            {\n              \"_type\": \"occaecat commodo tempor non\",\n              \"detail\": \"sunt cupidatat labore\",\n              \"message\": \"aliqua ut adipisicing\",\n              \"title\": \"magna dolore aute anim\"\n            },\n            {\n              \"_type\": \"dolor quis\",\n              \"detail\": \"voluptate cillum ut\",\n              \"message\": \"elit laboris\",\n              \"title\": \"adipisicing sun\"\n            }\n          ]\n        },\n        {\n          \"id\": 8,\n          \"color\": \"#516cc6\",\n          \"name\": \"mol\",\n          \"fixes\": [\n            {\n              \"_type\": \"ad fugiat\",\n              \"detail\": \"fugiat\",\n              \"message\": \"ut quis ullamco\",\n              \"title\": \"Ut commodo aliqua\"\n            },\n            {\n              \"_type\": \"cillum tempor qui exercitation\",\n              \"detail\": \"sunt quis Excepteur\",\n              \"message\": \"aliquip fugiat\",\n              \"title\": \"ut in\"\n            }\n          ]\n        }\n      ],\n      \"note\": \"<p>a free-form note</p>\",\n      \"amduca\": \"UNIDENTIFIED\"\n    }\n  ],\n  \"tags\": [\n    {\n      \"id\": 8,\n      \"color\": \"#516cc6\",\n      \"name\": \"ex e\",\n      \"fixes\": [\n        {\n          \"_type\": \"irure dolor ad culpa\",\n          \"detail\": \"in officia mollit dolor\",\n          \"message\": \"sit\",\n          \"title\": \"laborum irure ut\"\n        },\n        {\n          \"_type\": \"laborum\",\n          \"detail\": \"commodo sunt tempor\",\n          \"message\": \"proident\",\n          \"title\": \"exercitation sit dolore nulla\"\n        }\n      ]\n    },\n    {\n      \"id\": 8,\n      \"color\": \"#516cc6\",\n      \"name\": \"dolor aute e\",\n      \"fixes\": [\n        {\n          \"_type\": \"dolore ut\",\n          \"detail\": \"cupidatat culpa fugiat dolor\",\n          \"message\": \"in\",\n          \"title\": \"velit minim qui\"\n        },\n        {\n          \"_type\": \"dolor\",\n          \"detail\": \"dolor nulla\",\n          \"message\": \"dolor ut aliqua sit\",\n          \"title\": \"culpa pariatur tempor est\"\n        }\n      ]\n    }\n  ],\n  \"diagnoses\": [\n    {\n      \"id\": 8,\n      \"name\": \"Pain/inflammation (musculoskeletal), treatment\"\n    },\n    {\n      \"id\": 8,\n      \"name\": \"Pain/inflammation (musculoskeletal), treatment\"\n    }\n  ],\n  \"eligibilities\": [\n    {\n      \"id\": 1,\n      \"name\": \"Beef Cattle\",\n      \"fdaSpecies\": [\n        \"llamas\",\n        \"llamas\"\n      ]\n    },\n    {\n      \"id\": 1,\n      \"name\": \"Beef Cattle\",\n      \"fdaSpecies\": [\n        \"sheep\",\n        \"horses\"\n      ]\n    }\n  ],\n  \"promises\": [\n    {\n      \"_type\": \"models.IdPromise\",\n      \"name\": \"ID promise\",\n      \"descrip\": \"You must give ID for each case enrolled\",\n      \"query\": \"What is the animal's name or number?\",\n      \"when\": \"PT0H\",\n      \"id\": 2345\n    },\n    {\n      \"_type\": \"models.IdPromise\",\n      \"name\": \"ID promise\",\n      \"descrip\": \"You must give ID for each case enrolled\",\n      \"query\": \"What is the animal's name or number?\",\n      \"when\": \"PT0H\",\n      \"id\": 2345\n    }\n  ],\n  \"metadata\": [\n    {\n      \"key\": \"popularity\",\n      \"value\": \"good 1.2\"\n    },\n    {\n      \"key\": \"popularity\",\n      \"value\": \"good 1.2\"\n    }\n  ]\n}",
                                    "options": {
                                        "raw": {
                                            "language": "json"
                                        }
                                    }
                                }
                            },
                            "status": "OK",
                            "code": 200,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"protocol\": {\n    \"ownerId\": 1,\n    \"name\": \"wip\",\n    \"status\": \"PRESCRIBED\",\n    \"instructions\": {\n      \"considerations\": \"<p>This is just an example, not a real protocol.</p>\",\n      \"restrictions\": \"<p>Not for use on real animals.</p>\",\n      \"dothis\": \"<h3>Examinations to perform</h3>\",\n      \"recordthis\": \"<p>record every step in your notebook.</p>\",\n      \"success\": \"<p>All problems are gone</p>\",\n      \"failure\": \"<p>One or more problems remain</p>\",\n      \"references\": \"<a href=\\\"https://en.wikipedia.org/wiki/Rickrolling\\\">Wikipedia</a>\"\n    },\n    \"id\": 12345,\n    \"shortname\": \"wip\",\n    \"created\": \"2020-01-10T10:30:37Z\",\n    \"edited\": \"2020-02-10T10:30:37Z\",\n    \"vetNote\": \"consider prescribing protocol x instead\",\n    \"wtMeatHrs\": 22,\n    \"wtMilkHrs\": 5,\n    \"shareAll\": true,\n    \"shareClonable\": true,\n    \"caseDefinition\": {\n      \"requireId\": false,\n      \"requireMor\": false,\n      \"contraindications\": \"\",\n      \"medical\": \"if fever is present, consider Protocol 12345 instead.\",\n      \"economic\": \"\",\n      \"note\": \"\"\n    },\n    \"treatments\": [\n      {\n        \"product\": \"MiracleMed\",\n        \"route\": \"wip\",\n        \"dosage\": {\n          \"doseId\": -82710886\n        },\n        \"sequenceFunction\": {\n          \"_type\": \"models.SeqSingleDose\"\n        },\n        \"sizeFunction\": {\n          \"_type\": \"models.FixedDoseFunction\",\n          \"dose\": {\n            \"quantity\": {\n              \"dimension\": \"Mass\",\n              \"value\": 3,\n              \"symbol\": \"oz\"\n            }\n          }\n        },\n        \"id\": \"B-123\",\n        \"ownerId\": 0,\n        \"description\": \"3.0 ml per kg repeat\",\n        \"eligibilities\": [\n          {\n            \"id\": 1,\n            \"name\": \"Beef Cattle\",\n            \"fdaSpecies\": [\n              \"gamebirds\",\n              \"cats\"\n            ]\n          },\n          {\n            \"id\": 1,\n            \"name\": \"Beef Cattle\",\n            \"fdaSpecies\": [\n              \"catfish\",\n              \"chickens\"\n            ]\n          }\n        ],\n        \"_dose\": \"3.0 ml per kg repeat in 6 hours and again in 24 hours\",\n        \"wtMeatHrs\": 3764921,\n        \"wtMilkHrs\": -43140473,\n        \"nada\": \"wip\",\n        \"tags\": [\n          {\n            \"id\": 8,\n            \"color\": \"#516cc6\",\n            \"name\": \"pariatur e\",\n            \"fixes\": [\n              {\n                \"_type\": {\n                  \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"detail\": {\n                  \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"message\": {\n                  \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"title\": {\n                  \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                }\n              },\n              {\n                \"_type\": {\n                  \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"detail\": {\n                  \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"message\": {\n                  \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"title\": {\n                  \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                }\n              }\n            ]\n          },\n          {\n            \"id\": 8,\n            \"color\": \"#516cc6\",\n            \"name\": \"est labor\",\n            \"fixes\": [\n              {\n                \"_type\": {\n                  \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"detail\": {\n                  \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"message\": {\n                  \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"title\": {\n                  \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                }\n              },\n              {\n                \"_type\": {\n                  \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"detail\": {\n                  \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"message\": {\n                  \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"title\": {\n                  \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                }\n              }\n            ]\n          }\n        ],\n        \"note\": \"<p>a free-form note</p>\",\n        \"amduca\": \"ONLABEL\"\n      },\n      {\n        \"product\": \"MiracleMed\",\n        \"route\": \"wip\",\n        \"dosage\": {\n          \"doseId\": 90743195\n        },\n        \"sequenceFunction\": {\n          \"_type\": \"models.SeqSingleDose\"\n        },\n        \"sizeFunction\": {\n          \"_type\": \"models.FixedDoseFunction\",\n          \"dose\": {\n            \"quantity\": {\n              \"dimension\": \"Mass\",\n              \"value\": 3,\n              \"symbol\": \"oz\"\n            }\n          }\n        },\n        \"id\": \"B-123\",\n        \"ownerId\": 0,\n        \"description\": \"3.0 ml per kg repeat\",\n        \"eligibilities\": [\n          {\n            \"id\": 1,\n            \"name\": \"Beef Cattle\",\n            \"fdaSpecies\": [\n              \"emus\",\n              \"bison\"\n            ]\n          },\n          {\n            \"id\": 1,\n            \"name\": \"Beef Cattle\",\n            \"fdaSpecies\": [\n              \"llamas\",\n              \"emus\"\n            ]\n          }\n        ],\n        \"_dose\": \"3.0 ml per kg repeat in 6 hours and again in 24 hours\",\n        \"wtMeatHrs\": -43055535,\n        \"wtMilkHrs\": -97115862,\n        \"nada\": \"wip\",\n        \"tags\": [\n          {\n            \"id\": 8,\n            \"color\": \"#516cc6\",\n            \"name\": \"fugiat do\",\n            \"fixes\": [\n              {\n                \"_type\": {\n                  \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"detail\": {\n                  \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"message\": {\n                  \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"title\": {\n                  \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                }\n              },\n              {\n                \"_type\": {\n                  \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"detail\": {\n                  \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"message\": {\n                  \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"title\": {\n                  \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                }\n              }\n            ]\n          },\n          {\n            \"id\": 8,\n            \"color\": \"#516cc6\",\n            \"name\": \"in\",\n            \"fixes\": [\n              {\n                \"_type\": {\n                  \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"detail\": {\n                  \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"message\": {\n                  \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"title\": {\n                  \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                }\n              },\n              {\n                \"_type\": {\n                  \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"detail\": {\n                  \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"message\": {\n                  \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"title\": {\n                  \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                }\n              }\n            ]\n          }\n        ],\n        \"note\": \"<p>a free-form note</p>\",\n        \"amduca\": \"UNIDENTIFIED\"\n      }\n    ],\n    \"tags\": [\n      {\n        \"id\": 8,\n        \"color\": \"#516cc6\",\n        \"name\": \"dolor Lorem\",\n        \"fixes\": [\n          {\n            \"_type\": \"do\",\n            \"detail\": \"cillum irure incididunt ad\",\n            \"message\": \"sit\",\n            \"title\": \"officia ut\"\n          },\n          {\n            \"_type\": \"commodo cillum non\",\n            \"detail\": \"ut cupidatat\",\n            \"message\": \"Lorem laboris\",\n            \"title\": \"sed Excepteur\"\n          }\n        ]\n      },\n      {\n        \"id\": 8,\n        \"color\": \"#516cc6\",\n        \"name\": \"proident volu\",\n        \"fixes\": [\n          {\n            \"_type\": \"ipsum reprehenderit velit\",\n            \"detail\": \"irure\",\n            \"message\": \"Ut\",\n            \"title\": \"Excepteur officia non qui\"\n          },\n          {\n            \"_type\": \"est sunt laboris ad\",\n            \"detail\": \"mollit sed deserunt\",\n            \"message\": \"nisi veniam\",\n            \"title\": \"adipisicing do irure\"\n          }\n        ]\n      }\n    ],\n    \"diagnoses\": [\n      {\n        \"id\": 8,\n        \"name\": \"Pain/inflammation (musculoskeletal), treatment\"\n      },\n      {\n        \"id\": 8,\n        \"name\": \"Pain/inflammation (musculoskeletal), treatment\"\n      }\n    ],\n    \"eligibilities\": [\n      {\n        \"id\": 1,\n        \"name\": \"Beef Cattle\",\n        \"fdaSpecies\": [\n          \"salmon\",\n          \"other\"\n        ]\n      },\n      {\n        \"id\": 1,\n        \"name\": \"Beef Cattle\",\n        \"fdaSpecies\": [\n          \"salmon\",\n          \"fish\"\n        ]\n      }\n    ],\n    \"promises\": [\n      {\n        \"_type\": \"models.IdPromise\",\n        \"name\": \"ID promise\",\n        \"descrip\": \"You must give ID for each case enrolled\",\n        \"query\": \"What is the animal's name or number?\",\n        \"when\": \"PT0H\",\n        \"id\": 2345\n      },\n      {\n        \"_type\": \"models.IdPromise\",\n        \"name\": \"ID promise\",\n        \"descrip\": \"You must give ID for each case enrolled\",\n        \"query\": \"What is the animal's name or number?\",\n        \"when\": \"PT0H\",\n        \"id\": 2345\n      }\n    ],\n    \"metadata\": [\n      {\n        \"key\": \"popularity\",\n        \"value\": \"good 1.2\"\n      },\n      {\n        \"key\": \"popularity\",\n        \"value\": \"good 1.2\"\n      }\n    ]\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "b84c3edf-c530-45c5-b7e2-86380b2c93bf",
                            "name": "The server can not understand the request due to invalid syntax.",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "api",
                                        "protocols"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "description": {
                                            "content": "Added as a part of security scheme: apikey",
                                            "type": "text/plain"
                                        },
                                        "key": "X-Auth-Token",
                                        "value": "<API Key>"
                                    }
                                ],
                                "method": "PUT",
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n  \"ownerId\": 1,\n  \"name\": \"wip\",\n  \"status\": \"PRESCRIBED\",\n  \"instructions\": {\n    \"considerations\": \"<p>This is just an example, not a real protocol.</p>\",\n    \"restrictions\": \"<p>Not for use on real animals.</p>\",\n    \"dothis\": \"<h3>Examinations to perform</h3>\",\n    \"recordthis\": \"<p>record every step in your notebook.</p>\",\n    \"success\": \"<p>All problems are gone</p>\",\n    \"failure\": \"<p>One or more problems remain</p>\",\n    \"references\": \"<a href=\\\"https://en.wikipedia.org/wiki/Rickrolling\\\">Wikipedia</a>\"\n  },\n  \"id\": 12345,\n  \"shortname\": \"wip\",\n  \"created\": \"2020-01-10T10:30:37Z\",\n  \"edited\": \"2020-02-10T10:30:37Z\",\n  \"vetNote\": \"consider prescribing protocol x instead\",\n  \"wtMeatHrs\": 22,\n  \"wtMilkHrs\": 5,\n  \"shareAll\": true,\n  \"shareClonable\": true,\n  \"caseDefinition\": {\n    \"requireId\": false,\n    \"requireMor\": false,\n    \"contraindications\": \"\",\n    \"medical\": \"if fever is present, consider Protocol 12345 instead.\",\n    \"economic\": \"\",\n    \"note\": \"\"\n  },\n  \"treatments\": [\n    {\n      \"product\": \"MiracleMed\",\n      \"route\": \"wip\",\n      \"dosage\": {\n        \"doseId\": 69015374\n      },\n      \"sequenceFunction\": {\n        \"_type\": \"models.SeqSingleDose\"\n      },\n      \"sizeFunction\": {\n        \"_type\": \"models.FixedDoseFunction\",\n        \"dose\": {\n          \"quantity\": {\n            \"dimension\": \"Mass\",\n            \"value\": 3,\n            \"symbol\": \"oz\"\n          }\n        }\n      },\n      \"id\": \"B-123\",\n      \"ownerId\": 0,\n      \"description\": \"3.0 ml per kg repeat\",\n      \"eligibilities\": [\n        {\n          \"id\": 1,\n          \"name\": \"Beef Cattle\",\n          \"fdaSpecies\": [\n            \"chickens\",\n            \"unidentified\"\n          ]\n        },\n        {\n          \"id\": 1,\n          \"name\": \"Beef Cattle\",\n          \"fdaSpecies\": [\n            \"unidentified\",\n            \"veal\"\n          ]\n        }\n      ],\n      \"_dose\": \"3.0 ml per kg repeat in 6 hours and again in 24 hours\",\n      \"wtMeatHrs\": 27424849,\n      \"wtMilkHrs\": -87261637,\n      \"nada\": \"wip\",\n      \"tags\": [\n        {\n          \"id\": 8,\n          \"color\": \"#516cc6\",\n          \"name\": \"occaecat Duis \",\n          \"fixes\": [\n            {\n              \"_type\": \"Excepteur exercitation qui aliquip\",\n              \"detail\": \"aute ut nulla irure\",\n              \"message\": \"eiusmod laborum elit magna aute\",\n              \"title\": \"Duis esse exercitation\"\n            },\n            {\n              \"_type\": \"labore\",\n              \"detail\": \"officia velit magna ut\",\n              \"message\": \"eu sit elit dolore veniam\",\n              \"title\": \"irure minim\"\n            }\n          ]\n        },\n        {\n          \"id\": 8,\n          \"color\": \"#516cc6\",\n          \"name\": \"irure inci\",\n          \"fixes\": [\n            {\n              \"_type\": \"aliqua ut dolor dolor occaecat\",\n              \"detail\": \"occaecat deserunt Lorem mollit labore\",\n              \"message\": \"sit ut voluptate\",\n              \"title\": \"ut occaecat irure\"\n            },\n            {\n              \"_type\": \"labore dolore reprehenderit quis\",\n              \"detail\": \"dolore dolor\",\n              \"message\": \"id dolor\",\n              \"title\": \"\"\n            }\n          ]\n        }\n      ],\n      \"note\": \"<p>a free-form note</p>\",\n      \"amduca\": \"OFFLABEL\"\n    },\n    {\n      \"product\": \"MiracleMed\",\n      \"route\": \"wip\",\n      \"dosage\": {\n        \"doseId\": 35781694\n      },\n      \"sequenceFunction\": {\n        \"_type\": \"models.SeqSingleDose\"\n      },\n      \"sizeFunction\": {\n        \"_type\": \"models.FixedDoseFunction\",\n        \"dose\": {\n          \"quantity\": {\n            \"dimension\": \"Mass\",\n            \"value\": 3,\n            \"symbol\": \"oz\"\n          }\n        }\n      },\n      \"id\": \"B-123\",\n      \"ownerId\": 0,\n      \"description\": \"3.0 ml per kg repeat\",\n      \"eligibilities\": [\n        {\n          \"id\": 1,\n          \"name\": \"Beef Cattle\",\n          \"fdaSpecies\": [\n            \"bison\",\n            \"gamebirds\"\n          ]\n        },\n        {\n          \"id\": 1,\n          \"name\": \"Beef Cattle\",\n          \"fdaSpecies\": [\n            \"salmon\",\n            \"emus\"\n          ]\n        }\n      ],\n      \"_dose\": \"3.0 ml per kg repeat in 6 hours and again in 24 hours\",\n      \"wtMeatHrs\": 37808317,\n      \"wtMilkHrs\": 69116765,\n      \"nada\": \"wip\",\n      \"tags\": [\n        {\n          \"id\": 8,\n          \"color\": \"#516cc6\",\n          \"name\": \"proiden\",\n          \"fixes\": [\n            {\n              \"_type\": \"occaecat commodo tempor non\",\n              \"detail\": \"sunt cupidatat labore\",\n              \"message\": \"aliqua ut adipisicing\",\n              \"title\": \"magna dolore aute anim\"\n            },\n            {\n              \"_type\": \"dolor quis\",\n              \"detail\": \"voluptate cillum ut\",\n              \"message\": \"elit laboris\",\n              \"title\": \"adipisicing sun\"\n            }\n          ]\n        },\n        {\n          \"id\": 8,\n          \"color\": \"#516cc6\",\n          \"name\": \"mol\",\n          \"fixes\": [\n            {\n              \"_type\": \"ad fugiat\",\n              \"detail\": \"fugiat\",\n              \"message\": \"ut quis ullamco\",\n              \"title\": \"Ut commodo aliqua\"\n            },\n            {\n              \"_type\": \"cillum tempor qui exercitation\",\n              \"detail\": \"sunt quis Excepteur\",\n              \"message\": \"aliquip fugiat\",\n              \"title\": \"ut in\"\n            }\n          ]\n        }\n      ],\n      \"note\": \"<p>a free-form note</p>\",\n      \"amduca\": \"UNIDENTIFIED\"\n    }\n  ],\n  \"tags\": [\n    {\n      \"id\": 8,\n      \"color\": \"#516cc6\",\n      \"name\": \"ex e\",\n      \"fixes\": [\n        {\n          \"_type\": \"irure dolor ad culpa\",\n          \"detail\": \"in officia mollit dolor\",\n          \"message\": \"sit\",\n          \"title\": \"laborum irure ut\"\n        },\n        {\n          \"_type\": \"laborum\",\n          \"detail\": \"commodo sunt tempor\",\n          \"message\": \"proident\",\n          \"title\": \"exercitation sit dolore nulla\"\n        }\n      ]\n    },\n    {\n      \"id\": 8,\n      \"color\": \"#516cc6\",\n      \"name\": \"dolor aute e\",\n      \"fixes\": [\n        {\n          \"_type\": \"dolore ut\",\n          \"detail\": \"cupidatat culpa fugiat dolor\",\n          \"message\": \"in\",\n          \"title\": \"velit minim qui\"\n        },\n        {\n          \"_type\": \"dolor\",\n          \"detail\": \"dolor nulla\",\n          \"message\": \"dolor ut aliqua sit\",\n          \"title\": \"culpa pariatur tempor est\"\n        }\n      ]\n    }\n  ],\n  \"diagnoses\": [\n    {\n      \"id\": 8,\n      \"name\": \"Pain/inflammation (musculoskeletal), treatment\"\n    },\n    {\n      \"id\": 8,\n      \"name\": \"Pain/inflammation (musculoskeletal), treatment\"\n    }\n  ],\n  \"eligibilities\": [\n    {\n      \"id\": 1,\n      \"name\": \"Beef Cattle\",\n      \"fdaSpecies\": [\n        \"llamas\",\n        \"llamas\"\n      ]\n    },\n    {\n      \"id\": 1,\n      \"name\": \"Beef Cattle\",\n      \"fdaSpecies\": [\n        \"sheep\",\n        \"horses\"\n      ]\n    }\n  ],\n  \"promises\": [\n    {\n      \"_type\": \"models.IdPromise\",\n      \"name\": \"ID promise\",\n      \"descrip\": \"You must give ID for each case enrolled\",\n      \"query\": \"What is the animal's name or number?\",\n      \"when\": \"PT0H\",\n      \"id\": 2345\n    },\n    {\n      \"_type\": \"models.IdPromise\",\n      \"name\": \"ID promise\",\n      \"descrip\": \"You must give ID for each case enrolled\",\n      \"query\": \"What is the animal's name or number?\",\n      \"when\": \"PT0H\",\n      \"id\": 2345\n    }\n  ],\n  \"metadata\": [\n    {\n      \"key\": \"popularity\",\n      \"value\": \"good 1.2\"\n    },\n    {\n      \"key\": \"popularity\",\n      \"value\": \"good 1.2\"\n    }\n  ]\n}",
                                    "options": {
                                        "raw": {
                                            "language": "json"
                                        }
                                    }
                                }
                            },
                            "status": "Bad Request",
                            "code": 400,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"title\": \"incorrect username or password\",\n  \"status\": 404,\n  \"errorType\": \"/errors/incorrect-user-pass\",\n  \"detail\": \"Authentication failed due to incorrect username or password.\",\n  \"instance\": \"/login/log/abc123\"\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "a865f760-dee2-4df1-8310-9b415b320d16",
                            "name": "Authorization required",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "api",
                                        "protocols"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "description": {
                                            "content": "Added as a part of security scheme: apikey",
                                            "type": "text/plain"
                                        },
                                        "key": "X-Auth-Token",
                                        "value": "<API Key>"
                                    }
                                ],
                                "method": "PUT",
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n  \"ownerId\": 1,\n  \"name\": \"wip\",\n  \"status\": \"PRESCRIBED\",\n  \"instructions\": {\n    \"considerations\": \"<p>This is just an example, not a real protocol.</p>\",\n    \"restrictions\": \"<p>Not for use on real animals.</p>\",\n    \"dothis\": \"<h3>Examinations to perform</h3>\",\n    \"recordthis\": \"<p>record every step in your notebook.</p>\",\n    \"success\": \"<p>All problems are gone</p>\",\n    \"failure\": \"<p>One or more problems remain</p>\",\n    \"references\": \"<a href=\\\"https://en.wikipedia.org/wiki/Rickrolling\\\">Wikipedia</a>\"\n  },\n  \"id\": 12345,\n  \"shortname\": \"wip\",\n  \"created\": \"2020-01-10T10:30:37Z\",\n  \"edited\": \"2020-02-10T10:30:37Z\",\n  \"vetNote\": \"consider prescribing protocol x instead\",\n  \"wtMeatHrs\": 22,\n  \"wtMilkHrs\": 5,\n  \"shareAll\": true,\n  \"shareClonable\": true,\n  \"caseDefinition\": {\n    \"requireId\": false,\n    \"requireMor\": false,\n    \"contraindications\": \"\",\n    \"medical\": \"if fever is present, consider Protocol 12345 instead.\",\n    \"economic\": \"\",\n    \"note\": \"\"\n  },\n  \"treatments\": [\n    {\n      \"product\": \"MiracleMed\",\n      \"route\": \"wip\",\n      \"dosage\": {\n        \"doseId\": 69015374\n      },\n      \"sequenceFunction\": {\n        \"_type\": \"models.SeqSingleDose\"\n      },\n      \"sizeFunction\": {\n        \"_type\": \"models.FixedDoseFunction\",\n        \"dose\": {\n          \"quantity\": {\n            \"dimension\": \"Mass\",\n            \"value\": 3,\n            \"symbol\": \"oz\"\n          }\n        }\n      },\n      \"id\": \"B-123\",\n      \"ownerId\": 0,\n      \"description\": \"3.0 ml per kg repeat\",\n      \"eligibilities\": [\n        {\n          \"id\": 1,\n          \"name\": \"Beef Cattle\",\n          \"fdaSpecies\": [\n            \"chickens\",\n            \"unidentified\"\n          ]\n        },\n        {\n          \"id\": 1,\n          \"name\": \"Beef Cattle\",\n          \"fdaSpecies\": [\n            \"unidentified\",\n            \"veal\"\n          ]\n        }\n      ],\n      \"_dose\": \"3.0 ml per kg repeat in 6 hours and again in 24 hours\",\n      \"wtMeatHrs\": 27424849,\n      \"wtMilkHrs\": -87261637,\n      \"nada\": \"wip\",\n      \"tags\": [\n        {\n          \"id\": 8,\n          \"color\": \"#516cc6\",\n          \"name\": \"occaecat Duis \",\n          \"fixes\": [\n            {\n              \"_type\": \"Excepteur exercitation qui aliquip\",\n              \"detail\": \"aute ut nulla irure\",\n              \"message\": \"eiusmod laborum elit magna aute\",\n              \"title\": \"Duis esse exercitation\"\n            },\n            {\n              \"_type\": \"labore\",\n              \"detail\": \"officia velit magna ut\",\n              \"message\": \"eu sit elit dolore veniam\",\n              \"title\": \"irure minim\"\n            }\n          ]\n        },\n        {\n          \"id\": 8,\n          \"color\": \"#516cc6\",\n          \"name\": \"irure inci\",\n          \"fixes\": [\n            {\n              \"_type\": \"aliqua ut dolor dolor occaecat\",\n              \"detail\": \"occaecat deserunt Lorem mollit labore\",\n              \"message\": \"sit ut voluptate\",\n              \"title\": \"ut occaecat irure\"\n            },\n            {\n              \"_type\": \"labore dolore reprehenderit quis\",\n              \"detail\": \"dolore dolor\",\n              \"message\": \"id dolor\",\n              \"title\": \"\"\n            }\n          ]\n        }\n      ],\n      \"note\": \"<p>a free-form note</p>\",\n      \"amduca\": \"OFFLABEL\"\n    },\n    {\n      \"product\": \"MiracleMed\",\n      \"route\": \"wip\",\n      \"dosage\": {\n        \"doseId\": 35781694\n      },\n      \"sequenceFunction\": {\n        \"_type\": \"models.SeqSingleDose\"\n      },\n      \"sizeFunction\": {\n        \"_type\": \"models.FixedDoseFunction\",\n        \"dose\": {\n          \"quantity\": {\n            \"dimension\": \"Mass\",\n            \"value\": 3,\n            \"symbol\": \"oz\"\n          }\n        }\n      },\n      \"id\": \"B-123\",\n      \"ownerId\": 0,\n      \"description\": \"3.0 ml per kg repeat\",\n      \"eligibilities\": [\n        {\n          \"id\": 1,\n          \"name\": \"Beef Cattle\",\n          \"fdaSpecies\": [\n            \"bison\",\n            \"gamebirds\"\n          ]\n        },\n        {\n          \"id\": 1,\n          \"name\": \"Beef Cattle\",\n          \"fdaSpecies\": [\n            \"salmon\",\n            \"emus\"\n          ]\n        }\n      ],\n      \"_dose\": \"3.0 ml per kg repeat in 6 hours and again in 24 hours\",\n      \"wtMeatHrs\": 37808317,\n      \"wtMilkHrs\": 69116765,\n      \"nada\": \"wip\",\n      \"tags\": [\n        {\n          \"id\": 8,\n          \"color\": \"#516cc6\",\n          \"name\": \"proiden\",\n          \"fixes\": [\n            {\n              \"_type\": \"occaecat commodo tempor non\",\n              \"detail\": \"sunt cupidatat labore\",\n              \"message\": \"aliqua ut adipisicing\",\n              \"title\": \"magna dolore aute anim\"\n            },\n            {\n              \"_type\": \"dolor quis\",\n              \"detail\": \"voluptate cillum ut\",\n              \"message\": \"elit laboris\",\n              \"title\": \"adipisicing sun\"\n            }\n          ]\n        },\n        {\n          \"id\": 8,\n          \"color\": \"#516cc6\",\n          \"name\": \"mol\",\n          \"fixes\": [\n            {\n              \"_type\": \"ad fugiat\",\n              \"detail\": \"fugiat\",\n              \"message\": \"ut quis ullamco\",\n              \"title\": \"Ut commodo aliqua\"\n            },\n            {\n              \"_type\": \"cillum tempor qui exercitation\",\n              \"detail\": \"sunt quis Excepteur\",\n              \"message\": \"aliquip fugiat\",\n              \"title\": \"ut in\"\n            }\n          ]\n        }\n      ],\n      \"note\": \"<p>a free-form note</p>\",\n      \"amduca\": \"UNIDENTIFIED\"\n    }\n  ],\n  \"tags\": [\n    {\n      \"id\": 8,\n      \"color\": \"#516cc6\",\n      \"name\": \"ex e\",\n      \"fixes\": [\n        {\n          \"_type\": \"irure dolor ad culpa\",\n          \"detail\": \"in officia mollit dolor\",\n          \"message\": \"sit\",\n          \"title\": \"laborum irure ut\"\n        },\n        {\n          \"_type\": \"laborum\",\n          \"detail\": \"commodo sunt tempor\",\n          \"message\": \"proident\",\n          \"title\": \"exercitation sit dolore nulla\"\n        }\n      ]\n    },\n    {\n      \"id\": 8,\n      \"color\": \"#516cc6\",\n      \"name\": \"dolor aute e\",\n      \"fixes\": [\n        {\n          \"_type\": \"dolore ut\",\n          \"detail\": \"cupidatat culpa fugiat dolor\",\n          \"message\": \"in\",\n          \"title\": \"velit minim qui\"\n        },\n        {\n          \"_type\": \"dolor\",\n          \"detail\": \"dolor nulla\",\n          \"message\": \"dolor ut aliqua sit\",\n          \"title\": \"culpa pariatur tempor est\"\n        }\n      ]\n    }\n  ],\n  \"diagnoses\": [\n    {\n      \"id\": 8,\n      \"name\": \"Pain/inflammation (musculoskeletal), treatment\"\n    },\n    {\n      \"id\": 8,\n      \"name\": \"Pain/inflammation (musculoskeletal), treatment\"\n    }\n  ],\n  \"eligibilities\": [\n    {\n      \"id\": 1,\n      \"name\": \"Beef Cattle\",\n      \"fdaSpecies\": [\n        \"llamas\",\n        \"llamas\"\n      ]\n    },\n    {\n      \"id\": 1,\n      \"name\": \"Beef Cattle\",\n      \"fdaSpecies\": [\n        \"sheep\",\n        \"horses\"\n      ]\n    }\n  ],\n  \"promises\": [\n    {\n      \"_type\": \"models.IdPromise\",\n      \"name\": \"ID promise\",\n      \"descrip\": \"You must give ID for each case enrolled\",\n      \"query\": \"What is the animal's name or number?\",\n      \"when\": \"PT0H\",\n      \"id\": 2345\n    },\n    {\n      \"_type\": \"models.IdPromise\",\n      \"name\": \"ID promise\",\n      \"descrip\": \"You must give ID for each case enrolled\",\n      \"query\": \"What is the animal's name or number?\",\n      \"when\": \"PT0H\",\n      \"id\": 2345\n    }\n  ],\n  \"metadata\": [\n    {\n      \"key\": \"popularity\",\n      \"value\": \"good 1.2\"\n    },\n    {\n      \"key\": \"popularity\",\n      \"value\": \"good 1.2\"\n    }\n  ]\n}",
                                    "options": {
                                        "raw": {
                                            "language": "json"
                                        }
                                    }
                                }
                            },
                            "status": "Forbidden",
                            "code": 403,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "text/plain"
                                }
                            ],
                            "body": "",
                            "cookie": [],
                            "_postman_previewlanguage": "text"
                        }
                    ],
                    "event": [],
                    "protocolProfileBehavior": {
                        "disableBodyPruning": true
                    }
                },
                {
                    "id": "556befbc-7e62-46eb-a967-0148c3cb0e0a",
                    "name": "This endpoint validates a protocol without saving it.",
                    "request": {
                        "name": "This endpoint validates a protocol without saving it.",
                        "description": {
                            "content": "This endpoint validates a protocol for prescribing without saving it. It should only be called if the user wants to prescribe a protocol without saving changes. The endpoints to save or update protocols automatically include validation.4",
                            "type": "text/plain"
                        },
                        "url": {
                            "path": [
                                "api",
                                "protocols",
                                "validate"
                            ],
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "query": [],
                            "variable": []
                        },
                        "header": [
                            {
                                "key": "Content-Type",
                                "value": "application/json"
                            },
                            {
                                "key": "Accept",
                                "value": "application/json"
                            }
                        ],
                        "method": "PUT",
                        "auth": null,
                        "body": {
                            "mode": "raw",
                            "raw": "{\n  \"ownerId\": 1,\n  \"name\": \"wip\",\n  \"status\": \"PRESCRIBED\",\n  \"instructions\": {\n    \"considerations\": \"<p>This is just an example, not a real protocol.</p>\",\n    \"restrictions\": \"<p>Not for use on real animals.</p>\",\n    \"dothis\": \"<h3>Examinations to perform</h3>\",\n    \"recordthis\": \"<p>record every step in your notebook.</p>\",\n    \"success\": \"<p>All problems are gone</p>\",\n    \"failure\": \"<p>One or more problems remain</p>\",\n    \"references\": \"<a href=\\\"https://en.wikipedia.org/wiki/Rickrolling\\\">Wikipedia</a>\"\n  },\n  \"id\": 12345,\n  \"shortname\": \"wip\",\n  \"created\": \"2020-01-10T10:30:37Z\",\n  \"edited\": \"2020-02-10T10:30:37Z\",\n  \"vetNote\": \"consider prescribing protocol x instead\",\n  \"wtMeatHrs\": 22,\n  \"wtMilkHrs\": 5,\n  \"shareAll\": true,\n  \"shareClonable\": true,\n  \"caseDefinition\": {\n    \"requireId\": false,\n    \"requireMor\": false,\n    \"contraindications\": \"\",\n    \"medical\": \"if fever is present, consider Protocol 12345 instead.\",\n    \"economic\": \"\",\n    \"note\": \"\"\n  },\n  \"treatments\": [\n    {\n      \"product\": \"MiracleMed\",\n      \"route\": \"wip\",\n      \"dosage\": {\n        \"doseId\": 69015374\n      },\n      \"sequenceFunction\": {\n        \"_type\": \"models.SeqSingleDose\"\n      },\n      \"sizeFunction\": {\n        \"_type\": \"models.FixedDoseFunction\",\n        \"dose\": {\n          \"quantity\": {\n            \"dimension\": \"Mass\",\n            \"value\": 3,\n            \"symbol\": \"oz\"\n          }\n        }\n      },\n      \"id\": \"B-123\",\n      \"ownerId\": 0,\n      \"description\": \"3.0 ml per kg repeat\",\n      \"eligibilities\": [\n        {\n          \"id\": 1,\n          \"name\": \"Beef Cattle\",\n          \"fdaSpecies\": [\n            \"chickens\",\n            \"unidentified\"\n          ]\n        },\n        {\n          \"id\": 1,\n          \"name\": \"Beef Cattle\",\n          \"fdaSpecies\": [\n            \"unidentified\",\n            \"veal\"\n          ]\n        }\n      ],\n      \"_dose\": \"3.0 ml per kg repeat in 6 hours and again in 24 hours\",\n      \"wtMeatHrs\": 27424849,\n      \"wtMilkHrs\": -87261637,\n      \"nada\": \"wip\",\n      \"tags\": [\n        {\n          \"id\": 8,\n          \"color\": \"#516cc6\",\n          \"name\": \"occaecat Duis \",\n          \"fixes\": [\n            {\n              \"_type\": \"Excepteur exercitation qui aliquip\",\n              \"detail\": \"aute ut nulla irure\",\n              \"message\": \"eiusmod laborum elit magna aute\",\n              \"title\": \"Duis esse exercitation\"\n            },\n            {\n              \"_type\": \"labore\",\n              \"detail\": \"officia velit magna ut\",\n              \"message\": \"eu sit elit dolore veniam\",\n              \"title\": \"irure minim\"\n            }\n          ]\n        },\n        {\n          \"id\": 8,\n          \"color\": \"#516cc6\",\n          \"name\": \"irure inci\",\n          \"fixes\": [\n            {\n              \"_type\": \"aliqua ut dolor dolor occaecat\",\n              \"detail\": \"occaecat deserunt Lorem mollit labore\",\n              \"message\": \"sit ut voluptate\",\n              \"title\": \"ut occaecat irure\"\n            },\n            {\n              \"_type\": \"labore dolore reprehenderit quis\",\n              \"detail\": \"dolore dolor\",\n              \"message\": \"id dolor\",\n              \"title\": \"\"\n            }\n          ]\n        }\n      ],\n      \"note\": \"<p>a free-form note</p>\",\n      \"amduca\": \"OFFLABEL\"\n    },\n    {\n      \"product\": \"MiracleMed\",\n      \"route\": \"wip\",\n      \"dosage\": {\n        \"doseId\": 35781694\n      },\n      \"sequenceFunction\": {\n        \"_type\": \"models.SeqSingleDose\"\n      },\n      \"sizeFunction\": {\n        \"_type\": \"models.FixedDoseFunction\",\n        \"dose\": {\n          \"quantity\": {\n            \"dimension\": \"Mass\",\n            \"value\": 3,\n            \"symbol\": \"oz\"\n          }\n        }\n      },\n      \"id\": \"B-123\",\n      \"ownerId\": 0,\n      \"description\": \"3.0 ml per kg repeat\",\n      \"eligibilities\": [\n        {\n          \"id\": 1,\n          \"name\": \"Beef Cattle\",\n          \"fdaSpecies\": [\n            \"bison\",\n            \"gamebirds\"\n          ]\n        },\n        {\n          \"id\": 1,\n          \"name\": \"Beef Cattle\",\n          \"fdaSpecies\": [\n            \"salmon\",\n            \"emus\"\n          ]\n        }\n      ],\n      \"_dose\": \"3.0 ml per kg repeat in 6 hours and again in 24 hours\",\n      \"wtMeatHrs\": 37808317,\n      \"wtMilkHrs\": 69116765,\n      \"nada\": \"wip\",\n      \"tags\": [\n        {\n          \"id\": 8,\n          \"color\": \"#516cc6\",\n          \"name\": \"proiden\",\n          \"fixes\": [\n            {\n              \"_type\": \"occaecat commodo tempor non\",\n              \"detail\": \"sunt cupidatat labore\",\n              \"message\": \"aliqua ut adipisicing\",\n              \"title\": \"magna dolore aute anim\"\n            },\n            {\n              \"_type\": \"dolor quis\",\n              \"detail\": \"voluptate cillum ut\",\n              \"message\": \"elit laboris\",\n              \"title\": \"adipisicing sun\"\n            }\n          ]\n        },\n        {\n          \"id\": 8,\n          \"color\": \"#516cc6\",\n          \"name\": \"mol\",\n          \"fixes\": [\n            {\n              \"_type\": \"ad fugiat\",\n              \"detail\": \"fugiat\",\n              \"message\": \"ut quis ullamco\",\n              \"title\": \"Ut commodo aliqua\"\n            },\n            {\n              \"_type\": \"cillum tempor qui exercitation\",\n              \"detail\": \"sunt quis Excepteur\",\n              \"message\": \"aliquip fugiat\",\n              \"title\": \"ut in\"\n            }\n          ]\n        }\n      ],\n      \"note\": \"<p>a free-form note</p>\",\n      \"amduca\": \"UNIDENTIFIED\"\n    }\n  ],\n  \"tags\": [\n    {\n      \"id\": 8,\n      \"color\": \"#516cc6\",\n      \"name\": \"ex e\",\n      \"fixes\": [\n        {\n          \"_type\": \"irure dolor ad culpa\",\n          \"detail\": \"in officia mollit dolor\",\n          \"message\": \"sit\",\n          \"title\": \"laborum irure ut\"\n        },\n        {\n          \"_type\": \"laborum\",\n          \"detail\": \"commodo sunt tempor\",\n          \"message\": \"proident\",\n          \"title\": \"exercitation sit dolore nulla\"\n        }\n      ]\n    },\n    {\n      \"id\": 8,\n      \"color\": \"#516cc6\",\n      \"name\": \"dolor aute e\",\n      \"fixes\": [\n        {\n          \"_type\": \"dolore ut\",\n          \"detail\": \"cupidatat culpa fugiat dolor\",\n          \"message\": \"in\",\n          \"title\": \"velit minim qui\"\n        },\n        {\n          \"_type\": \"dolor\",\n          \"detail\": \"dolor nulla\",\n          \"message\": \"dolor ut aliqua sit\",\n          \"title\": \"culpa pariatur tempor est\"\n        }\n      ]\n    }\n  ],\n  \"diagnoses\": [\n    {\n      \"id\": 8,\n      \"name\": \"Pain/inflammation (musculoskeletal), treatment\"\n    },\n    {\n      \"id\": 8,\n      \"name\": \"Pain/inflammation (musculoskeletal), treatment\"\n    }\n  ],\n  \"eligibilities\": [\n    {\n      \"id\": 1,\n      \"name\": \"Beef Cattle\",\n      \"fdaSpecies\": [\n        \"llamas\",\n        \"llamas\"\n      ]\n    },\n    {\n      \"id\": 1,\n      \"name\": \"Beef Cattle\",\n      \"fdaSpecies\": [\n        \"sheep\",\n        \"horses\"\n      ]\n    }\n  ],\n  \"promises\": [\n    {\n      \"_type\": \"models.IdPromise\",\n      \"name\": \"ID promise\",\n      \"descrip\": \"You must give ID for each case enrolled\",\n      \"query\": \"What is the animal's name or number?\",\n      \"when\": \"PT0H\",\n      \"id\": 2345\n    },\n    {\n      \"_type\": \"models.IdPromise\",\n      \"name\": \"ID promise\",\n      \"descrip\": \"You must give ID for each case enrolled\",\n      \"query\": \"What is the animal's name or number?\",\n      \"when\": \"PT0H\",\n      \"id\": 2345\n    }\n  ],\n  \"metadata\": [\n    {\n      \"key\": \"popularity\",\n      \"value\": \"good 1.2\"\n    },\n    {\n      \"key\": \"popularity\",\n      \"value\": \"good 1.2\"\n    }\n  ]\n}",
                            "options": {
                                "raw": {
                                    "language": "json"
                                }
                            }
                        }
                    },
                    "response": [
                        {
                            "id": "0aa27ebd-972f-4472-aaac-9c3868bad7cc",
                            "name": "Success – updated Protocol",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "api",
                                        "protocols",
                                        "validate"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "description": {
                                            "content": "Added as a part of security scheme: apikey",
                                            "type": "text/plain"
                                        },
                                        "key": "X-Auth-Token",
                                        "value": "<API Key>"
                                    }
                                ],
                                "method": "PUT",
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n  \"ownerId\": 1,\n  \"name\": \"wip\",\n  \"status\": \"PRESCRIBED\",\n  \"instructions\": {\n    \"considerations\": \"<p>This is just an example, not a real protocol.</p>\",\n    \"restrictions\": \"<p>Not for use on real animals.</p>\",\n    \"dothis\": \"<h3>Examinations to perform</h3>\",\n    \"recordthis\": \"<p>record every step in your notebook.</p>\",\n    \"success\": \"<p>All problems are gone</p>\",\n    \"failure\": \"<p>One or more problems remain</p>\",\n    \"references\": \"<a href=\\\"https://en.wikipedia.org/wiki/Rickrolling\\\">Wikipedia</a>\"\n  },\n  \"id\": 12345,\n  \"shortname\": \"wip\",\n  \"created\": \"2020-01-10T10:30:37Z\",\n  \"edited\": \"2020-02-10T10:30:37Z\",\n  \"vetNote\": \"consider prescribing protocol x instead\",\n  \"wtMeatHrs\": 22,\n  \"wtMilkHrs\": 5,\n  \"shareAll\": true,\n  \"shareClonable\": true,\n  \"caseDefinition\": {\n    \"requireId\": false,\n    \"requireMor\": false,\n    \"contraindications\": \"\",\n    \"medical\": \"if fever is present, consider Protocol 12345 instead.\",\n    \"economic\": \"\",\n    \"note\": \"\"\n  },\n  \"treatments\": [\n    {\n      \"product\": \"MiracleMed\",\n      \"route\": \"wip\",\n      \"dosage\": {\n        \"doseId\": 69015374\n      },\n      \"sequenceFunction\": {\n        \"_type\": \"models.SeqSingleDose\"\n      },\n      \"sizeFunction\": {\n        \"_type\": \"models.FixedDoseFunction\",\n        \"dose\": {\n          \"quantity\": {\n            \"dimension\": \"Mass\",\n            \"value\": 3,\n            \"symbol\": \"oz\"\n          }\n        }\n      },\n      \"id\": \"B-123\",\n      \"ownerId\": 0,\n      \"description\": \"3.0 ml per kg repeat\",\n      \"eligibilities\": [\n        {\n          \"id\": 1,\n          \"name\": \"Beef Cattle\",\n          \"fdaSpecies\": [\n            \"chickens\",\n            \"unidentified\"\n          ]\n        },\n        {\n          \"id\": 1,\n          \"name\": \"Beef Cattle\",\n          \"fdaSpecies\": [\n            \"unidentified\",\n            \"veal\"\n          ]\n        }\n      ],\n      \"_dose\": \"3.0 ml per kg repeat in 6 hours and again in 24 hours\",\n      \"wtMeatHrs\": 27424849,\n      \"wtMilkHrs\": -87261637,\n      \"nada\": \"wip\",\n      \"tags\": [\n        {\n          \"id\": 8,\n          \"color\": \"#516cc6\",\n          \"name\": \"occaecat Duis \",\n          \"fixes\": [\n            {\n              \"_type\": \"Excepteur exercitation qui aliquip\",\n              \"detail\": \"aute ut nulla irure\",\n              \"message\": \"eiusmod laborum elit magna aute\",\n              \"title\": \"Duis esse exercitation\"\n            },\n            {\n              \"_type\": \"labore\",\n              \"detail\": \"officia velit magna ut\",\n              \"message\": \"eu sit elit dolore veniam\",\n              \"title\": \"irure minim\"\n            }\n          ]\n        },\n        {\n          \"id\": 8,\n          \"color\": \"#516cc6\",\n          \"name\": \"irure inci\",\n          \"fixes\": [\n            {\n              \"_type\": \"aliqua ut dolor dolor occaecat\",\n              \"detail\": \"occaecat deserunt Lorem mollit labore\",\n              \"message\": \"sit ut voluptate\",\n              \"title\": \"ut occaecat irure\"\n            },\n            {\n              \"_type\": \"labore dolore reprehenderit quis\",\n              \"detail\": \"dolore dolor\",\n              \"message\": \"id dolor\",\n              \"title\": \"\"\n            }\n          ]\n        }\n      ],\n      \"note\": \"<p>a free-form note</p>\",\n      \"amduca\": \"OFFLABEL\"\n    },\n    {\n      \"product\": \"MiracleMed\",\n      \"route\": \"wip\",\n      \"dosage\": {\n        \"doseId\": 35781694\n      },\n      \"sequenceFunction\": {\n        \"_type\": \"models.SeqSingleDose\"\n      },\n      \"sizeFunction\": {\n        \"_type\": \"models.FixedDoseFunction\",\n        \"dose\": {\n          \"quantity\": {\n            \"dimension\": \"Mass\",\n            \"value\": 3,\n            \"symbol\": \"oz\"\n          }\n        }\n      },\n      \"id\": \"B-123\",\n      \"ownerId\": 0,\n      \"description\": \"3.0 ml per kg repeat\",\n      \"eligibilities\": [\n        {\n          \"id\": 1,\n          \"name\": \"Beef Cattle\",\n          \"fdaSpecies\": [\n            \"bison\",\n            \"gamebirds\"\n          ]\n        },\n        {\n          \"id\": 1,\n          \"name\": \"Beef Cattle\",\n          \"fdaSpecies\": [\n            \"salmon\",\n            \"emus\"\n          ]\n        }\n      ],\n      \"_dose\": \"3.0 ml per kg repeat in 6 hours and again in 24 hours\",\n      \"wtMeatHrs\": 37808317,\n      \"wtMilkHrs\": 69116765,\n      \"nada\": \"wip\",\n      \"tags\": [\n        {\n          \"id\": 8,\n          \"color\": \"#516cc6\",\n          \"name\": \"proiden\",\n          \"fixes\": [\n            {\n              \"_type\": \"occaecat commodo tempor non\",\n              \"detail\": \"sunt cupidatat labore\",\n              \"message\": \"aliqua ut adipisicing\",\n              \"title\": \"magna dolore aute anim\"\n            },\n            {\n              \"_type\": \"dolor quis\",\n              \"detail\": \"voluptate cillum ut\",\n              \"message\": \"elit laboris\",\n              \"title\": \"adipisicing sun\"\n            }\n          ]\n        },\n        {\n          \"id\": 8,\n          \"color\": \"#516cc6\",\n          \"name\": \"mol\",\n          \"fixes\": [\n            {\n              \"_type\": \"ad fugiat\",\n              \"detail\": \"fugiat\",\n              \"message\": \"ut quis ullamco\",\n              \"title\": \"Ut commodo aliqua\"\n            },\n            {\n              \"_type\": \"cillum tempor qui exercitation\",\n              \"detail\": \"sunt quis Excepteur\",\n              \"message\": \"aliquip fugiat\",\n              \"title\": \"ut in\"\n            }\n          ]\n        }\n      ],\n      \"note\": \"<p>a free-form note</p>\",\n      \"amduca\": \"UNIDENTIFIED\"\n    }\n  ],\n  \"tags\": [\n    {\n      \"id\": 8,\n      \"color\": \"#516cc6\",\n      \"name\": \"ex e\",\n      \"fixes\": [\n        {\n          \"_type\": \"irure dolor ad culpa\",\n          \"detail\": \"in officia mollit dolor\",\n          \"message\": \"sit\",\n          \"title\": \"laborum irure ut\"\n        },\n        {\n          \"_type\": \"laborum\",\n          \"detail\": \"commodo sunt tempor\",\n          \"message\": \"proident\",\n          \"title\": \"exercitation sit dolore nulla\"\n        }\n      ]\n    },\n    {\n      \"id\": 8,\n      \"color\": \"#516cc6\",\n      \"name\": \"dolor aute e\",\n      \"fixes\": [\n        {\n          \"_type\": \"dolore ut\",\n          \"detail\": \"cupidatat culpa fugiat dolor\",\n          \"message\": \"in\",\n          \"title\": \"velit minim qui\"\n        },\n        {\n          \"_type\": \"dolor\",\n          \"detail\": \"dolor nulla\",\n          \"message\": \"dolor ut aliqua sit\",\n          \"title\": \"culpa pariatur tempor est\"\n        }\n      ]\n    }\n  ],\n  \"diagnoses\": [\n    {\n      \"id\": 8,\n      \"name\": \"Pain/inflammation (musculoskeletal), treatment\"\n    },\n    {\n      \"id\": 8,\n      \"name\": \"Pain/inflammation (musculoskeletal), treatment\"\n    }\n  ],\n  \"eligibilities\": [\n    {\n      \"id\": 1,\n      \"name\": \"Beef Cattle\",\n      \"fdaSpecies\": [\n        \"llamas\",\n        \"llamas\"\n      ]\n    },\n    {\n      \"id\": 1,\n      \"name\": \"Beef Cattle\",\n      \"fdaSpecies\": [\n        \"sheep\",\n        \"horses\"\n      ]\n    }\n  ],\n  \"promises\": [\n    {\n      \"_type\": \"models.IdPromise\",\n      \"name\": \"ID promise\",\n      \"descrip\": \"You must give ID for each case enrolled\",\n      \"query\": \"What is the animal's name or number?\",\n      \"when\": \"PT0H\",\n      \"id\": 2345\n    },\n    {\n      \"_type\": \"models.IdPromise\",\n      \"name\": \"ID promise\",\n      \"descrip\": \"You must give ID for each case enrolled\",\n      \"query\": \"What is the animal's name or number?\",\n      \"when\": \"PT0H\",\n      \"id\": 2345\n    }\n  ],\n  \"metadata\": [\n    {\n      \"key\": \"popularity\",\n      \"value\": \"good 1.2\"\n    },\n    {\n      \"key\": \"popularity\",\n      \"value\": \"good 1.2\"\n    }\n  ]\n}",
                                    "options": {
                                        "raw": {
                                            "language": "json"
                                        }
                                    }
                                }
                            },
                            "status": "OK",
                            "code": 200,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"protocol\": {\n    \"ownerId\": 1,\n    \"name\": \"wip\",\n    \"status\": \"PRESCRIBED\",\n    \"instructions\": {\n      \"considerations\": \"<p>This is just an example, not a real protocol.</p>\",\n      \"restrictions\": \"<p>Not for use on real animals.</p>\",\n      \"dothis\": \"<h3>Examinations to perform</h3>\",\n      \"recordthis\": \"<p>record every step in your notebook.</p>\",\n      \"success\": \"<p>All problems are gone</p>\",\n      \"failure\": \"<p>One or more problems remain</p>\",\n      \"references\": \"<a href=\\\"https://en.wikipedia.org/wiki/Rickrolling\\\">Wikipedia</a>\"\n    },\n    \"id\": 12345,\n    \"shortname\": \"wip\",\n    \"created\": \"2020-01-10T10:30:37Z\",\n    \"edited\": \"2020-02-10T10:30:37Z\",\n    \"vetNote\": \"consider prescribing protocol x instead\",\n    \"wtMeatHrs\": 22,\n    \"wtMilkHrs\": 5,\n    \"shareAll\": true,\n    \"shareClonable\": true,\n    \"caseDefinition\": {\n      \"requireId\": false,\n      \"requireMor\": false,\n      \"contraindications\": \"\",\n      \"medical\": \"if fever is present, consider Protocol 12345 instead.\",\n      \"economic\": \"\",\n      \"note\": \"\"\n    },\n    \"treatments\": [\n      {\n        \"product\": \"MiracleMed\",\n        \"route\": \"wip\",\n        \"dosage\": {\n          \"doseId\": -82710886\n        },\n        \"sequenceFunction\": {\n          \"_type\": \"models.SeqSingleDose\"\n        },\n        \"sizeFunction\": {\n          \"_type\": \"models.FixedDoseFunction\",\n          \"dose\": {\n            \"quantity\": {\n              \"dimension\": \"Mass\",\n              \"value\": 3,\n              \"symbol\": \"oz\"\n            }\n          }\n        },\n        \"id\": \"B-123\",\n        \"ownerId\": 0,\n        \"description\": \"3.0 ml per kg repeat\",\n        \"eligibilities\": [\n          {\n            \"id\": 1,\n            \"name\": \"Beef Cattle\",\n            \"fdaSpecies\": [\n              \"gamebirds\",\n              \"cats\"\n            ]\n          },\n          {\n            \"id\": 1,\n            \"name\": \"Beef Cattle\",\n            \"fdaSpecies\": [\n              \"catfish\",\n              \"chickens\"\n            ]\n          }\n        ],\n        \"_dose\": \"3.0 ml per kg repeat in 6 hours and again in 24 hours\",\n        \"wtMeatHrs\": 3764921,\n        \"wtMilkHrs\": -43140473,\n        \"nada\": \"wip\",\n        \"tags\": [\n          {\n            \"id\": 8,\n            \"color\": \"#516cc6\",\n            \"name\": \"pariatur e\",\n            \"fixes\": [\n              {\n                \"_type\": {\n                  \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"detail\": {\n                  \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"message\": {\n                  \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"title\": {\n                  \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                }\n              },\n              {\n                \"_type\": {\n                  \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"detail\": {\n                  \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"message\": {\n                  \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"title\": {\n                  \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                }\n              }\n            ]\n          },\n          {\n            \"id\": 8,\n            \"color\": \"#516cc6\",\n            \"name\": \"est labor\",\n            \"fixes\": [\n              {\n                \"_type\": {\n                  \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"detail\": {\n                  \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"message\": {\n                  \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"title\": {\n                  \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                }\n              },\n              {\n                \"_type\": {\n                  \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"detail\": {\n                  \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"message\": {\n                  \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"title\": {\n                  \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                }\n              }\n            ]\n          }\n        ],\n        \"note\": \"<p>a free-form note</p>\",\n        \"amduca\": \"ONLABEL\"\n      },\n      {\n        \"product\": \"MiracleMed\",\n        \"route\": \"wip\",\n        \"dosage\": {\n          \"doseId\": 90743195\n        },\n        \"sequenceFunction\": {\n          \"_type\": \"models.SeqSingleDose\"\n        },\n        \"sizeFunction\": {\n          \"_type\": \"models.FixedDoseFunction\",\n          \"dose\": {\n            \"quantity\": {\n              \"dimension\": \"Mass\",\n              \"value\": 3,\n              \"symbol\": \"oz\"\n            }\n          }\n        },\n        \"id\": \"B-123\",\n        \"ownerId\": 0,\n        \"description\": \"3.0 ml per kg repeat\",\n        \"eligibilities\": [\n          {\n            \"id\": 1,\n            \"name\": \"Beef Cattle\",\n            \"fdaSpecies\": [\n              \"emus\",\n              \"bison\"\n            ]\n          },\n          {\n            \"id\": 1,\n            \"name\": \"Beef Cattle\",\n            \"fdaSpecies\": [\n              \"llamas\",\n              \"emus\"\n            ]\n          }\n        ],\n        \"_dose\": \"3.0 ml per kg repeat in 6 hours and again in 24 hours\",\n        \"wtMeatHrs\": -43055535,\n        \"wtMilkHrs\": -97115862,\n        \"nada\": \"wip\",\n        \"tags\": [\n          {\n            \"id\": 8,\n            \"color\": \"#516cc6\",\n            \"name\": \"fugiat do\",\n            \"fixes\": [\n              {\n                \"_type\": {\n                  \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"detail\": {\n                  \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"message\": {\n                  \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"title\": {\n                  \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                }\n              },\n              {\n                \"_type\": {\n                  \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"detail\": {\n                  \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"message\": {\n                  \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"title\": {\n                  \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                }\n              }\n            ]\n          },\n          {\n            \"id\": 8,\n            \"color\": \"#516cc6\",\n            \"name\": \"in\",\n            \"fixes\": [\n              {\n                \"_type\": {\n                  \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"detail\": {\n                  \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"message\": {\n                  \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"title\": {\n                  \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                }\n              },\n              {\n                \"_type\": {\n                  \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"detail\": {\n                  \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"message\": {\n                  \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"title\": {\n                  \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                }\n              }\n            ]\n          }\n        ],\n        \"note\": \"<p>a free-form note</p>\",\n        \"amduca\": \"UNIDENTIFIED\"\n      }\n    ],\n    \"tags\": [\n      {\n        \"id\": 8,\n        \"color\": \"#516cc6\",\n        \"name\": \"dolor Lorem\",\n        \"fixes\": [\n          {\n            \"_type\": \"do\",\n            \"detail\": \"cillum irure incididunt ad\",\n            \"message\": \"sit\",\n            \"title\": \"officia ut\"\n          },\n          {\n            \"_type\": \"commodo cillum non\",\n            \"detail\": \"ut cupidatat\",\n            \"message\": \"Lorem laboris\",\n            \"title\": \"sed Excepteur\"\n          }\n        ]\n      },\n      {\n        \"id\": 8,\n        \"color\": \"#516cc6\",\n        \"name\": \"proident volu\",\n        \"fixes\": [\n          {\n            \"_type\": \"ipsum reprehenderit velit\",\n            \"detail\": \"irure\",\n            \"message\": \"Ut\",\n            \"title\": \"Excepteur officia non qui\"\n          },\n          {\n            \"_type\": \"est sunt laboris ad\",\n            \"detail\": \"mollit sed deserunt\",\n            \"message\": \"nisi veniam\",\n            \"title\": \"adipisicing do irure\"\n          }\n        ]\n      }\n    ],\n    \"diagnoses\": [\n      {\n        \"id\": 8,\n        \"name\": \"Pain/inflammation (musculoskeletal), treatment\"\n      },\n      {\n        \"id\": 8,\n        \"name\": \"Pain/inflammation (musculoskeletal), treatment\"\n      }\n    ],\n    \"eligibilities\": [\n      {\n        \"id\": 1,\n        \"name\": \"Beef Cattle\",\n        \"fdaSpecies\": [\n          \"salmon\",\n          \"other\"\n        ]\n      },\n      {\n        \"id\": 1,\n        \"name\": \"Beef Cattle\",\n        \"fdaSpecies\": [\n          \"salmon\",\n          \"fish\"\n        ]\n      }\n    ],\n    \"promises\": [\n      {\n        \"_type\": \"models.IdPromise\",\n        \"name\": \"ID promise\",\n        \"descrip\": \"You must give ID for each case enrolled\",\n        \"query\": \"What is the animal's name or number?\",\n        \"when\": \"PT0H\",\n        \"id\": 2345\n      },\n      {\n        \"_type\": \"models.IdPromise\",\n        \"name\": \"ID promise\",\n        \"descrip\": \"You must give ID for each case enrolled\",\n        \"query\": \"What is the animal's name or number?\",\n        \"when\": \"PT0H\",\n        \"id\": 2345\n      }\n    ],\n    \"metadata\": [\n      {\n        \"key\": \"popularity\",\n        \"value\": \"good 1.2\"\n      },\n      {\n        \"key\": \"popularity\",\n        \"value\": \"good 1.2\"\n      }\n    ]\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "e079fd5b-98e6-4887-8cc9-0c4570cd91e8",
                            "name": "The server can not understand the request due to invalid syntax.",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "api",
                                        "protocols",
                                        "validate"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "description": {
                                            "content": "Added as a part of security scheme: apikey",
                                            "type": "text/plain"
                                        },
                                        "key": "X-Auth-Token",
                                        "value": "<API Key>"
                                    }
                                ],
                                "method": "PUT",
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n  \"ownerId\": 1,\n  \"name\": \"wip\",\n  \"status\": \"PRESCRIBED\",\n  \"instructions\": {\n    \"considerations\": \"<p>This is just an example, not a real protocol.</p>\",\n    \"restrictions\": \"<p>Not for use on real animals.</p>\",\n    \"dothis\": \"<h3>Examinations to perform</h3>\",\n    \"recordthis\": \"<p>record every step in your notebook.</p>\",\n    \"success\": \"<p>All problems are gone</p>\",\n    \"failure\": \"<p>One or more problems remain</p>\",\n    \"references\": \"<a href=\\\"https://en.wikipedia.org/wiki/Rickrolling\\\">Wikipedia</a>\"\n  },\n  \"id\": 12345,\n  \"shortname\": \"wip\",\n  \"created\": \"2020-01-10T10:30:37Z\",\n  \"edited\": \"2020-02-10T10:30:37Z\",\n  \"vetNote\": \"consider prescribing protocol x instead\",\n  \"wtMeatHrs\": 22,\n  \"wtMilkHrs\": 5,\n  \"shareAll\": true,\n  \"shareClonable\": true,\n  \"caseDefinition\": {\n    \"requireId\": false,\n    \"requireMor\": false,\n    \"contraindications\": \"\",\n    \"medical\": \"if fever is present, consider Protocol 12345 instead.\",\n    \"economic\": \"\",\n    \"note\": \"\"\n  },\n  \"treatments\": [\n    {\n      \"product\": \"MiracleMed\",\n      \"route\": \"wip\",\n      \"dosage\": {\n        \"doseId\": 69015374\n      },\n      \"sequenceFunction\": {\n        \"_type\": \"models.SeqSingleDose\"\n      },\n      \"sizeFunction\": {\n        \"_type\": \"models.FixedDoseFunction\",\n        \"dose\": {\n          \"quantity\": {\n            \"dimension\": \"Mass\",\n            \"value\": 3,\n            \"symbol\": \"oz\"\n          }\n        }\n      },\n      \"id\": \"B-123\",\n      \"ownerId\": 0,\n      \"description\": \"3.0 ml per kg repeat\",\n      \"eligibilities\": [\n        {\n          \"id\": 1,\n          \"name\": \"Beef Cattle\",\n          \"fdaSpecies\": [\n            \"chickens\",\n            \"unidentified\"\n          ]\n        },\n        {\n          \"id\": 1,\n          \"name\": \"Beef Cattle\",\n          \"fdaSpecies\": [\n            \"unidentified\",\n            \"veal\"\n          ]\n        }\n      ],\n      \"_dose\": \"3.0 ml per kg repeat in 6 hours and again in 24 hours\",\n      \"wtMeatHrs\": 27424849,\n      \"wtMilkHrs\": -87261637,\n      \"nada\": \"wip\",\n      \"tags\": [\n        {\n          \"id\": 8,\n          \"color\": \"#516cc6\",\n          \"name\": \"occaecat Duis \",\n          \"fixes\": [\n            {\n              \"_type\": \"Excepteur exercitation qui aliquip\",\n              \"detail\": \"aute ut nulla irure\",\n              \"message\": \"eiusmod laborum elit magna aute\",\n              \"title\": \"Duis esse exercitation\"\n            },\n            {\n              \"_type\": \"labore\",\n              \"detail\": \"officia velit magna ut\",\n              \"message\": \"eu sit elit dolore veniam\",\n              \"title\": \"irure minim\"\n            }\n          ]\n        },\n        {\n          \"id\": 8,\n          \"color\": \"#516cc6\",\n          \"name\": \"irure inci\",\n          \"fixes\": [\n            {\n              \"_type\": \"aliqua ut dolor dolor occaecat\",\n              \"detail\": \"occaecat deserunt Lorem mollit labore\",\n              \"message\": \"sit ut voluptate\",\n              \"title\": \"ut occaecat irure\"\n            },\n            {\n              \"_type\": \"labore dolore reprehenderit quis\",\n              \"detail\": \"dolore dolor\",\n              \"message\": \"id dolor\",\n              \"title\": \"\"\n            }\n          ]\n        }\n      ],\n      \"note\": \"<p>a free-form note</p>\",\n      \"amduca\": \"OFFLABEL\"\n    },\n    {\n      \"product\": \"MiracleMed\",\n      \"route\": \"wip\",\n      \"dosage\": {\n        \"doseId\": 35781694\n      },\n      \"sequenceFunction\": {\n        \"_type\": \"models.SeqSingleDose\"\n      },\n      \"sizeFunction\": {\n        \"_type\": \"models.FixedDoseFunction\",\n        \"dose\": {\n          \"quantity\": {\n            \"dimension\": \"Mass\",\n            \"value\": 3,\n            \"symbol\": \"oz\"\n          }\n        }\n      },\n      \"id\": \"B-123\",\n      \"ownerId\": 0,\n      \"description\": \"3.0 ml per kg repeat\",\n      \"eligibilities\": [\n        {\n          \"id\": 1,\n          \"name\": \"Beef Cattle\",\n          \"fdaSpecies\": [\n            \"bison\",\n            \"gamebirds\"\n          ]\n        },\n        {\n          \"id\": 1,\n          \"name\": \"Beef Cattle\",\n          \"fdaSpecies\": [\n            \"salmon\",\n            \"emus\"\n          ]\n        }\n      ],\n      \"_dose\": \"3.0 ml per kg repeat in 6 hours and again in 24 hours\",\n      \"wtMeatHrs\": 37808317,\n      \"wtMilkHrs\": 69116765,\n      \"nada\": \"wip\",\n      \"tags\": [\n        {\n          \"id\": 8,\n          \"color\": \"#516cc6\",\n          \"name\": \"proiden\",\n          \"fixes\": [\n            {\n              \"_type\": \"occaecat commodo tempor non\",\n              \"detail\": \"sunt cupidatat labore\",\n              \"message\": \"aliqua ut adipisicing\",\n              \"title\": \"magna dolore aute anim\"\n            },\n            {\n              \"_type\": \"dolor quis\",\n              \"detail\": \"voluptate cillum ut\",\n              \"message\": \"elit laboris\",\n              \"title\": \"adipisicing sun\"\n            }\n          ]\n        },\n        {\n          \"id\": 8,\n          \"color\": \"#516cc6\",\n          \"name\": \"mol\",\n          \"fixes\": [\n            {\n              \"_type\": \"ad fugiat\",\n              \"detail\": \"fugiat\",\n              \"message\": \"ut quis ullamco\",\n              \"title\": \"Ut commodo aliqua\"\n            },\n            {\n              \"_type\": \"cillum tempor qui exercitation\",\n              \"detail\": \"sunt quis Excepteur\",\n              \"message\": \"aliquip fugiat\",\n              \"title\": \"ut in\"\n            }\n          ]\n        }\n      ],\n      \"note\": \"<p>a free-form note</p>\",\n      \"amduca\": \"UNIDENTIFIED\"\n    }\n  ],\n  \"tags\": [\n    {\n      \"id\": 8,\n      \"color\": \"#516cc6\",\n      \"name\": \"ex e\",\n      \"fixes\": [\n        {\n          \"_type\": \"irure dolor ad culpa\",\n          \"detail\": \"in officia mollit dolor\",\n          \"message\": \"sit\",\n          \"title\": \"laborum irure ut\"\n        },\n        {\n          \"_type\": \"laborum\",\n          \"detail\": \"commodo sunt tempor\",\n          \"message\": \"proident\",\n          \"title\": \"exercitation sit dolore nulla\"\n        }\n      ]\n    },\n    {\n      \"id\": 8,\n      \"color\": \"#516cc6\",\n      \"name\": \"dolor aute e\",\n      \"fixes\": [\n        {\n          \"_type\": \"dolore ut\",\n          \"detail\": \"cupidatat culpa fugiat dolor\",\n          \"message\": \"in\",\n          \"title\": \"velit minim qui\"\n        },\n        {\n          \"_type\": \"dolor\",\n          \"detail\": \"dolor nulla\",\n          \"message\": \"dolor ut aliqua sit\",\n          \"title\": \"culpa pariatur tempor est\"\n        }\n      ]\n    }\n  ],\n  \"diagnoses\": [\n    {\n      \"id\": 8,\n      \"name\": \"Pain/inflammation (musculoskeletal), treatment\"\n    },\n    {\n      \"id\": 8,\n      \"name\": \"Pain/inflammation (musculoskeletal), treatment\"\n    }\n  ],\n  \"eligibilities\": [\n    {\n      \"id\": 1,\n      \"name\": \"Beef Cattle\",\n      \"fdaSpecies\": [\n        \"llamas\",\n        \"llamas\"\n      ]\n    },\n    {\n      \"id\": 1,\n      \"name\": \"Beef Cattle\",\n      \"fdaSpecies\": [\n        \"sheep\",\n        \"horses\"\n      ]\n    }\n  ],\n  \"promises\": [\n    {\n      \"_type\": \"models.IdPromise\",\n      \"name\": \"ID promise\",\n      \"descrip\": \"You must give ID for each case enrolled\",\n      \"query\": \"What is the animal's name or number?\",\n      \"when\": \"PT0H\",\n      \"id\": 2345\n    },\n    {\n      \"_type\": \"models.IdPromise\",\n      \"name\": \"ID promise\",\n      \"descrip\": \"You must give ID for each case enrolled\",\n      \"query\": \"What is the animal's name or number?\",\n      \"when\": \"PT0H\",\n      \"id\": 2345\n    }\n  ],\n  \"metadata\": [\n    {\n      \"key\": \"popularity\",\n      \"value\": \"good 1.2\"\n    },\n    {\n      \"key\": \"popularity\",\n      \"value\": \"good 1.2\"\n    }\n  ]\n}",
                                    "options": {
                                        "raw": {
                                            "language": "json"
                                        }
                                    }
                                }
                            },
                            "status": "Bad Request",
                            "code": 400,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"title\": \"incorrect username or password\",\n  \"status\": 404,\n  \"errorType\": \"/errors/incorrect-user-pass\",\n  \"detail\": \"Authentication failed due to incorrect username or password.\",\n  \"instance\": \"/login/log/abc123\"\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "4b724f05-038d-481e-8470-260ce33ca9b2",
                            "name": "Authorization required",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "api",
                                        "protocols",
                                        "validate"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "description": {
                                            "content": "Added as a part of security scheme: apikey",
                                            "type": "text/plain"
                                        },
                                        "key": "X-Auth-Token",
                                        "value": "<API Key>"
                                    }
                                ],
                                "method": "PUT",
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n  \"ownerId\": 1,\n  \"name\": \"wip\",\n  \"status\": \"PRESCRIBED\",\n  \"instructions\": {\n    \"considerations\": \"<p>This is just an example, not a real protocol.</p>\",\n    \"restrictions\": \"<p>Not for use on real animals.</p>\",\n    \"dothis\": \"<h3>Examinations to perform</h3>\",\n    \"recordthis\": \"<p>record every step in your notebook.</p>\",\n    \"success\": \"<p>All problems are gone</p>\",\n    \"failure\": \"<p>One or more problems remain</p>\",\n    \"references\": \"<a href=\\\"https://en.wikipedia.org/wiki/Rickrolling\\\">Wikipedia</a>\"\n  },\n  \"id\": 12345,\n  \"shortname\": \"wip\",\n  \"created\": \"2020-01-10T10:30:37Z\",\n  \"edited\": \"2020-02-10T10:30:37Z\",\n  \"vetNote\": \"consider prescribing protocol x instead\",\n  \"wtMeatHrs\": 22,\n  \"wtMilkHrs\": 5,\n  \"shareAll\": true,\n  \"shareClonable\": true,\n  \"caseDefinition\": {\n    \"requireId\": false,\n    \"requireMor\": false,\n    \"contraindications\": \"\",\n    \"medical\": \"if fever is present, consider Protocol 12345 instead.\",\n    \"economic\": \"\",\n    \"note\": \"\"\n  },\n  \"treatments\": [\n    {\n      \"product\": \"MiracleMed\",\n      \"route\": \"wip\",\n      \"dosage\": {\n        \"doseId\": 69015374\n      },\n      \"sequenceFunction\": {\n        \"_type\": \"models.SeqSingleDose\"\n      },\n      \"sizeFunction\": {\n        \"_type\": \"models.FixedDoseFunction\",\n        \"dose\": {\n          \"quantity\": {\n            \"dimension\": \"Mass\",\n            \"value\": 3,\n            \"symbol\": \"oz\"\n          }\n        }\n      },\n      \"id\": \"B-123\",\n      \"ownerId\": 0,\n      \"description\": \"3.0 ml per kg repeat\",\n      \"eligibilities\": [\n        {\n          \"id\": 1,\n          \"name\": \"Beef Cattle\",\n          \"fdaSpecies\": [\n            \"chickens\",\n            \"unidentified\"\n          ]\n        },\n        {\n          \"id\": 1,\n          \"name\": \"Beef Cattle\",\n          \"fdaSpecies\": [\n            \"unidentified\",\n            \"veal\"\n          ]\n        }\n      ],\n      \"_dose\": \"3.0 ml per kg repeat in 6 hours and again in 24 hours\",\n      \"wtMeatHrs\": 27424849,\n      \"wtMilkHrs\": -87261637,\n      \"nada\": \"wip\",\n      \"tags\": [\n        {\n          \"id\": 8,\n          \"color\": \"#516cc6\",\n          \"name\": \"occaecat Duis \",\n          \"fixes\": [\n            {\n              \"_type\": \"Excepteur exercitation qui aliquip\",\n              \"detail\": \"aute ut nulla irure\",\n              \"message\": \"eiusmod laborum elit magna aute\",\n              \"title\": \"Duis esse exercitation\"\n            },\n            {\n              \"_type\": \"labore\",\n              \"detail\": \"officia velit magna ut\",\n              \"message\": \"eu sit elit dolore veniam\",\n              \"title\": \"irure minim\"\n            }\n          ]\n        },\n        {\n          \"id\": 8,\n          \"color\": \"#516cc6\",\n          \"name\": \"irure inci\",\n          \"fixes\": [\n            {\n              \"_type\": \"aliqua ut dolor dolor occaecat\",\n              \"detail\": \"occaecat deserunt Lorem mollit labore\",\n              \"message\": \"sit ut voluptate\",\n              \"title\": \"ut occaecat irure\"\n            },\n            {\n              \"_type\": \"labore dolore reprehenderit quis\",\n              \"detail\": \"dolore dolor\",\n              \"message\": \"id dolor\",\n              \"title\": \"\"\n            }\n          ]\n        }\n      ],\n      \"note\": \"<p>a free-form note</p>\",\n      \"amduca\": \"OFFLABEL\"\n    },\n    {\n      \"product\": \"MiracleMed\",\n      \"route\": \"wip\",\n      \"dosage\": {\n        \"doseId\": 35781694\n      },\n      \"sequenceFunction\": {\n        \"_type\": \"models.SeqSingleDose\"\n      },\n      \"sizeFunction\": {\n        \"_type\": \"models.FixedDoseFunction\",\n        \"dose\": {\n          \"quantity\": {\n            \"dimension\": \"Mass\",\n            \"value\": 3,\n            \"symbol\": \"oz\"\n          }\n        }\n      },\n      \"id\": \"B-123\",\n      \"ownerId\": 0,\n      \"description\": \"3.0 ml per kg repeat\",\n      \"eligibilities\": [\n        {\n          \"id\": 1,\n          \"name\": \"Beef Cattle\",\n          \"fdaSpecies\": [\n            \"bison\",\n            \"gamebirds\"\n          ]\n        },\n        {\n          \"id\": 1,\n          \"name\": \"Beef Cattle\",\n          \"fdaSpecies\": [\n            \"salmon\",\n            \"emus\"\n          ]\n        }\n      ],\n      \"_dose\": \"3.0 ml per kg repeat in 6 hours and again in 24 hours\",\n      \"wtMeatHrs\": 37808317,\n      \"wtMilkHrs\": 69116765,\n      \"nada\": \"wip\",\n      \"tags\": [\n        {\n          \"id\": 8,\n          \"color\": \"#516cc6\",\n          \"name\": \"proiden\",\n          \"fixes\": [\n            {\n              \"_type\": \"occaecat commodo tempor non\",\n              \"detail\": \"sunt cupidatat labore\",\n              \"message\": \"aliqua ut adipisicing\",\n              \"title\": \"magna dolore aute anim\"\n            },\n            {\n              \"_type\": \"dolor quis\",\n              \"detail\": \"voluptate cillum ut\",\n              \"message\": \"elit laboris\",\n              \"title\": \"adipisicing sun\"\n            }\n          ]\n        },\n        {\n          \"id\": 8,\n          \"color\": \"#516cc6\",\n          \"name\": \"mol\",\n          \"fixes\": [\n            {\n              \"_type\": \"ad fugiat\",\n              \"detail\": \"fugiat\",\n              \"message\": \"ut quis ullamco\",\n              \"title\": \"Ut commodo aliqua\"\n            },\n            {\n              \"_type\": \"cillum tempor qui exercitation\",\n              \"detail\": \"sunt quis Excepteur\",\n              \"message\": \"aliquip fugiat\",\n              \"title\": \"ut in\"\n            }\n          ]\n        }\n      ],\n      \"note\": \"<p>a free-form note</p>\",\n      \"amduca\": \"UNIDENTIFIED\"\n    }\n  ],\n  \"tags\": [\n    {\n      \"id\": 8,\n      \"color\": \"#516cc6\",\n      \"name\": \"ex e\",\n      \"fixes\": [\n        {\n          \"_type\": \"irure dolor ad culpa\",\n          \"detail\": \"in officia mollit dolor\",\n          \"message\": \"sit\",\n          \"title\": \"laborum irure ut\"\n        },\n        {\n          \"_type\": \"laborum\",\n          \"detail\": \"commodo sunt tempor\",\n          \"message\": \"proident\",\n          \"title\": \"exercitation sit dolore nulla\"\n        }\n      ]\n    },\n    {\n      \"id\": 8,\n      \"color\": \"#516cc6\",\n      \"name\": \"dolor aute e\",\n      \"fixes\": [\n        {\n          \"_type\": \"dolore ut\",\n          \"detail\": \"cupidatat culpa fugiat dolor\",\n          \"message\": \"in\",\n          \"title\": \"velit minim qui\"\n        },\n        {\n          \"_type\": \"dolor\",\n          \"detail\": \"dolor nulla\",\n          \"message\": \"dolor ut aliqua sit\",\n          \"title\": \"culpa pariatur tempor est\"\n        }\n      ]\n    }\n  ],\n  \"diagnoses\": [\n    {\n      \"id\": 8,\n      \"name\": \"Pain/inflammation (musculoskeletal), treatment\"\n    },\n    {\n      \"id\": 8,\n      \"name\": \"Pain/inflammation (musculoskeletal), treatment\"\n    }\n  ],\n  \"eligibilities\": [\n    {\n      \"id\": 1,\n      \"name\": \"Beef Cattle\",\n      \"fdaSpecies\": [\n        \"llamas\",\n        \"llamas\"\n      ]\n    },\n    {\n      \"id\": 1,\n      \"name\": \"Beef Cattle\",\n      \"fdaSpecies\": [\n        \"sheep\",\n        \"horses\"\n      ]\n    }\n  ],\n  \"promises\": [\n    {\n      \"_type\": \"models.IdPromise\",\n      \"name\": \"ID promise\",\n      \"descrip\": \"You must give ID for each case enrolled\",\n      \"query\": \"What is the animal's name or number?\",\n      \"when\": \"PT0H\",\n      \"id\": 2345\n    },\n    {\n      \"_type\": \"models.IdPromise\",\n      \"name\": \"ID promise\",\n      \"descrip\": \"You must give ID for each case enrolled\",\n      \"query\": \"What is the animal's name or number?\",\n      \"when\": \"PT0H\",\n      \"id\": 2345\n    }\n  ],\n  \"metadata\": [\n    {\n      \"key\": \"popularity\",\n      \"value\": \"good 1.2\"\n    },\n    {\n      \"key\": \"popularity\",\n      \"value\": \"good 1.2\"\n    }\n  ]\n}",
                                    "options": {
                                        "raw": {
                                            "language": "json"
                                        }
                                    }
                                }
                            },
                            "status": "Forbidden",
                            "code": 403,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "text/plain"
                                }
                            ],
                            "body": "",
                            "cookie": [],
                            "_postman_previewlanguage": "text"
                        }
                    ],
                    "event": [],
                    "protocolProfileBehavior": {
                        "disableBodyPruning": true
                    }
                },
                {
                    "id": "f83f6490-9513-424f-be7a-42b5d3f6e582",
                    "name": "list of all eligibilities",
                    "request": {
                        "name": "list of all eligibilities",
                        "description": {
                            "content": "This endpoint returns an array of Eligibilities from which a User may choose. The ID field is authoritative, i.e., is all that is needed to identify a particular Eligibility.",
                            "type": "text/plain"
                        },
                        "url": {
                            "path": [
                                "api",
                                "protocols",
                                "eligibilities"
                            ],
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "query": [],
                            "variable": []
                        },
                        "header": [
                            {
                                "key": "Accept",
                                "value": "application/json"
                            }
                        ],
                        "method": "GET",
                        "auth": null
                    },
                    "response": [
                        {
                            "id": "f137a8f6-b04b-47d7-bf6f-c619f04e5033",
                            "name": "OK",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "api",
                                        "protocols",
                                        "eligibilities"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "description": {
                                            "content": "Added as a part of security scheme: apikey",
                                            "type": "text/plain"
                                        },
                                        "key": "X-Auth-Token",
                                        "value": "<API Key>"
                                    }
                                ],
                                "method": "GET",
                                "body": {}
                            },
                            "status": "OK",
                            "code": 200,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"eligibilities\": [\n    {\n      \"id\": 1,\n      \"name\": \"Beef Cattle\",\n      \"fdaSpecies\": [\n        \"dairy_cattle\",\n        \"turkeys\"\n      ]\n    },\n    {\n      \"id\": 1,\n      \"name\": \"Beef Cattle\",\n      \"fdaSpecies\": [\n        \"beef_cattle\",\n        \"veal\"\n      ]\n    }\n  ]\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        }
                    ],
                    "event": []
                },
                {
                    "id": "b5e9e358-1133-4811-bc54-c8a61f9ca8b3",
                    "name": "list of fda species",
                    "request": {
                        "name": "list of fda species",
                        "description": {
                            "content": "\"Species\" is the term FDA uses to describe a class of animals in a label claim.",
                            "type": "text/plain"
                        },
                        "url": {
                            "path": [
                                "api",
                                "protocols",
                                "eligibilities",
                                "fdaspecies"
                            ],
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "query": [],
                            "variable": []
                        },
                        "header": [
                            {
                                "key": "Accept",
                                "value": "application/json"
                            }
                        ],
                        "method": "GET",
                        "auth": null
                    },
                    "response": [
                        {
                            "id": "ccd9e726-a56f-4fd5-a475-f15a585837a4",
                            "name": "OK",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "api",
                                        "protocols",
                                        "eligibilities",
                                        "fdaspecies"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "description": {
                                            "content": "Added as a part of security scheme: apikey",
                                            "type": "text/plain"
                                        },
                                        "key": "X-Auth-Token",
                                        "value": "<API Key>"
                                    }
                                ],
                                "method": "GET",
                                "body": {}
                            },
                            "status": "OK",
                            "code": 200,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"eligibilities\": [\n    [\n      \"gamebirds\",\n      \"sheep\"\n    ],\n    [\n      \"unidentified\",\n      \"chickens\"\n    ]\n  ]\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        }
                    ],
                    "event": []
                },
                {
                    "id": "242b2596-0c4f-408d-b033-b8a1eccac7e5",
                    "name": "list of all diagnoses",
                    "request": {
                        "name": "list of all diagnoses",
                        "description": {
                            "content": "Returns an array of all coded Diagnoses known to the system.",
                            "type": "text/plain"
                        },
                        "url": {
                            "path": [
                                "api",
                                "protocols",
                                "diagnoses"
                            ],
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "query": [],
                            "variable": []
                        },
                        "header": [
                            {
                                "key": "Accept",
                                "value": "application/json"
                            }
                        ],
                        "method": "GET",
                        "auth": null
                    },
                    "response": [
                        {
                            "id": "098c8bab-b61f-4528-a129-050ef662ee17",
                            "name": "OK",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "api",
                                        "protocols",
                                        "diagnoses"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "description": {
                                            "content": "Added as a part of security scheme: apikey",
                                            "type": "text/plain"
                                        },
                                        "key": "X-Auth-Token",
                                        "value": "<API Key>"
                                    }
                                ],
                                "method": "GET",
                                "body": {}
                            },
                            "status": "OK",
                            "code": 200,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"diagnoses\": [\n    {\n      \"id\": 8,\n      \"name\": \"Pain/inflammation (musculoskeletal), treatment\"\n    },\n    {\n      \"id\": 8,\n      \"name\": \"Pain/inflammation (musculoskeletal), treatment\"\n    }\n  ]\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "79279d00-b59c-412f-9863-e0255db2241d",
                            "name": "The server can not understand the request due to invalid syntax.",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "api",
                                        "protocols",
                                        "diagnoses"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "description": {
                                            "content": "Added as a part of security scheme: apikey",
                                            "type": "text/plain"
                                        },
                                        "key": "X-Auth-Token",
                                        "value": "<API Key>"
                                    }
                                ],
                                "method": "GET",
                                "body": {}
                            },
                            "status": "Bad Request",
                            "code": 400,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"title\": \"incorrect username or password\",\n  \"status\": 404,\n  \"errorType\": \"/errors/incorrect-user-pass\",\n  \"detail\": \"Authentication failed due to incorrect username or password.\",\n  \"instance\": \"/login/log/abc123\"\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "07e419a7-f03c-4995-98b8-d8093e2fbe86",
                            "name": "Authorization required",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "api",
                                        "protocols",
                                        "diagnoses"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "description": {
                                            "content": "Added as a part of security scheme: apikey",
                                            "type": "text/plain"
                                        },
                                        "key": "X-Auth-Token",
                                        "value": "<API Key>"
                                    }
                                ],
                                "method": "GET",
                                "body": {}
                            },
                            "status": "Forbidden",
                            "code": 403,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "text/plain"
                                }
                            ],
                            "body": "",
                            "cookie": [],
                            "_postman_previewlanguage": "text"
                        }
                    ],
                    "event": []
                },
                {
                    "id": "b2794b7c-170c-49fa-8a5f-eae44f614054",
                    "name": "list of library protocols",
                    "request": {
                        "name": "list of library protocols",
                        "description": {
                            "content": "This endpoint retrieves all protocols owned by, or shared with, the current User.",
                            "type": "text/plain"
                        },
                        "url": {
                            "path": [
                                "api",
                                "protocols",
                                "libs"
                            ],
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "query": [],
                            "variable": []
                        },
                        "header": [
                            {
                                "key": "Accept",
                                "value": "application/json"
                            }
                        ],
                        "method": "GET",
                        "auth": null
                    },
                    "response": [
                        {
                            "id": "6fe6af4e-a4d8-4842-b75f-5862d845611d",
                            "name": "OK",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "api",
                                        "protocols",
                                        "libs"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "description": {
                                            "content": "Added as a part of security scheme: apikey",
                                            "type": "text/plain"
                                        },
                                        "key": "X-Auth-Token",
                                        "value": "<API Key>"
                                    }
                                ],
                                "method": "GET",
                                "body": {}
                            },
                            "status": "OK",
                            "code": 200,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"protocols\": [\n    {\n      \"ownerId\": 1,\n      \"name\": \"wip\",\n      \"status\": \"PRESCRIBED\",\n      \"instructions\": {\n        \"considerations\": \"<p>This is just an example, not a real protocol.</p>\",\n        \"restrictions\": \"<p>Not for use on real animals.</p>\",\n        \"dothis\": \"<h3>Examinations to perform</h3>\",\n        \"recordthis\": \"<p>record every step in your notebook.</p>\",\n        \"success\": \"<p>All problems are gone</p>\",\n        \"failure\": \"<p>One or more problems remain</p>\",\n        \"references\": \"<a href=\\\"https://en.wikipedia.org/wiki/Rickrolling\\\">Wikipedia</a>\"\n      },\n      \"id\": 12345,\n      \"shortname\": \"wip\",\n      \"created\": \"2020-01-10T10:30:37Z\",\n      \"edited\": \"2020-02-10T10:30:37Z\",\n      \"vetNote\": \"consider prescribing protocol x instead\",\n      \"wtMeatHrs\": 22,\n      \"wtMilkHrs\": 5,\n      \"shareAll\": true,\n      \"shareClonable\": true,\n      \"caseDefinition\": {\n        \"requireId\": false,\n        \"requireMor\": false,\n        \"contraindications\": \"\",\n        \"medical\": \"if fever is present, consider Protocol 12345 instead.\",\n        \"economic\": \"\",\n        \"note\": \"\"\n      },\n      \"treatments\": [\n        {\n          \"product\": \"MiracleMed\",\n          \"route\": \"wip\",\n          \"dosage\": {\n            \"doseId\": -25862831\n          },\n          \"sequenceFunction\": {\n            \"_type\": \"models.SeqSingleDose\"\n          },\n          \"sizeFunction\": {\n            \"dose\": {\n              \"quantity\": {\n                \"dimension\": \"Volume\",\n                \"value\": 3,\n                \"symbol\": \"ml\"\n              }\n            },\n            \"_type\": \"models.FixedDoseFunction\"\n          },\n          \"id\": \"B-123\",\n          \"ownerId\": 0,\n          \"description\": \"3.0 ml per kg repeat\",\n          \"eligibilities\": [\n            {\n              \"id\": 1,\n              \"name\": \"Beef Cattle\",\n              \"fdaSpecies\": [\n                \"other\",\n                \"unidentified\"\n              ]\n            },\n            {\n              \"id\": 1,\n              \"name\": \"Beef Cattle\",\n              \"fdaSpecies\": [\n                \"goats\",\n                \"horses\"\n              ]\n            }\n          ],\n          \"_dose\": \"3.0 ml per kg repeat in 6 hours and again in 24 hours\",\n          \"wtMeatHrs\": -63680913,\n          \"wtMilkHrs\": -51415471,\n          \"nada\": \"wip\",\n          \"tags\": [\n            {\n              \"id\": 8,\n              \"color\": \"#516cc6\",\n              \"name\": \"reprehenderit\",\n              \"fixes\": [\n                {\n                  \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                {\n                  \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                }\n              ]\n            },\n            {\n              \"id\": 8,\n              \"color\": \"#516cc6\",\n              \"name\": \"sint c\",\n              \"fixes\": [\n                {\n                  \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                {\n                  \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                }\n              ]\n            }\n          ],\n          \"note\": \"<p>a free-form note</p>\",\n          \"amduca\": \"UNIDENTIFIED\"\n        },\n        {\n          \"product\": \"MiracleMed\",\n          \"route\": \"wip\",\n          \"dosage\": {\n            \"doseId\": 73749149\n          },\n          \"sequenceFunction\": {\n            \"_type\": \"models.SeqSingleDose\"\n          },\n          \"sizeFunction\": {\n            \"dose\": {\n              \"quantity\": {\n                \"dimension\": \"Volume\",\n                \"value\": 3,\n                \"symbol\": \"ml\"\n              }\n            },\n            \"_type\": \"models.FixedDoseFunction\"\n          },\n          \"id\": \"B-123\",\n          \"ownerId\": 0,\n          \"description\": \"3.0 ml per kg repeat\",\n          \"eligibilities\": [\n            {\n              \"id\": 1,\n              \"name\": \"Beef Cattle\",\n              \"fdaSpecies\": [\n                \"llamas\",\n                \"cats\"\n              ]\n            },\n            {\n              \"id\": 1,\n              \"name\": \"Beef Cattle\",\n              \"fdaSpecies\": [\n                \"fish\",\n                \"turkeys\"\n              ]\n            }\n          ],\n          \"_dose\": \"3.0 ml per kg repeat in 6 hours and again in 24 hours\",\n          \"wtMeatHrs\": 94572564,\n          \"wtMilkHrs\": -37239338,\n          \"nada\": \"wip\",\n          \"tags\": [\n            {\n              \"id\": 8,\n              \"color\": \"#516cc6\",\n              \"name\": \"laboris conse\",\n              \"fixes\": [\n                {\n                  \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                {\n                  \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                }\n              ]\n            },\n            {\n              \"id\": 8,\n              \"color\": \"#516cc6\",\n              \"name\": \"pariatur\",\n              \"fixes\": [\n                {\n                  \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                {\n                  \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                }\n              ]\n            }\n          ],\n          \"note\": \"<p>a free-form note</p>\",\n          \"amduca\": \"ONLABEL\"\n        }\n      ],\n      \"tags\": [\n        {\n          \"id\": 8,\n          \"color\": \"#516cc6\",\n          \"name\": \"tempor culpa \",\n          \"fixes\": [\n            {\n              \"_type\": \"culpa veniam qui sit\",\n              \"detail\": \"sunt\",\n              \"message\": \"esse ex nisi ipsum\",\n              \"title\": \"enim quis\"\n            },\n            {\n              \"_type\": \"exercitation fugiat in\",\n              \"detail\": \"ad aliquip Excepteur voluptate\",\n              \"message\": \"aliquip in \",\n              \"title\": \"quis do\"\n            }\n          ]\n        },\n        {\n          \"id\": 8,\n          \"color\": \"#516cc6\",\n          \"name\": \"oc\",\n          \"fixes\": [\n            {\n              \"_type\": \"elit\",\n              \"detail\": \"ad do\",\n              \"message\": \"dolore dolore\",\n              \"title\": \"consequat\"\n            },\n            {\n              \"_type\": \"minim non in\",\n              \"detail\": \"occaecat sit\",\n              \"message\": \"exercitation in\",\n              \"title\": \"do occaecat enim tempor\"\n            }\n          ]\n        }\n      ],\n      \"diagnoses\": [\n        {\n          \"id\": 8,\n          \"name\": \"Pain/inflammation (musculoskeletal), treatment\"\n        },\n        {\n          \"id\": 8,\n          \"name\": \"Pain/inflammation (musculoskeletal), treatment\"\n        }\n      ],\n      \"eligibilities\": [\n        {\n          \"id\": 1,\n          \"name\": \"Beef Cattle\",\n          \"fdaSpecies\": [\n            \"cats\",\n            \"chickens\"\n          ]\n        },\n        {\n          \"id\": 1,\n          \"name\": \"Beef Cattle\",\n          \"fdaSpecies\": [\n            \"cats\",\n            \"dairy_cattle\"\n          ]\n        }\n      ],\n      \"promises\": [\n        {\n          \"_type\": \"models.IdPromise\",\n          \"name\": \"ID promise\",\n          \"descrip\": \"You must give ID for each case enrolled\",\n          \"query\": \"What is the animal's name or number?\",\n          \"when\": \"PT0H\",\n          \"id\": 2345\n        },\n        {\n          \"_type\": \"models.IdPromise\",\n          \"name\": \"ID promise\",\n          \"descrip\": \"You must give ID for each case enrolled\",\n          \"query\": \"What is the animal's name or number?\",\n          \"when\": \"PT0H\",\n          \"id\": 2345\n        }\n      ],\n      \"metadata\": [\n        {\n          \"key\": \"popularity\",\n          \"value\": \"good 1.2\"\n        },\n        {\n          \"key\": \"popularity\",\n          \"value\": \"good 1.2\"\n        }\n      ]\n    },\n    {\n      \"ownerId\": 1,\n      \"name\": \"wip\",\n      \"status\": \"PRESCRIBED\",\n      \"instructions\": {\n        \"considerations\": \"<p>This is just an example, not a real protocol.</p>\",\n        \"restrictions\": \"<p>Not for use on real animals.</p>\",\n        \"dothis\": \"<h3>Examinations to perform</h3>\",\n        \"recordthis\": \"<p>record every step in your notebook.</p>\",\n        \"success\": \"<p>All problems are gone</p>\",\n        \"failure\": \"<p>One or more problems remain</p>\",\n        \"references\": \"<a href=\\\"https://en.wikipedia.org/wiki/Rickrolling\\\">Wikipedia</a>\"\n      },\n      \"id\": 12345,\n      \"shortname\": \"wip\",\n      \"created\": \"2020-01-10T10:30:37Z\",\n      \"edited\": \"2020-02-10T10:30:37Z\",\n      \"vetNote\": \"consider prescribing protocol x instead\",\n      \"wtMeatHrs\": 22,\n      \"wtMilkHrs\": 5,\n      \"shareAll\": true,\n      \"shareClonable\": true,\n      \"caseDefinition\": {\n        \"requireId\": false,\n        \"requireMor\": false,\n        \"contraindications\": \"\",\n        \"medical\": \"if fever is present, consider Protocol 12345 instead.\",\n        \"economic\": \"\",\n        \"note\": \"\"\n      },\n      \"treatments\": [\n        {\n          \"product\": \"MiracleMed\",\n          \"route\": \"wip\",\n          \"dosage\": {\n            \"doseId\": -78935428\n          },\n          \"sequenceFunction\": {\n            \"_type\": \"models.SeqSingleDose\"\n          },\n          \"sizeFunction\": {\n            \"dose\": {\n              \"quantity\": {\n                \"dimension\": \"Volume\",\n                \"value\": 3,\n                \"symbol\": \"ml\"\n              }\n            },\n            \"_type\": \"models.FixedDoseFunction\"\n          },\n          \"id\": \"B-123\",\n          \"ownerId\": 0,\n          \"description\": \"3.0 ml per kg repeat\",\n          \"eligibilities\": [\n            {\n              \"id\": 1,\n              \"name\": \"Beef Cattle\",\n              \"fdaSpecies\": [\n                \"catfish\",\n                \"goats\"\n              ]\n            },\n            {\n              \"id\": 1,\n              \"name\": \"Beef Cattle\",\n              \"fdaSpecies\": [\n                \"dogs\",\n                \"beef_cattle\"\n              ]\n            }\n          ],\n          \"_dose\": \"3.0 ml per kg repeat in 6 hours and again in 24 hours\",\n          \"wtMeatHrs\": -7442462,\n          \"wtMilkHrs\": -44059836,\n          \"nada\": \"wip\",\n          \"tags\": [\n            {\n              \"id\": 8,\n              \"color\": \"#516cc6\",\n              \"name\": \"ipsum\",\n              \"fixes\": [\n                {\n                  \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                {\n                  \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                }\n              ]\n            },\n            {\n              \"id\": 8,\n              \"color\": \"#516cc6\",\n              \"name\": \"ullamco\",\n              \"fixes\": [\n                {\n                  \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                {\n                  \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                }\n              ]\n            }\n          ],\n          \"note\": \"<p>a free-form note</p>\",\n          \"amduca\": \"ONLABEL\"\n        },\n        {\n          \"product\": \"MiracleMed\",\n          \"route\": \"wip\",\n          \"dosage\": {\n            \"doseId\": 28789264\n          },\n          \"sequenceFunction\": {\n            \"_type\": \"models.SeqSingleDose\"\n          },\n          \"sizeFunction\": {\n            \"dose\": {\n              \"quantity\": {\n                \"dimension\": \"Volume\",\n                \"value\": 3,\n                \"symbol\": \"ml\"\n              }\n            },\n            \"_type\": \"models.FixedDoseFunction\"\n          },\n          \"id\": \"B-123\",\n          \"ownerId\": 0,\n          \"description\": \"3.0 ml per kg repeat\",\n          \"eligibilities\": [\n            {\n              \"id\": 1,\n              \"name\": \"Beef Cattle\",\n              \"fdaSpecies\": [\n                \"goats\",\n                \"turkeys\"\n              ]\n            },\n            {\n              \"id\": 1,\n              \"name\": \"Beef Cattle\",\n              \"fdaSpecies\": [\n                \"swine\",\n                \"emus\"\n              ]\n            }\n          ],\n          \"_dose\": \"3.0 ml per kg repeat in 6 hours and again in 24 hours\",\n          \"wtMeatHrs\": -14714374,\n          \"wtMilkHrs\": -44452158,\n          \"nada\": \"wip\",\n          \"tags\": [\n            {\n              \"id\": 8,\n              \"color\": \"#516cc6\",\n              \"name\": \"minim et m\",\n              \"fixes\": [\n                {\n                  \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                {\n                  \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                }\n              ]\n            },\n            {\n              \"id\": 8,\n              \"color\": \"#516cc6\",\n              \"name\": \"tempor\",\n              \"fixes\": [\n                {\n                  \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                {\n                  \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                }\n              ]\n            }\n          ],\n          \"note\": \"<p>a free-form note</p>\",\n          \"amduca\": \"OFFLABEL\"\n        }\n      ],\n      \"tags\": [\n        {\n          \"id\": 8,\n          \"color\": \"#516cc6\",\n          \"name\": \"Ut et offi\",\n          \"fixes\": [\n            {\n              \"_type\": \"in voluptate nisi\",\n              \"detail\": \"do anim Lorem\",\n              \"message\": \"ex laboris do\",\n              \"title\": \"enim dolor\"\n            },\n            {\n              \"_type\": \"reprehenderit est commodo\",\n              \"detail\": \"laborum ad adipisicing ullamco\",\n              \"message\": \"ad dolor esse\",\n              \"title\": \"pariatur ut fugiat\"\n            }\n          ]\n        },\n        {\n          \"id\": 8,\n          \"color\": \"#516cc6\",\n          \"name\": \"offi\",\n          \"fixes\": [\n            {\n              \"_type\": \"eiusmod veniam\",\n              \"detail\": \"reprehenderit\",\n              \"message\": \"minim Excepteur adipisicing ex\",\n              \"title\": \"in mollit consectetur\"\n            },\n            {\n              \"_type\": \"magna proident \",\n              \"detail\": \"culpa nisi minim\",\n              \"message\": \"non et Duis voluptate\",\n              \"title\": \"pariatur commodo\"\n            }\n          ]\n        }\n      ],\n      \"diagnoses\": [\n        {\n          \"id\": 8,\n          \"name\": \"Pain/inflammation (musculoskeletal), treatment\"\n        },\n        {\n          \"id\": 8,\n          \"name\": \"Pain/inflammation (musculoskeletal), treatment\"\n        }\n      ],\n      \"eligibilities\": [\n        {\n          \"id\": 1,\n          \"name\": \"Beef Cattle\",\n          \"fdaSpecies\": [\n            \"horses\",\n            \"llamas\"\n          ]\n        },\n        {\n          \"id\": 1,\n          \"name\": \"Beef Cattle\",\n          \"fdaSpecies\": [\n            \"other\",\n            \"gamebirds\"\n          ]\n        }\n      ],\n      \"promises\": [\n        {\n          \"_type\": \"models.IdPromise\",\n          \"name\": \"ID promise\",\n          \"descrip\": \"You must give ID for each case enrolled\",\n          \"query\": \"What is the animal's name or number?\",\n          \"when\": \"PT0H\",\n          \"id\": 2345\n        },\n        {\n          \"_type\": \"models.IdPromise\",\n          \"name\": \"ID promise\",\n          \"descrip\": \"You must give ID for each case enrolled\",\n          \"query\": \"What is the animal's name or number?\",\n          \"when\": \"PT0H\",\n          \"id\": 2345\n        }\n      ],\n      \"metadata\": [\n        {\n          \"key\": \"popularity\",\n          \"value\": \"good 1.2\"\n        },\n        {\n          \"key\": \"popularity\",\n          \"value\": \"good 1.2\"\n        }\n      ]\n    }\n  ]\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        }
                    ],
                    "event": []
                },
                {
                    "id": "0e136e47-deb5-4435-8cd3-aa6cc2ea12bb",
                    "name": "list of all diagnoses",
                    "request": {
                        "name": "list of all diagnoses",
                        "description": {
                            "content": "returns an array of Pxes .",
                            "type": "text/plain"
                        },
                        "url": {
                            "path": [
                                "api",
                                "protocols",
                                "exclusivestubs"
                            ],
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "query": [],
                            "variable": []
                        },
                        "header": [
                            {
                                "key": "Accept",
                                "value": "application/json"
                            }
                        ],
                        "method": "GET",
                        "auth": null
                    },
                    "response": [
                        {
                            "id": "8d0a483e-2d11-4156-829b-58bd3b55d3f3",
                            "name": "OK",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "api",
                                        "protocols",
                                        "exclusivestubs"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "description": {
                                            "content": "Added as a part of security scheme: apikey",
                                            "type": "text/plain"
                                        },
                                        "key": "X-Auth-Token",
                                        "value": "<API Key>"
                                    }
                                ],
                                "method": "GET",
                                "body": {}
                            },
                            "status": "OK",
                            "code": 200,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"diagnoses\": [\n    {\n      \"ownerId\": 0,\n      \"name\": \"example protocol\",\n      \"created\": \"2020-01-10T22:20:39Z\",\n      \"edited\": \"2020-02-10T22:20:39Z\",\n      \"status\": \"PRESCRIBED\",\n      \"shareAll\": true,\n      \"id\": 0,\n      \"shortname\": \"EXamp\",\n      \"vetNote\": \"consider prescribing protocol x instead\",\n      \"wtMeatHrs\": 72,\n      \"wtMilkHrs\": 72,\n      \"wtNote\": \"Not for use in horses intended for food.\",\n      \"considerations\": \"<p>think first</p>\",\n      \"restrictions\": \"<p>not suitable in pregnancy</p>\",\n      \"dothis\": \"<p>execute protocol</p>\",\n      \"recordthis\": \"case data\",\n      \"success\": \"<p>good</p>\",\n      \"failure\": \"<p>bad</p>\",\n      \"references\": \"<a href=\\\"https://en.wikipedia.org/wiki/Rickrolling\\\">Wikipedia</a>\"\n    },\n    {\n      \"ownerId\": 0,\n      \"name\": \"example protocol\",\n      \"created\": \"2020-01-10T22:20:39Z\",\n      \"edited\": \"2020-02-10T22:20:39Z\",\n      \"status\": \"PRESCRIBED\",\n      \"shareAll\": true,\n      \"id\": 0,\n      \"shortname\": \"EXamp\",\n      \"vetNote\": \"consider prescribing protocol x instead\",\n      \"wtMeatHrs\": 72,\n      \"wtMilkHrs\": 72,\n      \"wtNote\": \"Not for use in horses intended for food.\",\n      \"considerations\": \"<p>think first</p>\",\n      \"restrictions\": \"<p>not suitable in pregnancy</p>\",\n      \"dothis\": \"<p>execute protocol</p>\",\n      \"recordthis\": \"case data\",\n      \"success\": \"<p>good</p>\",\n      \"failure\": \"<p>bad</p>\",\n      \"references\": \"<a href=\\\"https://en.wikipedia.org/wiki/Rickrolling\\\">Wikipedia</a>\"\n    }\n  ]\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "79c1fff7-c732-4ab4-a0df-19219d27e75d",
                            "name": "The server can not understand the request due to invalid syntax.",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "api",
                                        "protocols",
                                        "exclusivestubs"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "description": {
                                            "content": "Added as a part of security scheme: apikey",
                                            "type": "text/plain"
                                        },
                                        "key": "X-Auth-Token",
                                        "value": "<API Key>"
                                    }
                                ],
                                "method": "GET",
                                "body": {}
                            },
                            "status": "Bad Request",
                            "code": 400,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"title\": \"incorrect username or password\",\n  \"status\": 404,\n  \"errorType\": \"/errors/incorrect-user-pass\",\n  \"detail\": \"Authentication failed due to incorrect username or password.\",\n  \"instance\": \"/login/log/abc123\"\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "e98cba53-9009-414d-ac03-b57e053af42a",
                            "name": "Authorization required",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "api",
                                        "protocols",
                                        "exclusivestubs"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "description": {
                                            "content": "Added as a part of security scheme: apikey",
                                            "type": "text/plain"
                                        },
                                        "key": "X-Auth-Token",
                                        "value": "<API Key>"
                                    }
                                ],
                                "method": "GET",
                                "body": {}
                            },
                            "status": "Forbidden",
                            "code": 403,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "text/plain"
                                }
                            ],
                            "body": "",
                            "cookie": [],
                            "_postman_previewlanguage": "text"
                        }
                    ],
                    "event": []
                },
                {
                    "id": "cc2da5d6-d071-4454-86d3-4e0e96f45424",
                    "name": "validate a structured Dosage",
                    "request": {
                        "name": "validate a structured Dosage",
                        "description": {
                            "content": "validate a Dosage with SizeFunction and SequewnceFunction returning an test '_dose\" description.",
                            "type": "text/plain"
                        },
                        "url": {
                            "path": [
                                "api",
                                "protocols",
                                "dosages"
                            ],
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "query": [],
                            "variable": []
                        },
                        "header": [
                            {
                                "key": "Content-Type",
                                "value": "application/json"
                            },
                            {
                                "key": "Accept",
                                "value": "application/json"
                            }
                        ],
                        "method": "POST",
                        "auth": null,
                        "body": {
                            "mode": "raw",
                            "raw": "{\n  \"sequenceFunction\": {\n    \"_type\": \"models.SeqSingleDose\"\n  },\n  \"sizeFunction\": {\n    \"_type\": \"models.FixedDoseFunction\",\n    \"dose\": {\n      \"quantity\": {\n        \"dimension\": \"Mass\",\n        \"value\": 3,\n        \"symbol\": \"oz\"\n      }\n    }\n  }\n}",
                            "options": {
                                "raw": {
                                    "language": "json"
                                }
                            }
                        }
                    },
                    "response": [
                        {
                            "id": "0b8387ca-89a5-4e5d-928a-dca9ef5a6323",
                            "name": "_dose",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "api",
                                        "protocols",
                                        "dosages"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "description": {
                                            "content": "Added as a part of security scheme: apikey",
                                            "type": "text/plain"
                                        },
                                        "key": "X-Auth-Token",
                                        "value": "<API Key>"
                                    }
                                ],
                                "method": "POST",
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n  \"sequenceFunction\": {\n    \"_type\": \"models.SeqSingleDose\"\n  },\n  \"sizeFunction\": {\n    \"_type\": \"models.FixedDoseFunction\",\n    \"dose\": {\n      \"quantity\": {\n        \"dimension\": \"Mass\",\n        \"value\": 3,\n        \"symbol\": \"oz\"\n      }\n    }\n  }\n}",
                                    "options": {
                                        "raw": {
                                            "language": "json"
                                        }
                                    }
                                }
                            },
                            "status": "OK",
                            "code": 200,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"_dose\": \"mollit anim voluptate\"\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "822f4949-4b65-4157-97ac-726e1db9c9b7",
                            "name": "The server can not understand the request due to invalid syntax.",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "api",
                                        "protocols",
                                        "dosages"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "description": {
                                            "content": "Added as a part of security scheme: apikey",
                                            "type": "text/plain"
                                        },
                                        "key": "X-Auth-Token",
                                        "value": "<API Key>"
                                    }
                                ],
                                "method": "POST",
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n  \"sequenceFunction\": {\n    \"_type\": \"models.SeqSingleDose\"\n  },\n  \"sizeFunction\": {\n    \"_type\": \"models.FixedDoseFunction\",\n    \"dose\": {\n      \"quantity\": {\n        \"dimension\": \"Mass\",\n        \"value\": 3,\n        \"symbol\": \"oz\"\n      }\n    }\n  }\n}",
                                    "options": {
                                        "raw": {
                                            "language": "json"
                                        }
                                    }
                                }
                            },
                            "status": "Bad Request",
                            "code": 400,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"title\": \"incorrect username or password\",\n  \"status\": 404,\n  \"errorType\": \"/errors/incorrect-user-pass\",\n  \"detail\": \"Authentication failed due to incorrect username or password.\",\n  \"instance\": \"/login/log/abc123\"\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "14c7497a-15d7-4518-a2b1-52b76437823d",
                            "name": "Authorization required",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "api",
                                        "protocols",
                                        "dosages"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "description": {
                                            "content": "Added as a part of security scheme: apikey",
                                            "type": "text/plain"
                                        },
                                        "key": "X-Auth-Token",
                                        "value": "<API Key>"
                                    }
                                ],
                                "method": "POST",
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n  \"sequenceFunction\": {\n    \"_type\": \"models.SeqSingleDose\"\n  },\n  \"sizeFunction\": {\n    \"_type\": \"models.FixedDoseFunction\",\n    \"dose\": {\n      \"quantity\": {\n        \"dimension\": \"Mass\",\n        \"value\": 3,\n        \"symbol\": \"oz\"\n      }\n    }\n  }\n}",
                                    "options": {
                                        "raw": {
                                            "language": "json"
                                        }
                                    }
                                }
                            },
                            "status": "Forbidden",
                            "code": 403,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "text/plain"
                                }
                            ],
                            "body": "",
                            "cookie": [],
                            "_postman_previewlanguage": "text"
                        }
                    ],
                    "event": [],
                    "protocolProfileBehavior": {
                        "disableBodyPruning": true
                    }
                },
                {
                    "id": "a57ca98e-37b7-4bf6-a495-94c1ec52aaf8",
                    "name": "list of library pxes",
                    "request": {
                        "name": "list of library pxes",
                        "description": {
                            "content": "This endpoint returns all the Protocols owned by, or shared with, the current User.",
                            "type": "text/plain"
                        },
                        "url": {
                            "path": [
                                "api",
                                "protocols",
                                "libstubs"
                            ],
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "query": [],
                            "variable": []
                        },
                        "header": [
                            {
                                "key": "Accept",
                                "value": "application/json"
                            }
                        ],
                        "method": "GET",
                        "auth": null
                    },
                    "response": [
                        {
                            "id": "d7c15a3e-ea98-445e-a839-0e8f4f3ef85b",
                            "name": "OK",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "api",
                                        "protocols",
                                        "libstubs"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "description": {
                                            "content": "Added as a part of security scheme: apikey",
                                            "type": "text/plain"
                                        },
                                        "key": "X-Auth-Token",
                                        "value": "<API Key>"
                                    }
                                ],
                                "method": "GET",
                                "body": {}
                            },
                            "status": "OK",
                            "code": 200,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"pxes\": [\n    {\n      \"ownerId\": 0,\n      \"name\": \"example protocol\",\n      \"created\": \"2020-01-10T22:20:39Z\",\n      \"edited\": \"2020-02-10T22:20:39Z\",\n      \"status\": \"PRESCRIBED\",\n      \"shareAll\": true,\n      \"id\": 0,\n      \"shortname\": \"EXamp\",\n      \"vetNote\": \"consider prescribing protocol x instead\",\n      \"wtMeatHrs\": 72,\n      \"wtMilkHrs\": 72,\n      \"wtNote\": \"Not for use in horses intended for food.\",\n      \"considerations\": \"<p>think first</p>\",\n      \"restrictions\": \"<p>not suitable in pregnancy</p>\",\n      \"dothis\": \"<p>execute protocol</p>\",\n      \"recordthis\": \"case data\",\n      \"success\": \"<p>good</p>\",\n      \"failure\": \"<p>bad</p>\",\n      \"references\": \"<a href=\\\"https://en.wikipedia.org/wiki/Rickrolling\\\">Wikipedia</a>\"\n    },\n    {\n      \"ownerId\": 0,\n      \"name\": \"example protocol\",\n      \"created\": \"2020-01-10T22:20:39Z\",\n      \"edited\": \"2020-02-10T22:20:39Z\",\n      \"status\": \"PRESCRIBED\",\n      \"shareAll\": true,\n      \"id\": 0,\n      \"shortname\": \"EXamp\",\n      \"vetNote\": \"consider prescribing protocol x instead\",\n      \"wtMeatHrs\": 72,\n      \"wtMilkHrs\": 72,\n      \"wtNote\": \"Not for use in horses intended for food.\",\n      \"considerations\": \"<p>think first</p>\",\n      \"restrictions\": \"<p>not suitable in pregnancy</p>\",\n      \"dothis\": \"<p>execute protocol</p>\",\n      \"recordthis\": \"case data\",\n      \"success\": \"<p>good</p>\",\n      \"failure\": \"<p>bad</p>\",\n      \"references\": \"<a href=\\\"https://en.wikipedia.org/wiki/Rickrolling\\\">Wikipedia</a>\"\n    }\n  ]\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "1a8b41aa-d2a0-4768-a74b-126090ebddfb",
                            "name": "The server can not understand the request due to invalid syntax.",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "api",
                                        "protocols",
                                        "libstubs"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "description": {
                                            "content": "Added as a part of security scheme: apikey",
                                            "type": "text/plain"
                                        },
                                        "key": "X-Auth-Token",
                                        "value": "<API Key>"
                                    }
                                ],
                                "method": "GET",
                                "body": {}
                            },
                            "status": "Bad Request",
                            "code": 400,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"title\": \"incorrect username or password\",\n  \"status\": 404,\n  \"errorType\": \"/errors/incorrect-user-pass\",\n  \"detail\": \"Authentication failed due to incorrect username or password.\",\n  \"instance\": \"/login/log/abc123\"\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "f3769831-1de8-4f23-9805-59a7461089da",
                            "name": "Authorization required",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "api",
                                        "protocols",
                                        "libstubs"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "description": {
                                            "content": "Added as a part of security scheme: apikey",
                                            "type": "text/plain"
                                        },
                                        "key": "X-Auth-Token",
                                        "value": "<API Key>"
                                    }
                                ],
                                "method": "GET",
                                "body": {}
                            },
                            "status": "Forbidden",
                            "code": 403,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "text/plain"
                                }
                            ],
                            "body": "",
                            "cookie": [],
                            "_postman_previewlanguage": "text"
                        }
                    ],
                    "event": []
                },
                {
                    "id": "2425bd08-dfea-409f-bc4f-23d6bf86c9ea",
                    "name": "retrieve protocol by ID",
                    "request": {
                        "name": "retrieve protocol by ID",
                        "description": {
                            "content": "This endpoint retrieves a Protocol by `protocol.id`.",
                            "type": "text/plain"
                        },
                        "url": {
                            "path": [
                                "api",
                                "protocols",
                                ":id"
                            ],
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "query": [],
                            "variable": [
                                {
                                    "disabled": false,
                                    "type": "any",
                                    "value": "7",
                                    "key": "id",
                                    "description": "(Required) Protocol ID key"
                                }
                            ]
                        },
                        "header": [
                            {
                                "key": "Accept",
                                "value": "application/json"
                            }
                        ],
                        "method": "GET",
                        "auth": null
                    },
                    "response": [
                        {
                            "id": "15d2a465-e745-44cd-b675-f7d83ec66429",
                            "name": "OK",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "api",
                                        "protocols",
                                        ":id"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": [
                                        {
                                            "disabled": false,
                                            "type": "any",
                                            "value": "7",
                                            "key": "id",
                                            "description": "(Required) Protocol ID key"
                                        }
                                    ]
                                },
                                "header": [
                                    {
                                        "description": {
                                            "content": "Added as a part of security scheme: apikey",
                                            "type": "text/plain"
                                        },
                                        "key": "X-Auth-Token",
                                        "value": "<API Key>"
                                    }
                                ],
                                "method": "GET",
                                "body": {}
                            },
                            "status": "OK",
                            "code": 200,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"protocol\": {\n    \"ownerId\": 1,\n    \"name\": \"wip\",\n    \"status\": \"PRESCRIBED\",\n    \"instructions\": {\n      \"considerations\": \"<p>This is just an example, not a real protocol.</p>\",\n      \"restrictions\": \"<p>Not for use on real animals.</p>\",\n      \"dothis\": \"<h3>Examinations to perform</h3>\",\n      \"recordthis\": \"<p>record every step in your notebook.</p>\",\n      \"success\": \"<p>All problems are gone</p>\",\n      \"failure\": \"<p>One or more problems remain</p>\",\n      \"references\": \"<a href=\\\"https://en.wikipedia.org/wiki/Rickrolling\\\">Wikipedia</a>\"\n    },\n    \"id\": 12345,\n    \"shortname\": \"wip\",\n    \"created\": \"2020-01-10T10:30:37Z\",\n    \"edited\": \"2020-02-10T10:30:37Z\",\n    \"vetNote\": \"consider prescribing protocol x instead\",\n    \"wtMeatHrs\": 22,\n    \"wtMilkHrs\": 5,\n    \"shareAll\": true,\n    \"shareClonable\": true,\n    \"caseDefinition\": {\n      \"requireId\": false,\n      \"requireMor\": false,\n      \"contraindications\": \"\",\n      \"medical\": \"if fever is present, consider Protocol 12345 instead.\",\n      \"economic\": \"\",\n      \"note\": \"\"\n    },\n    \"treatments\": [\n      {\n        \"product\": \"MiracleMed\",\n        \"route\": \"wip\",\n        \"dosage\": {\n          \"doseId\": -82710886\n        },\n        \"sequenceFunction\": {\n          \"_type\": \"models.SeqSingleDose\"\n        },\n        \"sizeFunction\": {\n          \"_type\": \"models.FixedDoseFunction\",\n          \"dose\": {\n            \"quantity\": {\n              \"dimension\": \"Mass\",\n              \"value\": 3,\n              \"symbol\": \"oz\"\n            }\n          }\n        },\n        \"id\": \"B-123\",\n        \"ownerId\": 0,\n        \"description\": \"3.0 ml per kg repeat\",\n        \"eligibilities\": [\n          {\n            \"id\": 1,\n            \"name\": \"Beef Cattle\",\n            \"fdaSpecies\": [\n              \"gamebirds\",\n              \"cats\"\n            ]\n          },\n          {\n            \"id\": 1,\n            \"name\": \"Beef Cattle\",\n            \"fdaSpecies\": [\n              \"catfish\",\n              \"chickens\"\n            ]\n          }\n        ],\n        \"_dose\": \"3.0 ml per kg repeat in 6 hours and again in 24 hours\",\n        \"wtMeatHrs\": 3764921,\n        \"wtMilkHrs\": -43140473,\n        \"nada\": \"wip\",\n        \"tags\": [\n          {\n            \"id\": 8,\n            \"color\": \"#516cc6\",\n            \"name\": \"pariatur e\",\n            \"fixes\": [\n              {\n                \"_type\": {\n                  \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"detail\": {\n                  \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"message\": {\n                  \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"title\": {\n                  \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                }\n              },\n              {\n                \"_type\": {\n                  \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"detail\": {\n                  \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"message\": {\n                  \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"title\": {\n                  \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                }\n              }\n            ]\n          },\n          {\n            \"id\": 8,\n            \"color\": \"#516cc6\",\n            \"name\": \"est labor\",\n            \"fixes\": [\n              {\n                \"_type\": {\n                  \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"detail\": {\n                  \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"message\": {\n                  \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"title\": {\n                  \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                }\n              },\n              {\n                \"_type\": {\n                  \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"detail\": {\n                  \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"message\": {\n                  \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"title\": {\n                  \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                }\n              }\n            ]\n          }\n        ],\n        \"note\": \"<p>a free-form note</p>\",\n        \"amduca\": \"ONLABEL\"\n      },\n      {\n        \"product\": \"MiracleMed\",\n        \"route\": \"wip\",\n        \"dosage\": {\n          \"doseId\": 90743195\n        },\n        \"sequenceFunction\": {\n          \"_type\": \"models.SeqSingleDose\"\n        },\n        \"sizeFunction\": {\n          \"_type\": \"models.FixedDoseFunction\",\n          \"dose\": {\n            \"quantity\": {\n              \"dimension\": \"Mass\",\n              \"value\": 3,\n              \"symbol\": \"oz\"\n            }\n          }\n        },\n        \"id\": \"B-123\",\n        \"ownerId\": 0,\n        \"description\": \"3.0 ml per kg repeat\",\n        \"eligibilities\": [\n          {\n            \"id\": 1,\n            \"name\": \"Beef Cattle\",\n            \"fdaSpecies\": [\n              \"emus\",\n              \"bison\"\n            ]\n          },\n          {\n            \"id\": 1,\n            \"name\": \"Beef Cattle\",\n            \"fdaSpecies\": [\n              \"llamas\",\n              \"emus\"\n            ]\n          }\n        ],\n        \"_dose\": \"3.0 ml per kg repeat in 6 hours and again in 24 hours\",\n        \"wtMeatHrs\": -43055535,\n        \"wtMilkHrs\": -97115862,\n        \"nada\": \"wip\",\n        \"tags\": [\n          {\n            \"id\": 8,\n            \"color\": \"#516cc6\",\n            \"name\": \"fugiat do\",\n            \"fixes\": [\n              {\n                \"_type\": {\n                  \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"detail\": {\n                  \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"message\": {\n                  \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"title\": {\n                  \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                }\n              },\n              {\n                \"_type\": {\n                  \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"detail\": {\n                  \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"message\": {\n                  \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"title\": {\n                  \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                }\n              }\n            ]\n          },\n          {\n            \"id\": 8,\n            \"color\": \"#516cc6\",\n            \"name\": \"in\",\n            \"fixes\": [\n              {\n                \"_type\": {\n                  \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"detail\": {\n                  \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"message\": {\n                  \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"title\": {\n                  \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                }\n              },\n              {\n                \"_type\": {\n                  \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"detail\": {\n                  \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"message\": {\n                  \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"title\": {\n                  \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                }\n              }\n            ]\n          }\n        ],\n        \"note\": \"<p>a free-form note</p>\",\n        \"amduca\": \"UNIDENTIFIED\"\n      }\n    ],\n    \"tags\": [\n      {\n        \"id\": 8,\n        \"color\": \"#516cc6\",\n        \"name\": \"dolor Lorem\",\n        \"fixes\": [\n          {\n            \"_type\": \"do\",\n            \"detail\": \"cillum irure incididunt ad\",\n            \"message\": \"sit\",\n            \"title\": \"officia ut\"\n          },\n          {\n            \"_type\": \"commodo cillum non\",\n            \"detail\": \"ut cupidatat\",\n            \"message\": \"Lorem laboris\",\n            \"title\": \"sed Excepteur\"\n          }\n        ]\n      },\n      {\n        \"id\": 8,\n        \"color\": \"#516cc6\",\n        \"name\": \"proident volu\",\n        \"fixes\": [\n          {\n            \"_type\": \"ipsum reprehenderit velit\",\n            \"detail\": \"irure\",\n            \"message\": \"Ut\",\n            \"title\": \"Excepteur officia non qui\"\n          },\n          {\n            \"_type\": \"est sunt laboris ad\",\n            \"detail\": \"mollit sed deserunt\",\n            \"message\": \"nisi veniam\",\n            \"title\": \"adipisicing do irure\"\n          }\n        ]\n      }\n    ],\n    \"diagnoses\": [\n      {\n        \"id\": 8,\n        \"name\": \"Pain/inflammation (musculoskeletal), treatment\"\n      },\n      {\n        \"id\": 8,\n        \"name\": \"Pain/inflammation (musculoskeletal), treatment\"\n      }\n    ],\n    \"eligibilities\": [\n      {\n        \"id\": 1,\n        \"name\": \"Beef Cattle\",\n        \"fdaSpecies\": [\n          \"salmon\",\n          \"other\"\n        ]\n      },\n      {\n        \"id\": 1,\n        \"name\": \"Beef Cattle\",\n        \"fdaSpecies\": [\n          \"salmon\",\n          \"fish\"\n        ]\n      }\n    ],\n    \"promises\": [\n      {\n        \"_type\": \"models.IdPromise\",\n        \"name\": \"ID promise\",\n        \"descrip\": \"You must give ID for each case enrolled\",\n        \"query\": \"What is the animal's name or number?\",\n        \"when\": \"PT0H\",\n        \"id\": 2345\n      },\n      {\n        \"_type\": \"models.IdPromise\",\n        \"name\": \"ID promise\",\n        \"descrip\": \"You must give ID for each case enrolled\",\n        \"query\": \"What is the animal's name or number?\",\n        \"when\": \"PT0H\",\n        \"id\": 2345\n      }\n    ],\n    \"metadata\": [\n      {\n        \"key\": \"popularity\",\n        \"value\": \"good 1.2\"\n      },\n      {\n        \"key\": \"popularity\",\n        \"value\": \"good 1.2\"\n      }\n    ]\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "2ac7333c-2ba8-41e2-b338-e76fad7cbd73",
                            "name": "The server can not understand the request due to invalid syntax.",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "api",
                                        "protocols",
                                        ":id"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": [
                                        {
                                            "disabled": false,
                                            "type": "any",
                                            "value": "7",
                                            "key": "id",
                                            "description": "(Required) Protocol ID key"
                                        }
                                    ]
                                },
                                "header": [
                                    {
                                        "description": {
                                            "content": "Added as a part of security scheme: apikey",
                                            "type": "text/plain"
                                        },
                                        "key": "X-Auth-Token",
                                        "value": "<API Key>"
                                    }
                                ],
                                "method": "GET",
                                "body": {}
                            },
                            "status": "Bad Request",
                            "code": 400,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"title\": \"incorrect username or password\",\n  \"status\": 404,\n  \"errorType\": \"/errors/incorrect-user-pass\",\n  \"detail\": \"Authentication failed due to incorrect username or password.\",\n  \"instance\": \"/login/log/abc123\"\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "5686b653-64f9-46c5-833a-4248ea629552",
                            "name": "Authorization required",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "api",
                                        "protocols",
                                        ":id"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": [
                                        {
                                            "disabled": false,
                                            "type": "any",
                                            "value": "7",
                                            "key": "id",
                                            "description": "(Required) Protocol ID key"
                                        }
                                    ]
                                },
                                "header": [
                                    {
                                        "description": {
                                            "content": "Added as a part of security scheme: apikey",
                                            "type": "text/plain"
                                        },
                                        "key": "X-Auth-Token",
                                        "value": "<API Key>"
                                    }
                                ],
                                "method": "GET",
                                "body": {}
                            },
                            "status": "Forbidden",
                            "code": 403,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "text/plain"
                                }
                            ],
                            "body": "",
                            "cookie": [],
                            "_postman_previewlanguage": "text"
                        }
                    ],
                    "event": []
                },
                {
                    "id": "9fa6dede-8693-445d-a0fa-c05c7382b892",
                    "name": "delete protocol",
                    "request": {
                        "name": "delete protocol",
                        "description": {
                            "content": "Change `protocol.status` to DELETED (this does not actually remove it from the database).",
                            "type": "text/plain"
                        },
                        "url": {
                            "path": [
                                "api",
                                "protocols",
                                ":id"
                            ],
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "query": [],
                            "variable": [
                                {
                                    "disabled": false,
                                    "type": "any",
                                    "value": "-41001206",
                                    "key": "id",
                                    "description": "(Required) Protocol ID key"
                                }
                            ]
                        },
                        "header": [
                            {
                                "key": "Accept",
                                "value": "application/json"
                            }
                        ],
                        "method": "DELETE",
                        "auth": null
                    },
                    "response": [
                        {
                            "id": "07f48c28-ee4b-4289-b8cd-0812d6133a0f",
                            "name": "Protocol deprecated",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "api",
                                        "protocols",
                                        ":id"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": [
                                        {
                                            "disabled": false,
                                            "type": "any",
                                            "value": "-41001206",
                                            "key": "id",
                                            "description": "(Required) Protocol ID key"
                                        }
                                    ]
                                },
                                "header": [
                                    {
                                        "description": {
                                            "content": "Added as a part of security scheme: apikey",
                                            "type": "text/plain"
                                        },
                                        "key": "X-Auth-Token",
                                        "value": "<API Key>"
                                    }
                                ],
                                "method": "DELETE",
                                "body": {}
                            },
                            "status": "OK",
                            "code": 200,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"deprecated\": -32693144\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "30573951-ce5a-43ed-a67d-d01394c7fb6a",
                            "name": "The server can not understand the request due to invalid syntax.",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "api",
                                        "protocols",
                                        ":id"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": [
                                        {
                                            "disabled": false,
                                            "type": "any",
                                            "value": "-41001206",
                                            "key": "id",
                                            "description": "(Required) Protocol ID key"
                                        }
                                    ]
                                },
                                "header": [
                                    {
                                        "description": {
                                            "content": "Added as a part of security scheme: apikey",
                                            "type": "text/plain"
                                        },
                                        "key": "X-Auth-Token",
                                        "value": "<API Key>"
                                    }
                                ],
                                "method": "DELETE",
                                "body": {}
                            },
                            "status": "Bad Request",
                            "code": 400,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"title\": \"incorrect username or password\",\n  \"status\": 404,\n  \"errorType\": \"/errors/incorrect-user-pass\",\n  \"detail\": \"Authentication failed due to incorrect username or password.\",\n  \"instance\": \"/login/log/abc123\"\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "4179a312-51ff-4210-a8c2-a7a0dcd83445",
                            "name": "Authorization required",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "api",
                                        "protocols",
                                        ":id"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": [
                                        {
                                            "disabled": false,
                                            "type": "any",
                                            "value": "-41001206",
                                            "key": "id",
                                            "description": "(Required) Protocol ID key"
                                        }
                                    ]
                                },
                                "header": [
                                    {
                                        "description": {
                                            "content": "Added as a part of security scheme: apikey",
                                            "type": "text/plain"
                                        },
                                        "key": "X-Auth-Token",
                                        "value": "<API Key>"
                                    }
                                ],
                                "method": "DELETE",
                                "body": {}
                            },
                            "status": "Forbidden",
                            "code": 403,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "text/plain"
                                }
                            ],
                            "body": "",
                            "cookie": [],
                            "_postman_previewlanguage": "text"
                        }
                    ],
                    "event": []
                },
                {
                    "id": "0d4d36d6-3a6f-41c2-b881-506c1a29dadd",
                    "name": "list of all diagnoses",
                    "request": {
                        "name": "list of all diagnoses",
                        "description": {
                            "content": "This",
                            "type": "text/plain"
                        },
                        "url": {
                            "path": [
                                "api",
                                "protocols",
                                "prescriptions"
                            ],
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "query": [],
                            "variable": []
                        },
                        "header": [
                            {
                                "key": "Accept",
                                "value": "application/json"
                            }
                        ],
                        "method": "GET",
                        "auth": null
                    },
                    "response": [
                        {
                            "id": "e562f494-a168-4e0f-84a2-e0bad22974bc",
                            "name": "OK",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "api",
                                        "protocols",
                                        "prescriptions"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "description": {
                                            "content": "Added as a part of security scheme: apikey",
                                            "type": "text/plain"
                                        },
                                        "key": "X-Auth-Token",
                                        "value": "<API Key>"
                                    }
                                ],
                                "method": "GET",
                                "body": {}
                            },
                            "status": "OK",
                            "code": 200,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"diagnoses\": [\n    {\n      \"vorId\": 1,\n      \"morId\": 2,\n      \"protocol\": {\n        \"ownerId\": 1,\n        \"name\": \"wip\",\n        \"status\": \"PRESCRIBED\",\n        \"instructions\": {\n          \"considerations\": \"<p>This is just an example, not a real protocol.</p>\",\n          \"restrictions\": \"<p>Not for use on real animals.</p>\",\n          \"dothis\": \"<h3>Examinations to perform</h3>\",\n          \"recordthis\": \"<p>record every step in your notebook.</p>\",\n          \"success\": \"<p>All problems are gone</p>\",\n          \"failure\": \"<p>One or more problems remain</p>\",\n          \"references\": \"<a href=\\\"https://en.wikipedia.org/wiki/Rickrolling\\\">Wikipedia</a>\"\n        },\n        \"id\": 12345,\n        \"shortname\": \"wip\",\n        \"created\": \"2020-01-10T10:30:37Z\",\n        \"edited\": \"2020-02-10T10:30:37Z\",\n        \"vetNote\": \"consider prescribing protocol x instead\",\n        \"wtMeatHrs\": 22,\n        \"wtMilkHrs\": 5,\n        \"shareAll\": true,\n        \"shareClonable\": true,\n        \"caseDefinition\": {\n          \"requireId\": false,\n          \"requireMor\": false,\n          \"contraindications\": \"\",\n          \"medical\": \"if fever is present, consider Protocol 12345 instead.\",\n          \"economic\": \"\",\n          \"note\": \"\"\n        },\n        \"treatments\": [\n          {\n            \"product\": \"MiracleMed\",\n            \"route\": \"wip\",\n            \"dosage\": {\n              \"doseId\": -89704411\n            },\n            \"sequenceFunction\": {\n              \"_type\": \"models.SeqSingleDose\"\n            },\n            \"sizeFunction\": {\n              \"dose\": {\n                \"quantity\": {\n                  \"dimension\": \"Volume\",\n                  \"value\": 3,\n                  \"symbol\": \"ml\"\n                }\n              },\n              \"_type\": \"models.FixedDoseFunction\"\n            },\n            \"id\": \"B-123\",\n            \"ownerId\": 0,\n            \"description\": \"3.0 ml per kg repeat\",\n            \"eligibilities\": [\n              {\n                \"id\": 1,\n                \"name\": \"Beef Cattle\",\n                \"fdaSpecies\": [\n                  \"swine\",\n                  \"bison\"\n                ]\n              },\n              {\n                \"id\": 1,\n                \"name\": \"Beef Cattle\",\n                \"fdaSpecies\": [\n                  \"fish\",\n                  \"swine\"\n                ]\n              }\n            ],\n            \"_dose\": \"3.0 ml per kg repeat in 6 hours and again in 24 hours\",\n            \"wtMeatHrs\": 91895925,\n            \"wtMilkHrs\": 61238034,\n            \"nada\": \"wip\",\n            \"tags\": [\n              {\n                \"id\": 8,\n                \"color\": \"#516cc6\",\n                \"name\": \"Ut cons\",\n                \"fixes\": [\n                  {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                  },\n                  {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                  }\n                ]\n              },\n              {\n                \"id\": 8,\n                \"color\": \"#516cc6\",\n                \"name\": \"cillum\",\n                \"fixes\": [\n                  {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                  },\n                  {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                  }\n                ]\n              }\n            ],\n            \"note\": \"<p>a free-form note</p>\",\n            \"amduca\": \"OFFLABEL\"\n          },\n          {\n            \"product\": \"MiracleMed\",\n            \"route\": \"wip\",\n            \"dosage\": {\n              \"doseId\": 63149245\n            },\n            \"sequenceFunction\": {\n              \"_type\": \"models.SeqSingleDose\"\n            },\n            \"sizeFunction\": {\n              \"dose\": {\n                \"quantity\": {\n                  \"dimension\": \"Volume\",\n                  \"value\": 3,\n                  \"symbol\": \"ml\"\n                }\n              },\n              \"_type\": \"models.FixedDoseFunction\"\n            },\n            \"id\": \"B-123\",\n            \"ownerId\": 0,\n            \"description\": \"3.0 ml per kg repeat\",\n            \"eligibilities\": [\n              {\n                \"id\": 1,\n                \"name\": \"Beef Cattle\",\n                \"fdaSpecies\": [\n                  \"beef_cattle\",\n                  \"bison\"\n                ]\n              },\n              {\n                \"id\": 1,\n                \"name\": \"Beef Cattle\",\n                \"fdaSpecies\": [\n                  \"salmon\",\n                  \"goats\"\n                ]\n              }\n            ],\n            \"_dose\": \"3.0 ml per kg repeat in 6 hours and again in 24 hours\",\n            \"wtMeatHrs\": 47073262,\n            \"wtMilkHrs\": 25205114,\n            \"nada\": \"wip\",\n            \"tags\": [\n              {\n                \"id\": 8,\n                \"color\": \"#516cc6\",\n                \"name\": \"i\",\n                \"fixes\": [\n                  {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                  },\n                  {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                  }\n                ]\n              },\n              {\n                \"id\": 8,\n                \"color\": \"#516cc6\",\n                \"name\": \"in occaecat te\",\n                \"fixes\": [\n                  {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                  },\n                  {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                  }\n                ]\n              }\n            ],\n            \"note\": \"<p>a free-form note</p>\",\n            \"amduca\": \"UNIDENTIFIED\"\n          }\n        ],\n        \"tags\": [\n          {\n            \"id\": 8,\n            \"color\": \"#516cc6\",\n            \"name\": \"eu\",\n            \"fixes\": [\n              {\n                \"_type\": {\n                  \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"detail\": {\n                  \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"message\": {\n                  \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"title\": {\n                  \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                }\n              },\n              {\n                \"_type\": {\n                  \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"detail\": {\n                  \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"message\": {\n                  \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"title\": {\n                  \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                }\n              }\n            ]\n          },\n          {\n            \"id\": 8,\n            \"color\": \"#516cc6\",\n            \"name\": \"reprehenderit\",\n            \"fixes\": [\n              {\n                \"_type\": {\n                  \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"detail\": {\n                  \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"message\": {\n                  \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"title\": {\n                  \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                }\n              },\n              {\n                \"_type\": {\n                  \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"detail\": {\n                  \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"message\": {\n                  \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"title\": {\n                  \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                }\n              }\n            ]\n          }\n        ],\n        \"diagnoses\": [\n          {\n            \"id\": 8,\n            \"name\": \"Pain/inflammation (musculoskeletal), treatment\"\n          },\n          {\n            \"id\": 8,\n            \"name\": \"Pain/inflammation (musculoskeletal), treatment\"\n          }\n        ],\n        \"eligibilities\": [\n          {\n            \"id\": 1,\n            \"name\": \"Beef Cattle\",\n            \"fdaSpecies\": [\n              \"unidentified\",\n              \"chickens\"\n            ]\n          },\n          {\n            \"id\": 1,\n            \"name\": \"Beef Cattle\",\n            \"fdaSpecies\": [\n              \"catfish\",\n              \"beef_cattle\"\n            ]\n          }\n        ],\n        \"promises\": [\n          {\n            \"_type\": \"models.IdPromise\",\n            \"name\": \"ID promise\",\n            \"descrip\": \"You must give ID for each case enrolled\",\n            \"query\": \"What is the animal's name or number?\",\n            \"when\": \"PT0H\",\n            \"id\": 2345\n          },\n          {\n            \"_type\": \"models.IdPromise\",\n            \"name\": \"ID promise\",\n            \"descrip\": \"You must give ID for each case enrolled\",\n            \"query\": \"What is the animal's name or number?\",\n            \"when\": \"PT0H\",\n            \"id\": 2345\n          }\n        ],\n        \"metadata\": [\n          {\n            \"key\": \"popularity\",\n            \"value\": \"good 1.2\"\n          },\n          {\n            \"key\": \"popularity\",\n            \"value\": \"good 1.2\"\n          }\n        ]\n      },\n      \"status\": \"PRESCRIBED\",\n      \"rxId\": \"gG3pBCR1GCMKm89c\",\n      \"refills\": 0,\n      \"expiration\": \"2021-01-10T10:30:37Z\",\n      \"created\": \"2021-08-10T10:30:37Z\",\n      \"metadata\": [\n        {\n          \"key\": \"popularity\",\n          \"value\": \"good 1.2\"\n        },\n        {\n          \"key\": \"popularity\",\n          \"value\": \"good 1.2\"\n        }\n      ]\n    },\n    {\n      \"vorId\": 1,\n      \"morId\": 2,\n      \"protocol\": {\n        \"ownerId\": 1,\n        \"name\": \"wip\",\n        \"status\": \"PRESCRIBED\",\n        \"instructions\": {\n          \"considerations\": \"<p>This is just an example, not a real protocol.</p>\",\n          \"restrictions\": \"<p>Not for use on real animals.</p>\",\n          \"dothis\": \"<h3>Examinations to perform</h3>\",\n          \"recordthis\": \"<p>record every step in your notebook.</p>\",\n          \"success\": \"<p>All problems are gone</p>\",\n          \"failure\": \"<p>One or more problems remain</p>\",\n          \"references\": \"<a href=\\\"https://en.wikipedia.org/wiki/Rickrolling\\\">Wikipedia</a>\"\n        },\n        \"id\": 12345,\n        \"shortname\": \"wip\",\n        \"created\": \"2020-01-10T10:30:37Z\",\n        \"edited\": \"2020-02-10T10:30:37Z\",\n        \"vetNote\": \"consider prescribing protocol x instead\",\n        \"wtMeatHrs\": 22,\n        \"wtMilkHrs\": 5,\n        \"shareAll\": true,\n        \"shareClonable\": true,\n        \"caseDefinition\": {\n          \"requireId\": false,\n          \"requireMor\": false,\n          \"contraindications\": \"\",\n          \"medical\": \"if fever is present, consider Protocol 12345 instead.\",\n          \"economic\": \"\",\n          \"note\": \"\"\n        },\n        \"treatments\": [\n          {\n            \"product\": \"MiracleMed\",\n            \"route\": \"wip\",\n            \"dosage\": {\n              \"doseId\": -75122173\n            },\n            \"sequenceFunction\": {\n              \"_type\": \"models.SeqSingleDose\"\n            },\n            \"sizeFunction\": {\n              \"dose\": {\n                \"quantity\": {\n                  \"dimension\": \"Volume\",\n                  \"value\": 3,\n                  \"symbol\": \"ml\"\n                }\n              },\n              \"_type\": \"models.FixedDoseFunction\"\n            },\n            \"id\": \"B-123\",\n            \"ownerId\": 0,\n            \"description\": \"3.0 ml per kg repeat\",\n            \"eligibilities\": [\n              {\n                \"id\": 1,\n                \"name\": \"Beef Cattle\",\n                \"fdaSpecies\": [\n                  \"horses\",\n                  \"salmon\"\n                ]\n              },\n              {\n                \"id\": 1,\n                \"name\": \"Beef Cattle\",\n                \"fdaSpecies\": [\n                  \"catfish\",\n                  \"llamas\"\n                ]\n              }\n            ],\n            \"_dose\": \"3.0 ml per kg repeat in 6 hours and again in 24 hours\",\n            \"wtMeatHrs\": -53154328,\n            \"wtMilkHrs\": -39795785,\n            \"nada\": \"wip\",\n            \"tags\": [\n              {\n                \"id\": 8,\n                \"color\": \"#516cc6\",\n                \"name\": \"ut ali\",\n                \"fixes\": [\n                  {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                  },\n                  {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                  }\n                ]\n              },\n              {\n                \"id\": 8,\n                \"color\": \"#516cc6\",\n                \"name\": \"incid\",\n                \"fixes\": [\n                  {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                  },\n                  {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                  }\n                ]\n              }\n            ],\n            \"note\": \"<p>a free-form note</p>\",\n            \"amduca\": \"ONLABEL\"\n          },\n          {\n            \"product\": \"MiracleMed\",\n            \"route\": \"wip\",\n            \"dosage\": {\n              \"doseId\": 51055206\n            },\n            \"sequenceFunction\": {\n              \"_type\": \"models.SeqSingleDose\"\n            },\n            \"sizeFunction\": {\n              \"dose\": {\n                \"quantity\": {\n                  \"dimension\": \"Volume\",\n                  \"value\": 3,\n                  \"symbol\": \"ml\"\n                }\n              },\n              \"_type\": \"models.FixedDoseFunction\"\n            },\n            \"id\": \"B-123\",\n            \"ownerId\": 0,\n            \"description\": \"3.0 ml per kg repeat\",\n            \"eligibilities\": [\n              {\n                \"id\": 1,\n                \"name\": \"Beef Cattle\",\n                \"fdaSpecies\": [\n                  \"other\",\n                  \"cats\"\n                ]\n              },\n              {\n                \"id\": 1,\n                \"name\": \"Beef Cattle\",\n                \"fdaSpecies\": [\n                  \"veal\",\n                  \"turkeys\"\n                ]\n              }\n            ],\n            \"_dose\": \"3.0 ml per kg repeat in 6 hours and again in 24 hours\",\n            \"wtMeatHrs\": -78279106,\n            \"wtMilkHrs\": 62367169,\n            \"nada\": \"wip\",\n            \"tags\": [\n              {\n                \"id\": 8,\n                \"color\": \"#516cc6\",\n                \"name\": \"\",\n                \"fixes\": [\n                  {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                  },\n                  {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                  }\n                ]\n              },\n              {\n                \"id\": 8,\n                \"color\": \"#516cc6\",\n                \"name\": \"officia\",\n                \"fixes\": [\n                  {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                  },\n                  {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                  }\n                ]\n              }\n            ],\n            \"note\": \"<p>a free-form note</p>\",\n            \"amduca\": \"UNIDENTIFIED\"\n          }\n        ],\n        \"tags\": [\n          {\n            \"id\": 8,\n            \"color\": \"#516cc6\",\n            \"name\": \"sin\",\n            \"fixes\": [\n              {\n                \"_type\": {\n                  \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"detail\": {\n                  \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"message\": {\n                  \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"title\": {\n                  \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                }\n              },\n              {\n                \"_type\": {\n                  \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"detail\": {\n                  \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"message\": {\n                  \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"title\": {\n                  \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                }\n              }\n            ]\n          },\n          {\n            \"id\": 8,\n            \"color\": \"#516cc6\",\n            \"name\": \"nulla dol\",\n            \"fixes\": [\n              {\n                \"_type\": {\n                  \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"detail\": {\n                  \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"message\": {\n                  \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"title\": {\n                  \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                }\n              },\n              {\n                \"_type\": {\n                  \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"detail\": {\n                  \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"message\": {\n                  \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"title\": {\n                  \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                }\n              }\n            ]\n          }\n        ],\n        \"diagnoses\": [\n          {\n            \"id\": 8,\n            \"name\": \"Pain/inflammation (musculoskeletal), treatment\"\n          },\n          {\n            \"id\": 8,\n            \"name\": \"Pain/inflammation (musculoskeletal), treatment\"\n          }\n        ],\n        \"eligibilities\": [\n          {\n            \"id\": 1,\n            \"name\": \"Beef Cattle\",\n            \"fdaSpecies\": [\n              \"llamas\",\n              \"beef_cattle\"\n            ]\n          },\n          {\n            \"id\": 1,\n            \"name\": \"Beef Cattle\",\n            \"fdaSpecies\": [\n              \"gamebirds\",\n              \"other\"\n            ]\n          }\n        ],\n        \"promises\": [\n          {\n            \"_type\": \"models.IdPromise\",\n            \"name\": \"ID promise\",\n            \"descrip\": \"You must give ID for each case enrolled\",\n            \"query\": \"What is the animal's name or number?\",\n            \"when\": \"PT0H\",\n            \"id\": 2345\n          },\n          {\n            \"_type\": \"models.IdPromise\",\n            \"name\": \"ID promise\",\n            \"descrip\": \"You must give ID for each case enrolled\",\n            \"query\": \"What is the animal's name or number?\",\n            \"when\": \"PT0H\",\n            \"id\": 2345\n          }\n        ],\n        \"metadata\": [\n          {\n            \"key\": \"popularity\",\n            \"value\": \"good 1.2\"\n          },\n          {\n            \"key\": \"popularity\",\n            \"value\": \"good 1.2\"\n          }\n        ]\n      },\n      \"status\": \"PRESCRIBED\",\n      \"rxId\": \"gG3pBCR1GCMKm89c\",\n      \"refills\": 0,\n      \"expiration\": \"2021-01-10T10:30:37Z\",\n      \"created\": \"2021-08-10T10:30:37Z\",\n      \"metadata\": [\n        {\n          \"key\": \"popularity\",\n          \"value\": \"good 1.2\"\n        },\n        {\n          \"key\": \"popularity\",\n          \"value\": \"good 1.2\"\n        }\n      ]\n    }\n  ]\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "773947b0-3475-4dbf-8367-fe9491a802be",
                            "name": "The server can not understand the request due to invalid syntax.",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "api",
                                        "protocols",
                                        "prescriptions"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "description": {
                                            "content": "Added as a part of security scheme: apikey",
                                            "type": "text/plain"
                                        },
                                        "key": "X-Auth-Token",
                                        "value": "<API Key>"
                                    }
                                ],
                                "method": "GET",
                                "body": {}
                            },
                            "status": "Bad Request",
                            "code": 400,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"title\": \"incorrect username or password\",\n  \"status\": 404,\n  \"errorType\": \"/errors/incorrect-user-pass\",\n  \"detail\": \"Authentication failed due to incorrect username or password.\",\n  \"instance\": \"/login/log/abc123\"\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "c094df04-91b4-41cb-88f7-56c59cbeb8c4",
                            "name": "Authorization required",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "api",
                                        "protocols",
                                        "prescriptions"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "description": {
                                            "content": "Added as a part of security scheme: apikey",
                                            "type": "text/plain"
                                        },
                                        "key": "X-Auth-Token",
                                        "value": "<API Key>"
                                    }
                                ],
                                "method": "GET",
                                "body": {}
                            },
                            "status": "Forbidden",
                            "code": 403,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "text/plain"
                                }
                            ],
                            "body": "",
                            "cookie": [],
                            "_postman_previewlanguage": "text"
                        }
                    ],
                    "event": []
                },
                {
                    "id": "2800b249-505d-4f4f-b361-83c3ea8142f3",
                    "name": "list of all diagnoses",
                    "request": {
                        "name": "list of all diagnoses",
                        "description": {
                            "content": "returns an array of Prescriptions",
                            "type": "text/plain"
                        },
                        "url": {
                            "path": [
                                "api",
                                "protocols",
                                ":id",
                                "prescriptions"
                            ],
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "query": [],
                            "variable": [
                                {
                                    "disabled": false,
                                    "type": "any",
                                    "value": "-41001206",
                                    "key": "id",
                                    "description": "(Required) Protocol ID key"
                                }
                            ]
                        },
                        "header": [
                            {
                                "key": "Accept",
                                "value": "application/json"
                            }
                        ],
                        "method": "GET",
                        "auth": null
                    },
                    "response": [
                        {
                            "id": "4897bc8e-e5d1-4672-bd58-050bfc039099",
                            "name": "OK",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "api",
                                        "protocols",
                                        ":id",
                                        "prescriptions"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": [
                                        {
                                            "disabled": false,
                                            "type": "any",
                                            "value": "-41001206",
                                            "key": "id",
                                            "description": "(Required) Protocol ID key"
                                        }
                                    ]
                                },
                                "header": [
                                    {
                                        "description": {
                                            "content": "Added as a part of security scheme: apikey",
                                            "type": "text/plain"
                                        },
                                        "key": "X-Auth-Token",
                                        "value": "<API Key>"
                                    }
                                ],
                                "method": "GET",
                                "body": {}
                            },
                            "status": "OK",
                            "code": 200,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"diagnoses\": [\n    {\n      \"vorId\": 1,\n      \"morId\": 2,\n      \"protocol\": {\n        \"ownerId\": 1,\n        \"name\": \"wip\",\n        \"status\": \"PRESCRIBED\",\n        \"instructions\": {\n          \"considerations\": \"<p>This is just an example, not a real protocol.</p>\",\n          \"restrictions\": \"<p>Not for use on real animals.</p>\",\n          \"dothis\": \"<h3>Examinations to perform</h3>\",\n          \"recordthis\": \"<p>record every step in your notebook.</p>\",\n          \"success\": \"<p>All problems are gone</p>\",\n          \"failure\": \"<p>One or more problems remain</p>\",\n          \"references\": \"<a href=\\\"https://en.wikipedia.org/wiki/Rickrolling\\\">Wikipedia</a>\"\n        },\n        \"id\": 12345,\n        \"shortname\": \"wip\",\n        \"created\": \"2020-01-10T10:30:37Z\",\n        \"edited\": \"2020-02-10T10:30:37Z\",\n        \"vetNote\": \"consider prescribing protocol x instead\",\n        \"wtMeatHrs\": 22,\n        \"wtMilkHrs\": 5,\n        \"shareAll\": true,\n        \"shareClonable\": true,\n        \"caseDefinition\": {\n          \"requireId\": false,\n          \"requireMor\": false,\n          \"contraindications\": \"\",\n          \"medical\": \"if fever is present, consider Protocol 12345 instead.\",\n          \"economic\": \"\",\n          \"note\": \"\"\n        },\n        \"treatments\": [\n          {\n            \"product\": \"MiracleMed\",\n            \"route\": \"wip\",\n            \"dosage\": {\n              \"doseId\": -89704411\n            },\n            \"sequenceFunction\": {\n              \"_type\": \"models.SeqSingleDose\"\n            },\n            \"sizeFunction\": {\n              \"dose\": {\n                \"quantity\": {\n                  \"dimension\": \"Volume\",\n                  \"value\": 3,\n                  \"symbol\": \"ml\"\n                }\n              },\n              \"_type\": \"models.FixedDoseFunction\"\n            },\n            \"id\": \"B-123\",\n            \"ownerId\": 0,\n            \"description\": \"3.0 ml per kg repeat\",\n            \"eligibilities\": [\n              {\n                \"id\": 1,\n                \"name\": \"Beef Cattle\",\n                \"fdaSpecies\": [\n                  \"swine\",\n                  \"bison\"\n                ]\n              },\n              {\n                \"id\": 1,\n                \"name\": \"Beef Cattle\",\n                \"fdaSpecies\": [\n                  \"fish\",\n                  \"swine\"\n                ]\n              }\n            ],\n            \"_dose\": \"3.0 ml per kg repeat in 6 hours and again in 24 hours\",\n            \"wtMeatHrs\": 91895925,\n            \"wtMilkHrs\": 61238034,\n            \"nada\": \"wip\",\n            \"tags\": [\n              {\n                \"id\": 8,\n                \"color\": \"#516cc6\",\n                \"name\": \"Ut cons\",\n                \"fixes\": [\n                  {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                  },\n                  {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                  }\n                ]\n              },\n              {\n                \"id\": 8,\n                \"color\": \"#516cc6\",\n                \"name\": \"cillum\",\n                \"fixes\": [\n                  {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                  },\n                  {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                  }\n                ]\n              }\n            ],\n            \"note\": \"<p>a free-form note</p>\",\n            \"amduca\": \"OFFLABEL\"\n          },\n          {\n            \"product\": \"MiracleMed\",\n            \"route\": \"wip\",\n            \"dosage\": {\n              \"doseId\": 63149245\n            },\n            \"sequenceFunction\": {\n              \"_type\": \"models.SeqSingleDose\"\n            },\n            \"sizeFunction\": {\n              \"dose\": {\n                \"quantity\": {\n                  \"dimension\": \"Volume\",\n                  \"value\": 3,\n                  \"symbol\": \"ml\"\n                }\n              },\n              \"_type\": \"models.FixedDoseFunction\"\n            },\n            \"id\": \"B-123\",\n            \"ownerId\": 0,\n            \"description\": \"3.0 ml per kg repeat\",\n            \"eligibilities\": [\n              {\n                \"id\": 1,\n                \"name\": \"Beef Cattle\",\n                \"fdaSpecies\": [\n                  \"beef_cattle\",\n                  \"bison\"\n                ]\n              },\n              {\n                \"id\": 1,\n                \"name\": \"Beef Cattle\",\n                \"fdaSpecies\": [\n                  \"salmon\",\n                  \"goats\"\n                ]\n              }\n            ],\n            \"_dose\": \"3.0 ml per kg repeat in 6 hours and again in 24 hours\",\n            \"wtMeatHrs\": 47073262,\n            \"wtMilkHrs\": 25205114,\n            \"nada\": \"wip\",\n            \"tags\": [\n              {\n                \"id\": 8,\n                \"color\": \"#516cc6\",\n                \"name\": \"i\",\n                \"fixes\": [\n                  {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                  },\n                  {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                  }\n                ]\n              },\n              {\n                \"id\": 8,\n                \"color\": \"#516cc6\",\n                \"name\": \"in occaecat te\",\n                \"fixes\": [\n                  {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                  },\n                  {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                  }\n                ]\n              }\n            ],\n            \"note\": \"<p>a free-form note</p>\",\n            \"amduca\": \"UNIDENTIFIED\"\n          }\n        ],\n        \"tags\": [\n          {\n            \"id\": 8,\n            \"color\": \"#516cc6\",\n            \"name\": \"eu\",\n            \"fixes\": [\n              {\n                \"_type\": {\n                  \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"detail\": {\n                  \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"message\": {\n                  \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"title\": {\n                  \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                }\n              },\n              {\n                \"_type\": {\n                  \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"detail\": {\n                  \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"message\": {\n                  \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"title\": {\n                  \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                }\n              }\n            ]\n          },\n          {\n            \"id\": 8,\n            \"color\": \"#516cc6\",\n            \"name\": \"reprehenderit\",\n            \"fixes\": [\n              {\n                \"_type\": {\n                  \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"detail\": {\n                  \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"message\": {\n                  \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"title\": {\n                  \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                }\n              },\n              {\n                \"_type\": {\n                  \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"detail\": {\n                  \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"message\": {\n                  \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"title\": {\n                  \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                }\n              }\n            ]\n          }\n        ],\n        \"diagnoses\": [\n          {\n            \"id\": 8,\n            \"name\": \"Pain/inflammation (musculoskeletal), treatment\"\n          },\n          {\n            \"id\": 8,\n            \"name\": \"Pain/inflammation (musculoskeletal), treatment\"\n          }\n        ],\n        \"eligibilities\": [\n          {\n            \"id\": 1,\n            \"name\": \"Beef Cattle\",\n            \"fdaSpecies\": [\n              \"unidentified\",\n              \"chickens\"\n            ]\n          },\n          {\n            \"id\": 1,\n            \"name\": \"Beef Cattle\",\n            \"fdaSpecies\": [\n              \"catfish\",\n              \"beef_cattle\"\n            ]\n          }\n        ],\n        \"promises\": [\n          {\n            \"_type\": \"models.IdPromise\",\n            \"name\": \"ID promise\",\n            \"descrip\": \"You must give ID for each case enrolled\",\n            \"query\": \"What is the animal's name or number?\",\n            \"when\": \"PT0H\",\n            \"id\": 2345\n          },\n          {\n            \"_type\": \"models.IdPromise\",\n            \"name\": \"ID promise\",\n            \"descrip\": \"You must give ID for each case enrolled\",\n            \"query\": \"What is the animal's name or number?\",\n            \"when\": \"PT0H\",\n            \"id\": 2345\n          }\n        ],\n        \"metadata\": [\n          {\n            \"key\": \"popularity\",\n            \"value\": \"good 1.2\"\n          },\n          {\n            \"key\": \"popularity\",\n            \"value\": \"good 1.2\"\n          }\n        ]\n      },\n      \"status\": \"PRESCRIBED\",\n      \"rxId\": \"gG3pBCR1GCMKm89c\",\n      \"refills\": 0,\n      \"expiration\": \"2021-01-10T10:30:37Z\",\n      \"created\": \"2021-08-10T10:30:37Z\",\n      \"metadata\": [\n        {\n          \"key\": \"popularity\",\n          \"value\": \"good 1.2\"\n        },\n        {\n          \"key\": \"popularity\",\n          \"value\": \"good 1.2\"\n        }\n      ]\n    },\n    {\n      \"vorId\": 1,\n      \"morId\": 2,\n      \"protocol\": {\n        \"ownerId\": 1,\n        \"name\": \"wip\",\n        \"status\": \"PRESCRIBED\",\n        \"instructions\": {\n          \"considerations\": \"<p>This is just an example, not a real protocol.</p>\",\n          \"restrictions\": \"<p>Not for use on real animals.</p>\",\n          \"dothis\": \"<h3>Examinations to perform</h3>\",\n          \"recordthis\": \"<p>record every step in your notebook.</p>\",\n          \"success\": \"<p>All problems are gone</p>\",\n          \"failure\": \"<p>One or more problems remain</p>\",\n          \"references\": \"<a href=\\\"https://en.wikipedia.org/wiki/Rickrolling\\\">Wikipedia</a>\"\n        },\n        \"id\": 12345,\n        \"shortname\": \"wip\",\n        \"created\": \"2020-01-10T10:30:37Z\",\n        \"edited\": \"2020-02-10T10:30:37Z\",\n        \"vetNote\": \"consider prescribing protocol x instead\",\n        \"wtMeatHrs\": 22,\n        \"wtMilkHrs\": 5,\n        \"shareAll\": true,\n        \"shareClonable\": true,\n        \"caseDefinition\": {\n          \"requireId\": false,\n          \"requireMor\": false,\n          \"contraindications\": \"\",\n          \"medical\": \"if fever is present, consider Protocol 12345 instead.\",\n          \"economic\": \"\",\n          \"note\": \"\"\n        },\n        \"treatments\": [\n          {\n            \"product\": \"MiracleMed\",\n            \"route\": \"wip\",\n            \"dosage\": {\n              \"doseId\": -75122173\n            },\n            \"sequenceFunction\": {\n              \"_type\": \"models.SeqSingleDose\"\n            },\n            \"sizeFunction\": {\n              \"dose\": {\n                \"quantity\": {\n                  \"dimension\": \"Volume\",\n                  \"value\": 3,\n                  \"symbol\": \"ml\"\n                }\n              },\n              \"_type\": \"models.FixedDoseFunction\"\n            },\n            \"id\": \"B-123\",\n            \"ownerId\": 0,\n            \"description\": \"3.0 ml per kg repeat\",\n            \"eligibilities\": [\n              {\n                \"id\": 1,\n                \"name\": \"Beef Cattle\",\n                \"fdaSpecies\": [\n                  \"horses\",\n                  \"salmon\"\n                ]\n              },\n              {\n                \"id\": 1,\n                \"name\": \"Beef Cattle\",\n                \"fdaSpecies\": [\n                  \"catfish\",\n                  \"llamas\"\n                ]\n              }\n            ],\n            \"_dose\": \"3.0 ml per kg repeat in 6 hours and again in 24 hours\",\n            \"wtMeatHrs\": -53154328,\n            \"wtMilkHrs\": -39795785,\n            \"nada\": \"wip\",\n            \"tags\": [\n              {\n                \"id\": 8,\n                \"color\": \"#516cc6\",\n                \"name\": \"ut ali\",\n                \"fixes\": [\n                  {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                  },\n                  {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                  }\n                ]\n              },\n              {\n                \"id\": 8,\n                \"color\": \"#516cc6\",\n                \"name\": \"incid\",\n                \"fixes\": [\n                  {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                  },\n                  {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                  }\n                ]\n              }\n            ],\n            \"note\": \"<p>a free-form note</p>\",\n            \"amduca\": \"ONLABEL\"\n          },\n          {\n            \"product\": \"MiracleMed\",\n            \"route\": \"wip\",\n            \"dosage\": {\n              \"doseId\": 51055206\n            },\n            \"sequenceFunction\": {\n              \"_type\": \"models.SeqSingleDose\"\n            },\n            \"sizeFunction\": {\n              \"dose\": {\n                \"quantity\": {\n                  \"dimension\": \"Volume\",\n                  \"value\": 3,\n                  \"symbol\": \"ml\"\n                }\n              },\n              \"_type\": \"models.FixedDoseFunction\"\n            },\n            \"id\": \"B-123\",\n            \"ownerId\": 0,\n            \"description\": \"3.0 ml per kg repeat\",\n            \"eligibilities\": [\n              {\n                \"id\": 1,\n                \"name\": \"Beef Cattle\",\n                \"fdaSpecies\": [\n                  \"other\",\n                  \"cats\"\n                ]\n              },\n              {\n                \"id\": 1,\n                \"name\": \"Beef Cattle\",\n                \"fdaSpecies\": [\n                  \"veal\",\n                  \"turkeys\"\n                ]\n              }\n            ],\n            \"_dose\": \"3.0 ml per kg repeat in 6 hours and again in 24 hours\",\n            \"wtMeatHrs\": -78279106,\n            \"wtMilkHrs\": 62367169,\n            \"nada\": \"wip\",\n            \"tags\": [\n              {\n                \"id\": 8,\n                \"color\": \"#516cc6\",\n                \"name\": \"\",\n                \"fixes\": [\n                  {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                  },\n                  {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                  }\n                ]\n              },\n              {\n                \"id\": 8,\n                \"color\": \"#516cc6\",\n                \"name\": \"officia\",\n                \"fixes\": [\n                  {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                  },\n                  {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                  }\n                ]\n              }\n            ],\n            \"note\": \"<p>a free-form note</p>\",\n            \"amduca\": \"UNIDENTIFIED\"\n          }\n        ],\n        \"tags\": [\n          {\n            \"id\": 8,\n            \"color\": \"#516cc6\",\n            \"name\": \"sin\",\n            \"fixes\": [\n              {\n                \"_type\": {\n                  \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"detail\": {\n                  \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"message\": {\n                  \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"title\": {\n                  \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                }\n              },\n              {\n                \"_type\": {\n                  \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"detail\": {\n                  \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"message\": {\n                  \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"title\": {\n                  \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                }\n              }\n            ]\n          },\n          {\n            \"id\": 8,\n            \"color\": \"#516cc6\",\n            \"name\": \"nulla dol\",\n            \"fixes\": [\n              {\n                \"_type\": {\n                  \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"detail\": {\n                  \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"message\": {\n                  \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"title\": {\n                  \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                }\n              },\n              {\n                \"_type\": {\n                  \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"detail\": {\n                  \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"message\": {\n                  \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"title\": {\n                  \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                }\n              }\n            ]\n          }\n        ],\n        \"diagnoses\": [\n          {\n            \"id\": 8,\n            \"name\": \"Pain/inflammation (musculoskeletal), treatment\"\n          },\n          {\n            \"id\": 8,\n            \"name\": \"Pain/inflammation (musculoskeletal), treatment\"\n          }\n        ],\n        \"eligibilities\": [\n          {\n            \"id\": 1,\n            \"name\": \"Beef Cattle\",\n            \"fdaSpecies\": [\n              \"llamas\",\n              \"beef_cattle\"\n            ]\n          },\n          {\n            \"id\": 1,\n            \"name\": \"Beef Cattle\",\n            \"fdaSpecies\": [\n              \"gamebirds\",\n              \"other\"\n            ]\n          }\n        ],\n        \"promises\": [\n          {\n            \"_type\": \"models.IdPromise\",\n            \"name\": \"ID promise\",\n            \"descrip\": \"You must give ID for each case enrolled\",\n            \"query\": \"What is the animal's name or number?\",\n            \"when\": \"PT0H\",\n            \"id\": 2345\n          },\n          {\n            \"_type\": \"models.IdPromise\",\n            \"name\": \"ID promise\",\n            \"descrip\": \"You must give ID for each case enrolled\",\n            \"query\": \"What is the animal's name or number?\",\n            \"when\": \"PT0H\",\n            \"id\": 2345\n          }\n        ],\n        \"metadata\": [\n          {\n            \"key\": \"popularity\",\n            \"value\": \"good 1.2\"\n          },\n          {\n            \"key\": \"popularity\",\n            \"value\": \"good 1.2\"\n          }\n        ]\n      },\n      \"status\": \"PRESCRIBED\",\n      \"rxId\": \"gG3pBCR1GCMKm89c\",\n      \"refills\": 0,\n      \"expiration\": \"2021-01-10T10:30:37Z\",\n      \"created\": \"2021-08-10T10:30:37Z\",\n      \"metadata\": [\n        {\n          \"key\": \"popularity\",\n          \"value\": \"good 1.2\"\n        },\n        {\n          \"key\": \"popularity\",\n          \"value\": \"good 1.2\"\n        }\n      ]\n    }\n  ]\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "90baf272-bf4d-4efe-a910-13ac6298ce25",
                            "name": "The server can not understand the request due to invalid syntax.",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "api",
                                        "protocols",
                                        ":id",
                                        "prescriptions"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": [
                                        {
                                            "disabled": false,
                                            "type": "any",
                                            "value": "-41001206",
                                            "key": "id",
                                            "description": "(Required) Protocol ID key"
                                        }
                                    ]
                                },
                                "header": [
                                    {
                                        "description": {
                                            "content": "Added as a part of security scheme: apikey",
                                            "type": "text/plain"
                                        },
                                        "key": "X-Auth-Token",
                                        "value": "<API Key>"
                                    }
                                ],
                                "method": "GET",
                                "body": {}
                            },
                            "status": "Bad Request",
                            "code": 400,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"title\": \"incorrect username or password\",\n  \"status\": 404,\n  \"errorType\": \"/errors/incorrect-user-pass\",\n  \"detail\": \"Authentication failed due to incorrect username or password.\",\n  \"instance\": \"/login/log/abc123\"\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "d31b1ffa-34ce-49ac-b678-bba0a0423047",
                            "name": "Authorization required",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "api",
                                        "protocols",
                                        ":id",
                                        "prescriptions"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": [
                                        {
                                            "disabled": false,
                                            "type": "any",
                                            "value": "-41001206",
                                            "key": "id",
                                            "description": "(Required) Protocol ID key"
                                        }
                                    ]
                                },
                                "header": [
                                    {
                                        "description": {
                                            "content": "Added as a part of security scheme: apikey",
                                            "type": "text/plain"
                                        },
                                        "key": "X-Auth-Token",
                                        "value": "<API Key>"
                                    }
                                ],
                                "method": "GET",
                                "body": {}
                            },
                            "status": "Forbidden",
                            "code": 403,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "text/plain"
                                }
                            ],
                            "body": "",
                            "cookie": [],
                            "_postman_previewlanguage": "text"
                        }
                    ],
                    "event": []
                },
                {
                    "id": "37b3d47e-c776-457d-8d0b-83c72e5d4d3b",
                    "name": "retrieve prescription by ID",
                    "request": {
                        "name": "retrieve prescription by ID",
                        "description": {
                            "content": "Retrieve a Prescription by `prescription.id`.",
                            "type": "text/plain"
                        },
                        "url": {
                            "path": [
                                "api",
                                "protocols",
                                "prescriptions",
                                ":id"
                            ],
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "query": [],
                            "variable": [
                                {
                                    "disabled": false,
                                    "type": "any",
                                    "value": "Vi1y9kbpEj7Upqy7",
                                    "key": "id",
                                    "description": "(Required) Prescription ID key"
                                }
                            ]
                        },
                        "header": [
                            {
                                "key": "Accept",
                                "value": "application/json"
                            }
                        ],
                        "method": "GET",
                        "auth": null
                    },
                    "response": [
                        {
                            "id": "4ed00944-6fd3-43b8-9035-9d01e1503a95",
                            "name": "OK",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "api",
                                        "protocols",
                                        "prescriptions",
                                        ":id"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": [
                                        {
                                            "disabled": false,
                                            "type": "any",
                                            "value": "Vi1y9kbpEj7Upqy7",
                                            "key": "id",
                                            "description": "(Required) Prescription ID key"
                                        }
                                    ]
                                },
                                "header": [
                                    {
                                        "description": {
                                            "content": "Added as a part of security scheme: apikey",
                                            "type": "text/plain"
                                        },
                                        "key": "X-Auth-Token",
                                        "value": "<API Key>"
                                    }
                                ],
                                "method": "GET",
                                "body": {}
                            },
                            "status": "OK",
                            "code": 200,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"prescription\": {\n    \"vorId\": 1,\n    \"morId\": 2,\n    \"protocol\": {\n      \"ownerId\": 1,\n      \"name\": \"wip\",\n      \"status\": \"PRESCRIBED\",\n      \"instructions\": {\n        \"considerations\": \"<p>This is just an example, not a real protocol.</p>\",\n        \"restrictions\": \"<p>Not for use on real animals.</p>\",\n        \"dothis\": \"<h3>Examinations to perform</h3>\",\n        \"recordthis\": \"<p>record every step in your notebook.</p>\",\n        \"success\": \"<p>All problems are gone</p>\",\n        \"failure\": \"<p>One or more problems remain</p>\",\n        \"references\": \"<a href=\\\"https://en.wikipedia.org/wiki/Rickrolling\\\">Wikipedia</a>\"\n      },\n      \"id\": 12345,\n      \"shortname\": \"wip\",\n      \"created\": \"2020-01-10T10:30:37Z\",\n      \"edited\": \"2020-02-10T10:30:37Z\",\n      \"vetNote\": \"consider prescribing protocol x instead\",\n      \"wtMeatHrs\": 22,\n      \"wtMilkHrs\": 5,\n      \"shareAll\": true,\n      \"shareClonable\": true,\n      \"caseDefinition\": {\n        \"requireId\": false,\n        \"requireMor\": false,\n        \"contraindications\": \"\",\n        \"medical\": \"if fever is present, consider Protocol 12345 instead.\",\n        \"economic\": \"\",\n        \"note\": \"\"\n      },\n      \"treatments\": [\n        {\n          \"product\": \"MiracleMed\",\n          \"route\": \"wip\",\n          \"dosage\": {\n            \"doseId\": 55886464\n          },\n          \"sequenceFunction\": {\n            \"_type\": \"models.SeqSingleDose\"\n          },\n          \"sizeFunction\": {\n            \"dose\": {\n              \"quantity\": {\n                \"dimension\": \"Volume\",\n                \"value\": 3,\n                \"symbol\": \"ml\"\n              }\n            },\n            \"_type\": \"models.FixedDoseFunction\"\n          },\n          \"id\": \"B-123\",\n          \"ownerId\": 0,\n          \"description\": \"3.0 ml per kg repeat\",\n          \"eligibilities\": [\n            {\n              \"id\": 1,\n              \"name\": \"Beef Cattle\",\n              \"fdaSpecies\": [\n                \"salmon\",\n                \"chickens\"\n              ]\n            },\n            {\n              \"id\": 1,\n              \"name\": \"Beef Cattle\",\n              \"fdaSpecies\": [\n                \"dogs\",\n                \"goats\"\n              ]\n            }\n          ],\n          \"_dose\": \"3.0 ml per kg repeat in 6 hours and again in 24 hours\",\n          \"wtMeatHrs\": 43303512,\n          \"wtMilkHrs\": 40166984,\n          \"nada\": \"wip\",\n          \"tags\": [\n            {\n              \"id\": 8,\n              \"color\": \"#516cc6\",\n              \"name\": \"ea est\",\n              \"fixes\": [\n                {\n                  \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                {\n                  \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                }\n              ]\n            },\n            {\n              \"id\": 8,\n              \"color\": \"#516cc6\",\n              \"name\": \"esse\",\n              \"fixes\": [\n                {\n                  \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                {\n                  \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                }\n              ]\n            }\n          ],\n          \"note\": \"<p>a free-form note</p>\",\n          \"amduca\": \"OFFLABEL\"\n        },\n        {\n          \"product\": \"MiracleMed\",\n          \"route\": \"wip\",\n          \"dosage\": {\n            \"doseId\": 79964785\n          },\n          \"sequenceFunction\": {\n            \"_type\": \"models.SeqSingleDose\"\n          },\n          \"sizeFunction\": {\n            \"dose\": {\n              \"quantity\": {\n                \"dimension\": \"Volume\",\n                \"value\": 3,\n                \"symbol\": \"ml\"\n              }\n            },\n            \"_type\": \"models.FixedDoseFunction\"\n          },\n          \"id\": \"B-123\",\n          \"ownerId\": 0,\n          \"description\": \"3.0 ml per kg repeat\",\n          \"eligibilities\": [\n            {\n              \"id\": 1,\n              \"name\": \"Beef Cattle\",\n              \"fdaSpecies\": [\n                \"dairy_cattle\",\n                \"fish\"\n              ]\n            },\n            {\n              \"id\": 1,\n              \"name\": \"Beef Cattle\",\n              \"fdaSpecies\": [\n                \"emus\",\n                \"unidentified\"\n              ]\n            }\n          ],\n          \"_dose\": \"3.0 ml per kg repeat in 6 hours and again in 24 hours\",\n          \"wtMeatHrs\": 57414670,\n          \"wtMilkHrs\": 14706120,\n          \"nada\": \"wip\",\n          \"tags\": [\n            {\n              \"id\": 8,\n              \"color\": \"#516cc6\",\n              \"name\": \"repre\",\n              \"fixes\": [\n                {\n                  \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                {\n                  \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                }\n              ]\n            },\n            {\n              \"id\": 8,\n              \"color\": \"#516cc6\",\n              \"name\": \"sun\",\n              \"fixes\": [\n                {\n                  \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                {\n                  \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                }\n              ]\n            }\n          ],\n          \"note\": \"<p>a free-form note</p>\",\n          \"amduca\": \"OFFLABEL\"\n        }\n      ],\n      \"tags\": [\n        {\n          \"id\": 8,\n          \"color\": \"#516cc6\",\n          \"name\": \"et i\",\n          \"fixes\": [\n            {\n              \"_type\": \"tempor elit dolore dolor\",\n              \"detail\": \"qui adipisicing nulla\",\n              \"message\": \"Lorem elit sit exercitation incididunt\",\n              \"title\": \"fugiat\"\n            },\n            {\n              \"_type\": \"ut commodo sint adipisicing enim\",\n              \"detail\": \"adipisicing ex et officia aliqua\",\n              \"message\": \"deserunt aliqua officia sit non\",\n              \"title\": \"Excepteur nulla consequat\"\n            }\n          ]\n        },\n        {\n          \"id\": 8,\n          \"color\": \"#516cc6\",\n          \"name\": \"aliqua\",\n          \"fixes\": [\n            {\n              \"_type\": \"proident cupidatat ipsum\",\n              \"detail\": \"do aute voluptate ullamco\",\n              \"message\": \"quis sint Ut\",\n              \"title\": \"incididunt magna commodo irure ex\"\n            },\n            {\n              \"_type\": \"elit ullamco\",\n              \"detail\": \"irure non\",\n              \"message\": \"nulla\",\n              \"title\": \"nostrud\"\n            }\n          ]\n        }\n      ],\n      \"diagnoses\": [\n        {\n          \"id\": 8,\n          \"name\": \"Pain/inflammation (musculoskeletal), treatment\"\n        },\n        {\n          \"id\": 8,\n          \"name\": \"Pain/inflammation (musculoskeletal), treatment\"\n        }\n      ],\n      \"eligibilities\": [\n        {\n          \"id\": 1,\n          \"name\": \"Beef Cattle\",\n          \"fdaSpecies\": [\n            \"swine\",\n            \"cats\"\n          ]\n        },\n        {\n          \"id\": 1,\n          \"name\": \"Beef Cattle\",\n          \"fdaSpecies\": [\n            \"goats\",\n            \"catfish\"\n          ]\n        }\n      ],\n      \"promises\": [\n        {\n          \"_type\": \"models.IdPromise\",\n          \"name\": \"ID promise\",\n          \"descrip\": \"You must give ID for each case enrolled\",\n          \"query\": \"What is the animal's name or number?\",\n          \"when\": \"PT0H\",\n          \"id\": 2345\n        },\n        {\n          \"_type\": \"models.IdPromise\",\n          \"name\": \"ID promise\",\n          \"descrip\": \"You must give ID for each case enrolled\",\n          \"query\": \"What is the animal's name or number?\",\n          \"when\": \"PT0H\",\n          \"id\": 2345\n        }\n      ],\n      \"metadata\": [\n        {\n          \"key\": \"popularity\",\n          \"value\": \"good 1.2\"\n        },\n        {\n          \"key\": \"popularity\",\n          \"value\": \"good 1.2\"\n        }\n      ]\n    },\n    \"status\": \"PRESCRIBED\",\n    \"rxId\": \"gG3pBCR1GCMKm89c\",\n    \"refills\": 0,\n    \"expiration\": \"2021-01-10T10:30:37Z\",\n    \"created\": \"2021-08-10T10:30:37Z\",\n    \"metadata\": [\n      {\n        \"key\": \"popularity\",\n        \"value\": \"good 1.2\"\n      },\n      {\n        \"key\": \"popularity\",\n        \"value\": \"good 1.2\"\n      }\n    ]\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "73a19f3c-03c4-4d37-b2b7-2aff961093dc",
                            "name": "The server can not understand the request due to invalid syntax.",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "api",
                                        "protocols",
                                        "prescriptions",
                                        ":id"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": [
                                        {
                                            "disabled": false,
                                            "type": "any",
                                            "value": "Vi1y9kbpEj7Upqy7",
                                            "key": "id",
                                            "description": "(Required) Prescription ID key"
                                        }
                                    ]
                                },
                                "header": [
                                    {
                                        "description": {
                                            "content": "Added as a part of security scheme: apikey",
                                            "type": "text/plain"
                                        },
                                        "key": "X-Auth-Token",
                                        "value": "<API Key>"
                                    }
                                ],
                                "method": "GET",
                                "body": {}
                            },
                            "status": "Bad Request",
                            "code": 400,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"title\": \"incorrect username or password\",\n  \"status\": 404,\n  \"errorType\": \"/errors/incorrect-user-pass\",\n  \"detail\": \"Authentication failed due to incorrect username or password.\",\n  \"instance\": \"/login/log/abc123\"\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "dd4f7ffe-2b48-46e3-894d-c4b56048f2cc",
                            "name": "Authorization required",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "api",
                                        "protocols",
                                        "prescriptions",
                                        ":id"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": [
                                        {
                                            "disabled": false,
                                            "type": "any",
                                            "value": "Vi1y9kbpEj7Upqy7",
                                            "key": "id",
                                            "description": "(Required) Prescription ID key"
                                        }
                                    ]
                                },
                                "header": [
                                    {
                                        "description": {
                                            "content": "Added as a part of security scheme: apikey",
                                            "type": "text/plain"
                                        },
                                        "key": "X-Auth-Token",
                                        "value": "<API Key>"
                                    }
                                ],
                                "method": "GET",
                                "body": {}
                            },
                            "status": "Forbidden",
                            "code": 403,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "text/plain"
                                }
                            ],
                            "body": "",
                            "cookie": [],
                            "_postman_previewlanguage": "text"
                        }
                    ],
                    "event": []
                },
                {
                    "id": "8f4a2927-c041-48bd-9d65-e4f15837721a",
                    "name": "list of all labelclaims",
                    "request": {
                        "name": "list of all labelclaims",
                        "description": {
                            "content": "This endpoint returns the full array of drug labels.",
                            "type": "text/plain"
                        },
                        "url": {
                            "path": [
                                "api",
                                "labels"
                            ],
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "query": [],
                            "variable": []
                        },
                        "header": [
                            {
                                "key": "Accept",
                                "value": "application/json"
                            }
                        ],
                        "method": "GET",
                        "auth": null
                    },
                    "response": [
                        {
                            "id": "8090271a-4d17-4bf5-887d-1b3301b073d6",
                            "name": "OK",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "api",
                                        "labels"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "description": {
                                            "content": "Added as a part of security scheme: apikey",
                                            "type": "text/plain"
                                        },
                                        "key": "X-Auth-Token",
                                        "value": "<API Key>"
                                    }
                                ],
                                "method": "GET",
                                "body": {}
                            },
                            "status": "OK",
                            "code": 200,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"labels\": [\n    {\n      \"id\": 1,\n      \"fdaSpecies\": [\n        \"ChickensBroilers\",\n        \"ChickensBroilers\"\n      ],\n      \"diagnosis\": \"pain (colic), symptomatic treatment\",\n      \"dxId\": 2002,\n      \"product\": \"Prevail™ Flunixin Meglumine Injection\",\n      \"route\": \"intr-corporeal\",\n      \"wtMeatHrs\": 22,\n      \"wtMilkHrs\": 5,\n      \"productId\": 1315018,\n      \"_dose\": \"3.0 ml per kg repeat in 6 hours and again in 24 hours\",\n      \"sequenceFunction\": {\n        \"_type\": \"models.SeqSingleDose\"\n      },\n      \"sizeFunction\": {\n        \"_type\": \"models.FixedDoseFunction\",\n        \"dose\": {\n          \"quantity\": {\n            \"dimension\": \"Mass\",\n            \"value\": 3,\n            \"symbol\": \"oz\"\n          }\n        }\n      },\n      \"doseNote\": \"THis can contain <b>html</b> tags\",\n      \"wtNote\": \"not for dairy animals\",\n      \"ndc\": \"200-308\",\n      \"generic\": \"OXYTETRACYCLINE\"\n    },\n    {\n      \"id\": 1,\n      \"fdaSpecies\": [\n        \"ChickensBroilers\",\n        \"ChickensBroilers\"\n      ],\n      \"diagnosis\": \"pain (colic), symptomatic treatment\",\n      \"dxId\": 2002,\n      \"product\": \"Prevail™ Flunixin Meglumine Injection\",\n      \"route\": \"intr-corporeal\",\n      \"wtMeatHrs\": 22,\n      \"wtMilkHrs\": 5,\n      \"productId\": 1315018,\n      \"_dose\": \"3.0 ml per kg repeat in 6 hours and again in 24 hours\",\n      \"sequenceFunction\": {\n        \"_type\": \"models.SeqSingleDose\"\n      },\n      \"sizeFunction\": {\n        \"_type\": \"models.FixedDoseFunction\",\n        \"dose\": {\n          \"quantity\": {\n            \"dimension\": \"Mass\",\n            \"value\": 3,\n            \"symbol\": \"oz\"\n          }\n        }\n      },\n      \"doseNote\": \"THis can contain <b>html</b> tags\",\n      \"wtNote\": \"not for dairy animals\",\n      \"ndc\": \"200-308\",\n      \"generic\": \"OXYTETRACYCLINE\"\n    }\n  ]\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "6d163140-5c46-41a3-a776-a232658376e4",
                            "name": "The server can not understand the request due to invalid syntax.",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "api",
                                        "labels"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "description": {
                                            "content": "Added as a part of security scheme: apikey",
                                            "type": "text/plain"
                                        },
                                        "key": "X-Auth-Token",
                                        "value": "<API Key>"
                                    }
                                ],
                                "method": "GET",
                                "body": {}
                            },
                            "status": "Bad Request",
                            "code": 400,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"title\": \"incorrect username or password\",\n  \"status\": 404,\n  \"errorType\": \"/errors/incorrect-user-pass\",\n  \"detail\": \"Authentication failed due to incorrect username or password.\",\n  \"instance\": \"/login/log/abc123\"\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "ef697d53-058c-4947-a3b8-4edb250874fb",
                            "name": "Authorization required",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "api",
                                        "labels"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "description": {
                                            "content": "Added as a part of security scheme: apikey",
                                            "type": "text/plain"
                                        },
                                        "key": "X-Auth-Token",
                                        "value": "<API Key>"
                                    }
                                ],
                                "method": "GET",
                                "body": {}
                            },
                            "status": "Forbidden",
                            "code": 403,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "text/plain"
                                }
                            ],
                            "body": "",
                            "cookie": [],
                            "_postman_previewlanguage": "text"
                        }
                    ],
                    "event": []
                },
                {
                    "id": "24d0eefd-5a5e-476f-86af-fb732c3ba595",
                    "name": "labelclaim",
                    "request": {
                        "name": "labelclaim",
                        "description": {
                            "content": "Return specified labelclaim.",
                            "type": "text/plain"
                        },
                        "url": {
                            "path": [
                                "api",
                                "labels",
                                ":id"
                            ],
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "query": [],
                            "variable": [
                                {
                                    "disabled": false,
                                    "type": "any",
                                    "value": "32",
                                    "key": "id",
                                    "description": "(Required) labelclaim  ID"
                                }
                            ]
                        },
                        "header": [
                            {
                                "key": "Accept",
                                "value": "application/json"
                            }
                        ],
                        "method": "GET",
                        "auth": null
                    },
                    "response": [
                        {
                            "id": "c1c71ae4-4001-4d8e-b477-19e0e3a1923c",
                            "name": "OK",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "api",
                                        "labels",
                                        ":id"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": [
                                        {
                                            "disabled": false,
                                            "type": "any",
                                            "value": "32",
                                            "key": "id",
                                            "description": "(Required) labelclaim  ID"
                                        }
                                    ]
                                },
                                "header": [
                                    {
                                        "description": {
                                            "content": "Added as a part of security scheme: apikey",
                                            "type": "text/plain"
                                        },
                                        "key": "X-Auth-Token",
                                        "value": "<API Key>"
                                    }
                                ],
                                "method": "GET",
                                "body": {}
                            },
                            "status": "OK",
                            "code": 200,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"id\": 1,\n  \"fdaSpecies\": [\n    \"ChickensBroilers\",\n    \"ChickensBroilers\"\n  ],\n  \"diagnosis\": \"pain (colic), symptomatic treatment\",\n  \"dxId\": 2002,\n  \"product\": \"Prevail™ Flunixin Meglumine Injection\",\n  \"route\": \"intr-corporeal\",\n  \"wtMeatHrs\": 22,\n  \"wtMilkHrs\": 5,\n  \"productId\": 1315018,\n  \"_dose\": \"3.0 ml per kg repeat in 6 hours and again in 24 hours\",\n  \"sequenceFunction\": {\n    \"_type\": \"models.SeqSingleDose\"\n  },\n  \"sizeFunction\": {\n    \"_type\": \"models.FixedDoseFunction\",\n    \"dose\": {\n      \"quantity\": {\n        \"dimension\": \"Mass\",\n        \"value\": 3,\n        \"symbol\": \"oz\"\n      }\n    }\n  },\n  \"doseNote\": \"THis can contain <b>html</b> tags\",\n  \"wtNote\": \"not for dairy animals\",\n  \"ndc\": \"200-308\",\n  \"generic\": \"OXYTETRACYCLINE\"\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "0b518340-8217-4cb5-b7e4-a3878c0e8b52",
                            "name": "The server can not understand the request due to invalid syntax.",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "api",
                                        "labels",
                                        ":id"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": [
                                        {
                                            "disabled": false,
                                            "type": "any",
                                            "value": "32",
                                            "key": "id",
                                            "description": "(Required) labelclaim  ID"
                                        }
                                    ]
                                },
                                "header": [
                                    {
                                        "description": {
                                            "content": "Added as a part of security scheme: apikey",
                                            "type": "text/plain"
                                        },
                                        "key": "X-Auth-Token",
                                        "value": "<API Key>"
                                    }
                                ],
                                "method": "GET",
                                "body": {}
                            },
                            "status": "Bad Request",
                            "code": 400,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"title\": \"incorrect username or password\",\n  \"status\": 404,\n  \"errorType\": \"/errors/incorrect-user-pass\",\n  \"detail\": \"Authentication failed due to incorrect username or password.\",\n  \"instance\": \"/login/log/abc123\"\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "aeb0f401-46a5-44ec-9828-878a138fae1d",
                            "name": "Authorization required",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "api",
                                        "labels",
                                        ":id"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": [
                                        {
                                            "disabled": false,
                                            "type": "any",
                                            "value": "32",
                                            "key": "id",
                                            "description": "(Required) labelclaim  ID"
                                        }
                                    ]
                                },
                                "header": [
                                    {
                                        "description": {
                                            "content": "Added as a part of security scheme: apikey",
                                            "type": "text/plain"
                                        },
                                        "key": "X-Auth-Token",
                                        "value": "<API Key>"
                                    }
                                ],
                                "method": "GET",
                                "body": {}
                            },
                            "status": "Forbidden",
                            "code": 403,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "text/plain"
                                }
                            ],
                            "body": "",
                            "cookie": [],
                            "_postman_previewlanguage": "text"
                        }
                    ],
                    "event": []
                },
                {
                    "id": "9c69fd70-2e12-4c28-b6c5-d86486019b14",
                    "name": "package insert",
                    "request": {
                        "name": "package insert",
                        "description": {
                            "content": "Retrieve the product package insert.",
                            "type": "text/plain"
                        },
                        "url": {
                            "path": [
                                "api",
                                "labels",
                                "inserts",
                                ":lxId"
                            ],
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "query": [],
                            "variable": [
                                {
                                    "disabled": false,
                                    "type": "any",
                                    "value": "32",
                                    "key": "lxId",
                                    "description": "(Required) label ID"
                                }
                            ]
                        },
                        "header": [
                            {
                                "key": "Accept",
                                "value": "application/json"
                            }
                        ],
                        "method": "GET",
                        "auth": null
                    },
                    "response": [
                        {
                            "id": "2462942e-f6b3-4af2-9362-b0fd2e2cd604",
                            "name": "OK",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "api",
                                        "labels",
                                        "inserts",
                                        ":lxId"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": [
                                        {
                                            "disabled": false,
                                            "type": "any",
                                            "value": "32",
                                            "key": "lxId",
                                            "description": "(Required) label ID"
                                        }
                                    ]
                                },
                                "header": [
                                    {
                                        "description": {
                                            "content": "Added as a part of security scheme: apikey",
                                            "type": "text/plain"
                                        },
                                        "key": "X-Auth-Token",
                                        "value": "<API Key>"
                                    }
                                ],
                                "method": "GET",
                                "body": {}
                            },
                            "status": "OK",
                            "code": 200,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "\"officia Lorem\"",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "9050b3c8-5634-4800-a6ce-f8f999474570",
                            "name": "The server can not understand the request due to invalid syntax.",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "api",
                                        "labels",
                                        "inserts",
                                        ":lxId"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": [
                                        {
                                            "disabled": false,
                                            "type": "any",
                                            "value": "32",
                                            "key": "lxId",
                                            "description": "(Required) label ID"
                                        }
                                    ]
                                },
                                "header": [
                                    {
                                        "description": {
                                            "content": "Added as a part of security scheme: apikey",
                                            "type": "text/plain"
                                        },
                                        "key": "X-Auth-Token",
                                        "value": "<API Key>"
                                    }
                                ],
                                "method": "GET",
                                "body": {}
                            },
                            "status": "Bad Request",
                            "code": 400,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"title\": \"incorrect username or password\",\n  \"status\": 404,\n  \"errorType\": \"/errors/incorrect-user-pass\",\n  \"detail\": \"Authentication failed due to incorrect username or password.\",\n  \"instance\": \"/login/log/abc123\"\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "7aa51565-cffc-4a12-a1e3-c791b5e12d64",
                            "name": "Authorization required",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "api",
                                        "labels",
                                        "inserts",
                                        ":lxId"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": [
                                        {
                                            "disabled": false,
                                            "type": "any",
                                            "value": "32",
                                            "key": "lxId",
                                            "description": "(Required) label ID"
                                        }
                                    ]
                                },
                                "header": [
                                    {
                                        "description": {
                                            "content": "Added as a part of security scheme: apikey",
                                            "type": "text/plain"
                                        },
                                        "key": "X-Auth-Token",
                                        "value": "<API Key>"
                                    }
                                ],
                                "method": "GET",
                                "body": {}
                            },
                            "status": "Forbidden",
                            "code": 403,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "text/plain"
                                }
                            ],
                            "body": "",
                            "cookie": [],
                            "_postman_previewlanguage": "text"
                        },
                        {
                            "id": "b4355b84-9f8c-42e0-aadc-62bfa4458b5c",
                            "name": "The server can not find the requested resource.",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "api",
                                        "labels",
                                        "inserts",
                                        ":lxId"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": [
                                        {
                                            "disabled": false,
                                            "type": "any",
                                            "value": "32",
                                            "key": "lxId",
                                            "description": "(Required) label ID"
                                        }
                                    ]
                                },
                                "header": [
                                    {
                                        "description": {
                                            "content": "Added as a part of security scheme: apikey",
                                            "type": "text/plain"
                                        },
                                        "key": "X-Auth-Token",
                                        "value": "<API Key>"
                                    }
                                ],
                                "method": "GET",
                                "body": {}
                            },
                            "status": "Not Found",
                            "code": 404,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "text/plain"
                                }
                            ],
                            "body": "",
                            "cookie": [],
                            "_postman_previewlanguage": "text"
                        }
                    ],
                    "event": []
                },
                {
                    "id": "2ad5b6fc-6959-4b25-8590-19a9a1362d35",
                    "name": "get detail of a Greenbook Drug as a link",
                    "request": {
                        "name": "get detail of a Greenbook Drug as a link",
                        "description": {
                            "content": "This",
                            "type": "text/plain"
                        },
                        "url": {
                            "path": [
                                "api",
                                "spl",
                                ":ndc"
                            ],
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "query": [],
                            "variable": [
                                {
                                    "disabled": false,
                                    "type": "any",
                                    "value": "0010-3832",
                                    "key": "ndc",
                                    "description": "(Required) unique hyphenated number with up to 10 digits in 2 or 3 segments as labelerCode-productCode-packageCode. packageCode may not be needed."
                                }
                            ]
                        },
                        "header": [
                            {
                                "key": "Accept",
                                "value": "text/html"
                            }
                        ],
                        "method": "GET",
                        "auth": null
                    },
                    "response": [
                        {
                            "id": "f81b9cd7-fa1d-48ff-9eef-cb4572334329",
                            "name": "OK",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "api",
                                        "spl",
                                        ":ndc"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": [
                                        {
                                            "disabled": false,
                                            "type": "any",
                                            "value": "0010-3832",
                                            "key": "ndc",
                                            "description": "(Required) unique hyphenated number with up to 10 digits in 2 or 3 segments as labelerCode-productCode-packageCode. packageCode may not be needed."
                                        }
                                    ]
                                },
                                "header": [
                                    {
                                        "description": {
                                            "content": "Added as a part of security scheme: apikey",
                                            "type": "text/plain"
                                        },
                                        "key": "X-Auth-Token",
                                        "value": "<API Key>"
                                    }
                                ],
                                "method": "GET",
                                "body": {}
                            },
                            "status": "OK",
                            "code": 200,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "text/html"
                                }
                            ],
                            "body": "in esse",
                            "cookie": [],
                            "_postman_previewlanguage": "text"
                        },
                        {
                            "id": "f4a3fafe-7688-4f0b-a23f-0d38162b9197",
                            "name": "Redirect to SPL file served from FDA server",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "api",
                                        "spl",
                                        ":ndc"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": [
                                        {
                                            "disabled": false,
                                            "type": "any",
                                            "value": "0010-3832",
                                            "key": "ndc",
                                            "description": "(Required) unique hyphenated number with up to 10 digits in 2 or 3 segments as labelerCode-productCode-packageCode. packageCode may not be needed."
                                        }
                                    ]
                                },
                                "header": [
                                    {
                                        "description": {
                                            "content": "Added as a part of security scheme: apikey",
                                            "type": "text/plain"
                                        },
                                        "key": "X-Auth-Token",
                                        "value": "<API Key>"
                                    }
                                ],
                                "method": "GET",
                                "body": {}
                            },
                            "status": "See Other",
                            "code": 303,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "text/xml"
                                }
                            ],
                            "body": "<element>(string)</element>",
                            "cookie": [],
                            "_postman_previewlanguage": "xml"
                        }
                    ],
                    "event": []
                },
                {
                    "id": "e1db328c-aa63-4be6-8f36-8fa244b748be",
                    "name": "get detail of a Greenbook Drug as a link",
                    "request": {
                        "name": "get detail of a Greenbook Drug as a link",
                        "description": {
                            "content": "This",
                            "type": "text/plain"
                        },
                        "url": {
                            "path": [
                                "api",
                                "spl",
                                ":ndc",
                                ":image"
                            ],
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "query": [],
                            "variable": [
                                {
                                    "disabled": false,
                                    "type": "any",
                                    "value": "0010-3495",
                                    "key": "ndc",
                                    "description": "(Required) unique hyphenated number with up to 10 digits in 2 or 3 segments as labelerCode-productCode-packageCode. packageCode may not be needed."
                                },
                                {
                                    "disabled": false,
                                    "type": "any",
                                    "value": "601588-image-fake.jpg",
                                    "key": "image",
                                    "description": "(Required) name of image file"
                                }
                            ]
                        },
                        "header": [
                            {
                                "key": "Accept",
                                "value": "application/json"
                            }
                        ],
                        "method": "GET",
                        "auth": null
                    },
                    "response": [
                        {
                            "id": "c27b6e04-af36-40e1-84fe-50bce8028293",
                            "name": "OK",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "api",
                                        "spl",
                                        ":ndc",
                                        ":image"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": [
                                        {
                                            "disabled": false,
                                            "type": "any",
                                            "value": "0010-3495",
                                            "key": "ndc",
                                            "description": "(Required) unique hyphenated number with up to 10 digits in 2 or 3 segments as labelerCode-productCode-packageCode. packageCode may not be needed."
                                        },
                                        {
                                            "disabled": false,
                                            "type": "any",
                                            "value": "601588-image-fake.jpg",
                                            "key": "image",
                                            "description": "(Required) name of image file"
                                        }
                                    ]
                                },
                                "header": [
                                    {
                                        "description": {
                                            "content": "Added as a part of security scheme: apikey",
                                            "type": "text/plain"
                                        },
                                        "key": "X-Auth-Token",
                                        "value": "<API Key>"
                                    }
                                ],
                                "method": "GET",
                                "body": {}
                            },
                            "status": "OK",
                            "code": 200,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "\"amet non\"",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "5436300e-18ea-485b-bed4-986c5e8cf256",
                            "name": "Redirect to SPL file served from FDA server",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "api",
                                        "spl",
                                        ":ndc",
                                        ":image"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": [
                                        {
                                            "disabled": false,
                                            "type": "any",
                                            "value": "0010-3495",
                                            "key": "ndc",
                                            "description": "(Required) unique hyphenated number with up to 10 digits in 2 or 3 segments as labelerCode-productCode-packageCode. packageCode may not be needed."
                                        },
                                        {
                                            "disabled": false,
                                            "type": "any",
                                            "value": "601588-image-fake.jpg",
                                            "key": "image",
                                            "description": "(Required) name of image file"
                                        }
                                    ]
                                },
                                "header": [
                                    {
                                        "description": {
                                            "content": "Added as a part of security scheme: apikey",
                                            "type": "text/plain"
                                        },
                                        "key": "X-Auth-Token",
                                        "value": "<API Key>"
                                    }
                                ],
                                "method": "GET",
                                "body": {}
                            },
                            "status": "See Other",
                            "code": 303,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "text/xml"
                                }
                            ],
                            "body": "<element>(string)</element>",
                            "cookie": [],
                            "_postman_previewlanguage": "xml"
                        }
                    ],
                    "event": []
                },
                {
                    "id": "14d7e017-f574-4aa1-a029-c8ce80c2d81d",
                    "name": "retrieve prescription by ID",
                    "request": {
                        "name": "retrieve prescription by ID",
                        "description": {
                            "content": "Retrieve a Prescription by `prescription.id`.",
                            "type": "text/plain"
                        },
                        "url": {
                            "path": [
                                "api",
                                "prescriptions",
                                ":id",
                                ""
                            ],
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "query": [],
                            "variable": [
                                {
                                    "disabled": false,
                                    "type": "any",
                                    "value": "Vi1y9kbpEj7Upqy7",
                                    "key": "id",
                                    "description": "(Required) Prescription ID key"
                                }
                            ]
                        },
                        "header": [
                            {
                                "key": "Accept",
                                "value": "application/json"
                            }
                        ],
                        "method": "GET",
                        "auth": null
                    },
                    "response": [
                        {
                            "id": "a8e509ab-8b33-448a-a025-1ff4f74922e9",
                            "name": "OK",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "api",
                                        "prescriptions",
                                        ":id",
                                        ""
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": [
                                        {
                                            "disabled": false,
                                            "type": "any",
                                            "value": "Vi1y9kbpEj7Upqy7",
                                            "key": "id",
                                            "description": "(Required) Prescription ID key"
                                        }
                                    ]
                                },
                                "header": [
                                    {
                                        "description": {
                                            "content": "Added as a part of security scheme: apikey",
                                            "type": "text/plain"
                                        },
                                        "key": "X-Auth-Token",
                                        "value": "<API Key>"
                                    }
                                ],
                                "method": "GET",
                                "body": {}
                            },
                            "status": "OK",
                            "code": 200,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"prescription\": {\n    \"vorId\": 1,\n    \"morId\": 2,\n    \"protocol\": {\n      \"ownerId\": 1,\n      \"name\": \"wip\",\n      \"status\": \"PRESCRIBED\",\n      \"instructions\": {\n        \"considerations\": \"<p>This is just an example, not a real protocol.</p>\",\n        \"restrictions\": \"<p>Not for use on real animals.</p>\",\n        \"dothis\": \"<h3>Examinations to perform</h3>\",\n        \"recordthis\": \"<p>record every step in your notebook.</p>\",\n        \"success\": \"<p>All problems are gone</p>\",\n        \"failure\": \"<p>One or more problems remain</p>\",\n        \"references\": \"<a href=\\\"https://en.wikipedia.org/wiki/Rickrolling\\\">Wikipedia</a>\"\n      },\n      \"id\": 12345,\n      \"shortname\": \"wip\",\n      \"created\": \"2020-01-10T10:30:37Z\",\n      \"edited\": \"2020-02-10T10:30:37Z\",\n      \"vetNote\": \"consider prescribing protocol x instead\",\n      \"wtMeatHrs\": 22,\n      \"wtMilkHrs\": 5,\n      \"shareAll\": true,\n      \"shareClonable\": true,\n      \"caseDefinition\": {\n        \"requireId\": false,\n        \"requireMor\": false,\n        \"contraindications\": \"\",\n        \"medical\": \"if fever is present, consider Protocol 12345 instead.\",\n        \"economic\": \"\",\n        \"note\": \"\"\n      },\n      \"treatments\": [\n        {\n          \"product\": \"MiracleMed\",\n          \"route\": \"wip\",\n          \"dosage\": {\n            \"doseId\": 55886464\n          },\n          \"sequenceFunction\": {\n            \"_type\": \"models.SeqSingleDose\"\n          },\n          \"sizeFunction\": {\n            \"dose\": {\n              \"quantity\": {\n                \"dimension\": \"Volume\",\n                \"value\": 3,\n                \"symbol\": \"ml\"\n              }\n            },\n            \"_type\": \"models.FixedDoseFunction\"\n          },\n          \"id\": \"B-123\",\n          \"ownerId\": 0,\n          \"description\": \"3.0 ml per kg repeat\",\n          \"eligibilities\": [\n            {\n              \"id\": 1,\n              \"name\": \"Beef Cattle\",\n              \"fdaSpecies\": [\n                \"salmon\",\n                \"chickens\"\n              ]\n            },\n            {\n              \"id\": 1,\n              \"name\": \"Beef Cattle\",\n              \"fdaSpecies\": [\n                \"dogs\",\n                \"goats\"\n              ]\n            }\n          ],\n          \"_dose\": \"3.0 ml per kg repeat in 6 hours and again in 24 hours\",\n          \"wtMeatHrs\": 43303512,\n          \"wtMilkHrs\": 40166984,\n          \"nada\": \"wip\",\n          \"tags\": [\n            {\n              \"id\": 8,\n              \"color\": \"#516cc6\",\n              \"name\": \"ea est\",\n              \"fixes\": [\n                {\n                  \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                {\n                  \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                }\n              ]\n            },\n            {\n              \"id\": 8,\n              \"color\": \"#516cc6\",\n              \"name\": \"esse\",\n              \"fixes\": [\n                {\n                  \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                {\n                  \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                }\n              ]\n            }\n          ],\n          \"note\": \"<p>a free-form note</p>\",\n          \"amduca\": \"OFFLABEL\"\n        },\n        {\n          \"product\": \"MiracleMed\",\n          \"route\": \"wip\",\n          \"dosage\": {\n            \"doseId\": 79964785\n          },\n          \"sequenceFunction\": {\n            \"_type\": \"models.SeqSingleDose\"\n          },\n          \"sizeFunction\": {\n            \"dose\": {\n              \"quantity\": {\n                \"dimension\": \"Volume\",\n                \"value\": 3,\n                \"symbol\": \"ml\"\n              }\n            },\n            \"_type\": \"models.FixedDoseFunction\"\n          },\n          \"id\": \"B-123\",\n          \"ownerId\": 0,\n          \"description\": \"3.0 ml per kg repeat\",\n          \"eligibilities\": [\n            {\n              \"id\": 1,\n              \"name\": \"Beef Cattle\",\n              \"fdaSpecies\": [\n                \"dairy_cattle\",\n                \"fish\"\n              ]\n            },\n            {\n              \"id\": 1,\n              \"name\": \"Beef Cattle\",\n              \"fdaSpecies\": [\n                \"emus\",\n                \"unidentified\"\n              ]\n            }\n          ],\n          \"_dose\": \"3.0 ml per kg repeat in 6 hours and again in 24 hours\",\n          \"wtMeatHrs\": 57414670,\n          \"wtMilkHrs\": 14706120,\n          \"nada\": \"wip\",\n          \"tags\": [\n            {\n              \"id\": 8,\n              \"color\": \"#516cc6\",\n              \"name\": \"repre\",\n              \"fixes\": [\n                {\n                  \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                {\n                  \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                }\n              ]\n            },\n            {\n              \"id\": 8,\n              \"color\": \"#516cc6\",\n              \"name\": \"sun\",\n              \"fixes\": [\n                {\n                  \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                {\n                  \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                }\n              ]\n            }\n          ],\n          \"note\": \"<p>a free-form note</p>\",\n          \"amduca\": \"OFFLABEL\"\n        }\n      ],\n      \"tags\": [\n        {\n          \"id\": 8,\n          \"color\": \"#516cc6\",\n          \"name\": \"et i\",\n          \"fixes\": [\n            {\n              \"_type\": \"tempor elit dolore dolor\",\n              \"detail\": \"qui adipisicing nulla\",\n              \"message\": \"Lorem elit sit exercitation incididunt\",\n              \"title\": \"fugiat\"\n            },\n            {\n              \"_type\": \"ut commodo sint adipisicing enim\",\n              \"detail\": \"adipisicing ex et officia aliqua\",\n              \"message\": \"deserunt aliqua officia sit non\",\n              \"title\": \"Excepteur nulla consequat\"\n            }\n          ]\n        },\n        {\n          \"id\": 8,\n          \"color\": \"#516cc6\",\n          \"name\": \"aliqua\",\n          \"fixes\": [\n            {\n              \"_type\": \"proident cupidatat ipsum\",\n              \"detail\": \"do aute voluptate ullamco\",\n              \"message\": \"quis sint Ut\",\n              \"title\": \"incididunt magna commodo irure ex\"\n            },\n            {\n              \"_type\": \"elit ullamco\",\n              \"detail\": \"irure non\",\n              \"message\": \"nulla\",\n              \"title\": \"nostrud\"\n            }\n          ]\n        }\n      ],\n      \"diagnoses\": [\n        {\n          \"id\": 8,\n          \"name\": \"Pain/inflammation (musculoskeletal), treatment\"\n        },\n        {\n          \"id\": 8,\n          \"name\": \"Pain/inflammation (musculoskeletal), treatment\"\n        }\n      ],\n      \"eligibilities\": [\n        {\n          \"id\": 1,\n          \"name\": \"Beef Cattle\",\n          \"fdaSpecies\": [\n            \"swine\",\n            \"cats\"\n          ]\n        },\n        {\n          \"id\": 1,\n          \"name\": \"Beef Cattle\",\n          \"fdaSpecies\": [\n            \"goats\",\n            \"catfish\"\n          ]\n        }\n      ],\n      \"promises\": [\n        {\n          \"_type\": \"models.IdPromise\",\n          \"name\": \"ID promise\",\n          \"descrip\": \"You must give ID for each case enrolled\",\n          \"query\": \"What is the animal's name or number?\",\n          \"when\": \"PT0H\",\n          \"id\": 2345\n        },\n        {\n          \"_type\": \"models.IdPromise\",\n          \"name\": \"ID promise\",\n          \"descrip\": \"You must give ID for each case enrolled\",\n          \"query\": \"What is the animal's name or number?\",\n          \"when\": \"PT0H\",\n          \"id\": 2345\n        }\n      ],\n      \"metadata\": [\n        {\n          \"key\": \"popularity\",\n          \"value\": \"good 1.2\"\n        },\n        {\n          \"key\": \"popularity\",\n          \"value\": \"good 1.2\"\n        }\n      ]\n    },\n    \"status\": \"PRESCRIBED\",\n    \"rxId\": \"gG3pBCR1GCMKm89c\",\n    \"refills\": 0,\n    \"expiration\": \"2021-01-10T10:30:37Z\",\n    \"created\": \"2021-08-10T10:30:37Z\",\n    \"metadata\": [\n      {\n        \"key\": \"popularity\",\n        \"value\": \"good 1.2\"\n      },\n      {\n        \"key\": \"popularity\",\n        \"value\": \"good 1.2\"\n      }\n    ]\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        }
                    ],
                    "event": []
                },
                {
                    "id": "cdb759a2-f61c-465f-a6d1-d30b16d4d509",
                    "name": "recall or decline a prescription",
                    "request": {
                        "name": "recall or decline a prescription",
                        "description": {
                            "content": "Prescriptions are immutable except for metadata, and cannot actually be deleted. This endpoint makes a prescription unavailable for use. If called by the VOR, it sets staus to RECALLED. If called by the MOR to whom it is prescribed, it sets status to DECLINED. New cases  cannot be enrolled if either RECALLED or DECLIENED.",
                            "type": "text/plain"
                        },
                        "url": {
                            "path": [
                                "api",
                                "prescriptions",
                                ":id",
                                ""
                            ],
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "query": [],
                            "variable": [
                                {
                                    "disabled": false,
                                    "type": "any",
                                    "value": "officia Lorem",
                                    "key": "key",
                                    "description": "(Required) Prescription identifier"
                                }
                            ]
                        },
                        "header": [
                            {
                                "key": "Accept",
                                "value": "application/json"
                            }
                        ],
                        "method": "DELETE",
                        "auth": null
                    },
                    "response": [
                        {
                            "id": "843f3a86-2926-4753-b494-c9724b79eb42",
                            "name": "prescription updated",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "api",
                                        "prescriptions",
                                        ":id",
                                        ""
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": [
                                        {
                                            "disabled": false,
                                            "type": "any",
                                            "value": "officia Lorem",
                                            "key": "key",
                                            "description": "(Required) Prescription identifier"
                                        }
                                    ]
                                },
                                "header": [
                                    {
                                        "description": {
                                            "content": "Added as a part of security scheme: apikey",
                                            "type": "text/plain"
                                        },
                                        "key": "X-Auth-Token",
                                        "value": "<API Key>"
                                    }
                                ],
                                "method": "DELETE",
                                "body": {}
                            },
                            "status": "OK",
                            "code": 200,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"updated\": -19821692\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "7569c9c0-0bd4-43a0-8929-cf0a20c29aca",
                            "name": "Authorization required",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "api",
                                        "prescriptions",
                                        ":id",
                                        ""
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": [
                                        {
                                            "disabled": false,
                                            "type": "any",
                                            "value": "officia Lorem",
                                            "key": "key",
                                            "description": "(Required) Prescription identifier"
                                        }
                                    ]
                                },
                                "header": [
                                    {
                                        "description": {
                                            "content": "Added as a part of security scheme: apikey",
                                            "type": "text/plain"
                                        },
                                        "key": "X-Auth-Token",
                                        "value": "<API Key>"
                                    }
                                ],
                                "method": "DELETE",
                                "body": {}
                            },
                            "status": "Unauthorized",
                            "code": 401,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "text/plain"
                                }
                            ],
                            "body": "",
                            "cookie": [],
                            "_postman_previewlanguage": "text"
                        }
                    ],
                    "event": []
                },
                {
                    "id": "1048cd70-9758-45e3-979c-64825b259158",
                    "name": "enroll case",
                    "request": {
                        "name": "enroll case",
                        "description": {
                            "content": "Creates a Case linked to a prescription.",
                            "type": "text/plain"
                        },
                        "url": {
                            "path": [
                                "api",
                                "cases"
                            ],
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "query": [],
                            "variable": []
                        },
                        "header": [
                            {
                                "key": "Content-Type",
                                "value": "application/json"
                            },
                            {
                                "key": "Accept",
                                "value": "application/json"
                            }
                        ],
                        "method": "POST",
                        "auth": null,
                        "body": {
                            "mode": "raw",
                            "raw": "{\n  \"id\": 123,\n  \"rxId\": \"gG3pBCR1GCMKm89c\",\n  \"caseData\": {\n    \"id\": 0,\n    \"rxId\": \"gG3pBCR1GCMKm89c\",\n    \"caseData\": {\n      \"_type\": \"models.IdData\",\n      \"animalId\": \"Bossie\",\n      \"initiationTime\": \"2020-01-10T10:30:37Z\"\n    }\n  },\n  \"promiseData\": [\n    {\n      \"_type\": \"models.IdPromise\",\n      \"name\": \"ID promise\",\n      \"descrip\": \"You must give ID for each case enrolled\",\n      \"query\": \"What is the animal's name or number?\",\n      \"when\": \"PT0H\",\n      \"id\": 2345\n    },\n    {\n      \"_type\": \"models.IdPromise\",\n      \"name\": \"ID promise\",\n      \"descrip\": \"You must give ID for each case enrolled\",\n      \"query\": \"What is the animal's name or number?\",\n      \"when\": \"PT0H\",\n      \"id\": 2345\n    }\n  ]\n}",
                            "options": {
                                "raw": {
                                    "language": "json"
                                }
                            }
                        }
                    },
                    "response": [
                        {
                            "id": "ec022f47-07b8-41a7-be7b-e28777282a94",
                            "name": "Success – recorded Protocol",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "api",
                                        "cases"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "description": {
                                            "content": "Added as a part of security scheme: apikey",
                                            "type": "text/plain"
                                        },
                                        "key": "X-Auth-Token",
                                        "value": "<API Key>"
                                    }
                                ],
                                "method": "POST",
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n  \"id\": 123,\n  \"rxId\": \"gG3pBCR1GCMKm89c\",\n  \"caseData\": {\n    \"id\": 0,\n    \"rxId\": \"gG3pBCR1GCMKm89c\",\n    \"caseData\": {\n      \"_type\": \"models.IdData\",\n      \"animalId\": \"Bossie\",\n      \"initiationTime\": \"2020-01-10T10:30:37Z\"\n    }\n  },\n  \"promiseData\": [\n    {\n      \"_type\": \"models.IdPromise\",\n      \"name\": \"ID promise\",\n      \"descrip\": \"You must give ID for each case enrolled\",\n      \"query\": \"What is the animal's name or number?\",\n      \"when\": \"PT0H\",\n      \"id\": 2345\n    },\n    {\n      \"_type\": \"models.IdPromise\",\n      \"name\": \"ID promise\",\n      \"descrip\": \"You must give ID for each case enrolled\",\n      \"query\": \"What is the animal's name or number?\",\n      \"when\": \"PT0H\",\n      \"id\": 2345\n    }\n  ]\n}",
                                    "options": {
                                        "raw": {
                                            "language": "json"
                                        }
                                    }
                                }
                            },
                            "status": "OK",
                            "code": 200,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"case\": {\n    \"id\": 123,\n    \"rxId\": \"gG3pBCR1GCMKm89c\",\n    \"caseData\": {\n      \"id\": 0,\n      \"rxId\": \"gG3pBCR1GCMKm89c\",\n      \"caseData\": {\n        \"_type\": \"models.IdData\",\n        \"animalId\": \"Bossie\",\n        \"initiationTime\": \"2020-01-10T10:30:37Z\"\n      }\n    },\n    \"promiseData\": [\n      {\n        \"_type\": \"models.IdPromise\",\n        \"name\": \"ID promise\",\n        \"descrip\": \"You must give ID for each case enrolled\",\n        \"query\": \"What is the animal's name or number?\",\n        \"when\": \"PT0H\",\n        \"id\": 2345\n      },\n      {\n        \"_type\": \"models.IdPromise\",\n        \"name\": \"ID promise\",\n        \"descrip\": \"You must give ID for each case enrolled\",\n        \"query\": \"What is the animal's name or number?\",\n        \"when\": \"PT0H\",\n        \"id\": 2345\n      }\n    ]\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "a5c904cb-797f-451c-81ed-833cd2c04945",
                            "name": "The server can not understand the request due to invalid syntax.",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "api",
                                        "cases"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "description": {
                                            "content": "Added as a part of security scheme: apikey",
                                            "type": "text/plain"
                                        },
                                        "key": "X-Auth-Token",
                                        "value": "<API Key>"
                                    }
                                ],
                                "method": "POST",
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n  \"id\": 123,\n  \"rxId\": \"gG3pBCR1GCMKm89c\",\n  \"caseData\": {\n    \"id\": 0,\n    \"rxId\": \"gG3pBCR1GCMKm89c\",\n    \"caseData\": {\n      \"_type\": \"models.IdData\",\n      \"animalId\": \"Bossie\",\n      \"initiationTime\": \"2020-01-10T10:30:37Z\"\n    }\n  },\n  \"promiseData\": [\n    {\n      \"_type\": \"models.IdPromise\",\n      \"name\": \"ID promise\",\n      \"descrip\": \"You must give ID for each case enrolled\",\n      \"query\": \"What is the animal's name or number?\",\n      \"when\": \"PT0H\",\n      \"id\": 2345\n    },\n    {\n      \"_type\": \"models.IdPromise\",\n      \"name\": \"ID promise\",\n      \"descrip\": \"You must give ID for each case enrolled\",\n      \"query\": \"What is the animal's name or number?\",\n      \"when\": \"PT0H\",\n      \"id\": 2345\n    }\n  ]\n}",
                                    "options": {
                                        "raw": {
                                            "language": "json"
                                        }
                                    }
                                }
                            },
                            "status": "Bad Request",
                            "code": 400,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"title\": \"incorrect username or password\",\n  \"status\": 404,\n  \"errorType\": \"/errors/incorrect-user-pass\",\n  \"detail\": \"Authentication failed due to incorrect username or password.\",\n  \"instance\": \"/login/log/abc123\"\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        }
                    ],
                    "event": [],
                    "protocolProfileBehavior": {
                        "disableBodyPruning": true
                    }
                },
                {
                    "id": "c233f27d-8b1f-49e1-a6bd-04faca02a8f0",
                    "name": "list of cases",
                    "request": {
                        "name": "list of cases",
                        "description": {
                            "content": "Get all current cases for this user",
                            "type": "text/plain"
                        },
                        "url": {
                            "path": [
                                "api",
                                "cases"
                            ],
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "query": [],
                            "variable": []
                        },
                        "header": [
                            {
                                "key": "Accept",
                                "value": "application/json"
                            }
                        ],
                        "method": "GET",
                        "auth": null
                    },
                    "response": [
                        {
                            "id": "a6bc37b6-98ca-4f3c-83c0-0a6d1b73aa4f",
                            "name": "Success – token refreshed",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "api",
                                        "cases"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "description": {
                                            "content": "Added as a part of security scheme: apikey",
                                            "type": "text/plain"
                                        },
                                        "key": "X-Auth-Token",
                                        "value": "<API Key>"
                                    }
                                ],
                                "method": "GET",
                                "body": {}
                            },
                            "status": "OK",
                            "code": 200,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"cases\": [\n    {\n      \"id\": 123,\n      \"rxId\": \"gG3pBCR1GCMKm89c\",\n      \"caseData\": {\n        \"id\": 0,\n        \"rxId\": \"gG3pBCR1GCMKm89c\",\n        \"caseData\": {\n          \"_type\": \"models.IdData\",\n          \"animalId\": \"Bossie\",\n          \"initiationTime\": \"2020-01-10T10:30:37Z\"\n        }\n      },\n      \"promiseData\": [\n        {\n          \"_type\": \"models.IdPromise\",\n          \"name\": \"ID promise\",\n          \"descrip\": \"You must give ID for each case enrolled\",\n          \"query\": \"What is the animal's name or number?\",\n          \"when\": \"PT0H\",\n          \"id\": 2345\n        },\n        {\n          \"_type\": \"models.IdPromise\",\n          \"name\": \"ID promise\",\n          \"descrip\": \"You must give ID for each case enrolled\",\n          \"query\": \"What is the animal's name or number?\",\n          \"when\": \"PT0H\",\n          \"id\": 2345\n        }\n      ]\n    },\n    {\n      \"id\": 123,\n      \"rxId\": \"gG3pBCR1GCMKm89c\",\n      \"caseData\": {\n        \"id\": 0,\n        \"rxId\": \"gG3pBCR1GCMKm89c\",\n        \"caseData\": {\n          \"_type\": \"models.IdData\",\n          \"animalId\": \"Bossie\",\n          \"initiationTime\": \"2020-01-10T10:30:37Z\"\n        }\n      },\n      \"promiseData\": [\n        {\n          \"_type\": \"models.IdPromise\",\n          \"name\": \"ID promise\",\n          \"descrip\": \"You must give ID for each case enrolled\",\n          \"query\": \"What is the animal's name or number?\",\n          \"when\": \"PT0H\",\n          \"id\": 2345\n        },\n        {\n          \"_type\": \"models.IdPromise\",\n          \"name\": \"ID promise\",\n          \"descrip\": \"You must give ID for each case enrolled\",\n          \"query\": \"What is the animal's name or number?\",\n          \"when\": \"PT0H\",\n          \"id\": 2345\n        }\n      ]\n    }\n  ]\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "35c9f1fa-6a24-4a7d-98b4-2880ce01192e",
                            "name": "Authorization required",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "api",
                                        "cases"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "description": {
                                            "content": "Added as a part of security scheme: apikey",
                                            "type": "text/plain"
                                        },
                                        "key": "X-Auth-Token",
                                        "value": "<API Key>"
                                    }
                                ],
                                "method": "GET",
                                "body": {}
                            },
                            "status": "Unauthorized",
                            "code": 401,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "text/plain"
                                }
                            ],
                            "body": "",
                            "cookie": [],
                            "_postman_previewlanguage": "text"
                        }
                    ],
                    "event": []
                },
                {
                    "id": "0fa7457d-ec13-4c03-8c5f-c79aa786e9be",
                    "name": "list  of cases for a rx",
                    "request": {
                        "name": "list  of cases for a rx",
                        "description": {
                            "content": "Get all current cases for this prescription and this user",
                            "type": "text/plain"
                        },
                        "url": {
                            "path": [
                                "api",
                                "prescriptions",
                                ":rxId",
                                "cases"
                            ],
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "query": [],
                            "variable": [
                                {
                                    "disabled": false,
                                    "type": "any",
                                    "value": "Vi1y9kbpEj7Upqy7",
                                    "key": "rxId",
                                    "description": "(Required) prescription uuid"
                                }
                            ]
                        },
                        "header": [
                            {
                                "key": "Accept",
                                "value": "application/json"
                            }
                        ],
                        "method": "GET",
                        "auth": null
                    },
                    "response": [
                        {
                            "id": "5d645db3-dffa-407c-803b-67f882700769",
                            "name": "Success – token refreshed",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "api",
                                        "prescriptions",
                                        ":rxId",
                                        "cases"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": [
                                        {
                                            "disabled": false,
                                            "type": "any",
                                            "value": "Vi1y9kbpEj7Upqy7",
                                            "key": "rxId",
                                            "description": "(Required) prescription uuid"
                                        }
                                    ]
                                },
                                "header": [
                                    {
                                        "description": {
                                            "content": "Added as a part of security scheme: apikey",
                                            "type": "text/plain"
                                        },
                                        "key": "X-Auth-Token",
                                        "value": "<API Key>"
                                    }
                                ],
                                "method": "GET",
                                "body": {}
                            },
                            "status": "OK",
                            "code": 200,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"cases\": [\n    {\n      \"id\": 123,\n      \"rxId\": \"gG3pBCR1GCMKm89c\",\n      \"caseData\": {\n        \"id\": 0,\n        \"rxId\": \"gG3pBCR1GCMKm89c\",\n        \"caseData\": {\n          \"_type\": \"models.IdData\",\n          \"animalId\": \"Bossie\",\n          \"initiationTime\": \"2020-01-10T10:30:37Z\"\n        }\n      },\n      \"promiseData\": [\n        {\n          \"_type\": \"models.IdPromise\",\n          \"name\": \"ID promise\",\n          \"descrip\": \"You must give ID for each case enrolled\",\n          \"query\": \"What is the animal's name or number?\",\n          \"when\": \"PT0H\",\n          \"id\": 2345\n        },\n        {\n          \"_type\": \"models.IdPromise\",\n          \"name\": \"ID promise\",\n          \"descrip\": \"You must give ID for each case enrolled\",\n          \"query\": \"What is the animal's name or number?\",\n          \"when\": \"PT0H\",\n          \"id\": 2345\n        }\n      ]\n    },\n    {\n      \"id\": 123,\n      \"rxId\": \"gG3pBCR1GCMKm89c\",\n      \"caseData\": {\n        \"id\": 0,\n        \"rxId\": \"gG3pBCR1GCMKm89c\",\n        \"caseData\": {\n          \"_type\": \"models.IdData\",\n          \"animalId\": \"Bossie\",\n          \"initiationTime\": \"2020-01-10T10:30:37Z\"\n        }\n      },\n      \"promiseData\": [\n        {\n          \"_type\": \"models.IdPromise\",\n          \"name\": \"ID promise\",\n          \"descrip\": \"You must give ID for each case enrolled\",\n          \"query\": \"What is the animal's name or number?\",\n          \"when\": \"PT0H\",\n          \"id\": 2345\n        },\n        {\n          \"_type\": \"models.IdPromise\",\n          \"name\": \"ID promise\",\n          \"descrip\": \"You must give ID for each case enrolled\",\n          \"query\": \"What is the animal's name or number?\",\n          \"when\": \"PT0H\",\n          \"id\": 2345\n        }\n      ]\n    }\n  ]\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "1173cd77-26ac-48e7-9fb5-f90f1c8f7ba1",
                            "name": "Authorization required",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "api",
                                        "prescriptions",
                                        ":rxId",
                                        "cases"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": [
                                        {
                                            "disabled": false,
                                            "type": "any",
                                            "value": "Vi1y9kbpEj7Upqy7",
                                            "key": "rxId",
                                            "description": "(Required) prescription uuid"
                                        }
                                    ]
                                },
                                "header": [
                                    {
                                        "description": {
                                            "content": "Added as a part of security scheme: apikey",
                                            "type": "text/plain"
                                        },
                                        "key": "X-Auth-Token",
                                        "value": "<API Key>"
                                    }
                                ],
                                "method": "GET",
                                "body": {}
                            },
                            "status": "Unauthorized",
                            "code": 401,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "text/plain"
                                }
                            ],
                            "body": "",
                            "cookie": [],
                            "_postman_previewlanguage": "text"
                        }
                    ],
                    "event": []
                },
                {
                    "id": "28d039d6-ec7e-4494-8b61-19f546a42de3",
                    "name": "execute task",
                    "request": {
                        "name": "execute task",
                        "description": {
                            "content": "Mark task status as completed",
                            "type": "text/plain"
                        },
                        "url": {
                            "path": [
                                "api",
                                "users",
                                "tasks"
                            ],
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "query": [],
                            "variable": []
                        },
                        "header": [
                            {
                                "key": "Content-Type",
                                "value": "application/json"
                            },
                            {
                                "key": "Accept",
                                "value": "application/json"
                            }
                        ],
                        "method": "POST",
                        "auth": null,
                        "body": {
                            "mode": "raw",
                            "raw": "{\n  \"_type\": \"voluptate cillum officia\",\n  \"animalId\": \"this\",\n  \"caseId\": 123,\n  \"detail\": \"tempor\",\n  \"doAt\": \"2020-01-10T10:30:37Z\",\n  \"id\": 123,\n  \"morId\": 123,\n  \"status\": \"REQUIRED\",\n  \"vorId\": 123,\n  \"executor\": 123\n}",
                            "options": {
                                "raw": {
                                    "language": "json"
                                }
                            }
                        }
                    },
                    "response": [
                        {
                            "id": "7d6d69ff-9ce9-40f2-8ecb-a20daea627c3",
                            "name": "Success, Protocol recorded",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "api",
                                        "users",
                                        "tasks"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "description": {
                                            "content": "Added as a part of security scheme: apikey",
                                            "type": "text/plain"
                                        },
                                        "key": "X-Auth-Token",
                                        "value": "<API Key>"
                                    }
                                ],
                                "method": "POST",
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n  \"_type\": \"voluptate cillum officia\",\n  \"animalId\": \"this\",\n  \"caseId\": 123,\n  \"detail\": \"tempor\",\n  \"doAt\": \"2020-01-10T10:30:37Z\",\n  \"id\": 123,\n  \"morId\": 123,\n  \"status\": \"REQUIRED\",\n  \"vorId\": 123,\n  \"executor\": 123\n}",
                                    "options": {
                                        "raw": {
                                            "language": "json"
                                        }
                                    }
                                }
                            },
                            "status": "OK",
                            "code": 200,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"case\": {\n    \"id\": 123,\n    \"rxId\": \"gG3pBCR1GCMKm89c\",\n    \"caseData\": {\n      \"id\": 0,\n      \"rxId\": \"gG3pBCR1GCMKm89c\",\n      \"caseData\": {\n        \"_type\": \"models.IdData\",\n        \"animalId\": \"Bossie\",\n        \"initiationTime\": \"2020-01-10T10:30:37Z\"\n      }\n    },\n    \"promiseData\": [\n      {\n        \"_type\": \"models.IdPromise\",\n        \"name\": \"ID promise\",\n        \"descrip\": \"You must give ID for each case enrolled\",\n        \"query\": \"What is the animal's name or number?\",\n        \"when\": \"PT0H\",\n        \"id\": 2345\n      },\n      {\n        \"_type\": \"models.IdPromise\",\n        \"name\": \"ID promise\",\n        \"descrip\": \"You must give ID for each case enrolled\",\n        \"query\": \"What is the animal's name or number?\",\n        \"when\": \"PT0H\",\n        \"id\": 2345\n      }\n    ]\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "18534f32-920c-4066-b59b-f37f2eef4e8b",
                            "name": "The server can not understand the request due to invalid syntax.",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "api",
                                        "users",
                                        "tasks"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "description": {
                                            "content": "Added as a part of security scheme: apikey",
                                            "type": "text/plain"
                                        },
                                        "key": "X-Auth-Token",
                                        "value": "<API Key>"
                                    }
                                ],
                                "method": "POST",
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n  \"_type\": \"voluptate cillum officia\",\n  \"animalId\": \"this\",\n  \"caseId\": 123,\n  \"detail\": \"tempor\",\n  \"doAt\": \"2020-01-10T10:30:37Z\",\n  \"id\": 123,\n  \"morId\": 123,\n  \"status\": \"REQUIRED\",\n  \"vorId\": 123,\n  \"executor\": 123\n}",
                                    "options": {
                                        "raw": {
                                            "language": "json"
                                        }
                                    }
                                }
                            },
                            "status": "Bad Request",
                            "code": 400,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"title\": \"incorrect username or password\",\n  \"status\": 404,\n  \"errorType\": \"/errors/incorrect-user-pass\",\n  \"detail\": \"Authentication failed due to incorrect username or password.\",\n  \"instance\": \"/login/log/abc123\"\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        }
                    ],
                    "event": [],
                    "protocolProfileBehavior": {
                        "disableBodyPruning": true
                    }
                },
                {
                    "id": "01923b39-54c6-400b-9c22-11ed10cbe7dd",
                    "name": "list of cases by Rx",
                    "request": {
                        "name": "list of cases by Rx",
                        "description": {
                            "content": "Get all current cases for this Rx",
                            "type": "text/plain"
                        },
                        "url": {
                            "path": [
                                "api",
                                "users",
                                "tasks"
                            ],
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "query": [],
                            "variable": []
                        },
                        "header": [
                            {
                                "key": "Accept",
                                "value": "application/json"
                            }
                        ],
                        "method": "GET",
                        "auth": null
                    },
                    "response": [
                        {
                            "id": "ed3b9ed5-6111-41e3-966d-eafe42bc1a53",
                            "name": "Success – token refreshed",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "api",
                                        "users",
                                        "tasks"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "description": {
                                            "content": "Added as a part of security scheme: apikey",
                                            "type": "text/plain"
                                        },
                                        "key": "X-Auth-Token",
                                        "value": "<API Key>"
                                    }
                                ],
                                "method": "GET",
                                "body": {}
                            },
                            "status": "OK",
                            "code": 200,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"cases\": [\n    {\n      \"id\": 123,\n      \"rxId\": \"gG3pBCR1GCMKm89c\",\n      \"caseData\": {\n        \"id\": 0,\n        \"rxId\": \"gG3pBCR1GCMKm89c\",\n        \"caseData\": {\n          \"_type\": \"models.IdData\",\n          \"animalId\": \"Bossie\",\n          \"initiationTime\": \"2020-01-10T10:30:37Z\"\n        }\n      },\n      \"promiseData\": [\n        {\n          \"_type\": \"models.IdPromise\",\n          \"name\": \"ID promise\",\n          \"descrip\": \"You must give ID for each case enrolled\",\n          \"query\": \"What is the animal's name or number?\",\n          \"when\": \"PT0H\",\n          \"id\": 2345\n        },\n        {\n          \"_type\": \"models.IdPromise\",\n          \"name\": \"ID promise\",\n          \"descrip\": \"You must give ID for each case enrolled\",\n          \"query\": \"What is the animal's name or number?\",\n          \"when\": \"PT0H\",\n          \"id\": 2345\n        }\n      ]\n    },\n    {\n      \"id\": 123,\n      \"rxId\": \"gG3pBCR1GCMKm89c\",\n      \"caseData\": {\n        \"id\": 0,\n        \"rxId\": \"gG3pBCR1GCMKm89c\",\n        \"caseData\": {\n          \"_type\": \"models.IdData\",\n          \"animalId\": \"Bossie\",\n          \"initiationTime\": \"2020-01-10T10:30:37Z\"\n        }\n      },\n      \"promiseData\": [\n        {\n          \"_type\": \"models.IdPromise\",\n          \"name\": \"ID promise\",\n          \"descrip\": \"You must give ID for each case enrolled\",\n          \"query\": \"What is the animal's name or number?\",\n          \"when\": \"PT0H\",\n          \"id\": 2345\n        },\n        {\n          \"_type\": \"models.IdPromise\",\n          \"name\": \"ID promise\",\n          \"descrip\": \"You must give ID for each case enrolled\",\n          \"query\": \"What is the animal's name or number?\",\n          \"when\": \"PT0H\",\n          \"id\": 2345\n        }\n      ]\n    }\n  ]\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "21fd0b40-b230-4d9f-a8ba-b666e31275e1",
                            "name": "Authorization required",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "api",
                                        "users",
                                        "tasks"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "description": {
                                            "content": "Added as a part of security scheme: apikey",
                                            "type": "text/plain"
                                        },
                                        "key": "X-Auth-Token",
                                        "value": "<API Key>"
                                    }
                                ],
                                "method": "GET",
                                "body": {}
                            },
                            "status": "Unauthorized",
                            "code": 401,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "text/plain"
                                }
                            ],
                            "body": "",
                            "cookie": [],
                            "_postman_previewlanguage": "text"
                        }
                    ],
                    "event": []
                },
                {
                    "id": "5a291398-9874-44ac-b812-788c0c3fafbd",
                    "name": "get Greenbook Drug summary by NDC pattern",
                    "request": {
                        "name": "get Greenbook Drug summary by NDC pattern",
                        "description": {
                            "content": "This endpoint returns the summary listing of a Greenbook Drug by NDC pattern.",
                            "type": "text/plain"
                        },
                        "url": {
                            "path": [
                                "api",
                                "admin",
                                "product"
                            ],
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "query": [
                                {
                                    "disabled": false,
                                    "key": "ndcProd",
                                    "value": "-41001206",
                                    "description": "first section labeler code of a NDC"
                                },
                                {
                                    "disabled": false,
                                    "key": "ndcLabeler",
                                    "value": "-41001206",
                                    "description": "mid section product code of a NDC"
                                },
                                {
                                    "disabled": false,
                                    "key": "ndcBrand",
                                    "value": "-41001206",
                                    "description": "end section package code of a NDC"
                                }
                            ],
                            "variable": []
                        },
                        "header": [
                            {
                                "key": "Accept",
                                "value": "application/json"
                            }
                        ],
                        "method": "GET",
                        "auth": null
                    },
                    "response": [
                        {
                            "id": "53570c4f-f82a-4ef0-9a88-7b06eaf1539c",
                            "name": "OK",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "api",
                                        "admin",
                                        "product"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [
                                        {
                                            "key": "ndcProd",
                                            "value": "-41001206"
                                        },
                                        {
                                            "key": "ndcLabeler",
                                            "value": "-41001206"
                                        },
                                        {
                                            "key": "ndcBrand",
                                            "value": "-41001206"
                                        }
                                    ],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "description": {
                                            "content": "Added as a part of security scheme: apikey",
                                            "type": "text/plain"
                                        },
                                        "key": "X-Auth-Token",
                                        "value": "<API Key>"
                                    }
                                ],
                                "method": "GET",
                                "body": {}
                            },
                            "status": "OK",
                            "code": 200,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "[\n  {\n    \"id\": 64434878,\n    \"nada\": \"exercitation iru\",\n    \"name\": \"occaecat Duis exercitation\",\n    \"companyId\": 36229985,\n    \"imageURL\": \"do esse\",\n    \"insertURL\": \"ad minim amet dolor\"\n  },\n  {\n    \"id\": 22345191,\n    \"nada\": \"tempor \",\n    \"name\": \"amet aliquip reprehenderit pariatur laboris\",\n    \"companyId\": -15293376,\n    \"imageURL\": \"Excepteur\",\n    \"insertURL\": \"culpa sed occaecat minim \"\n  }\n]",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        }
                    ],
                    "event": []
                },
                {
                    "id": "03eab1a1-1977-4aa5-8766-3f51345e8313",
                    "name": "get summary listing of a Greenbook Drug",
                    "request": {
                        "name": "get summary listing of a Greenbook Drug",
                        "description": {
                            "content": "This endpoint returns the summary listing of a Greenbook Drug by ndc identifier.",
                            "type": "text/plain"
                        },
                        "url": {
                            "path": [
                                "api",
                                "admin",
                                "product",
                                ":ndc"
                            ],
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "query": [],
                            "variable": [
                                {
                                    "disabled": false,
                                    "type": "any",
                                    "value": "0061-4321-03",
                                    "key": "ndc",
                                    "description": "(Required) unique 10-digit, 3-segment number. labelerCode-productCode-packageCode"
                                }
                            ]
                        },
                        "header": [
                            {
                                "key": "Accept",
                                "value": "application/json"
                            }
                        ],
                        "method": "GET",
                        "auth": null
                    },
                    "response": [
                        {
                            "id": "f78e6fc1-7f56-4486-b3a0-48c1481b3f1a",
                            "name": "OK",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "api",
                                        "admin",
                                        "product",
                                        ":ndc"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": [
                                        {
                                            "disabled": false,
                                            "type": "any",
                                            "value": "0061-4321-03",
                                            "key": "ndc",
                                            "description": "(Required) unique 10-digit, 3-segment number. labelerCode-productCode-packageCode"
                                        }
                                    ]
                                },
                                "header": [
                                    {
                                        "description": {
                                            "content": "Added as a part of security scheme: apikey",
                                            "type": "text/plain"
                                        },
                                        "key": "X-Auth-Token",
                                        "value": "<API Key>"
                                    }
                                ],
                                "method": "GET",
                                "body": {}
                            },
                            "status": "OK",
                            "code": 200,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"id\": 36515197,\n  \"nada\": \"laboris esse proident anim\",\n  \"name\": \"tempor adipisicing nulla\",\n  \"companyId\": -25771810,\n  \"imageURL\": \"ea reprehenderit enim\",\n  \"insertURL\": \"laboris eiusmod dolore\"\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        }
                    ],
                    "event": []
                },
                {
                    "id": "5d8c9102-a909-4aaa-9436-ea85631db6a6",
                    "name": "get SPL",
                    "request": {
                        "name": "get SPL",
                        "description": {},
                        "url": {
                            "path": [
                                "api",
                                "admin",
                                "spl",
                                ":ndc"
                            ],
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "query": [],
                            "variable": [
                                {
                                    "disabled": false,
                                    "type": "any",
                                    "value": "0061-4321-03",
                                    "key": "ndc",
                                    "description": "(Required) unique 10-digit, 3-segment number. labelerCode-productCode-packageCode"
                                }
                            ]
                        },
                        "method": "GET",
                        "auth": null
                    },
                    "response": [
                        {
                            "id": "6ee4c04d-9b3e-4783-8bf6-ff635230c3e0",
                            "name": "Authorization required",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "api",
                                        "admin",
                                        "spl",
                                        ":ndc"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": [
                                        {
                                            "disabled": false,
                                            "type": "any",
                                            "value": "0061-4321-03",
                                            "key": "ndc",
                                            "description": "(Required) unique 10-digit, 3-segment number. labelerCode-productCode-packageCode"
                                        }
                                    ]
                                },
                                "header": [
                                    {
                                        "description": {
                                            "content": "Added as a part of security scheme: apikey",
                                            "type": "text/plain"
                                        },
                                        "key": "X-Auth-Token",
                                        "value": "<API Key>"
                                    }
                                ],
                                "method": "GET",
                                "body": {}
                            },
                            "status": "Unauthorized",
                            "code": 401,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "text/plain"
                                }
                            ],
                            "body": "",
                            "cookie": [],
                            "_postman_previewlanguage": "text"
                        }
                    ],
                    "event": []
                }
            ],
            "event": []
        },
        {
            "id": "991e5e79-bee9-408f-af56-203124e31e22",
            "name": "MOR",
            "description": {
                "content": "available to farm managers.",
                "type": "text/plain"
            },
            "item": [
                {
                    "id": "b5a6d551-0552-4c82-bf77-30f6a4018c38",
                    "name": "load Farm App",
                    "request": {
                        "name": "load Farm App",
                        "description": {
                            "content": "load Farm App",
                            "type": "text/plain"
                        },
                        "url": {
                            "path": [
                                "farm"
                            ],
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "query": [],
                            "variable": []
                        },
                        "header": [
                            {
                                "key": "Accept",
                                "value": "text/html"
                            }
                        ],
                        "method": "GET",
                        "auth": null
                    },
                    "response": [
                        {
                            "id": "2b90dd63-6959-4b9f-814b-878302eb2ebc",
                            "name": "load Farm App",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "farm"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "description": {
                                            "content": "Added as a part of security scheme: apikey",
                                            "type": "text/plain"
                                        },
                                        "key": "X-Auth-Token",
                                        "value": "<API Key>"
                                    }
                                ],
                                "method": "GET",
                                "body": {}
                            },
                            "status": "OK",
                            "code": 200,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "text/html"
                                }
                            ],
                            "body": "",
                            "cookie": [],
                            "_postman_previewlanguage": "text"
                        },
                        {
                            "id": "2615f0f6-9e9f-4b60-9971-82088db66c2d",
                            "name": "Authorization required",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "farm"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "description": {
                                            "content": "Added as a part of security scheme: apikey",
                                            "type": "text/plain"
                                        },
                                        "key": "X-Auth-Token",
                                        "value": "<API Key>"
                                    }
                                ],
                                "method": "GET",
                                "body": {}
                            },
                            "status": "Unauthorized",
                            "code": 401,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "text/plain"
                                }
                            ],
                            "body": "",
                            "cookie": [],
                            "_postman_previewlanguage": "text"
                        }
                    ],
                    "event": []
                },
                {
                    "id": "4d4a4726-b4c1-4e66-aa92-892b9bcd3ebd",
                    "name": "withholds",
                    "request": {
                        "name": "withholds",
                        "description": {
                            "content": "get withholds that include present or future time.",
                            "type": "text/plain"
                        },
                        "url": {
                            "path": [
                                "api",
                                "users",
                                "withholds"
                            ],
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "query": [],
                            "variable": []
                        },
                        "header": [
                            {
                                "key": "Accept",
                                "value": "application/json"
                            }
                        ],
                        "method": "GET",
                        "auth": null
                    },
                    "response": [
                        {
                            "id": "0b70f7e9-fd92-452a-84ad-0889bea34afc",
                            "name": "OK",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "api",
                                        "users",
                                        "withholds"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "description": {
                                            "content": "Added as a part of security scheme: apikey",
                                            "type": "text/plain"
                                        },
                                        "key": "X-Auth-Token",
                                        "value": "<API Key>"
                                    }
                                ],
                                "method": "GET",
                                "body": {}
                            },
                            "status": "OK",
                            "code": 200,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"labels\": [\n    {\n      \"id\": 55929835,\n      \"caseId\": -28298299,\n      \"animalId\": \"Bossie\",\n      \"initiated\": \"1997-12-11T09:14:28.073Z\",\n      \"wtMeatUntil\": \"2019-07-31T17:50:58.928Z\",\n      \"wtMilkUntil\": \"2012-01-17T10:21:48.821Z\",\n      \"note\": \"laborum id reprehenderit\"\n    },\n    {\n      \"id\": 16219703,\n      \"caseId\": 73326829,\n      \"animalId\": \"Bossie\",\n      \"initiated\": \"2002-05-27T13:55:21.427Z\",\n      \"wtMeatUntil\": \"1975-07-23T02:04:47.153Z\",\n      \"wtMilkUntil\": \"1995-09-21T12:23:38.065Z\",\n      \"note\": \"proident ex veniam\"\n    }\n  ]\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        }
                    ],
                    "event": []
                },
                {
                    "id": "087bc27c-7097-464c-8350-d884e7ca9aba",
                    "name": "recall or decline a prescription",
                    "request": {
                        "name": "recall or decline a prescription",
                        "description": {
                            "content": "Prescriptions are immutable except for metadata, and cannot actually be deleted. This endpoint makes a prescription unavailable for use. If called by the VOR, it sets staus to RECALLED. If called by the MOR to whom it is prescribed, it sets status to DECLINED. New cases  cannot be enrolled if either RECALLED or DECLIENED.",
                            "type": "text/plain"
                        },
                        "url": {
                            "path": [
                                "api",
                                "prescriptions",
                                ":id",
                                ""
                            ],
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "query": [],
                            "variable": [
                                {
                                    "disabled": false,
                                    "type": "any",
                                    "value": "officia Lorem",
                                    "key": "key",
                                    "description": "(Required) Prescription identifier"
                                }
                            ]
                        },
                        "header": [
                            {
                                "key": "Accept",
                                "value": "application/json"
                            }
                        ],
                        "method": "DELETE",
                        "auth": null
                    },
                    "response": [
                        {
                            "id": "10576254-8d75-4c9e-bcd6-f3a3d9f8d0b0",
                            "name": "prescription updated",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "api",
                                        "prescriptions",
                                        ":id",
                                        ""
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": [
                                        {
                                            "disabled": false,
                                            "type": "any",
                                            "value": "officia Lorem",
                                            "key": "key",
                                            "description": "(Required) Prescription identifier"
                                        }
                                    ]
                                },
                                "header": [
                                    {
                                        "description": {
                                            "content": "Added as a part of security scheme: apikey",
                                            "type": "text/plain"
                                        },
                                        "key": "X-Auth-Token",
                                        "value": "<API Key>"
                                    }
                                ],
                                "method": "DELETE",
                                "body": {}
                            },
                            "status": "OK",
                            "code": 200,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"updated\": -19821692\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "4a943354-4a8f-4684-9270-3f2108c16724",
                            "name": "Authorization required",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "api",
                                        "prescriptions",
                                        ":id",
                                        ""
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": [
                                        {
                                            "disabled": false,
                                            "type": "any",
                                            "value": "officia Lorem",
                                            "key": "key",
                                            "description": "(Required) Prescription identifier"
                                        }
                                    ]
                                },
                                "header": [
                                    {
                                        "description": {
                                            "content": "Added as a part of security scheme: apikey",
                                            "type": "text/plain"
                                        },
                                        "key": "X-Auth-Token",
                                        "value": "<API Key>"
                                    }
                                ],
                                "method": "DELETE",
                                "body": {}
                            },
                            "status": "Unauthorized",
                            "code": 401,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "text/plain"
                                }
                            ],
                            "body": "",
                            "cookie": [],
                            "_postman_previewlanguage": "text"
                        }
                    ],
                    "event": []
                },
                {
                    "id": "941beaaa-31bd-4712-833d-b20dd9852592",
                    "name": "enroll case",
                    "request": {
                        "name": "enroll case",
                        "description": {
                            "content": "Creates a Case linked to a prescription.",
                            "type": "text/plain"
                        },
                        "url": {
                            "path": [
                                "api",
                                "cases"
                            ],
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "query": [],
                            "variable": []
                        },
                        "header": [
                            {
                                "key": "Content-Type",
                                "value": "application/json"
                            },
                            {
                                "key": "Accept",
                                "value": "application/json"
                            }
                        ],
                        "method": "POST",
                        "auth": null,
                        "body": {
                            "mode": "raw",
                            "raw": "{\n  \"id\": 123,\n  \"rxId\": \"gG3pBCR1GCMKm89c\",\n  \"caseData\": {\n    \"id\": 0,\n    \"rxId\": \"gG3pBCR1GCMKm89c\",\n    \"caseData\": {\n      \"_type\": \"models.IdData\",\n      \"animalId\": \"Bossie\",\n      \"initiationTime\": \"2020-01-10T10:30:37Z\"\n    }\n  },\n  \"promiseData\": [\n    {\n      \"_type\": \"models.IdPromise\",\n      \"name\": \"ID promise\",\n      \"descrip\": \"You must give ID for each case enrolled\",\n      \"query\": \"What is the animal's name or number?\",\n      \"when\": \"PT0H\",\n      \"id\": 2345\n    },\n    {\n      \"_type\": \"models.IdPromise\",\n      \"name\": \"ID promise\",\n      \"descrip\": \"You must give ID for each case enrolled\",\n      \"query\": \"What is the animal's name or number?\",\n      \"when\": \"PT0H\",\n      \"id\": 2345\n    }\n  ]\n}",
                            "options": {
                                "raw": {
                                    "language": "json"
                                }
                            }
                        }
                    },
                    "response": [
                        {
                            "id": "4f2568d6-48c4-45a2-ba17-3837232f2993",
                            "name": "Success – recorded Protocol",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "api",
                                        "cases"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "description": {
                                            "content": "Added as a part of security scheme: apikey",
                                            "type": "text/plain"
                                        },
                                        "key": "X-Auth-Token",
                                        "value": "<API Key>"
                                    }
                                ],
                                "method": "POST",
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n  \"id\": 123,\n  \"rxId\": \"gG3pBCR1GCMKm89c\",\n  \"caseData\": {\n    \"id\": 0,\n    \"rxId\": \"gG3pBCR1GCMKm89c\",\n    \"caseData\": {\n      \"_type\": \"models.IdData\",\n      \"animalId\": \"Bossie\",\n      \"initiationTime\": \"2020-01-10T10:30:37Z\"\n    }\n  },\n  \"promiseData\": [\n    {\n      \"_type\": \"models.IdPromise\",\n      \"name\": \"ID promise\",\n      \"descrip\": \"You must give ID for each case enrolled\",\n      \"query\": \"What is the animal's name or number?\",\n      \"when\": \"PT0H\",\n      \"id\": 2345\n    },\n    {\n      \"_type\": \"models.IdPromise\",\n      \"name\": \"ID promise\",\n      \"descrip\": \"You must give ID for each case enrolled\",\n      \"query\": \"What is the animal's name or number?\",\n      \"when\": \"PT0H\",\n      \"id\": 2345\n    }\n  ]\n}",
                                    "options": {
                                        "raw": {
                                            "language": "json"
                                        }
                                    }
                                }
                            },
                            "status": "OK",
                            "code": 200,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"case\": {\n    \"id\": 123,\n    \"rxId\": \"gG3pBCR1GCMKm89c\",\n    \"caseData\": {\n      \"id\": 0,\n      \"rxId\": \"gG3pBCR1GCMKm89c\",\n      \"caseData\": {\n        \"_type\": \"models.IdData\",\n        \"animalId\": \"Bossie\",\n        \"initiationTime\": \"2020-01-10T10:30:37Z\"\n      }\n    },\n    \"promiseData\": [\n      {\n        \"_type\": \"models.IdPromise\",\n        \"name\": \"ID promise\",\n        \"descrip\": \"You must give ID for each case enrolled\",\n        \"query\": \"What is the animal's name or number?\",\n        \"when\": \"PT0H\",\n        \"id\": 2345\n      },\n      {\n        \"_type\": \"models.IdPromise\",\n        \"name\": \"ID promise\",\n        \"descrip\": \"You must give ID for each case enrolled\",\n        \"query\": \"What is the animal's name or number?\",\n        \"when\": \"PT0H\",\n        \"id\": 2345\n      }\n    ]\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "6edb72aa-d1d4-4c5e-84b3-1601cee12d91",
                            "name": "The server can not understand the request due to invalid syntax.",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "api",
                                        "cases"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "description": {
                                            "content": "Added as a part of security scheme: apikey",
                                            "type": "text/plain"
                                        },
                                        "key": "X-Auth-Token",
                                        "value": "<API Key>"
                                    }
                                ],
                                "method": "POST",
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n  \"id\": 123,\n  \"rxId\": \"gG3pBCR1GCMKm89c\",\n  \"caseData\": {\n    \"id\": 0,\n    \"rxId\": \"gG3pBCR1GCMKm89c\",\n    \"caseData\": {\n      \"_type\": \"models.IdData\",\n      \"animalId\": \"Bossie\",\n      \"initiationTime\": \"2020-01-10T10:30:37Z\"\n    }\n  },\n  \"promiseData\": [\n    {\n      \"_type\": \"models.IdPromise\",\n      \"name\": \"ID promise\",\n      \"descrip\": \"You must give ID for each case enrolled\",\n      \"query\": \"What is the animal's name or number?\",\n      \"when\": \"PT0H\",\n      \"id\": 2345\n    },\n    {\n      \"_type\": \"models.IdPromise\",\n      \"name\": \"ID promise\",\n      \"descrip\": \"You must give ID for each case enrolled\",\n      \"query\": \"What is the animal's name or number?\",\n      \"when\": \"PT0H\",\n      \"id\": 2345\n    }\n  ]\n}",
                                    "options": {
                                        "raw": {
                                            "language": "json"
                                        }
                                    }
                                }
                            },
                            "status": "Bad Request",
                            "code": 400,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"title\": \"incorrect username or password\",\n  \"status\": 404,\n  \"errorType\": \"/errors/incorrect-user-pass\",\n  \"detail\": \"Authentication failed due to incorrect username or password.\",\n  \"instance\": \"/login/log/abc123\"\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        }
                    ],
                    "event": [],
                    "protocolProfileBehavior": {
                        "disableBodyPruning": true
                    }
                },
                {
                    "id": "4d31c717-893b-4bbc-914c-637d1da13101",
                    "name": "execute task",
                    "request": {
                        "name": "execute task",
                        "description": {
                            "content": "Mark task status as completed",
                            "type": "text/plain"
                        },
                        "url": {
                            "path": [
                                "api",
                                "users",
                                "tasks"
                            ],
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "query": [],
                            "variable": []
                        },
                        "header": [
                            {
                                "key": "Content-Type",
                                "value": "application/json"
                            },
                            {
                                "key": "Accept",
                                "value": "application/json"
                            }
                        ],
                        "method": "POST",
                        "auth": null,
                        "body": {
                            "mode": "raw",
                            "raw": "{\n  \"_type\": \"voluptate cillum officia\",\n  \"animalId\": \"this\",\n  \"caseId\": 123,\n  \"detail\": \"tempor\",\n  \"doAt\": \"2020-01-10T10:30:37Z\",\n  \"id\": 123,\n  \"morId\": 123,\n  \"status\": \"REQUIRED\",\n  \"vorId\": 123,\n  \"executor\": 123\n}",
                            "options": {
                                "raw": {
                                    "language": "json"
                                }
                            }
                        }
                    },
                    "response": [
                        {
                            "id": "9e81bd51-5014-46de-a3de-1d96315343ea",
                            "name": "Success, Protocol recorded",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "api",
                                        "users",
                                        "tasks"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "description": {
                                            "content": "Added as a part of security scheme: apikey",
                                            "type": "text/plain"
                                        },
                                        "key": "X-Auth-Token",
                                        "value": "<API Key>"
                                    }
                                ],
                                "method": "POST",
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n  \"_type\": \"voluptate cillum officia\",\n  \"animalId\": \"this\",\n  \"caseId\": 123,\n  \"detail\": \"tempor\",\n  \"doAt\": \"2020-01-10T10:30:37Z\",\n  \"id\": 123,\n  \"morId\": 123,\n  \"status\": \"REQUIRED\",\n  \"vorId\": 123,\n  \"executor\": 123\n}",
                                    "options": {
                                        "raw": {
                                            "language": "json"
                                        }
                                    }
                                }
                            },
                            "status": "OK",
                            "code": 200,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"case\": {\n    \"id\": 123,\n    \"rxId\": \"gG3pBCR1GCMKm89c\",\n    \"caseData\": {\n      \"id\": 0,\n      \"rxId\": \"gG3pBCR1GCMKm89c\",\n      \"caseData\": {\n        \"_type\": \"models.IdData\",\n        \"animalId\": \"Bossie\",\n        \"initiationTime\": \"2020-01-10T10:30:37Z\"\n      }\n    },\n    \"promiseData\": [\n      {\n        \"_type\": \"models.IdPromise\",\n        \"name\": \"ID promise\",\n        \"descrip\": \"You must give ID for each case enrolled\",\n        \"query\": \"What is the animal's name or number?\",\n        \"when\": \"PT0H\",\n        \"id\": 2345\n      },\n      {\n        \"_type\": \"models.IdPromise\",\n        \"name\": \"ID promise\",\n        \"descrip\": \"You must give ID for each case enrolled\",\n        \"query\": \"What is the animal's name or number?\",\n        \"when\": \"PT0H\",\n        \"id\": 2345\n      }\n    ]\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "a0c9ddb0-9099-4cc2-b7e4-30e8ddfd190e",
                            "name": "The server can not understand the request due to invalid syntax.",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "api",
                                        "users",
                                        "tasks"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "description": {
                                            "content": "Added as a part of security scheme: apikey",
                                            "type": "text/plain"
                                        },
                                        "key": "X-Auth-Token",
                                        "value": "<API Key>"
                                    }
                                ],
                                "method": "POST",
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n  \"_type\": \"voluptate cillum officia\",\n  \"animalId\": \"this\",\n  \"caseId\": 123,\n  \"detail\": \"tempor\",\n  \"doAt\": \"2020-01-10T10:30:37Z\",\n  \"id\": 123,\n  \"morId\": 123,\n  \"status\": \"REQUIRED\",\n  \"vorId\": 123,\n  \"executor\": 123\n}",
                                    "options": {
                                        "raw": {
                                            "language": "json"
                                        }
                                    }
                                }
                            },
                            "status": "Bad Request",
                            "code": 400,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"title\": \"incorrect username or password\",\n  \"status\": 404,\n  \"errorType\": \"/errors/incorrect-user-pass\",\n  \"detail\": \"Authentication failed due to incorrect username or password.\",\n  \"instance\": \"/login/log/abc123\"\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        }
                    ],
                    "event": [],
                    "protocolProfileBehavior": {
                        "disableBodyPruning": true
                    }
                },
                {
                    "id": "abe30596-febd-4dce-b566-73404e5514fe",
                    "name": "get SPL",
                    "request": {
                        "name": "get SPL",
                        "description": {},
                        "url": {
                            "path": [
                                "api",
                                "admin",
                                "spl",
                                ":ndc"
                            ],
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "query": [],
                            "variable": [
                                {
                                    "disabled": false,
                                    "type": "any",
                                    "value": "0061-4321-03",
                                    "key": "ndc",
                                    "description": "(Required) unique 10-digit, 3-segment number. labelerCode-productCode-packageCode"
                                }
                            ]
                        },
                        "method": "GET",
                        "auth": null
                    },
                    "response": [
                        {
                            "id": "21af3f3d-2a91-4d09-9df7-1aa24ab65a6e",
                            "name": "Authorization required",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "api",
                                        "admin",
                                        "spl",
                                        ":ndc"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": [
                                        {
                                            "disabled": false,
                                            "type": "any",
                                            "value": "0061-4321-03",
                                            "key": "ndc",
                                            "description": "(Required) unique 10-digit, 3-segment number. labelerCode-productCode-packageCode"
                                        }
                                    ]
                                },
                                "header": [
                                    {
                                        "description": {
                                            "content": "Added as a part of security scheme: apikey",
                                            "type": "text/plain"
                                        },
                                        "key": "X-Auth-Token",
                                        "value": "<API Key>"
                                    }
                                ],
                                "method": "GET",
                                "body": {}
                            },
                            "status": "Unauthorized",
                            "code": 401,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "text/plain"
                                }
                            ],
                            "body": "",
                            "cookie": [],
                            "_postman_previewlanguage": "text"
                        }
                    ],
                    "event": []
                }
            ],
            "event": []
        },
        {
            "id": "c321f40f-017b-46c5-83fa-065c8fcdf9d1",
            "name": "ALL_USERS",
            "description": {
                "content": "available to all users.",
                "type": "text/plain"
            },
            "item": [
                {
                    "id": "40c9f846-e1ae-4137-a174-693d783f6f97",
                    "name": "update user data",
                    "request": {
                        "name": "update user data",
                        "description": {
                            "content": "Users may update their own data. A VOR may also update User data of a User in a `CLIENT` relationship with that VOR. A SAOR may update data of any User.",
                            "type": "text/plain"
                        },
                        "url": {
                            "path": [
                                "api",
                                "users"
                            ],
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "query": [],
                            "variable": []
                        },
                        "header": [
                            {
                                "key": "Content-Type",
                                "value": "application/json"
                            },
                            {
                                "key": "Accept",
                                "value": "application/json"
                            }
                        ],
                        "method": "PUT",
                        "auth": null,
                        "body": {
                            "mode": "raw",
                            "raw": "{\n  \"user\": {\n    \"id\": 1,\n    \"uname\": \"exampleUser\",\n    \"userType\": \"VOR\",\n    \"firstname\": \"Example\",\n    \"lastname\": \"User\",\n    \"email\": \"exampleUser@email.com\",\n    \"suffix\": \"DVM\"\n  }\n}",
                            "options": {
                                "raw": {
                                    "language": "json"
                                }
                            }
                        }
                    },
                    "response": [
                        {
                            "id": "4ef8ecc9-2eb2-4f81-b5e2-7ba5d5f6498f",
                            "name": "User updated",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "api",
                                        "users"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "description": {
                                            "content": "Added as a part of security scheme: apikey",
                                            "type": "text/plain"
                                        },
                                        "key": "X-Auth-Token",
                                        "value": "<API Key>"
                                    }
                                ],
                                "method": "PUT",
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n  \"user\": {\n    \"id\": 1,\n    \"uname\": \"exampleUser\",\n    \"userType\": \"VOR\",\n    \"firstname\": \"Example\",\n    \"lastname\": \"User\",\n    \"email\": \"exampleUser@email.com\",\n    \"suffix\": \"DVM\"\n  }\n}",
                                    "options": {
                                        "raw": {
                                            "language": "json"
                                        }
                                    }
                                }
                            },
                            "status": "OK",
                            "code": 200,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"updated-records\": -7923530\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "6afdf53e-60e6-4739-a94b-012bcac68274",
                            "name": "The server can not understand the request due to invalid syntax.",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "api",
                                        "users"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "description": {
                                            "content": "Added as a part of security scheme: apikey",
                                            "type": "text/plain"
                                        },
                                        "key": "X-Auth-Token",
                                        "value": "<API Key>"
                                    }
                                ],
                                "method": "PUT",
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n  \"user\": {\n    \"id\": 1,\n    \"uname\": \"exampleUser\",\n    \"userType\": \"VOR\",\n    \"firstname\": \"Example\",\n    \"lastname\": \"User\",\n    \"email\": \"exampleUser@email.com\",\n    \"suffix\": \"DVM\"\n  }\n}",
                                    "options": {
                                        "raw": {
                                            "language": "json"
                                        }
                                    }
                                }
                            },
                            "status": "Bad Request",
                            "code": 400,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"title\": \"incorrect username or password\",\n  \"status\": 404,\n  \"errorType\": \"/errors/incorrect-user-pass\",\n  \"detail\": \"Authentication failed due to incorrect username or password.\",\n  \"instance\": \"/login/log/abc123\"\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        }
                    ],
                    "event": [],
                    "protocolProfileBehavior": {
                        "disableBodyPruning": true
                    }
                },
                {
                    "id": "1a3f7986-c0db-484f-ae11-110f36c34a8b",
                    "name": "user login",
                    "request": {
                        "name": "user login",
                        "description": {
                            "content": "Authenticate a User and the app requesting a token, returning a token for use in future secured requests.",
                            "type": "text/plain"
                        },
                        "url": {
                            "path": [
                                "api",
                                "users",
                                "logins"
                            ],
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "query": [],
                            "variable": []
                        },
                        "header": [
                            {
                                "key": "Content-Type",
                                "value": "application/json"
                            },
                            {
                                "key": "Accept",
                                "value": "application/json"
                            }
                        ],
                        "method": "POST",
                        "auth": null,
                        "body": {
                            "mode": "raw",
                            "raw": "{\n  \"apikey\": \"t0CGzpQ4cgu1OBy44sBt\",\n  \"identifier\": \"someUser\",\n  \"password\": \"somePassword\"\n}",
                            "options": {
                                "raw": {
                                    "language": "json"
                                }
                            }
                        }
                    },
                    "response": [
                        {
                            "id": "823bba03-65c5-4b92-90e0-b72df64e8393",
                            "name": "Successful login",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "api",
                                        "users",
                                        "logins"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "description": {
                                            "content": "Added as a part of security scheme: apikey",
                                            "type": "text/plain"
                                        },
                                        "key": "X-Auth-Token",
                                        "value": "<API Key>"
                                    }
                                ],
                                "method": "POST",
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n  \"apikey\": \"t0CGzpQ4cgu1OBy44sBt\",\n  \"identifier\": \"someUser\",\n  \"password\": \"somePassword\"\n}",
                                    "options": {
                                        "raw": {
                                            "language": "json"
                                        }
                                    }
                                }
                            },
                            "status": "OK",
                            "code": 200,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"user\": {\n    \"id\": 1,\n    \"uname\": \"exampleUser\",\n    \"userType\": \"VOR\",\n    \"firstname\": \"Example\",\n    \"lastname\": \"User\",\n    \"email\": \"exampleUser@email.com\",\n    \"suffix\": \"DVM\"\n  },\n  \"token\": \"eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJleUp3Y205MmFXUmxja2xFSWpvaVkzSmxaR1Z1ZEdsaGJITWlMQ0p3Y205MmFXUmxja3RsZVNJNkluUmxjM1JXVDFJaWZRPT0iLCJpc3MiOiJwbGF5LXNpbGhvdWV0dGUiLCJle***...\",\n  \"filePolicy\": \"3da8c83495cb00d216369a355322078106ebc2e5eac78333eb90d00de5611d9a\",\n  \"fileSignature\": \"eyJleHBpcnkiOjE1Nzg3NTY2MDIsIm1heFNpemUiOjEwMDAwMDAwfQ==\"\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "d89d734f-54ec-44e8-8c75-779bfb7f320c",
                            "name": "The server can not understand the request due to invalid syntax.",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "api",
                                        "users",
                                        "logins"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "description": {
                                            "content": "Added as a part of security scheme: apikey",
                                            "type": "text/plain"
                                        },
                                        "key": "X-Auth-Token",
                                        "value": "<API Key>"
                                    }
                                ],
                                "method": "POST",
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n  \"apikey\": \"t0CGzpQ4cgu1OBy44sBt\",\n  \"identifier\": \"someUser\",\n  \"password\": \"somePassword\"\n}",
                                    "options": {
                                        "raw": {
                                            "language": "json"
                                        }
                                    }
                                }
                            },
                            "status": "Bad Request",
                            "code": 400,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"title\": \"incorrect username or password\",\n  \"status\": 404,\n  \"errorType\": \"/errors/incorrect-user-pass\",\n  \"detail\": \"Authentication failed due to incorrect username or password.\",\n  \"instance\": \"/login/log/abc123\"\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        }
                    ],
                    "event": [],
                    "protocolProfileBehavior": {
                        "disableBodyPruning": true
                    }
                },
                {
                    "id": "67cda688-b1b1-4fbd-b969-01225e2abaa2",
                    "name": "renew token",
                    "request": {
                        "name": "renew token",
                        "description": {
                            "content": "Renews the User's access token for use in future secured requests.",
                            "type": "text/plain"
                        },
                        "url": {
                            "path": [
                                "api",
                                "users",
                                "logins"
                            ],
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "query": [],
                            "variable": []
                        },
                        "header": [
                            {
                                "key": "Accept",
                                "value": "application/json"
                            }
                        ],
                        "method": "GET",
                        "auth": null
                    },
                    "response": [
                        {
                            "id": "25c3a1b1-f9d1-43a0-a15b-10c30991941a",
                            "name": "Success – token refreshed",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "api",
                                        "users",
                                        "logins"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "description": {
                                            "content": "Added as a part of security scheme: apikey",
                                            "type": "text/plain"
                                        },
                                        "key": "X-Auth-Token",
                                        "value": "<API Key>"
                                    }
                                ],
                                "method": "GET",
                                "body": {}
                            },
                            "status": "OK",
                            "code": 200,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"user\": {\n    \"id\": 1,\n    \"uname\": \"exampleUser\",\n    \"userType\": \"VOR\",\n    \"firstname\": \"Example\",\n    \"lastname\": \"User\",\n    \"email\": \"exampleUser@email.com\",\n    \"suffix\": \"DVM\"\n  },\n  \"token\": \"eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJleUp3Y205MmFXUmxja2xFSWpvaVkzSmxaR1Z1ZEdsaGJITWlMQ0p3Y205MmFXUmxja3RsZVNJNkluUmxjM1JXVDFJaWZRPT0iLCJpc3MiOiJwbGF5LXNpbGhvdWV0dGUiLCJle***...\",\n  \"filePolicy\": \"3da8c83495cb00d216369a355322078106ebc2e5eac78333eb90d00de5611d9a\",\n  \"fileSignature\": \"eyJleHBpcnkiOjE1Nzg3NTY2MDIsIm1heFNpemUiOjEwMDAwMDAwfQ==\"\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "268a9546-f29d-4b65-9df6-98785bde0c66",
                            "name": "Authorization required",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "api",
                                        "users",
                                        "logins"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "description": {
                                            "content": "Added as a part of security scheme: apikey",
                                            "type": "text/plain"
                                        },
                                        "key": "X-Auth-Token",
                                        "value": "<API Key>"
                                    }
                                ],
                                "method": "GET",
                                "body": {}
                            },
                            "status": "Unauthorized",
                            "code": 401,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "text/plain"
                                }
                            ],
                            "body": "",
                            "cookie": [],
                            "_postman_previewlanguage": "text"
                        }
                    ],
                    "event": []
                },
                {
                    "id": "3fa726b3-4b17-45fd-b07a-685229f6d05d",
                    "name": "get user data",
                    "request": {
                        "name": "get user data",
                        "description": {
                            "content": "Returns User data as specified by User `id`. Any User may get their own data. A VOR may get User data of Users in a `CLIENT` relationship with that VOR. A SAOR may get data of any User.",
                            "type": "text/plain"
                        },
                        "url": {
                            "path": [
                                "api",
                                "users",
                                ":id"
                            ],
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "query": [],
                            "variable": [
                                {
                                    "disabled": false,
                                    "type": "any",
                                    "value": "2",
                                    "key": "id",
                                    "description": "(Required) User ID key"
                                }
                            ]
                        },
                        "header": [
                            {
                                "key": "Accept",
                                "value": "application/json"
                            }
                        ],
                        "method": "GET",
                        "auth": null
                    },
                    "response": [
                        {
                            "id": "a84d6b23-fb5e-415a-aa7e-873269c7ec09",
                            "name": "User",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "api",
                                        "users",
                                        ":id"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": [
                                        {
                                            "disabled": false,
                                            "type": "any",
                                            "value": "2",
                                            "key": "id",
                                            "description": "(Required) User ID key"
                                        }
                                    ]
                                },
                                "header": [
                                    {
                                        "description": {
                                            "content": "Added as a part of security scheme: apikey",
                                            "type": "text/plain"
                                        },
                                        "key": "X-Auth-Token",
                                        "value": "<API Key>"
                                    }
                                ],
                                "method": "GET",
                                "body": {}
                            },
                            "status": "OK",
                            "code": 200,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"user\": {\n    \"id\": 1,\n    \"uname\": \"exampleUser\",\n    \"userType\": \"VOR\",\n    \"firstname\": \"Example\",\n    \"lastname\": \"User\",\n    \"email\": \"exampleUser@email.com\",\n    \"suffix\": \"DVM\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "ffd44a26-92cd-4eeb-9418-c9105372873d",
                            "name": "The server can not understand the request due to invalid syntax.",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "api",
                                        "users",
                                        ":id"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": [
                                        {
                                            "disabled": false,
                                            "type": "any",
                                            "value": "2",
                                            "key": "id",
                                            "description": "(Required) User ID key"
                                        }
                                    ]
                                },
                                "header": [
                                    {
                                        "description": {
                                            "content": "Added as a part of security scheme: apikey",
                                            "type": "text/plain"
                                        },
                                        "key": "X-Auth-Token",
                                        "value": "<API Key>"
                                    }
                                ],
                                "method": "GET",
                                "body": {}
                            },
                            "status": "Bad Request",
                            "code": 400,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"title\": \"incorrect username or password\",\n  \"status\": 404,\n  \"errorType\": \"/errors/incorrect-user-pass\",\n  \"detail\": \"Authentication failed due to incorrect username or password.\",\n  \"instance\": \"/login/log/abc123\"\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "2057d2d1-4282-48d9-9f16-864b3e9aa81a",
                            "name": "Authorization required",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "api",
                                        "users",
                                        ":id"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": [
                                        {
                                            "disabled": false,
                                            "type": "any",
                                            "value": "2",
                                            "key": "id",
                                            "description": "(Required) User ID key"
                                        }
                                    ]
                                },
                                "header": [
                                    {
                                        "description": {
                                            "content": "Added as a part of security scheme: apikey",
                                            "type": "text/plain"
                                        },
                                        "key": "X-Auth-Token",
                                        "value": "<API Key>"
                                    }
                                ],
                                "method": "GET",
                                "body": {}
                            },
                            "status": "Forbidden",
                            "code": 403,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "text/plain"
                                }
                            ],
                            "body": "",
                            "cookie": [],
                            "_postman_previewlanguage": "text"
                        }
                    ],
                    "event": []
                },
                {
                    "id": "85abee2d-2d83-4e75-bf65-9c6fad808cd2",
                    "name": "list of all",
                    "request": {
                        "name": "list of all",
                        "description": {
                            "content": "list of .",
                            "type": "text/plain"
                        },
                        "url": {
                            "path": [
                                "api",
                                "visits",
                                ":id"
                            ],
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "query": [],
                            "variable": [
                                {
                                    "disabled": false,
                                    "type": "any",
                                    "value": "2",
                                    "key": "id",
                                    "description": "(Required) User ID key"
                                }
                            ]
                        },
                        "header": [
                            {
                                "key": "Accept",
                                "value": "application/json"
                            }
                        ],
                        "method": "GET",
                        "auth": null
                    },
                    "response": [
                        {
                            "id": "5c903601-9137-4ed4-b275-611bcfb85ff4",
                            "name": "OK",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "api",
                                        "visits",
                                        ":id"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": [
                                        {
                                            "disabled": false,
                                            "type": "any",
                                            "value": "2",
                                            "key": "id",
                                            "description": "(Required) User ID key"
                                        }
                                    ]
                                },
                                "header": [
                                    {
                                        "description": {
                                            "content": "Added as a part of security scheme: apikey",
                                            "type": "text/plain"
                                        },
                                        "key": "X-Auth-Token",
                                        "value": "<API Key>"
                                    }
                                ],
                                "method": "GET",
                                "body": {}
                            },
                            "status": "OK",
                            "code": 200,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"visits\": [\n    {\n      \"message\": \"some message\",\n      \"userId\": 1,\n      \"when\": \"2020-01-10T10:30:37Z\"\n    },\n    {\n      \"message\": \"some message\",\n      \"userId\": 1,\n      \"when\": \"2020-01-10T10:30:37Z\"\n    }\n  ]\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        }
                    ],
                    "event": []
                },
                {
                    "id": "aa1b0430-e236-4dbf-b64a-208471f1616d",
                    "name": "update address",
                    "request": {
                        "name": "update address",
                        "description": {
                            "content": "A User may update their own address.",
                            "type": "text/plain"
                        },
                        "url": {
                            "path": [
                                "api",
                                "users",
                                "addresses"
                            ],
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "query": [],
                            "variable": []
                        },
                        "header": [
                            {
                                "key": "Content-Type",
                                "value": "application/json"
                            },
                            {
                                "key": "Accept",
                                "value": "application/json"
                            }
                        ],
                        "method": "PUT",
                        "auth": null,
                        "body": {
                            "mode": "raw",
                            "raw": "{\n  \"user\": {\n    \"id\": 1,\n    \"uname\": \"exampleUser\",\n    \"userType\": \"VOR\",\n    \"firstname\": \"Example\",\n    \"lastname\": \"User\",\n    \"email\": \"exampleUser@email.com\",\n    \"suffix\": \"DVM\"\n  }\n}",
                            "options": {
                                "raw": {
                                    "language": "json"
                                }
                            }
                        }
                    },
                    "response": [
                        {
                            "id": "895d6676-66f6-4f6d-b205-ea9124c9e919",
                            "name": "User updated",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "api",
                                        "users",
                                        "addresses"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "description": {
                                            "content": "Added as a part of security scheme: apikey",
                                            "type": "text/plain"
                                        },
                                        "key": "X-Auth-Token",
                                        "value": "<API Key>"
                                    }
                                ],
                                "method": "PUT",
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n  \"user\": {\n    \"id\": 1,\n    \"uname\": \"exampleUser\",\n    \"userType\": \"VOR\",\n    \"firstname\": \"Example\",\n    \"lastname\": \"User\",\n    \"email\": \"exampleUser@email.com\",\n    \"suffix\": \"DVM\"\n  }\n}",
                                    "options": {
                                        "raw": {
                                            "language": "json"
                                        }
                                    }
                                }
                            },
                            "status": "OK",
                            "code": 200,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"updated-records\": -7923530\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "419c1ade-4dce-493f-a47a-c46a25366d0c",
                            "name": "Authorization required",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "api",
                                        "users",
                                        "addresses"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "description": {
                                            "content": "Added as a part of security scheme: apikey",
                                            "type": "text/plain"
                                        },
                                        "key": "X-Auth-Token",
                                        "value": "<API Key>"
                                    }
                                ],
                                "method": "PUT",
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n  \"user\": {\n    \"id\": 1,\n    \"uname\": \"exampleUser\",\n    \"userType\": \"VOR\",\n    \"firstname\": \"Example\",\n    \"lastname\": \"User\",\n    \"email\": \"exampleUser@email.com\",\n    \"suffix\": \"DVM\"\n  }\n}",
                                    "options": {
                                        "raw": {
                                            "language": "json"
                                        }
                                    }
                                }
                            },
                            "status": "Unauthorized",
                            "code": 401,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "text/plain"
                                }
                            ],
                            "body": "",
                            "cookie": [],
                            "_postman_previewlanguage": "text"
                        }
                    ],
                    "event": [],
                    "protocolProfileBehavior": {
                        "disableBodyPruning": true
                    }
                },
                {
                    "id": "b0629572-35f6-471f-817b-a2eab79a89b8",
                    "name": "address of user",
                    "request": {
                        "name": "address of user",
                        "description": {
                            "content": "Address of user specified by `id`.",
                            "type": "text/plain"
                        },
                        "url": {
                            "path": [
                                "api",
                                "users",
                                "addresses",
                                ":id"
                            ],
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "query": [],
                            "variable": [
                                {
                                    "disabled": false,
                                    "type": "any",
                                    "value": "2",
                                    "key": "id",
                                    "description": "(Required) User ID key"
                                }
                            ]
                        },
                        "header": [
                            {
                                "key": "Accept",
                                "value": "application/json"
                            }
                        ],
                        "method": "GET",
                        "auth": null
                    },
                    "response": [
                        {
                            "id": "2dee26ad-7986-4cf1-983e-e280d8bbc1bc",
                            "name": "User",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "api",
                                        "users",
                                        "addresses",
                                        ":id"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": [
                                        {
                                            "disabled": false,
                                            "type": "any",
                                            "value": "2",
                                            "key": "id",
                                            "description": "(Required) User ID key"
                                        }
                                    ]
                                },
                                "header": [
                                    {
                                        "description": {
                                            "content": "Added as a part of security scheme: apikey",
                                            "type": "text/plain"
                                        },
                                        "key": "X-Auth-Token",
                                        "value": "<API Key>"
                                    }
                                ],
                                "method": "GET",
                                "body": {}
                            },
                            "status": "OK",
                            "code": 200,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"user\": {\n    \"userId\": -52007830,\n    \"address1\": \"123 Main St.\",\n    \"address2\": \"123 Main St.\",\n    \"town\": \"Anytown\",\n    \"state\": \"Any State\",\n    \"zip\": \"12345-abcd\",\n    \"busName\": \"testVOR Clinic\",\n    \"country\": \"USA\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "4f78aa32-56a8-469f-a062-a10b05dc59bb",
                            "name": "Authorization required",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "api",
                                        "users",
                                        "addresses",
                                        ":id"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": [
                                        {
                                            "disabled": false,
                                            "type": "any",
                                            "value": "2",
                                            "key": "id",
                                            "description": "(Required) User ID key"
                                        }
                                    ]
                                },
                                "header": [
                                    {
                                        "description": {
                                            "content": "Added as a part of security scheme: apikey",
                                            "type": "text/plain"
                                        },
                                        "key": "X-Auth-Token",
                                        "value": "<API Key>"
                                    }
                                ],
                                "method": "GET",
                                "body": {}
                            },
                            "status": "Unauthorized",
                            "code": 401,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "text/plain"
                                }
                            ],
                            "body": "",
                            "cookie": [],
                            "_postman_previewlanguage": "text"
                        }
                    ],
                    "event": []
                },
                {
                    "id": "f53b9488-cc29-423e-a437-f29400eee0d0",
                    "name": "update profile",
                    "request": {
                        "name": "update profile",
                        "description": {
                            "content": "A User may update their own profile.",
                            "type": "text/plain"
                        },
                        "url": {
                            "path": [
                                "api",
                                "users",
                                "profiles"
                            ],
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "query": [],
                            "variable": []
                        },
                        "header": [
                            {
                                "key": "Content-Type",
                                "value": "application/json"
                            },
                            {
                                "key": "Accept",
                                "value": "application/json"
                            }
                        ],
                        "method": "PUT",
                        "auth": null,
                        "body": {
                            "mode": "raw",
                            "raw": "{\n  \"user\": {\n    \"address1\": \"123 Main St.\",\n    \"address2\": \"123 Main St.\",\n    \"emailNews\": false,\n    \"emailTips\": false,\n    \"firstname\": \"Example\",\n    \"id\": 1,\n    \"lastname\": \"User\",\n    \"rxHeader\": \"anim sit amet\",\n    \"sandboxName\": \"ipsum cillum proident ea repr\",\n    \"state\": \"Any State\",\n    \"town\": \"Anytown\",\n    \"uname\": \"exampleUser\",\n    \"userId\": 48836980,\n    \"userType\": \"VOR\",\n    \"zip\": \"12345-abcd\",\n    \"email\": \"exampleUser@email.com\",\n    \"suffix\": \"DVM\",\n    \"busName\": \"testVOR Clinic\",\n    \"country\": \"USA\"\n  }\n}",
                            "options": {
                                "raw": {
                                    "language": "json"
                                }
                            }
                        }
                    },
                    "response": [
                        {
                            "id": "58c515d3-d88e-4712-8fba-629e98204556",
                            "name": "User updated",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "api",
                                        "users",
                                        "profiles"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "description": {
                                            "content": "Added as a part of security scheme: apikey",
                                            "type": "text/plain"
                                        },
                                        "key": "X-Auth-Token",
                                        "value": "<API Key>"
                                    }
                                ],
                                "method": "PUT",
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n  \"user\": {\n    \"address1\": \"123 Main St.\",\n    \"address2\": \"123 Main St.\",\n    \"emailNews\": false,\n    \"emailTips\": false,\n    \"firstname\": \"Example\",\n    \"id\": 1,\n    \"lastname\": \"User\",\n    \"rxHeader\": \"anim sit amet\",\n    \"sandboxName\": \"ipsum cillum proident ea repr\",\n    \"state\": \"Any State\",\n    \"town\": \"Anytown\",\n    \"uname\": \"exampleUser\",\n    \"userId\": 48836980,\n    \"userType\": \"VOR\",\n    \"zip\": \"12345-abcd\",\n    \"email\": \"exampleUser@email.com\",\n    \"suffix\": \"DVM\",\n    \"busName\": \"testVOR Clinic\",\n    \"country\": \"USA\"\n  }\n}",
                                    "options": {
                                        "raw": {
                                            "language": "json"
                                        }
                                    }
                                }
                            },
                            "status": "OK",
                            "code": 200,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"updated-records\": -7923530\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "557893d3-564d-4ed9-8e84-8e5d9f9b3edd",
                            "name": "Authorization required",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "api",
                                        "users",
                                        "profiles"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "description": {
                                            "content": "Added as a part of security scheme: apikey",
                                            "type": "text/plain"
                                        },
                                        "key": "X-Auth-Token",
                                        "value": "<API Key>"
                                    }
                                ],
                                "method": "PUT",
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n  \"user\": {\n    \"address1\": \"123 Main St.\",\n    \"address2\": \"123 Main St.\",\n    \"emailNews\": false,\n    \"emailTips\": false,\n    \"firstname\": \"Example\",\n    \"id\": 1,\n    \"lastname\": \"User\",\n    \"rxHeader\": \"anim sit amet\",\n    \"sandboxName\": \"ipsum cillum proident ea repr\",\n    \"state\": \"Any State\",\n    \"town\": \"Anytown\",\n    \"uname\": \"exampleUser\",\n    \"userId\": 48836980,\n    \"userType\": \"VOR\",\n    \"zip\": \"12345-abcd\",\n    \"email\": \"exampleUser@email.com\",\n    \"suffix\": \"DVM\",\n    \"busName\": \"testVOR Clinic\",\n    \"country\": \"USA\"\n  }\n}",
                                    "options": {
                                        "raw": {
                                            "language": "json"
                                        }
                                    }
                                }
                            },
                            "status": "Unauthorized",
                            "code": 401,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "text/plain"
                                }
                            ],
                            "body": "",
                            "cookie": [],
                            "_postman_previewlanguage": "text"
                        }
                    ],
                    "event": [],
                    "protocolProfileBehavior": {
                        "disableBodyPruning": true
                    }
                },
                {
                    "id": "02ebdf6a-8fa7-4e65-94bb-6d8aade4c605",
                    "name": "Profile of user",
                    "request": {
                        "name": "Profile of user",
                        "description": {
                            "content": "Profile of user specified by `id`.",
                            "type": "text/plain"
                        },
                        "url": {
                            "path": [
                                "api",
                                "users",
                                "profiles",
                                ":id"
                            ],
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "query": [],
                            "variable": [
                                {
                                    "disabled": false,
                                    "type": "any",
                                    "value": "2",
                                    "key": "id",
                                    "description": "(Required) User ID key"
                                }
                            ]
                        },
                        "header": [
                            {
                                "key": "Accept",
                                "value": "application/json"
                            }
                        ],
                        "method": "GET",
                        "auth": null
                    },
                    "response": [
                        {
                            "id": "5f81cb05-cb5c-454c-accc-f5d3f1a8be49",
                            "name": "User",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "api",
                                        "users",
                                        "profiles",
                                        ":id"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": [
                                        {
                                            "disabled": false,
                                            "type": "any",
                                            "value": "2",
                                            "key": "id",
                                            "description": "(Required) User ID key"
                                        }
                                    ]
                                },
                                "header": [
                                    {
                                        "description": {
                                            "content": "Added as a part of security scheme: apikey",
                                            "type": "text/plain"
                                        },
                                        "key": "X-Auth-Token",
                                        "value": "<API Key>"
                                    }
                                ],
                                "method": "GET",
                                "body": {}
                            },
                            "status": "OK",
                            "code": 200,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"user\": {\n    \"userId\": -52007830,\n    \"address1\": \"123 Main St.\",\n    \"address2\": \"123 Main St.\",\n    \"town\": \"Anytown\",\n    \"state\": \"Any State\",\n    \"zip\": \"12345-abcd\",\n    \"busName\": \"testVOR Clinic\",\n    \"country\": \"USA\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "b6ffea8a-8876-4427-878e-c4c01c3466c5",
                            "name": "Authorization required",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "api",
                                        "users",
                                        "profiles",
                                        ":id"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": [
                                        {
                                            "disabled": false,
                                            "type": "any",
                                            "value": "2",
                                            "key": "id",
                                            "description": "(Required) User ID key"
                                        }
                                    ]
                                },
                                "header": [
                                    {
                                        "description": {
                                            "content": "Added as a part of security scheme: apikey",
                                            "type": "text/plain"
                                        },
                                        "key": "X-Auth-Token",
                                        "value": "<API Key>"
                                    }
                                ],
                                "method": "GET",
                                "body": {}
                            },
                            "status": "Unauthorized",
                            "code": 401,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "text/plain"
                                }
                            ],
                            "body": "",
                            "cookie": [],
                            "_postman_previewlanguage": "text"
                        }
                    ],
                    "event": []
                },
                {
                    "id": "7c8004ab-657a-46b0-b39a-18f85dadd8af",
                    "name": "confirm Token",
                    "request": {
                        "name": "confirm Token",
                        "description": {
                            "content": "used for clickable link to confirm a token sent in email.",
                            "type": "text/plain"
                        },
                        "url": {
                            "path": [
                                "api",
                                "users",
                                "token",
                                ":token"
                            ],
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "query": [],
                            "variable": []
                        },
                        "header": [
                            {
                                "key": "Accept",
                                "value": "text/html"
                            }
                        ],
                        "method": "GET",
                        "auth": null
                    },
                    "response": [
                        {
                            "id": "0627ae48-b3a5-43de-8366-1df0daed3561",
                            "name": "OK",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "api",
                                        "users",
                                        "token",
                                        ":token"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "description": {
                                            "content": "Added as a part of security scheme: apikey",
                                            "type": "text/plain"
                                        },
                                        "key": "X-Auth-Token",
                                        "value": "<API Key>"
                                    }
                                ],
                                "method": "GET",
                                "body": {}
                            },
                            "status": "OK",
                            "code": 200,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "text/html"
                                }
                            ],
                            "body": "ullamco",
                            "cookie": [],
                            "_postman_previewlanguage": "text"
                        }
                    ],
                    "event": []
                },
                {
                    "id": "7c17cfd2-f605-42b7-9029-3c91ac079bad",
                    "name": "record a User comment",
                    "request": {
                        "name": "record a User comment",
                        "description": {
                            "content": "Records a User comment to the database and emails admin. It supports privacy controls.",
                            "type": "text/plain"
                        },
                        "url": {
                            "path": [
                                "api",
                                "users",
                                "comments"
                            ],
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "query": [],
                            "variable": []
                        },
                        "header": [
                            {
                                "key": "Content-Type",
                                "value": "application/json"
                            },
                            {
                                "key": "Accept",
                                "value": "application/json"
                            }
                        ],
                        "method": "POST",
                        "auth": null,
                        "body": {
                            "mode": "raw",
                            "raw": "{\n  \"comment\": \"some comment\",\n  \"userId\": 1,\n  \"public\": false\n}",
                            "options": {
                                "raw": {
                                    "language": "json"
                                }
                            }
                        }
                    },
                    "response": [
                        {
                            "id": "ad3eb561-66dd-4ab6-9c43-475fd6a9947b",
                            "name": "Success – comment recorded",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "api",
                                        "users",
                                        "comments"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "description": {
                                            "content": "Added as a part of security scheme: apikey",
                                            "type": "text/plain"
                                        },
                                        "key": "X-Auth-Token",
                                        "value": "<API Key>"
                                    }
                                ],
                                "method": "POST",
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n  \"comment\": \"some comment\",\n  \"userId\": 1,\n  \"public\": false\n}",
                                    "options": {
                                        "raw": {
                                            "language": "json"
                                        }
                                    }
                                }
                            },
                            "status": "OK",
                            "code": 200,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"recorded\": -29898503\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "28982ff2-d04b-4371-941c-631f2385f031",
                            "name": "The server can not understand the request due to invalid syntax.",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "api",
                                        "users",
                                        "comments"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "description": {
                                            "content": "Added as a part of security scheme: apikey",
                                            "type": "text/plain"
                                        },
                                        "key": "X-Auth-Token",
                                        "value": "<API Key>"
                                    }
                                ],
                                "method": "POST",
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n  \"comment\": \"some comment\",\n  \"userId\": 1,\n  \"public\": false\n}",
                                    "options": {
                                        "raw": {
                                            "language": "json"
                                        }
                                    }
                                }
                            },
                            "status": "Bad Request",
                            "code": 400,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"title\": \"incorrect username or password\",\n  \"status\": 404,\n  \"errorType\": \"/errors/incorrect-user-pass\",\n  \"detail\": \"Authentication failed due to incorrect username or password.\",\n  \"instance\": \"/login/log/abc123\"\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        }
                    ],
                    "event": [],
                    "protocolProfileBehavior": {
                        "disableBodyPruning": true
                    }
                },
                {
                    "id": "9ba47cdc-6ab1-44e9-b00c-0909aca2a0e4",
                    "name": "list of all diagnoses",
                    "request": {
                        "name": "list of all diagnoses",
                        "description": {
                            "content": "Returns an array of keys used to identify help messages.",
                            "type": "text/plain"
                        },
                        "url": {
                            "path": [
                                "api",
                                "helpkeys"
                            ],
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "query": [],
                            "variable": []
                        },
                        "header": [
                            {
                                "key": "Accept",
                                "value": "application/json"
                            }
                        ],
                        "method": "GET",
                        "auth": null
                    },
                    "response": [
                        {
                            "id": "0d3753f0-6c28-4ec3-b2ed-958037dfd909",
                            "name": "OK",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "api",
                                        "helpkeys"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "description": {
                                            "content": "Added as a part of security scheme: apikey",
                                            "type": "text/plain"
                                        },
                                        "key": "X-Auth-Token",
                                        "value": "<API Key>"
                                    }
                                ],
                                "method": "GET",
                                "body": {}
                            },
                            "status": "OK",
                            "code": 200,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"keys\": [\n    \"sint qui\",\n    \"magna aute et quis\"\n  ]\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "26d86ce5-d4f8-4ee7-8642-2fc1db60737c",
                            "name": "The server can not understand the request due to invalid syntax.",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "api",
                                        "helpkeys"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "description": {
                                            "content": "Added as a part of security scheme: apikey",
                                            "type": "text/plain"
                                        },
                                        "key": "X-Auth-Token",
                                        "value": "<API Key>"
                                    }
                                ],
                                "method": "GET",
                                "body": {}
                            },
                            "status": "Bad Request",
                            "code": 400,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"title\": \"incorrect username or password\",\n  \"status\": 404,\n  \"errorType\": \"/errors/incorrect-user-pass\",\n  \"detail\": \"Authentication failed due to incorrect username or password.\",\n  \"instance\": \"/login/log/abc123\"\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "ced74b71-c540-4d36-9f7b-a20bf1c3158e",
                            "name": "Authorization required",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "api",
                                        "helpkeys"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "description": {
                                            "content": "Added as a part of security scheme: apikey",
                                            "type": "text/plain"
                                        },
                                        "key": "X-Auth-Token",
                                        "value": "<API Key>"
                                    }
                                ],
                                "method": "GET",
                                "body": {}
                            },
                            "status": "Forbidden",
                            "code": 403,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "text/plain"
                                }
                            ],
                            "body": "",
                            "cookie": [],
                            "_postman_previewlanguage": "text"
                        }
                    ],
                    "event": []
                },
                {
                    "id": "1cb135f4-4950-4fea-bb51-5493ea47fa59",
                    "name": "help message",
                    "request": {
                        "name": "help message",
                        "description": {
                            "content": "return a help message, normally to be displayed in a popup help screen.",
                            "type": "text/plain"
                        },
                        "url": {
                            "path": [
                                "api",
                                "help",
                                ":key"
                            ],
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "query": [],
                            "variable": [
                                {
                                    "disabled": false,
                                    "type": "any",
                                    "value": "officia Lorem",
                                    "key": "key",
                                    "description": "(Required) help screen key"
                                }
                            ]
                        },
                        "header": [
                            {
                                "key": "Accept",
                                "value": "application/json"
                            }
                        ],
                        "method": "GET",
                        "auth": null
                    },
                    "response": [
                        {
                            "id": "5015d1bb-dba1-4664-a7cd-a2147bf32077",
                            "name": "OK",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "api",
                                        "help",
                                        ":key"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": [
                                        {
                                            "disabled": false,
                                            "type": "any",
                                            "value": "officia Lorem",
                                            "key": "key",
                                            "description": "(Required) help screen key"
                                        }
                                    ]
                                },
                                "header": [
                                    {
                                        "description": {
                                            "content": "Added as a part of security scheme: apikey",
                                            "type": "text/plain"
                                        },
                                        "key": "X-Auth-Token",
                                        "value": "<API Key>"
                                    }
                                ],
                                "method": "GET",
                                "body": {}
                            },
                            "status": "OK",
                            "code": 200,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"help\": \"quis elit est consequat\"\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "3f642743-7134-48f7-92ac-3b69a5219f5f",
                            "name": "The server can not understand the request due to invalid syntax.",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "api",
                                        "help",
                                        ":key"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": [
                                        {
                                            "disabled": false,
                                            "type": "any",
                                            "value": "officia Lorem",
                                            "key": "key",
                                            "description": "(Required) help screen key"
                                        }
                                    ]
                                },
                                "header": [
                                    {
                                        "description": {
                                            "content": "Added as a part of security scheme: apikey",
                                            "type": "text/plain"
                                        },
                                        "key": "X-Auth-Token",
                                        "value": "<API Key>"
                                    }
                                ],
                                "method": "GET",
                                "body": {}
                            },
                            "status": "Bad Request",
                            "code": 400,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"title\": \"incorrect username or password\",\n  \"status\": 404,\n  \"errorType\": \"/errors/incorrect-user-pass\",\n  \"detail\": \"Authentication failed due to incorrect username or password.\",\n  \"instance\": \"/login/log/abc123\"\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "b8627a37-b73d-4dfc-bed8-cabae1983bd8",
                            "name": "Authorization required",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "api",
                                        "help",
                                        ":key"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": [
                                        {
                                            "disabled": false,
                                            "type": "any",
                                            "value": "officia Lorem",
                                            "key": "key",
                                            "description": "(Required) help screen key"
                                        }
                                    ]
                                },
                                "header": [
                                    {
                                        "description": {
                                            "content": "Added as a part of security scheme: apikey",
                                            "type": "text/plain"
                                        },
                                        "key": "X-Auth-Token",
                                        "value": "<API Key>"
                                    }
                                ],
                                "method": "GET",
                                "body": {}
                            },
                            "status": "Forbidden",
                            "code": 403,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "text/plain"
                                }
                            ],
                            "body": "",
                            "cookie": [],
                            "_postman_previewlanguage": "text"
                        }
                    ],
                    "event": []
                },
                {
                    "id": "c24faa57-9b57-43bc-8a12-79cc003a378c",
                    "name": "confirm VOR",
                    "request": {
                        "name": "confirm VOR",
                        "description": {},
                        "url": {
                            "path": [
                                "api",
                                "admin",
                                "ConfirmVOR"
                            ],
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "query": [
                                {
                                    "disabled": false,
                                    "key": "sendEmail",
                                    "value": "true"
                                }
                            ],
                            "variable": []
                        },
                        "header": [
                            {
                                "key": "Accept",
                                "value": "application/json"
                            }
                        ],
                        "method": "PUT",
                        "auth": null
                    },
                    "response": [
                        {
                            "id": "ca3a2ba3-620b-4307-b856-9b0aeb2220fa",
                            "name": "User",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "api",
                                        "admin",
                                        "ConfirmVOR"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [
                                        {
                                            "key": "sendEmail",
                                            "value": "true"
                                        }
                                    ],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "description": {
                                            "content": "Added as a part of security scheme: apikey",
                                            "type": "text/plain"
                                        },
                                        "key": "X-Auth-Token",
                                        "value": "<API Key>"
                                    }
                                ],
                                "method": "PUT",
                                "body": {}
                            },
                            "status": "OK",
                            "code": 200,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"vor\": {\n    \"id\": 1,\n    \"uname\": \"exampleUser\",\n    \"userType\": \"VOR\",\n    \"firstname\": \"Example\",\n    \"lastname\": \"User\",\n    \"email\": \"exampleUser@email.com\",\n    \"suffix\": \"DVM\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "f460c8db-ef6b-4df7-bc43-9483f17c4717",
                            "name": "Authorization required",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "api",
                                        "admin",
                                        "ConfirmVOR"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [
                                        {
                                            "key": "sendEmail",
                                            "value": "true"
                                        }
                                    ],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "description": {
                                            "content": "Added as a part of security scheme: apikey",
                                            "type": "text/plain"
                                        },
                                        "key": "X-Auth-Token",
                                        "value": "<API Key>"
                                    }
                                ],
                                "method": "PUT",
                                "body": {}
                            },
                            "status": "Unauthorized",
                            "code": 401,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "text/plain"
                                }
                            ],
                            "body": "",
                            "cookie": [],
                            "_postman_previewlanguage": "text"
                        }
                    ],
                    "event": []
                }
            ],
            "event": []
        },
        {
            "id": "9771b85b-155b-4fa4-bfec-9252e7422bc4",
            "name": "SAOR",
            "description": {
                "content": "available to system administrators.",
                "type": "text/plain"
            },
            "item": [
                {
                    "id": "856459ed-a6c9-4a0d-afcc-10da4bff4d53",
                    "name": "load Editor",
                    "request": {
                        "name": "load Editor",
                        "description": {
                            "content": "load Protocol Editor",
                            "type": "text/plain"
                        },
                        "url": {
                            "path": [
                                "editor"
                            ],
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "query": [],
                            "variable": []
                        },
                        "header": [
                            {
                                "key": "Accept",
                                "value": "text/html"
                            }
                        ],
                        "method": "GET",
                        "auth": null
                    },
                    "response": [
                        {
                            "id": "6564bc63-9ad4-4fbf-9566-612e79025b95",
                            "name": "load Protocol Editor",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "editor"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "description": {
                                            "content": "Added as a part of security scheme: apikey",
                                            "type": "text/plain"
                                        },
                                        "key": "X-Auth-Token",
                                        "value": "<API Key>"
                                    }
                                ],
                                "method": "GET",
                                "body": {}
                            },
                            "status": "OK",
                            "code": 200,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "text/html"
                                }
                            ],
                            "body": "",
                            "cookie": [],
                            "_postman_previewlanguage": "text"
                        },
                        {
                            "id": "dc954a65-fc49-4f08-8e96-4943fc1eb810",
                            "name": "Authorization required",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "editor"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "description": {
                                            "content": "Added as a part of security scheme: apikey",
                                            "type": "text/plain"
                                        },
                                        "key": "X-Auth-Token",
                                        "value": "<API Key>"
                                    }
                                ],
                                "method": "GET",
                                "body": {}
                            },
                            "status": "Unauthorized",
                            "code": 401,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "text/plain"
                                }
                            ],
                            "body": "",
                            "cookie": [],
                            "_postman_previewlanguage": "text"
                        }
                    ],
                    "event": []
                },
                {
                    "id": "40133605-b46a-4061-a22b-a3b532717c87",
                    "name": "load Farm App",
                    "request": {
                        "name": "load Farm App",
                        "description": {
                            "content": "load Farm App",
                            "type": "text/plain"
                        },
                        "url": {
                            "path": [
                                "farm"
                            ],
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "query": [],
                            "variable": []
                        },
                        "header": [
                            {
                                "key": "Accept",
                                "value": "text/html"
                            }
                        ],
                        "method": "GET",
                        "auth": null
                    },
                    "response": [
                        {
                            "id": "558ce2ea-3786-412a-8e74-112f1dd50ddb",
                            "name": "load Farm App",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "farm"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "description": {
                                            "content": "Added as a part of security scheme: apikey",
                                            "type": "text/plain"
                                        },
                                        "key": "X-Auth-Token",
                                        "value": "<API Key>"
                                    }
                                ],
                                "method": "GET",
                                "body": {}
                            },
                            "status": "OK",
                            "code": 200,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "text/html"
                                }
                            ],
                            "body": "",
                            "cookie": [],
                            "_postman_previewlanguage": "text"
                        },
                        {
                            "id": "65d73e28-ff0e-4f5c-88fc-cfc2c6663986",
                            "name": "Authorization required",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "farm"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "description": {
                                            "content": "Added as a part of security scheme: apikey",
                                            "type": "text/plain"
                                        },
                                        "key": "X-Auth-Token",
                                        "value": "<API Key>"
                                    }
                                ],
                                "method": "GET",
                                "body": {}
                            },
                            "status": "Unauthorized",
                            "code": 401,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "text/plain"
                                }
                            ],
                            "body": "",
                            "cookie": [],
                            "_postman_previewlanguage": "text"
                        }
                    ],
                    "event": []
                },
                {
                    "id": "ecf42ea6-0acc-4500-b5bb-7b5339e46d00",
                    "name": "load Admin App",
                    "request": {
                        "name": "load Admin App",
                        "description": {
                            "content": "load Admin app",
                            "type": "text/plain"
                        },
                        "url": {
                            "path": [
                                "admin"
                            ],
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "query": [],
                            "variable": []
                        },
                        "header": [
                            {
                                "key": "Accept",
                                "value": "text/html"
                            }
                        ],
                        "method": "GET",
                        "auth": null
                    },
                    "response": [
                        {
                            "id": "23d0700b-4b10-459b-923a-96a1c291a437",
                            "name": "load SPA",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "admin"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "description": {
                                            "content": "Added as a part of security scheme: apikey",
                                            "type": "text/plain"
                                        },
                                        "key": "X-Auth-Token",
                                        "value": "<API Key>"
                                    }
                                ],
                                "method": "GET",
                                "body": {}
                            },
                            "status": "OK",
                            "code": 200,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "text/html"
                                }
                            ],
                            "body": "",
                            "cookie": [],
                            "_postman_previewlanguage": "text"
                        },
                        {
                            "id": "1667c929-c9e8-4718-a817-3431da2c66e2",
                            "name": "Authorization required",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "admin"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "description": {
                                            "content": "Added as a part of security scheme: apikey",
                                            "type": "text/plain"
                                        },
                                        "key": "X-Auth-Token",
                                        "value": "<API Key>"
                                    }
                                ],
                                "method": "GET",
                                "body": {}
                            },
                            "status": "Unauthorized",
                            "code": 401,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "text/plain"
                                }
                            ],
                            "body": "",
                            "cookie": [],
                            "_postman_previewlanguage": "text"
                        }
                    ],
                    "event": []
                },
                {
                    "id": "e717e126-14cb-42d1-a63a-8fa86c23469a",
                    "name": "delete user",
                    "request": {
                        "name": "delete user",
                        "description": {
                            "content": "This endpoint supports the (reversible) \"delete\" of a User by setting user.status to `REMOVED`. Removed Users are not visible in normal queries.",
                            "type": "text/plain"
                        },
                        "url": {
                            "path": [
                                "api",
                                "users",
                                ":id"
                            ],
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "query": [],
                            "variable": [
                                {
                                    "disabled": false,
                                    "type": "any",
                                    "value": "5",
                                    "key": "id",
                                    "description": "(Required) User ID key"
                                }
                            ]
                        },
                        "header": [
                            {
                                "key": "Accept",
                                "value": "application/json"
                            }
                        ],
                        "method": "DELETE",
                        "auth": null
                    },
                    "response": [
                        {
                            "id": "2d537c2f-d6ab-4211-867f-1da611d258ee",
                            "name": "User deleted",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "api",
                                        "users",
                                        ":id"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": [
                                        {
                                            "disabled": false,
                                            "type": "any",
                                            "value": "5",
                                            "key": "id",
                                            "description": "(Required) User ID key"
                                        }
                                    ]
                                },
                                "header": [
                                    {
                                        "description": {
                                            "content": "Added as a part of security scheme: apikey",
                                            "type": "text/plain"
                                        },
                                        "key": "X-Auth-Token",
                                        "value": "<API Key>"
                                    }
                                ],
                                "method": "DELETE",
                                "body": {}
                            },
                            "status": "OK",
                            "code": 200,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"deleted\": -12819518\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "522e5a6f-cd93-4ecf-96ff-2548ffcf073a",
                            "name": "Authorization required",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "api",
                                        "users",
                                        ":id"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": [
                                        {
                                            "disabled": false,
                                            "type": "any",
                                            "value": "5",
                                            "key": "id",
                                            "description": "(Required) User ID key"
                                        }
                                    ]
                                },
                                "header": [
                                    {
                                        "description": {
                                            "content": "Added as a part of security scheme: apikey",
                                            "type": "text/plain"
                                        },
                                        "key": "X-Auth-Token",
                                        "value": "<API Key>"
                                    }
                                ],
                                "method": "DELETE",
                                "body": {}
                            },
                            "status": "Unauthorized",
                            "code": 401,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "text/plain"
                                }
                            ],
                            "body": "",
                            "cookie": [],
                            "_postman_previewlanguage": "text"
                        },
                        {
                            "id": "4c722d94-0cbb-4e6c-8a38-3a85b629c1a2",
                            "name": "The user does not have access rights to the content.",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "api",
                                        "users",
                                        ":id"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": [
                                        {
                                            "disabled": false,
                                            "type": "any",
                                            "value": "5",
                                            "key": "id",
                                            "description": "(Required) User ID key"
                                        }
                                    ]
                                },
                                "header": [
                                    {
                                        "description": {
                                            "content": "Added as a part of security scheme: apikey",
                                            "type": "text/plain"
                                        },
                                        "key": "X-Auth-Token",
                                        "value": "<API Key>"
                                    }
                                ],
                                "method": "DELETE",
                                "body": {}
                            },
                            "status": "Forbidden",
                            "code": 403,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "text/plain"
                                }
                            ],
                            "body": "",
                            "cookie": [],
                            "_postman_previewlanguage": "text"
                        }
                    ],
                    "event": []
                },
                {
                    "id": "389dc5e0-13c3-43eb-9fa3-383838a47c32",
                    "name": "delete sandboxClient",
                    "request": {
                        "name": "delete sandboxClient",
                        "description": {
                            "content": "Delete the User and CLIENT Relation records from the database,  irreversibly removing the sandbocx client, but not any existing Prescriptions.",
                            "type": "text/plain"
                        },
                        "url": {
                            "path": [
                                "api",
                                "users",
                                "sandboxClient"
                            ],
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "query": [],
                            "variable": []
                        },
                        "header": [
                            {
                                "key": "Accept",
                                "value": "application/json"
                            }
                        ],
                        "method": "DELETE",
                        "auth": null
                    },
                    "response": [
                        {
                            "id": "c1dd5fd0-6e2b-4e36-b75e-6ef51d2a5fab",
                            "name": "Sandbox user deleted",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "api",
                                        "users",
                                        "sandboxClient"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "description": {
                                            "content": "Added as a part of security scheme: apikey",
                                            "type": "text/plain"
                                        },
                                        "key": "X-Auth-Token",
                                        "value": "<API Key>"
                                    }
                                ],
                                "method": "DELETE",
                                "body": {}
                            },
                            "status": "OK",
                            "code": 200,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"deleted\": -12819518\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "d77f7b0f-40c7-49a5-a72b-c6729db371f2",
                            "name": "The server can not understand the request due to invalid syntax.",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "api",
                                        "users",
                                        "sandboxClient"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "description": {
                                            "content": "Added as a part of security scheme: apikey",
                                            "type": "text/plain"
                                        },
                                        "key": "X-Auth-Token",
                                        "value": "<API Key>"
                                    }
                                ],
                                "method": "DELETE",
                                "body": {}
                            },
                            "status": "Bad Request",
                            "code": 400,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"title\": \"incorrect username or password\",\n  \"status\": 404,\n  \"errorType\": \"/errors/incorrect-user-pass\",\n  \"detail\": \"Authentication failed due to incorrect username or password.\",\n  \"instance\": \"/login/log/abc123\"\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "cf947a18-84c0-455c-bb63-7aa243e8c7f5",
                            "name": "Authorization required",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "api",
                                        "users",
                                        "sandboxClient"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "description": {
                                            "content": "Added as a part of security scheme: apikey",
                                            "type": "text/plain"
                                        },
                                        "key": "X-Auth-Token",
                                        "value": "<API Key>"
                                    }
                                ],
                                "method": "DELETE",
                                "body": {}
                            },
                            "status": "Forbidden",
                            "code": 403,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "text/plain"
                                }
                            ],
                            "body": "",
                            "cookie": [],
                            "_postman_previewlanguage": "text"
                        }
                    ],
                    "event": []
                },
                {
                    "id": "c904d26d-490c-4ddc-9999-a06c5c5498df",
                    "name": "create Tag",
                    "request": {
                        "name": "create Tag",
                        "description": {
                            "content": "Create a Tag.",
                            "type": "text/plain"
                        },
                        "url": {
                            "path": [
                                "api",
                                "protocols",
                                "tags"
                            ],
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "query": [],
                            "variable": []
                        },
                        "header": [
                            {
                                "key": "Content-Type",
                                "value": "application/json"
                            },
                            {
                                "key": "Accept",
                                "value": "application/json"
                            }
                        ],
                        "method": "POST",
                        "auth": null,
                        "body": {
                            "mode": "raw",
                            "raw": "{\n  \"id\": 8,\n  \"color\": \"#516cc6\",\n  \"name\": \"velit ei\",\n  \"fixes\": [\n    {\n      \"_type\": \"adipisicing culpa eiusmod consectetur\",\n      \"detail\": \"nulla mollit commod\",\n      \"message\": \"dolore consequat sit\",\n      \"title\": \"reprehenderit dolore\"\n    },\n    {\n      \"_type\": \"proident anim in\",\n      \"detail\": \"anim commodo cillum\",\n      \"message\": \"velit enim laboris\",\n      \"title\": \"exercitation adipisicing Lorem\"\n    }\n  ]\n}",
                            "options": {
                                "raw": {
                                    "language": "json"
                                }
                            }
                        }
                    },
                    "response": [
                        {
                            "id": "e5402e30-3b3b-40ed-9287-413f22fa47de",
                            "name": "Success –  Tag recorded",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "api",
                                        "protocols",
                                        "tags"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "description": {
                                            "content": "Added as a part of security scheme: apikey",
                                            "type": "text/plain"
                                        },
                                        "key": "X-Auth-Token",
                                        "value": "<API Key>"
                                    }
                                ],
                                "method": "POST",
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n  \"id\": 8,\n  \"color\": \"#516cc6\",\n  \"name\": \"eni\",\n  \"fixes\": [\n    {\n      \"_type\": \"laboris in aliquip fu\",\n      \"detail\": \"dolore voluptate veniam consectetur\",\n      \"message\": \"Ut\",\n      \"title\": \"incididunt labore Duis dolore\"\n    },\n    {\n      \"_type\": \"veniam eiusmod ipsum\",\n      \"detail\": \"dolore minim sit\",\n      \"message\": \"Ut deserunt dolore\",\n      \"title\": \"esse mollit\"\n    }\n  ]\n}",
                                    "options": {
                                        "raw": {
                                            "language": "json"
                                        }
                                    }
                                }
                            },
                            "status": "OK",
                            "code": 200,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"tag\": {\n    \"id\": 8,\n    \"color\": \"#516cc6\",\n    \"name\": \"Ut deser\",\n    \"fixes\": [\n      {\n        \"_type\": \"officia laborum anim in\",\n        \"detail\": \"elit qui Excepteur\",\n        \"message\": \"velit n\",\n        \"title\": \"\"\n      },\n      {\n        \"_type\": \"in\",\n        \"detail\": \"tempor Duis occaecat\",\n        \"message\": \"sunt reprehenderit occaecat\",\n        \"title\": \"cupidatat nisi\"\n      }\n    ]\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "cb2c51d8-4fea-4010-bd1a-5e6c7dbeb2c2",
                            "name": "The server can not understand the request due to invalid syntax.",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "api",
                                        "protocols",
                                        "tags"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "description": {
                                            "content": "Added as a part of security scheme: apikey",
                                            "type": "text/plain"
                                        },
                                        "key": "X-Auth-Token",
                                        "value": "<API Key>"
                                    }
                                ],
                                "method": "POST",
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n  \"id\": 8,\n  \"color\": \"#516cc6\",\n  \"name\": \"eni\",\n  \"fixes\": [\n    {\n      \"_type\": \"laboris in aliquip fu\",\n      \"detail\": \"dolore voluptate veniam consectetur\",\n      \"message\": \"Ut\",\n      \"title\": \"incididunt labore Duis dolore\"\n    },\n    {\n      \"_type\": \"veniam eiusmod ipsum\",\n      \"detail\": \"dolore minim sit\",\n      \"message\": \"Ut deserunt dolore\",\n      \"title\": \"esse mollit\"\n    }\n  ]\n}",
                                    "options": {
                                        "raw": {
                                            "language": "json"
                                        }
                                    }
                                }
                            },
                            "status": "Bad Request",
                            "code": 400,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"title\": \"incorrect username or password\",\n  \"status\": 404,\n  \"errorType\": \"/errors/incorrect-user-pass\",\n  \"detail\": \"Authentication failed due to incorrect username or password.\",\n  \"instance\": \"/login/log/abc123\"\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "fcdce07f-0b99-4c67-9bb6-9a2795c6df4c",
                            "name": "Authorization required",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "api",
                                        "protocols",
                                        "tags"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "description": {
                                            "content": "Added as a part of security scheme: apikey",
                                            "type": "text/plain"
                                        },
                                        "key": "X-Auth-Token",
                                        "value": "<API Key>"
                                    }
                                ],
                                "method": "POST",
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n  \"id\": 8,\n  \"color\": \"#516cc6\",\n  \"name\": \"eni\",\n  \"fixes\": [\n    {\n      \"_type\": \"laboris in aliquip fu\",\n      \"detail\": \"dolore voluptate veniam consectetur\",\n      \"message\": \"Ut\",\n      \"title\": \"incididunt labore Duis dolore\"\n    },\n    {\n      \"_type\": \"veniam eiusmod ipsum\",\n      \"detail\": \"dolore minim sit\",\n      \"message\": \"Ut deserunt dolore\",\n      \"title\": \"esse mollit\"\n    }\n  ]\n}",
                                    "options": {
                                        "raw": {
                                            "language": "json"
                                        }
                                    }
                                }
                            },
                            "status": "Unauthorized",
                            "code": 401,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "text/plain"
                                }
                            ],
                            "body": "",
                            "cookie": [],
                            "_postman_previewlanguage": "text"
                        }
                    ],
                    "event": [],
                    "protocolProfileBehavior": {
                        "disableBodyPruning": true
                    }
                },
                {
                    "id": "cd845879-cae4-4f18-8abf-e27766769bc8",
                    "name": "Tag",
                    "request": {
                        "name": "Tag",
                        "description": {
                            "content": "Delete Tag.",
                            "type": "text/plain"
                        },
                        "url": {
                            "path": [
                                "api",
                                "protocols",
                                "tags",
                                ":id"
                            ],
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "query": [],
                            "variable": [
                                {
                                    "disabled": false,
                                    "type": "any",
                                    "value": "-41001206",
                                    "key": "id",
                                    "description": "(Required) "
                                }
                            ]
                        },
                        "header": [
                            {
                                "key": "Accept",
                                "value": "application/json"
                            }
                        ],
                        "method": "DELETE",
                        "auth": null
                    },
                    "response": [
                        {
                            "id": "0598f8bc-1283-4f32-bd54-2aa4281db969",
                            "name": "deleted",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "api",
                                        "protocols",
                                        "tags",
                                        ":id"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": [
                                        {
                                            "disabled": false,
                                            "type": "any",
                                            "value": "-41001206",
                                            "key": "id",
                                            "description": "(Required) "
                                        }
                                    ]
                                },
                                "header": [
                                    {
                                        "description": {
                                            "content": "Added as a part of security scheme: apikey",
                                            "type": "text/plain"
                                        },
                                        "key": "X-Auth-Token",
                                        "value": "<API Key>"
                                    }
                                ],
                                "method": "DELETE",
                                "body": {}
                            },
                            "status": "OK",
                            "code": 200,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"deleted\": -80026914\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "0eda3834-dc4c-42aa-b979-1475355ddc31",
                            "name": "The server can not understand the request due to invalid syntax.",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "api",
                                        "protocols",
                                        "tags",
                                        ":id"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": [
                                        {
                                            "disabled": false,
                                            "type": "any",
                                            "value": "-41001206",
                                            "key": "id",
                                            "description": "(Required) "
                                        }
                                    ]
                                },
                                "header": [
                                    {
                                        "description": {
                                            "content": "Added as a part of security scheme: apikey",
                                            "type": "text/plain"
                                        },
                                        "key": "X-Auth-Token",
                                        "value": "<API Key>"
                                    }
                                ],
                                "method": "DELETE",
                                "body": {}
                            },
                            "status": "Bad Request",
                            "code": 400,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"title\": \"incorrect username or password\",\n  \"status\": 404,\n  \"errorType\": \"/errors/incorrect-user-pass\",\n  \"detail\": \"Authentication failed due to incorrect username or password.\",\n  \"instance\": \"/login/log/abc123\"\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "5b74c93a-3c56-4622-ab50-afbb01d3f2b3",
                            "name": "Authorization required",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "api",
                                        "protocols",
                                        "tags",
                                        ":id"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": [
                                        {
                                            "disabled": false,
                                            "type": "any",
                                            "value": "-41001206",
                                            "key": "id",
                                            "description": "(Required) "
                                        }
                                    ]
                                },
                                "header": [
                                    {
                                        "description": {
                                            "content": "Added as a part of security scheme: apikey",
                                            "type": "text/plain"
                                        },
                                        "key": "X-Auth-Token",
                                        "value": "<API Key>"
                                    }
                                ],
                                "method": "DELETE",
                                "body": {}
                            },
                            "status": "Forbidden",
                            "code": 403,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "text/plain"
                                }
                            ],
                            "body": "",
                            "cookie": [],
                            "_postman_previewlanguage": "text"
                        }
                    ],
                    "event": []
                },
                {
                    "id": "114e3695-7f47-4fb9-8442-11e9f03303a1",
                    "name": "create Promise",
                    "request": {
                        "name": "create Promise",
                        "description": {},
                        "url": {
                            "path": [
                                "api",
                                "protocols",
                                "promises"
                            ],
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "query": [],
                            "variable": []
                        },
                        "header": [
                            {
                                "key": "Accept",
                                "value": "application/json"
                            }
                        ],
                        "method": "POST",
                        "auth": null
                    },
                    "response": [
                        {
                            "id": "e974cb39-9c2a-4b3a-9a51-d556d2b6e74a",
                            "name": "The server can not understand the request due to invalid syntax.",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "api",
                                        "protocols",
                                        "promises"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "description": {
                                            "content": "Added as a part of security scheme: apikey",
                                            "type": "text/plain"
                                        },
                                        "key": "X-Auth-Token",
                                        "value": "<API Key>"
                                    }
                                ],
                                "method": "POST",
                                "body": {}
                            },
                            "status": "Bad Request",
                            "code": 400,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"title\": \"incorrect username or password\",\n  \"status\": 404,\n  \"errorType\": \"/errors/incorrect-user-pass\",\n  \"detail\": \"Authentication failed due to incorrect username or password.\",\n  \"instance\": \"/login/log/abc123\"\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "07a32a47-6ec1-488d-93d9-75ea11ee5dab",
                            "name": "Authorization required",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "api",
                                        "protocols",
                                        "promises"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "description": {
                                            "content": "Added as a part of security scheme: apikey",
                                            "type": "text/plain"
                                        },
                                        "key": "X-Auth-Token",
                                        "value": "<API Key>"
                                    }
                                ],
                                "method": "POST",
                                "body": {}
                            },
                            "status": "Forbidden",
                            "code": 403,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "text/plain"
                                }
                            ],
                            "body": "",
                            "cookie": [],
                            "_postman_previewlanguage": "text"
                        }
                    ],
                    "event": []
                },
                {
                    "id": "85025540-8650-4bcc-9a55-67b0c22eab42",
                    "name": "create Eligibility",
                    "request": {
                        "name": "create Eligibility",
                        "description": {
                            "content": "Creation  a Eligibility.",
                            "type": "text/plain"
                        },
                        "url": {
                            "path": [
                                "api",
                                "protocols",
                                "eligibilities"
                            ],
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "query": [],
                            "variable": []
                        },
                        "header": [
                            {
                                "key": "Content-Type",
                                "value": "application/json"
                            },
                            {
                                "key": "Accept",
                                "value": "application/json"
                            }
                        ],
                        "method": "POST",
                        "auth": null,
                        "body": {
                            "mode": "raw",
                            "raw": "{\n  \"id\": 1,\n  \"name\": \"Beef Cattle\",\n  \"fdaSpecies\": [\n    \"horses\",\n    \"beef_cattle\"\n  ]\n}",
                            "options": {
                                "raw": {
                                    "language": "json"
                                }
                            }
                        }
                    },
                    "response": [
                        {
                            "id": "cfa2c336-0c88-47c3-beb7-dcfd3eccd8b7",
                            "name": "Success –  Eligibility recorded",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "api",
                                        "protocols",
                                        "eligibilities"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "description": {
                                            "content": "Added as a part of security scheme: apikey",
                                            "type": "text/plain"
                                        },
                                        "key": "X-Auth-Token",
                                        "value": "<API Key>"
                                    }
                                ],
                                "method": "POST",
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n  \"id\": 1,\n  \"name\": \"Beef Cattle\",\n  \"fdaSpecies\": [\n    \"emus\",\n    \"fish\"\n  ]\n}",
                                    "options": {
                                        "raw": {
                                            "language": "json"
                                        }
                                    }
                                }
                            },
                            "status": "OK",
                            "code": 200,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"protocol\": {\n    \"id\": 1,\n    \"name\": \"Beef Cattle\",\n    \"fdaSpecies\": [\n      \"turkeys\",\n      \"dairy_cattle\"\n    ]\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "2d86c1c1-ec34-4987-8100-b3673890f580",
                            "name": "The server can not understand the request due to invalid syntax.",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "api",
                                        "protocols",
                                        "eligibilities"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "description": {
                                            "content": "Added as a part of security scheme: apikey",
                                            "type": "text/plain"
                                        },
                                        "key": "X-Auth-Token",
                                        "value": "<API Key>"
                                    }
                                ],
                                "method": "POST",
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n  \"id\": 1,\n  \"name\": \"Beef Cattle\",\n  \"fdaSpecies\": [\n    \"emus\",\n    \"fish\"\n  ]\n}",
                                    "options": {
                                        "raw": {
                                            "language": "json"
                                        }
                                    }
                                }
                            },
                            "status": "Bad Request",
                            "code": 400,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"title\": \"incorrect username or password\",\n  \"status\": 404,\n  \"errorType\": \"/errors/incorrect-user-pass\",\n  \"detail\": \"Authentication failed due to incorrect username or password.\",\n  \"instance\": \"/login/log/abc123\"\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "27cba6f9-ea4d-44cb-b346-2f49c0d843f5",
                            "name": "Authorization required",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "api",
                                        "protocols",
                                        "eligibilities"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "description": {
                                            "content": "Added as a part of security scheme: apikey",
                                            "type": "text/plain"
                                        },
                                        "key": "X-Auth-Token",
                                        "value": "<API Key>"
                                    }
                                ],
                                "method": "POST",
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n  \"id\": 1,\n  \"name\": \"Beef Cattle\",\n  \"fdaSpecies\": [\n    \"emus\",\n    \"fish\"\n  ]\n}",
                                    "options": {
                                        "raw": {
                                            "language": "json"
                                        }
                                    }
                                }
                            },
                            "status": "Forbidden",
                            "code": 403,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "text/plain"
                                }
                            ],
                            "body": "",
                            "cookie": [],
                            "_postman_previewlanguage": "text"
                        }
                    ],
                    "event": [],
                    "protocolProfileBehavior": {
                        "disableBodyPruning": true
                    }
                },
                {
                    "id": "363b3e33-3545-4f56-acc6-0be623ce605e",
                    "name": "Eligibility",
                    "request": {
                        "name": "Eligibility",
                        "description": {
                            "content": "Delete Eligibility.",
                            "type": "text/plain"
                        },
                        "url": {
                            "path": [
                                "api",
                                "protocols",
                                "eligibilities",
                                "{{id}}}"
                            ],
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "query": [],
                            "variable": []
                        },
                        "header": [
                            {
                                "key": "Accept",
                                "value": "application/json"
                            }
                        ],
                        "method": "DELETE",
                        "auth": null
                    },
                    "response": [
                        {
                            "id": "691ae7e3-fef0-45ee-888a-cf3de4ce40c7",
                            "name": "deleted",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "api",
                                        "protocols",
                                        "eligibilities",
                                        "{{id}}}"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "description": {
                                            "content": "Added as a part of security scheme: apikey",
                                            "type": "text/plain"
                                        },
                                        "key": "X-Auth-Token",
                                        "value": "<API Key>"
                                    }
                                ],
                                "method": "DELETE",
                                "body": {}
                            },
                            "status": "OK",
                            "code": 200,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"deleted\": -80026914\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "5473b2d9-b606-4c59-b7ea-1a8ec0634c44",
                            "name": "The server can not understand the request due to invalid syntax.",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "api",
                                        "protocols",
                                        "eligibilities",
                                        "{{id}}}"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "description": {
                                            "content": "Added as a part of security scheme: apikey",
                                            "type": "text/plain"
                                        },
                                        "key": "X-Auth-Token",
                                        "value": "<API Key>"
                                    }
                                ],
                                "method": "DELETE",
                                "body": {}
                            },
                            "status": "Bad Request",
                            "code": 400,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"title\": \"incorrect username or password\",\n  \"status\": 404,\n  \"errorType\": \"/errors/incorrect-user-pass\",\n  \"detail\": \"Authentication failed due to incorrect username or password.\",\n  \"instance\": \"/login/log/abc123\"\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "4754f242-b040-45f3-8306-f1213ce22c7e",
                            "name": "Authorization required",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "api",
                                        "protocols",
                                        "eligibilities",
                                        "{{id}}}"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "description": {
                                            "content": "Added as a part of security scheme: apikey",
                                            "type": "text/plain"
                                        },
                                        "key": "X-Auth-Token",
                                        "value": "<API Key>"
                                    }
                                ],
                                "method": "DELETE",
                                "body": {}
                            },
                            "status": "Forbidden",
                            "code": 403,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "text/plain"
                                }
                            ],
                            "body": "",
                            "cookie": [],
                            "_postman_previewlanguage": "text"
                        }
                    ],
                    "event": []
                },
                {
                    "id": "9f221507-0b10-4765-a9fb-24c968d55951",
                    "name": "create Eligibility",
                    "request": {
                        "name": "create Eligibility",
                        "description": {
                            "content": "Create  a Diagnosis.",
                            "type": "text/plain"
                        },
                        "url": {
                            "path": [
                                "api",
                                "protocols",
                                "diagnoses"
                            ],
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "query": [],
                            "variable": []
                        },
                        "header": [
                            {
                                "key": "Content-Type",
                                "value": "application/json"
                            },
                            {
                                "key": "Accept",
                                "value": "application/json"
                            }
                        ],
                        "method": "POST",
                        "auth": null,
                        "body": {
                            "mode": "raw",
                            "raw": "{\n  \"id\": 8,\n  \"name\": \"Pain/inflammation (musculoskeletal), treatment\"\n}",
                            "options": {
                                "raw": {
                                    "language": "json"
                                }
                            }
                        }
                    },
                    "response": [
                        {
                            "id": "ac2b24a0-d65e-40c7-a7ef-d754b2cf9a2c",
                            "name": "Success –  Diagnosis recorded",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "api",
                                        "protocols",
                                        "diagnoses"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "description": {
                                            "content": "Added as a part of security scheme: apikey",
                                            "type": "text/plain"
                                        },
                                        "key": "X-Auth-Token",
                                        "value": "<API Key>"
                                    }
                                ],
                                "method": "POST",
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n  \"id\": 8,\n  \"name\": \"Pain/inflammation (musculoskeletal), treatment\"\n}",
                                    "options": {
                                        "raw": {
                                            "language": "json"
                                        }
                                    }
                                }
                            },
                            "status": "OK",
                            "code": 200,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"protocol\": {\n    \"id\": 8,\n    \"name\": \"Pain/inflammation (musculoskeletal), treatment\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "15b53598-3cc3-4d49-9d08-ce0ab9203601",
                            "name": "The server can not understand the request due to invalid syntax.",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "api",
                                        "protocols",
                                        "diagnoses"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "description": {
                                            "content": "Added as a part of security scheme: apikey",
                                            "type": "text/plain"
                                        },
                                        "key": "X-Auth-Token",
                                        "value": "<API Key>"
                                    }
                                ],
                                "method": "POST",
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n  \"id\": 8,\n  \"name\": \"Pain/inflammation (musculoskeletal), treatment\"\n}",
                                    "options": {
                                        "raw": {
                                            "language": "json"
                                        }
                                    }
                                }
                            },
                            "status": "Bad Request",
                            "code": 400,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"title\": \"incorrect username or password\",\n  \"status\": 404,\n  \"errorType\": \"/errors/incorrect-user-pass\",\n  \"detail\": \"Authentication failed due to incorrect username or password.\",\n  \"instance\": \"/login/log/abc123\"\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "60ab7ed7-92e1-47ea-97e8-5deb75e05314",
                            "name": "Authorization required",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "api",
                                        "protocols",
                                        "diagnoses"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "description": {
                                            "content": "Added as a part of security scheme: apikey",
                                            "type": "text/plain"
                                        },
                                        "key": "X-Auth-Token",
                                        "value": "<API Key>"
                                    }
                                ],
                                "method": "POST",
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n  \"id\": 8,\n  \"name\": \"Pain/inflammation (musculoskeletal), treatment\"\n}",
                                    "options": {
                                        "raw": {
                                            "language": "json"
                                        }
                                    }
                                }
                            },
                            "status": "Forbidden",
                            "code": 403,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "text/plain"
                                }
                            ],
                            "body": "",
                            "cookie": [],
                            "_postman_previewlanguage": "text"
                        }
                    ],
                    "event": [],
                    "protocolProfileBehavior": {
                        "disableBodyPruning": true
                    }
                },
                {
                    "id": "9ef0a29f-c68a-48a3-9082-026808c51ee4",
                    "name": "Diagnosis",
                    "request": {
                        "name": "Diagnosis",
                        "description": {
                            "content": "Delete Diagnosis.",
                            "type": "text/plain"
                        },
                        "url": {
                            "path": [
                                "api",
                                "protocols",
                                "diagnoses",
                                ":id"
                            ],
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "query": [],
                            "variable": [
                                {
                                    "disabled": false,
                                    "type": "any",
                                    "value": "-41001206",
                                    "key": "id",
                                    "description": "(Required) "
                                }
                            ]
                        },
                        "header": [
                            {
                                "key": "Accept",
                                "value": "application/json"
                            }
                        ],
                        "method": "DELETE",
                        "auth": null
                    },
                    "response": [
                        {
                            "id": "ae6cf5f6-b939-4efb-add8-9bd4d35c3a90",
                            "name": "deleted",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "api",
                                        "protocols",
                                        "diagnoses",
                                        ":id"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": [
                                        {
                                            "disabled": false,
                                            "type": "any",
                                            "value": "-41001206",
                                            "key": "id",
                                            "description": "(Required) "
                                        }
                                    ]
                                },
                                "header": [
                                    {
                                        "description": {
                                            "content": "Added as a part of security scheme: apikey",
                                            "type": "text/plain"
                                        },
                                        "key": "X-Auth-Token",
                                        "value": "<API Key>"
                                    }
                                ],
                                "method": "DELETE",
                                "body": {}
                            },
                            "status": "OK",
                            "code": 200,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"deleted\": -80026914\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "34c1bf09-39ec-4cea-933c-74014bc172c4",
                            "name": "The server can not understand the request due to invalid syntax.",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "api",
                                        "protocols",
                                        "diagnoses",
                                        ":id"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": [
                                        {
                                            "disabled": false,
                                            "type": "any",
                                            "value": "-41001206",
                                            "key": "id",
                                            "description": "(Required) "
                                        }
                                    ]
                                },
                                "header": [
                                    {
                                        "description": {
                                            "content": "Added as a part of security scheme: apikey",
                                            "type": "text/plain"
                                        },
                                        "key": "X-Auth-Token",
                                        "value": "<API Key>"
                                    }
                                ],
                                "method": "DELETE",
                                "body": {}
                            },
                            "status": "Bad Request",
                            "code": 400,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"title\": \"incorrect username or password\",\n  \"status\": 404,\n  \"errorType\": \"/errors/incorrect-user-pass\",\n  \"detail\": \"Authentication failed due to incorrect username or password.\",\n  \"instance\": \"/login/log/abc123\"\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "8ba71d1e-88ad-47db-b970-ca094f3d4c14",
                            "name": "Authorization required",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "api",
                                        "protocols",
                                        "diagnoses",
                                        ":id"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": [
                                        {
                                            "disabled": false,
                                            "type": "any",
                                            "value": "-41001206",
                                            "key": "id",
                                            "description": "(Required) "
                                        }
                                    ]
                                },
                                "header": [
                                    {
                                        "description": {
                                            "content": "Added as a part of security scheme: apikey",
                                            "type": "text/plain"
                                        },
                                        "key": "X-Auth-Token",
                                        "value": "<API Key>"
                                    }
                                ],
                                "method": "DELETE",
                                "body": {}
                            },
                            "status": "Forbidden",
                            "code": 403,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "text/plain"
                                }
                            ],
                            "body": "",
                            "cookie": [],
                            "_postman_previewlanguage": "text"
                        }
                    ],
                    "event": []
                },
                {
                    "id": "3a8185bb-e4d9-4b68-a94c-8d1350f20a78",
                    "name": "create help screen",
                    "request": {
                        "name": "create help screen",
                        "description": {
                            "content": "Creation  a help screen.",
                            "type": "text/plain"
                        },
                        "url": {
                            "path": [
                                "api",
                                "help",
                                ":key"
                            ],
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "query": [],
                            "variable": [
                                {
                                    "disabled": false,
                                    "type": "any",
                                    "value": "officia Lorem",
                                    "key": "key",
                                    "description": "(Required) help screen key"
                                }
                            ]
                        },
                        "header": [
                            {
                                "key": "Content-Type",
                                "value": "application/json"
                            },
                            {
                                "key": "Accept",
                                "value": "application/json"
                            }
                        ],
                        "method": "POST",
                        "auth": null,
                        "body": {
                            "mode": "raw",
                            "raw": "{\n  \"key\": \"esse sed amet\",\n  \"msg\": \"dolor\",\n  \"lang\": \"dolore et cupidatat\"\n}",
                            "options": {
                                "raw": {
                                    "language": "json"
                                }
                            }
                        }
                    },
                    "response": [
                        {
                            "id": "7b813937-56aa-4b76-aeaa-e75def42feb0",
                            "name": "Success –  help screen recorded",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "api",
                                        "help",
                                        ":key"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": [
                                        {
                                            "disabled": false,
                                            "type": "any",
                                            "value": "officia Lorem",
                                            "key": "key",
                                            "description": "(Required) help screen key"
                                        }
                                    ]
                                },
                                "header": [
                                    {
                                        "description": {
                                            "content": "Added as a part of security scheme: apikey",
                                            "type": "text/plain"
                                        },
                                        "key": "X-Auth-Token",
                                        "value": "<API Key>"
                                    }
                                ],
                                "method": "POST",
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n  \"key\": \"esse sed amet\",\n  \"msg\": \"dolor\",\n  \"lang\": \"dolore et cupidatat\"\n}",
                                    "options": {
                                        "raw": {
                                            "language": "json"
                                        }
                                    }
                                }
                            },
                            "status": "OK",
                            "code": 200,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"protocol\": {\n    \"key\": \"proident sunt ea\",\n    \"msg\": \"v\",\n    \"lang\": \"labor\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "293311e0-529b-4c3c-9986-85526b8e700d",
                            "name": "The server can not understand the request due to invalid syntax.",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "api",
                                        "help",
                                        ":key"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": [
                                        {
                                            "disabled": false,
                                            "type": "any",
                                            "value": "officia Lorem",
                                            "key": "key",
                                            "description": "(Required) help screen key"
                                        }
                                    ]
                                },
                                "header": [
                                    {
                                        "description": {
                                            "content": "Added as a part of security scheme: apikey",
                                            "type": "text/plain"
                                        },
                                        "key": "X-Auth-Token",
                                        "value": "<API Key>"
                                    }
                                ],
                                "method": "POST",
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n  \"key\": \"esse sed amet\",\n  \"msg\": \"dolor\",\n  \"lang\": \"dolore et cupidatat\"\n}",
                                    "options": {
                                        "raw": {
                                            "language": "json"
                                        }
                                    }
                                }
                            },
                            "status": "Bad Request",
                            "code": 400,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"title\": \"incorrect username or password\",\n  \"status\": 404,\n  \"errorType\": \"/errors/incorrect-user-pass\",\n  \"detail\": \"Authentication failed due to incorrect username or password.\",\n  \"instance\": \"/login/log/abc123\"\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "adead7a1-2031-4a18-b1b1-706f437a6389",
                            "name": "Authorization required",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "api",
                                        "help",
                                        ":key"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": [
                                        {
                                            "disabled": false,
                                            "type": "any",
                                            "value": "officia Lorem",
                                            "key": "key",
                                            "description": "(Required) help screen key"
                                        }
                                    ]
                                },
                                "header": [
                                    {
                                        "description": {
                                            "content": "Added as a part of security scheme: apikey",
                                            "type": "text/plain"
                                        },
                                        "key": "X-Auth-Token",
                                        "value": "<API Key>"
                                    }
                                ],
                                "method": "POST",
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n  \"key\": \"esse sed amet\",\n  \"msg\": \"dolor\",\n  \"lang\": \"dolore et cupidatat\"\n}",
                                    "options": {
                                        "raw": {
                                            "language": "json"
                                        }
                                    }
                                }
                            },
                            "status": "Unauthorized",
                            "code": 401,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "text/plain"
                                }
                            ],
                            "body": "",
                            "cookie": [],
                            "_postman_previewlanguage": "text"
                        }
                    ],
                    "event": [],
                    "protocolProfileBehavior": {
                        "disableBodyPruning": true
                    }
                },
                {
                    "id": "42d47134-6c45-4fee-b3ef-2a16455e28aa",
                    "name": "delete help screen",
                    "request": {
                        "name": "delete help screen",
                        "description": {
                            "content": "Delete help screen.",
                            "type": "text/plain"
                        },
                        "url": {
                            "path": [
                                "api",
                                "help",
                                ":key"
                            ],
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "query": [],
                            "variable": [
                                {
                                    "disabled": false,
                                    "type": "any",
                                    "value": "officia Lorem",
                                    "key": "key",
                                    "description": "(Required) help screen key"
                                }
                            ]
                        },
                        "header": [
                            {
                                "key": "Accept",
                                "value": "application/json"
                            }
                        ],
                        "method": "DELETE",
                        "auth": null
                    },
                    "response": [
                        {
                            "id": "ccea7c07-b933-4bc4-aef8-11cca448e3a7",
                            "name": "deleted",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "api",
                                        "help",
                                        ":key"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": [
                                        {
                                            "disabled": false,
                                            "type": "any",
                                            "value": "officia Lorem",
                                            "key": "key",
                                            "description": "(Required) help screen key"
                                        }
                                    ]
                                },
                                "header": [
                                    {
                                        "description": {
                                            "content": "Added as a part of security scheme: apikey",
                                            "type": "text/plain"
                                        },
                                        "key": "X-Auth-Token",
                                        "value": "<API Key>"
                                    }
                                ],
                                "method": "DELETE",
                                "body": {}
                            },
                            "status": "OK",
                            "code": 200,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"deleted\": -80026914\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "549e02b2-925b-4ce4-9511-23b680dfb969",
                            "name": "The server can not understand the request due to invalid syntax.",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "api",
                                        "help",
                                        ":key"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": [
                                        {
                                            "disabled": false,
                                            "type": "any",
                                            "value": "officia Lorem",
                                            "key": "key",
                                            "description": "(Required) help screen key"
                                        }
                                    ]
                                },
                                "header": [
                                    {
                                        "description": {
                                            "content": "Added as a part of security scheme: apikey",
                                            "type": "text/plain"
                                        },
                                        "key": "X-Auth-Token",
                                        "value": "<API Key>"
                                    }
                                ],
                                "method": "DELETE",
                                "body": {}
                            },
                            "status": "Bad Request",
                            "code": 400,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"title\": \"incorrect username or password\",\n  \"status\": 404,\n  \"errorType\": \"/errors/incorrect-user-pass\",\n  \"detail\": \"Authentication failed due to incorrect username or password.\",\n  \"instance\": \"/login/log/abc123\"\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "c09e24f7-3dd4-4933-9278-78842253a82b",
                            "name": "Authorization required",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "api",
                                        "help",
                                        ":key"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": [
                                        {
                                            "disabled": false,
                                            "type": "any",
                                            "value": "officia Lorem",
                                            "key": "key",
                                            "description": "(Required) help screen key"
                                        }
                                    ]
                                },
                                "header": [
                                    {
                                        "description": {
                                            "content": "Added as a part of security scheme: apikey",
                                            "type": "text/plain"
                                        },
                                        "key": "X-Auth-Token",
                                        "value": "<API Key>"
                                    }
                                ],
                                "method": "DELETE",
                                "body": {}
                            },
                            "status": "Forbidden",
                            "code": 403,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "text/plain"
                                }
                            ],
                            "body": "",
                            "cookie": [],
                            "_postman_previewlanguage": "text"
                        }
                    ],
                    "event": []
                },
                {
                    "id": "4b8ef272-2e6d-4c23-8824-2be1134a6cd8",
                    "name": "create labelclaim",
                    "request": {
                        "name": "create labelclaim",
                        "description": {
                            "content": "Creation  a labelclaim.",
                            "type": "text/plain"
                        },
                        "url": {
                            "path": [
                                "api",
                                "labels"
                            ],
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "query": [],
                            "variable": []
                        },
                        "header": [
                            {
                                "key": "Content-Type",
                                "value": "application/json"
                            },
                            {
                                "key": "Accept",
                                "value": "application/json"
                            }
                        ],
                        "method": "POST",
                        "auth": null,
                        "body": {
                            "mode": "raw",
                            "raw": "{\n  \"id\": 1,\n  \"fdaSpecies\": [\n    \"ChickensBroilers\",\n    \"ChickensBroilers\"\n  ],\n  \"diagnosis\": \"pain (colic), symptomatic treatment\",\n  \"dxId\": 2002,\n  \"product\": \"Prevail™ Flunixin Meglumine Injection\",\n  \"route\": \"intr-corporeal\",\n  \"wtMeatHrs\": 22,\n  \"wtMilkHrs\": 5,\n  \"productId\": 1315018,\n  \"_dose\": \"3.0 ml per kg repeat in 6 hours and again in 24 hours\",\n  \"sequenceFunction\": {\n    \"_type\": \"models.SeqSingleDose\"\n  },\n  \"sizeFunction\": {\n    \"_type\": \"models.FixedDoseFunction\",\n    \"dose\": {\n      \"quantity\": {\n        \"dimension\": \"Mass\",\n        \"value\": 3,\n        \"symbol\": \"oz\"\n      }\n    }\n  },\n  \"doseNote\": \"THis can contain <b>html</b> tags\",\n  \"wtNote\": \"not for dairy animals\",\n  \"ndc\": \"200-308\",\n  \"generic\": \"OXYTETRACYCLINE\"\n}",
                            "options": {
                                "raw": {
                                    "language": "json"
                                }
                            }
                        }
                    },
                    "response": [
                        {
                            "id": "1a389703-a0d9-4254-b816-919cac02268e",
                            "name": "Success –  labelclaim recorded",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "api",
                                        "labels"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "description": {
                                            "content": "Added as a part of security scheme: apikey",
                                            "type": "text/plain"
                                        },
                                        "key": "X-Auth-Token",
                                        "value": "<API Key>"
                                    }
                                ],
                                "method": "POST",
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n  \"id\": 1,\n  \"fdaSpecies\": [\n    \"ChickensBroilers\",\n    \"ChickensBroilers\"\n  ],\n  \"diagnosis\": \"pain (colic), symptomatic treatment\",\n  \"dxId\": 2002,\n  \"product\": \"Prevail™ Flunixin Meglumine Injection\",\n  \"route\": \"intr-corporeal\",\n  \"wtMeatHrs\": 22,\n  \"wtMilkHrs\": 5,\n  \"productId\": 1315018,\n  \"_dose\": \"3.0 ml per kg repeat in 6 hours and again in 24 hours\",\n  \"sequenceFunction\": {\n    \"_type\": \"models.SeqSingleDose\"\n  },\n  \"sizeFunction\": {\n    \"_type\": \"models.FixedDoseFunction\",\n    \"dose\": {\n      \"quantity\": {\n        \"dimension\": \"Mass\",\n        \"value\": 3,\n        \"symbol\": \"oz\"\n      }\n    }\n  },\n  \"doseNote\": \"THis can contain <b>html</b> tags\",\n  \"wtNote\": \"not for dairy animals\",\n  \"ndc\": \"200-308\",\n  \"generic\": \"OXYTETRACYCLINE\"\n}",
                                    "options": {
                                        "raw": {
                                            "language": "json"
                                        }
                                    }
                                }
                            },
                            "status": "OK",
                            "code": 200,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"protocol\": {\n    \"id\": 1,\n    \"fdaSpecies\": [\n      \"ChickensBroilers\",\n      \"ChickensBroilers\"\n    ],\n    \"diagnosis\": \"pain (colic), symptomatic treatment\",\n    \"dxId\": 2002,\n    \"product\": \"Prevail™ Flunixin Meglumine Injection\",\n    \"route\": \"intr-corporeal\",\n    \"wtMeatHrs\": 22,\n    \"wtMilkHrs\": 5,\n    \"productId\": 1315018,\n    \"_dose\": \"3.0 ml per kg repeat in 6 hours and again in 24 hours\",\n    \"sequenceFunction\": {\n      \"_type\": \"models.SeqSingleDose\"\n    },\n    \"sizeFunction\": {\n      \"_type\": \"models.FixedDoseFunction\",\n      \"dose\": {\n        \"quantity\": {\n          \"dimension\": \"Mass\",\n          \"value\": 3,\n          \"symbol\": \"oz\"\n        }\n      }\n    },\n    \"doseNote\": \"THis can contain <b>html</b> tags\",\n    \"wtNote\": \"not for dairy animals\",\n    \"ndc\": \"200-308\",\n    \"generic\": \"OXYTETRACYCLINE\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "fa0cdbad-6950-4606-bdab-fc802be492c5",
                            "name": "The server can not understand the request due to invalid syntax.",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "api",
                                        "labels"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "description": {
                                            "content": "Added as a part of security scheme: apikey",
                                            "type": "text/plain"
                                        },
                                        "key": "X-Auth-Token",
                                        "value": "<API Key>"
                                    }
                                ],
                                "method": "POST",
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n  \"id\": 1,\n  \"fdaSpecies\": [\n    \"ChickensBroilers\",\n    \"ChickensBroilers\"\n  ],\n  \"diagnosis\": \"pain (colic), symptomatic treatment\",\n  \"dxId\": 2002,\n  \"product\": \"Prevail™ Flunixin Meglumine Injection\",\n  \"route\": \"intr-corporeal\",\n  \"wtMeatHrs\": 22,\n  \"wtMilkHrs\": 5,\n  \"productId\": 1315018,\n  \"_dose\": \"3.0 ml per kg repeat in 6 hours and again in 24 hours\",\n  \"sequenceFunction\": {\n    \"_type\": \"models.SeqSingleDose\"\n  },\n  \"sizeFunction\": {\n    \"_type\": \"models.FixedDoseFunction\",\n    \"dose\": {\n      \"quantity\": {\n        \"dimension\": \"Mass\",\n        \"value\": 3,\n        \"symbol\": \"oz\"\n      }\n    }\n  },\n  \"doseNote\": \"THis can contain <b>html</b> tags\",\n  \"wtNote\": \"not for dairy animals\",\n  \"ndc\": \"200-308\",\n  \"generic\": \"OXYTETRACYCLINE\"\n}",
                                    "options": {
                                        "raw": {
                                            "language": "json"
                                        }
                                    }
                                }
                            },
                            "status": "Bad Request",
                            "code": 400,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"title\": \"incorrect username or password\",\n  \"status\": 404,\n  \"errorType\": \"/errors/incorrect-user-pass\",\n  \"detail\": \"Authentication failed due to incorrect username or password.\",\n  \"instance\": \"/login/log/abc123\"\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "570706c9-d1cc-4934-a9a1-1fa1a9eb96aa",
                            "name": "Authorization required",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "api",
                                        "labels"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "description": {
                                            "content": "Added as a part of security scheme: apikey",
                                            "type": "text/plain"
                                        },
                                        "key": "X-Auth-Token",
                                        "value": "<API Key>"
                                    }
                                ],
                                "method": "POST",
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n  \"id\": 1,\n  \"fdaSpecies\": [\n    \"ChickensBroilers\",\n    \"ChickensBroilers\"\n  ],\n  \"diagnosis\": \"pain (colic), symptomatic treatment\",\n  \"dxId\": 2002,\n  \"product\": \"Prevail™ Flunixin Meglumine Injection\",\n  \"route\": \"intr-corporeal\",\n  \"wtMeatHrs\": 22,\n  \"wtMilkHrs\": 5,\n  \"productId\": 1315018,\n  \"_dose\": \"3.0 ml per kg repeat in 6 hours and again in 24 hours\",\n  \"sequenceFunction\": {\n    \"_type\": \"models.SeqSingleDose\"\n  },\n  \"sizeFunction\": {\n    \"_type\": \"models.FixedDoseFunction\",\n    \"dose\": {\n      \"quantity\": {\n        \"dimension\": \"Mass\",\n        \"value\": 3,\n        \"symbol\": \"oz\"\n      }\n    }\n  },\n  \"doseNote\": \"THis can contain <b>html</b> tags\",\n  \"wtNote\": \"not for dairy animals\",\n  \"ndc\": \"200-308\",\n  \"generic\": \"OXYTETRACYCLINE\"\n}",
                                    "options": {
                                        "raw": {
                                            "language": "json"
                                        }
                                    }
                                }
                            },
                            "status": "Forbidden",
                            "code": 403,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "text/plain"
                                }
                            ],
                            "body": "",
                            "cookie": [],
                            "_postman_previewlanguage": "text"
                        }
                    ],
                    "event": [],
                    "protocolProfileBehavior": {
                        "disableBodyPruning": true
                    }
                },
                {
                    "id": "230c01cd-c912-4215-9249-468a1371475b",
                    "name": "update labelclaim",
                    "request": {
                        "name": "update labelclaim",
                        "description": {
                            "content": "update a labelclaim.",
                            "type": "text/plain"
                        },
                        "url": {
                            "path": [
                                "api",
                                "labels"
                            ],
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "query": [],
                            "variable": []
                        },
                        "header": [
                            {
                                "key": "Content-Type",
                                "value": "application/json"
                            },
                            {
                                "key": "Accept",
                                "value": "application/json"
                            }
                        ],
                        "method": "PUT",
                        "auth": null,
                        "body": {
                            "mode": "raw",
                            "raw": "{\n  \"id\": 1,\n  \"fdaSpecies\": [\n    \"ChickensBroilers\",\n    \"ChickensBroilers\"\n  ],\n  \"diagnosis\": \"pain (colic), symptomatic treatment\",\n  \"dxId\": 2002,\n  \"product\": \"Prevail™ Flunixin Meglumine Injection\",\n  \"route\": \"intr-corporeal\",\n  \"wtMeatHrs\": 22,\n  \"wtMilkHrs\": 5,\n  \"productId\": 1315018,\n  \"_dose\": \"3.0 ml per kg repeat in 6 hours and again in 24 hours\",\n  \"sequenceFunction\": {\n    \"_type\": \"models.SeqSingleDose\"\n  },\n  \"sizeFunction\": {\n    \"_type\": \"models.FixedDoseFunction\",\n    \"dose\": {\n      \"quantity\": {\n        \"dimension\": \"Mass\",\n        \"value\": 3,\n        \"symbol\": \"oz\"\n      }\n    }\n  },\n  \"doseNote\": \"THis can contain <b>html</b> tags\",\n  \"wtNote\": \"not for dairy animals\",\n  \"ndc\": \"200-308\",\n  \"generic\": \"OXYTETRACYCLINE\"\n}",
                            "options": {
                                "raw": {
                                    "language": "json"
                                }
                            }
                        }
                    },
                    "response": [
                        {
                            "id": "d1131335-c1dd-4469-ae90-176d31d77680",
                            "name": "Success – © Protocol",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "api",
                                        "labels"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "description": {
                                            "content": "Added as a part of security scheme: apikey",
                                            "type": "text/plain"
                                        },
                                        "key": "X-Auth-Token",
                                        "value": "<API Key>"
                                    }
                                ],
                                "method": "PUT",
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n  \"id\": 1,\n  \"fdaSpecies\": [\n    \"ChickensBroilers\",\n    \"ChickensBroilers\"\n  ],\n  \"diagnosis\": \"pain (colic), symptomatic treatment\",\n  \"dxId\": 2002,\n  \"product\": \"Prevail™ Flunixin Meglumine Injection\",\n  \"route\": \"intr-corporeal\",\n  \"wtMeatHrs\": 22,\n  \"wtMilkHrs\": 5,\n  \"productId\": 1315018,\n  \"_dose\": \"3.0 ml per kg repeat in 6 hours and again in 24 hours\",\n  \"sequenceFunction\": {\n    \"_type\": \"models.SeqSingleDose\"\n  },\n  \"sizeFunction\": {\n    \"_type\": \"models.FixedDoseFunction\",\n    \"dose\": {\n      \"quantity\": {\n        \"dimension\": \"Mass\",\n        \"value\": 3,\n        \"symbol\": \"oz\"\n      }\n    }\n  },\n  \"doseNote\": \"THis can contain <b>html</b> tags\",\n  \"wtNote\": \"not for dairy animals\",\n  \"ndc\": \"200-308\",\n  \"generic\": \"OXYTETRACYCLINE\"\n}",
                                    "options": {
                                        "raw": {
                                            "language": "json"
                                        }
                                    }
                                }
                            },
                            "status": "OK",
                            "code": 200,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"protocol\": {\n    \"id\": 1,\n    \"fdaSpecies\": [\n      \"ChickensBroilers\",\n      \"ChickensBroilers\"\n    ],\n    \"diagnosis\": \"pain (colic), symptomatic treatment\",\n    \"dxId\": 2002,\n    \"product\": \"Prevail™ Flunixin Meglumine Injection\",\n    \"route\": \"intr-corporeal\",\n    \"wtMeatHrs\": 22,\n    \"wtMilkHrs\": 5,\n    \"productId\": 1315018,\n    \"_dose\": \"3.0 ml per kg repeat in 6 hours and again in 24 hours\",\n    \"sequenceFunction\": {\n      \"_type\": \"models.SeqSingleDose\"\n    },\n    \"sizeFunction\": {\n      \"_type\": \"models.FixedDoseFunction\",\n      \"dose\": {\n        \"quantity\": {\n          \"dimension\": \"Mass\",\n          \"value\": 3,\n          \"symbol\": \"oz\"\n        }\n      }\n    },\n    \"doseNote\": \"THis can contain <b>html</b> tags\",\n    \"wtNote\": \"not for dairy animals\",\n    \"ndc\": \"200-308\",\n    \"generic\": \"OXYTETRACYCLINE\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "3e985e99-b17d-4301-b702-464578b986bd",
                            "name": "The server can not understand the request due to invalid syntax.",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "api",
                                        "labels"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "description": {
                                            "content": "Added as a part of security scheme: apikey",
                                            "type": "text/plain"
                                        },
                                        "key": "X-Auth-Token",
                                        "value": "<API Key>"
                                    }
                                ],
                                "method": "PUT",
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n  \"id\": 1,\n  \"fdaSpecies\": [\n    \"ChickensBroilers\",\n    \"ChickensBroilers\"\n  ],\n  \"diagnosis\": \"pain (colic), symptomatic treatment\",\n  \"dxId\": 2002,\n  \"product\": \"Prevail™ Flunixin Meglumine Injection\",\n  \"route\": \"intr-corporeal\",\n  \"wtMeatHrs\": 22,\n  \"wtMilkHrs\": 5,\n  \"productId\": 1315018,\n  \"_dose\": \"3.0 ml per kg repeat in 6 hours and again in 24 hours\",\n  \"sequenceFunction\": {\n    \"_type\": \"models.SeqSingleDose\"\n  },\n  \"sizeFunction\": {\n    \"_type\": \"models.FixedDoseFunction\",\n    \"dose\": {\n      \"quantity\": {\n        \"dimension\": \"Mass\",\n        \"value\": 3,\n        \"symbol\": \"oz\"\n      }\n    }\n  },\n  \"doseNote\": \"THis can contain <b>html</b> tags\",\n  \"wtNote\": \"not for dairy animals\",\n  \"ndc\": \"200-308\",\n  \"generic\": \"OXYTETRACYCLINE\"\n}",
                                    "options": {
                                        "raw": {
                                            "language": "json"
                                        }
                                    }
                                }
                            },
                            "status": "Bad Request",
                            "code": 400,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"title\": \"incorrect username or password\",\n  \"status\": 404,\n  \"errorType\": \"/errors/incorrect-user-pass\",\n  \"detail\": \"Authentication failed due to incorrect username or password.\",\n  \"instance\": \"/login/log/abc123\"\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "f7511423-7c8b-40ce-85fc-1c5aec59ac21",
                            "name": "Authorization required",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "api",
                                        "labels"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "description": {
                                            "content": "Added as a part of security scheme: apikey",
                                            "type": "text/plain"
                                        },
                                        "key": "X-Auth-Token",
                                        "value": "<API Key>"
                                    }
                                ],
                                "method": "PUT",
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n  \"id\": 1,\n  \"fdaSpecies\": [\n    \"ChickensBroilers\",\n    \"ChickensBroilers\"\n  ],\n  \"diagnosis\": \"pain (colic), symptomatic treatment\",\n  \"dxId\": 2002,\n  \"product\": \"Prevail™ Flunixin Meglumine Injection\",\n  \"route\": \"intr-corporeal\",\n  \"wtMeatHrs\": 22,\n  \"wtMilkHrs\": 5,\n  \"productId\": 1315018,\n  \"_dose\": \"3.0 ml per kg repeat in 6 hours and again in 24 hours\",\n  \"sequenceFunction\": {\n    \"_type\": \"models.SeqSingleDose\"\n  },\n  \"sizeFunction\": {\n    \"_type\": \"models.FixedDoseFunction\",\n    \"dose\": {\n      \"quantity\": {\n        \"dimension\": \"Mass\",\n        \"value\": 3,\n        \"symbol\": \"oz\"\n      }\n    }\n  },\n  \"doseNote\": \"THis can contain <b>html</b> tags\",\n  \"wtNote\": \"not for dairy animals\",\n  \"ndc\": \"200-308\",\n  \"generic\": \"OXYTETRACYCLINE\"\n}",
                                    "options": {
                                        "raw": {
                                            "language": "json"
                                        }
                                    }
                                }
                            },
                            "status": "Forbidden",
                            "code": 403,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "text/plain"
                                }
                            ],
                            "body": "",
                            "cookie": [],
                            "_postman_previewlanguage": "text"
                        }
                    ],
                    "event": [],
                    "protocolProfileBehavior": {
                        "disableBodyPruning": true
                    }
                },
                {
                    "id": "e6247721-a17c-4d7d-a806-e735b1038c45",
                    "name": "create help screen",
                    "request": {
                        "name": "create help screen",
                        "description": {
                            "content": "update a labelclaim.",
                            "type": "text/plain"
                        },
                        "url": {
                            "path": [
                                "api",
                                "labels",
                                ":id"
                            ],
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "query": [],
                            "variable": [
                                {
                                    "disabled": false,
                                    "type": "any",
                                    "value": "-41001206",
                                    "key": "id",
                                    "description": "(Required) labelclaim id"
                                }
                            ]
                        },
                        "header": [
                            {
                                "key": "Content-Type",
                                "value": "application/json"
                            },
                            {
                                "key": "Accept",
                                "value": "application/json"
                            }
                        ],
                        "method": "PUT",
                        "auth": null,
                        "body": {
                            "mode": "raw",
                            "raw": "{\n  \"id\": 1,\n  \"fdaSpecies\": [\n    \"ChickensBroilers\",\n    \"ChickensBroilers\"\n  ],\n  \"diagnosis\": \"pain (colic), symptomatic treatment\",\n  \"dxId\": 2002,\n  \"product\": \"Prevail™ Flunixin Meglumine Injection\",\n  \"route\": \"intr-corporeal\",\n  \"wtMeatHrs\": 22,\n  \"wtMilkHrs\": 5,\n  \"productId\": 1315018,\n  \"_dose\": \"3.0 ml per kg repeat in 6 hours and again in 24 hours\",\n  \"sequenceFunction\": {\n    \"_type\": \"models.SeqSingleDose\"\n  },\n  \"sizeFunction\": {\n    \"_type\": \"models.FixedDoseFunction\",\n    \"dose\": {\n      \"quantity\": {\n        \"dimension\": \"Mass\",\n        \"value\": 3,\n        \"symbol\": \"oz\"\n      }\n    }\n  },\n  \"doseNote\": \"THis can contain <b>html</b> tags\",\n  \"wtNote\": \"not for dairy animals\",\n  \"ndc\": \"200-308\",\n  \"generic\": \"OXYTETRACYCLINE\"\n}",
                            "options": {
                                "raw": {
                                    "language": "json"
                                }
                            }
                        }
                    },
                    "response": [
                        {
                            "id": "52f11ebd-bba6-488a-a86d-50b533ec17d7",
                            "name": "Success –  labelclaim updated",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "api",
                                        "labels",
                                        ":id"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": [
                                        {
                                            "disabled": false,
                                            "type": "any",
                                            "value": "-41001206",
                                            "key": "id",
                                            "description": "(Required) labelclaim id"
                                        }
                                    ]
                                },
                                "header": [
                                    {
                                        "description": {
                                            "content": "Added as a part of security scheme: apikey",
                                            "type": "text/plain"
                                        },
                                        "key": "X-Auth-Token",
                                        "value": "<API Key>"
                                    }
                                ],
                                "method": "PUT",
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n  \"id\": 1,\n  \"fdaSpecies\": [\n    \"ChickensBroilers\",\n    \"ChickensBroilers\"\n  ],\n  \"diagnosis\": \"pain (colic), symptomatic treatment\",\n  \"dxId\": 2002,\n  \"product\": \"Prevail™ Flunixin Meglumine Injection\",\n  \"route\": \"intr-corporeal\",\n  \"wtMeatHrs\": 22,\n  \"wtMilkHrs\": 5,\n  \"productId\": 1315018,\n  \"_dose\": \"3.0 ml per kg repeat in 6 hours and again in 24 hours\",\n  \"sequenceFunction\": {\n    \"_type\": \"models.SeqSingleDose\"\n  },\n  \"sizeFunction\": {\n    \"_type\": \"models.FixedDoseFunction\",\n    \"dose\": {\n      \"quantity\": {\n        \"dimension\": \"Mass\",\n        \"value\": 3,\n        \"symbol\": \"oz\"\n      }\n    }\n  },\n  \"doseNote\": \"THis can contain <b>html</b> tags\",\n  \"wtNote\": \"not for dairy animals\",\n  \"ndc\": \"200-308\",\n  \"generic\": \"OXYTETRACYCLINE\"\n}",
                                    "options": {
                                        "raw": {
                                            "language": "json"
                                        }
                                    }
                                }
                            },
                            "status": "OK",
                            "code": 200,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"protocol\": {\n    \"id\": 1,\n    \"fdaSpecies\": [\n      \"ChickensBroilers\",\n      \"ChickensBroilers\"\n    ],\n    \"diagnosis\": \"pain (colic), symptomatic treatment\",\n    \"dxId\": 2002,\n    \"product\": \"Prevail™ Flunixin Meglumine Injection\",\n    \"route\": \"intr-corporeal\",\n    \"wtMeatHrs\": 22,\n    \"wtMilkHrs\": 5,\n    \"productId\": 1315018,\n    \"_dose\": \"3.0 ml per kg repeat in 6 hours and again in 24 hours\",\n    \"sequenceFunction\": {\n      \"_type\": \"models.SeqSingleDose\"\n    },\n    \"sizeFunction\": {\n      \"_type\": \"models.FixedDoseFunction\",\n      \"dose\": {\n        \"quantity\": {\n          \"dimension\": \"Mass\",\n          \"value\": 3,\n          \"symbol\": \"oz\"\n        }\n      }\n    },\n    \"doseNote\": \"THis can contain <b>html</b> tags\",\n    \"wtNote\": \"not for dairy animals\",\n    \"ndc\": \"200-308\",\n    \"generic\": \"OXYTETRACYCLINE\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "d1767f48-dae2-4ef9-a788-4b099c3987e3",
                            "name": "The server can not understand the request due to invalid syntax.",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "api",
                                        "labels",
                                        ":id"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": [
                                        {
                                            "disabled": false,
                                            "type": "any",
                                            "value": "-41001206",
                                            "key": "id",
                                            "description": "(Required) labelclaim id"
                                        }
                                    ]
                                },
                                "header": [
                                    {
                                        "description": {
                                            "content": "Added as a part of security scheme: apikey",
                                            "type": "text/plain"
                                        },
                                        "key": "X-Auth-Token",
                                        "value": "<API Key>"
                                    }
                                ],
                                "method": "PUT",
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n  \"id\": 1,\n  \"fdaSpecies\": [\n    \"ChickensBroilers\",\n    \"ChickensBroilers\"\n  ],\n  \"diagnosis\": \"pain (colic), symptomatic treatment\",\n  \"dxId\": 2002,\n  \"product\": \"Prevail™ Flunixin Meglumine Injection\",\n  \"route\": \"intr-corporeal\",\n  \"wtMeatHrs\": 22,\n  \"wtMilkHrs\": 5,\n  \"productId\": 1315018,\n  \"_dose\": \"3.0 ml per kg repeat in 6 hours and again in 24 hours\",\n  \"sequenceFunction\": {\n    \"_type\": \"models.SeqSingleDose\"\n  },\n  \"sizeFunction\": {\n    \"_type\": \"models.FixedDoseFunction\",\n    \"dose\": {\n      \"quantity\": {\n        \"dimension\": \"Mass\",\n        \"value\": 3,\n        \"symbol\": \"oz\"\n      }\n    }\n  },\n  \"doseNote\": \"THis can contain <b>html</b> tags\",\n  \"wtNote\": \"not for dairy animals\",\n  \"ndc\": \"200-308\",\n  \"generic\": \"OXYTETRACYCLINE\"\n}",
                                    "options": {
                                        "raw": {
                                            "language": "json"
                                        }
                                    }
                                }
                            },
                            "status": "Bad Request",
                            "code": 400,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"title\": \"incorrect username or password\",\n  \"status\": 404,\n  \"errorType\": \"/errors/incorrect-user-pass\",\n  \"detail\": \"Authentication failed due to incorrect username or password.\",\n  \"instance\": \"/login/log/abc123\"\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "580a4930-1530-41ff-ad5a-793dd0726f64",
                            "name": "Authorization required",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "api",
                                        "labels",
                                        ":id"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": [
                                        {
                                            "disabled": false,
                                            "type": "any",
                                            "value": "-41001206",
                                            "key": "id",
                                            "description": "(Required) labelclaim id"
                                        }
                                    ]
                                },
                                "header": [
                                    {
                                        "description": {
                                            "content": "Added as a part of security scheme: apikey",
                                            "type": "text/plain"
                                        },
                                        "key": "X-Auth-Token",
                                        "value": "<API Key>"
                                    }
                                ],
                                "method": "PUT",
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n  \"id\": 1,\n  \"fdaSpecies\": [\n    \"ChickensBroilers\",\n    \"ChickensBroilers\"\n  ],\n  \"diagnosis\": \"pain (colic), symptomatic treatment\",\n  \"dxId\": 2002,\n  \"product\": \"Prevail™ Flunixin Meglumine Injection\",\n  \"route\": \"intr-corporeal\",\n  \"wtMeatHrs\": 22,\n  \"wtMilkHrs\": 5,\n  \"productId\": 1315018,\n  \"_dose\": \"3.0 ml per kg repeat in 6 hours and again in 24 hours\",\n  \"sequenceFunction\": {\n    \"_type\": \"models.SeqSingleDose\"\n  },\n  \"sizeFunction\": {\n    \"_type\": \"models.FixedDoseFunction\",\n    \"dose\": {\n      \"quantity\": {\n        \"dimension\": \"Mass\",\n        \"value\": 3,\n        \"symbol\": \"oz\"\n      }\n    }\n  },\n  \"doseNote\": \"THis can contain <b>html</b> tags\",\n  \"wtNote\": \"not for dairy animals\",\n  \"ndc\": \"200-308\",\n  \"generic\": \"OXYTETRACYCLINE\"\n}",
                                    "options": {
                                        "raw": {
                                            "language": "json"
                                        }
                                    }
                                }
                            },
                            "status": "Forbidden",
                            "code": 403,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "text/plain"
                                }
                            ],
                            "body": "",
                            "cookie": [],
                            "_postman_previewlanguage": "text"
                        }
                    ],
                    "event": [],
                    "protocolProfileBehavior": {
                        "disableBodyPruning": true
                    }
                },
                {
                    "id": "3fd24580-2ec5-4148-a002-23dfeffa7929",
                    "name": "get SPL",
                    "request": {
                        "name": "get SPL",
                        "description": {},
                        "url": {
                            "path": [
                                "api",
                                "admin",
                                "spl",
                                ":ndc"
                            ],
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "query": [],
                            "variable": [
                                {
                                    "disabled": false,
                                    "type": "any",
                                    "value": "0061-4321-03",
                                    "key": "ndc",
                                    "description": "(Required) unique 10-digit, 3-segment number. labelerCode-productCode-packageCode"
                                }
                            ]
                        },
                        "method": "GET",
                        "auth": null
                    },
                    "response": [
                        {
                            "id": "b86ae52a-32cb-46bf-83b1-26255c558d32",
                            "name": "Authorization required",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "api",
                                        "admin",
                                        "spl",
                                        ":ndc"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": [
                                        {
                                            "disabled": false,
                                            "type": "any",
                                            "value": "0061-4321-03",
                                            "key": "ndc",
                                            "description": "(Required) unique 10-digit, 3-segment number. labelerCode-productCode-packageCode"
                                        }
                                    ]
                                },
                                "header": [
                                    {
                                        "description": {
                                            "content": "Added as a part of security scheme: apikey",
                                            "type": "text/plain"
                                        },
                                        "key": "X-Auth-Token",
                                        "value": "<API Key>"
                                    }
                                ],
                                "method": "GET",
                                "body": {}
                            },
                            "status": "Unauthorized",
                            "code": 401,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "text/plain"
                                }
                            ],
                            "body": "",
                            "cookie": [],
                            "_postman_previewlanguage": "text"
                        }
                    ],
                    "event": []
                },
                {
                    "id": "40682b70-ebbd-4a09-9683-ebaa93fda138",
                    "name": "greenbook drugs",
                    "request": {
                        "name": "greenbook drugs",
                        "description": {
                            "content": "Return GBDs.",
                            "type": "text/plain"
                        },
                        "url": {
                            "path": [
                                "api",
                                "admin",
                                "gbd"
                            ],
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "query": [
                                {
                                    "disabled": false,
                                    "key": "ndcProd",
                                    "value": "-41001206",
                                    "description": "first section labeler code of a NDC"
                                },
                                {
                                    "disabled": false,
                                    "key": "ndcLabeler",
                                    "value": "-41001206",
                                    "description": "mid section product code of a NDC"
                                },
                                {
                                    "disabled": false,
                                    "key": "ndcBrand",
                                    "value": "-41001206",
                                    "description": "starting row number in GBD table"
                                },
                                {
                                    "disabled": false,
                                    "key": "offset",
                                    "value": "-41001206",
                                    "description": "maximum number of rows to return"
                                },
                                {
                                    "disabled": false,
                                    "key": "eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJleUp3Y205MmFXUmxja2xFSWpvaVkzSmxaR1Z1ZEdsaGJITWlMQ0p3Y205MmFXUmxja3RsZVNJNkluUmxjM1JXVDFJaWZRPT0iLCJpc3MiOiJwbGF5LXNpbGhvdWV0dGUiLCJle***...",
                                    "value": "-41001206",
                                    "description": "end section package code of a NDC"
                                }
                            ],
                            "variable": []
                        },
                        "header": [
                            {
                                "key": "Accept",
                                "value": "application/json"
                            }
                        ],
                        "method": "GET",
                        "auth": null
                    },
                    "response": [
                        {
                            "id": "a961ca85-f3a1-4b79-b283-e09d536faa14",
                            "name": "OK",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "api",
                                        "admin",
                                        "gbd"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [
                                        {
                                            "key": "ndcProd",
                                            "value": "-41001206"
                                        },
                                        {
                                            "key": "ndcLabeler",
                                            "value": "-41001206"
                                        },
                                        {
                                            "key": "ndcBrand",
                                            "value": "-41001206"
                                        },
                                        {
                                            "key": "offset",
                                            "value": "-41001206"
                                        },
                                        {
                                            "key": "eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJleUp3Y205MmFXUmxja2xFSWpvaVkzSmxaR1Z1ZEdsaGJITWlMQ0p3Y205MmFXUmxja3RsZVNJNkluUmxjM1JXVDFJaWZRPT0iLCJpc3MiOiJwbGF5LXNpbGhvdWV0dGUiLCJle***...",
                                            "value": "-41001206"
                                        }
                                    ],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "description": {
                                            "content": "Added as a part of security scheme: apikey",
                                            "type": "text/plain"
                                        },
                                        "key": "X-Auth-Token",
                                        "value": "<API Key>"
                                    }
                                ],
                                "method": "GET",
                                "body": {}
                            },
                            "status": "OK",
                            "code": 200,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "[\n  {\n    \"ndc\": \"0010-3495\",\n    \"proprietery\": \"Bio-Mycin 200\",\n    \"nonProp\": \"OXYTETRACYCLINE\",\n    \"ingredients\": \"OXYTETRACYCLINE\",\n    \"labeler\": \"Boehringer Ingelheim Vetmedica, Inc.\",\n    \"productType\": \"OTC ANIMAL DRUG\",\n    \"marketCat\": \"ANADA\",\n    \"appNumber\": \"ANADA200008\",\n    \"link\": \"https://www.accessdata.fda.gov/spl/data/c9491ada-6813-4548-8872-57bb38a58feb/c9491ada-6813-4548-8872-57bb38a58feb.xml\",\n    \"status\": 0,\n    \"lastChanged\": \"2020-05-16T16:19:12Z\"\n  },\n  {\n    \"ndc\": \"0010-3495\",\n    \"proprietery\": \"Bio-Mycin 200\",\n    \"nonProp\": \"OXYTETRACYCLINE\",\n    \"ingredients\": \"OXYTETRACYCLINE\",\n    \"labeler\": \"Boehringer Ingelheim Vetmedica, Inc.\",\n    \"productType\": \"OTC ANIMAL DRUG\",\n    \"marketCat\": \"ANADA\",\n    \"appNumber\": \"ANADA200008\",\n    \"link\": \"https://www.accessdata.fda.gov/spl/data/c9491ada-6813-4548-8872-57bb38a58feb/c9491ada-6813-4548-8872-57bb38a58feb.xml\",\n    \"status\": 0,\n    \"lastChanged\": \"2020-05-16T16:19:12Z\"\n  }\n]",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        }
                    ],
                    "event": []
                },
                {
                    "id": "0f5fabe9-2a95-4345-b1b1-c40df5699d4c",
                    "name": "update GBD",
                    "request": {
                        "name": "update GBD",
                        "description": {
                            "content": "M",
                            "type": "text/plain"
                        },
                        "url": {
                            "path": [
                                "api",
                                "admin",
                                "gbd"
                            ],
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "query": [],
                            "variable": []
                        },
                        "header": [
                            {
                                "key": "Content-Type",
                                "value": "application/json"
                            },
                            {
                                "key": "Accept",
                                "value": "application/json"
                            }
                        ],
                        "method": "PUT",
                        "auth": null,
                        "body": {
                            "mode": "raw",
                            "raw": "{\n  \"ndc\": \"0010-3495\",\n  \"proprietery\": \"Bio-Mycin 200\",\n  \"nonProp\": \"OXYTETRACYCLINE\",\n  \"ingredients\": \"OXYTETRACYCLINE\",\n  \"labeler\": \"Boehringer Ingelheim Vetmedica, Inc.\",\n  \"productType\": \"OTC ANIMAL DRUG\",\n  \"marketCat\": \"ANADA\",\n  \"appNumber\": \"ANADA200008\",\n  \"link\": \"https://www.accessdata.fda.gov/spl/data/c9491ada-6813-4548-8872-57bb38a58feb/c9491ada-6813-4548-8872-57bb38a58feb.xml\",\n  \"status\": 0,\n  \"lastChanged\": \"2020-05-16T16:19:12Z\"\n}",
                            "options": {
                                "raw": {
                                    "language": "json"
                                }
                            }
                        }
                    },
                    "response": [
                        {
                            "id": "1ccb99b4-1643-4934-80f5-7dd8334c9d75",
                            "name": "Success, GreenbookDrug updated",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "api",
                                        "admin",
                                        "gbd"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "description": {
                                            "content": "Added as a part of security scheme: apikey",
                                            "type": "text/plain"
                                        },
                                        "key": "X-Auth-Token",
                                        "value": "<API Key>"
                                    }
                                ],
                                "method": "PUT",
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n  \"ndc\": \"0010-3495\",\n  \"proprietery\": \"Bio-Mycin 200\",\n  \"nonProp\": \"OXYTETRACYCLINE\",\n  \"ingredients\": \"OXYTETRACYCLINE\",\n  \"labeler\": \"Boehringer Ingelheim Vetmedica, Inc.\",\n  \"productType\": \"OTC ANIMAL DRUG\",\n  \"marketCat\": \"ANADA\",\n  \"appNumber\": \"ANADA200008\",\n  \"link\": \"https://www.accessdata.fda.gov/spl/data/c9491ada-6813-4548-8872-57bb38a58feb/c9491ada-6813-4548-8872-57bb38a58feb.xml\",\n  \"status\": 0,\n  \"lastChanged\": \"2020-05-16T16:19:12Z\"\n}",
                                    "options": {
                                        "raw": {
                                            "language": "json"
                                        }
                                    }
                                }
                            },
                            "status": "OK",
                            "code": 200,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"case\": {\n    \"ndc\": \"0010-3495\",\n    \"proprietery\": \"Bio-Mycin 200\",\n    \"nonProp\": \"OXYTETRACYCLINE\",\n    \"ingredients\": \"OXYTETRACYCLINE\",\n    \"labeler\": \"Boehringer Ingelheim Vetmedica, Inc.\",\n    \"productType\": \"OTC ANIMAL DRUG\",\n    \"marketCat\": \"ANADA\",\n    \"appNumber\": \"ANADA200008\",\n    \"link\": \"https://www.accessdata.fda.gov/spl/data/c9491ada-6813-4548-8872-57bb38a58feb/c9491ada-6813-4548-8872-57bb38a58feb.xml\",\n    \"status\": 0,\n    \"lastChanged\": \"2020-05-16T16:19:12Z\"\n  }\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        },
                        {
                            "id": "b9c56d8c-3996-4aa8-9fe0-207c8202d29d",
                            "name": "The server can not understand the request due to invalid syntax.",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "api",
                                        "admin",
                                        "gbd"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": []
                                },
                                "header": [
                                    {
                                        "description": {
                                            "content": "Added as a part of security scheme: apikey",
                                            "type": "text/plain"
                                        },
                                        "key": "X-Auth-Token",
                                        "value": "<API Key>"
                                    }
                                ],
                                "method": "PUT",
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n  \"ndc\": \"0010-3495\",\n  \"proprietery\": \"Bio-Mycin 200\",\n  \"nonProp\": \"OXYTETRACYCLINE\",\n  \"ingredients\": \"OXYTETRACYCLINE\",\n  \"labeler\": \"Boehringer Ingelheim Vetmedica, Inc.\",\n  \"productType\": \"OTC ANIMAL DRUG\",\n  \"marketCat\": \"ANADA\",\n  \"appNumber\": \"ANADA200008\",\n  \"link\": \"https://www.accessdata.fda.gov/spl/data/c9491ada-6813-4548-8872-57bb38a58feb/c9491ada-6813-4548-8872-57bb38a58feb.xml\",\n  \"status\": 0,\n  \"lastChanged\": \"2020-05-16T16:19:12Z\"\n}",
                                    "options": {
                                        "raw": {
                                            "language": "json"
                                        }
                                    }
                                }
                            },
                            "status": "Bad Request",
                            "code": 400,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "body": "{\n  \"title\": \"incorrect username or password\",\n  \"status\": 404,\n  \"errorType\": \"/errors/incorrect-user-pass\",\n  \"detail\": \"Authentication failed due to incorrect username or password.\",\n  \"instance\": \"/login/log/abc123\"\n}",
                            "cookie": [],
                            "_postman_previewlanguage": "json"
                        }
                    ],
                    "event": [],
                    "protocolProfileBehavior": {
                        "disableBodyPruning": true
                    }
                },
                {
                    "id": "9e1d34c2-56f6-442d-8914-f227b4a1357d",
                    "name": "get Greenbook Drug",
                    "request": {
                        "name": "get Greenbook Drug",
                        "description": {},
                        "url": {
                            "path": [
                                "api",
                                "admin",
                                "gbd",
                                ":ndc"
                            ],
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "query": [],
                            "variable": [
                                {
                                    "disabled": false,
                                    "type": "any",
                                    "value": "0061-4321-03",
                                    "key": "ndc",
                                    "description": "(Required) unique 10-digit, 3-segment number. labelerCode-productCode-packageCode"
                                }
                            ]
                        },
                        "method": "GET",
                        "auth": null
                    },
                    "response": [
                        {
                            "id": "4ea56525-940b-4b57-a7f2-88a02c058eb5",
                            "name": "Authorization required",
                            "originalRequest": {
                                "url": {
                                    "path": [
                                        "api",
                                        "admin",
                                        "gbd",
                                        ":ndc"
                                    ],
                                    "host": [
                                        "{{baseUrl}}"
                                    ],
                                    "query": [],
                                    "variable": [
                                        {
                                            "disabled": false,
                                            "type": "any",
                                            "value": "0061-4321-03",
                                            "key": "ndc",
                                            "description": "(Required) unique 10-digit, 3-segment number. labelerCode-productCode-packageCode"
                                        }
                                    ]
                                },
                                "header": [
                                    {
                                        "description": {
                                            "content": "Added as a part of security scheme: apikey",
                                            "type": "text/plain"
                                        },
                                        "key": "X-Auth-Token",
                                        "value": "<API Key>"
                                    }
                                ],
                                "method": "GET",
                                "body": {}
                            },
                            "status": "Unauthorized",
                            "code": 401,
                            "header": [
                                {
                                    "key": "Content-Type",
                                    "value": "text/plain"
                                }
                            ],
                            "body": "",
                            "cookie": [],
                            "_postman_previewlanguage": "text"
                        }
                    ],
                    "event": []
                }
            ],
            "event": []
        },
        {
            "id": "69cc62fe-8d7a-41f2-8e5d-29f7aea77fef",
            "name": "TOR",
            "description": {
                "content": "available to farm employees.",
                "type": "text/plain"
            },
            "item": [],
            "event": []
        },
        {
            "id": "c4771609-0084-4544-b2c2-1ad8d634921c",
            "name": "LOR",
            "description": {
                "content": "available to pharmacy curators.",
                "type": "text/plain"
            },
            "item": [],
            "event": []
        },
        {
            "id": "19bf53d7-56b6-4186-8955-10ab747292ad",
            "name": "FARM",
            "description": {
                "content": "available to farm accounts.",
                "type": "text/plain"
            },
            "item": [],
            "event": []
        },
        {
            "id": "bf63ce44-fdcd-411a-a803-1d536bbfb94a",
            "name": "CLINIC",
            "description": {
                "content": "available to vet clinic accounts.",
                "type": "text/plain"
            },
            "item": [],
            "event": []
        },
        {
            "id": "f9e7ea14-b64d-4e5f-a939-4173ee7fad5a",
            "name": "User",
            "description": {
                "content": "Endpoints and models related to user management.",
                "type": "text/plain"
            },
            "item": [],
            "event": []
        },
        {
            "id": "9a44f702-111c-416b-9efc-2714320a714b",
            "name": "Protocol",
            "description": {
                "content": "Endpoints and models related to protocol management.",
                "type": "text/plain"
            },
            "item": [],
            "event": []
        },
        {
            "id": "52129a20-b72f-4997-97ec-7b6cb7c1a5a4",
            "name": "Prescription",
            "description": {
                "content": "Endpoints and models related to prescription management.",
                "type": "text/plain"
            },
            "item": [],
            "event": []
        },
        {
            "id": "f8fffad3-55ff-40ec-b815-788829ba718e",
            "name": "Case",
            "description": {
                "content": "Endpoints and models related to case management.",
                "type": "text/plain"
            },
            "item": [],
            "event": []
        },
        {
            "id": "e5a00114-1c61-4c54-8d9c-f53e04e71a95",
            "name": "Promise",
            "description": {
                "content": "Endpoints and models related to promise management.",
                "type": "text/plain"
            },
            "item": [],
            "event": []
        },
        {
            "id": "6e5a886a-1629-45a4-a2b1-730a5fd9d53e",
            "name": "create profile",
            "request": {
                "name": "create profile",
                "description": {
                    "content": "Create a User with Address, and UserPrefs.",
                    "type": "text/plain"
                },
                "url": {
                    "path": [
                        "api",
                        "users",
                        "profiles"
                    ],
                    "host": [
                        "{{baseUrl}}"
                    ],
                    "query": [],
                    "variable": []
                },
                "header": [
                    {
                        "key": "Content-Type",
                        "value": "application/json"
                    },
                    {
                        "key": "Accept",
                        "value": "application/json"
                    }
                ],
                "method": "POST",
                "auth": null,
                "body": {
                    "mode": "raw",
                    "raw": "{\n  \"user\": {\n    \"address1\": \"123 Main St.\",\n    \"address2\": \"123 Main St.\",\n    \"emailNews\": false,\n    \"emailTips\": false,\n    \"firstname\": \"Example\",\n    \"id\": 1,\n    \"lastname\": \"User\",\n    \"rxHeader\": \"anim sit amet\",\n    \"sandboxName\": \"ipsum cillum proident ea repr\",\n    \"state\": \"Any State\",\n    \"town\": \"Anytown\",\n    \"uname\": \"exampleUser\",\n    \"userId\": 48836980,\n    \"userType\": \"VOR\",\n    \"zip\": \"12345-abcd\",\n    \"email\": \"exampleUser@email.com\",\n    \"suffix\": \"DVM\",\n    \"busName\": \"testVOR Clinic\",\n    \"country\": \"USA\"\n  }\n}",
                    "options": {
                        "raw": {
                            "language": "json"
                        }
                    }
                }
            },
            "response": [
                {
                    "id": "b9d2e1e8-b828-4389-88cd-2c0fd2c2d670",
                    "name": "the created Profile",
                    "originalRequest": {
                        "url": {
                            "path": [
                                "api",
                                "users",
                                "profiles"
                            ],
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "query": [],
                            "variable": []
                        },
                        "header": [
                            {
                                "description": {
                                    "content": "Added as a part of security scheme: apikey",
                                    "type": "text/plain"
                                },
                                "key": "X-Auth-Token",
                                "value": "<API Key>"
                            }
                        ],
                        "method": "POST",
                        "body": {
                            "mode": "raw",
                            "raw": "{\n  \"user\": {\n    \"address1\": \"123 Main St.\",\n    \"address2\": \"123 Main St.\",\n    \"emailNews\": false,\n    \"emailTips\": false,\n    \"firstname\": \"Example\",\n    \"id\": 1,\n    \"lastname\": \"User\",\n    \"rxHeader\": \"anim sit amet\",\n    \"sandboxName\": \"ipsum cillum proident ea repr\",\n    \"state\": \"Any State\",\n    \"town\": \"Anytown\",\n    \"uname\": \"exampleUser\",\n    \"userId\": 48836980,\n    \"userType\": \"VOR\",\n    \"zip\": \"12345-abcd\",\n    \"email\": \"exampleUser@email.com\",\n    \"suffix\": \"DVM\",\n    \"busName\": \"testVOR Clinic\",\n    \"country\": \"USA\"\n  }\n}",
                            "options": {
                                "raw": {
                                    "language": "json"
                                }
                            }
                        }
                    },
                    "status": "OK",
                    "code": 200,
                    "header": [
                        {
                            "key": "Content-Type",
                            "value": "application/json"
                        }
                    ],
                    "body": "{\n  \"address1\": \"123 Main St.\",\n  \"address2\": \"123 Main St.\",\n  \"emailNews\": false,\n  \"emailTips\": false,\n  \"firstname\": \"Example\",\n  \"id\": 1,\n  \"lastname\": \"User\",\n  \"rxHeader\": \"dolor dolor\",\n  \"sandboxName\": \"in mollit ex\",\n  \"state\": \"Any State\",\n  \"town\": \"Anytown\",\n  \"uname\": \"exampleUser\",\n  \"userId\": -57419456,\n  \"userType\": \"VOR\",\n  \"zip\": \"12345-abcd\",\n  \"email\": \"exampleUser@email.com\",\n  \"suffix\": \"DVM\",\n  \"busName\": \"testVOR Clinic\",\n  \"country\": \"USA\"\n}",
                    "cookie": [],
                    "_postman_previewlanguage": "json"
                },
                {
                    "id": "56b455f9-e7f1-406f-9219-e045d7ed89f8",
                    "name": "Authorization required",
                    "originalRequest": {
                        "url": {
                            "path": [
                                "api",
                                "users",
                                "profiles"
                            ],
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "query": [],
                            "variable": []
                        },
                        "header": [
                            {
                                "description": {
                                    "content": "Added as a part of security scheme: apikey",
                                    "type": "text/plain"
                                },
                                "key": "X-Auth-Token",
                                "value": "<API Key>"
                            }
                        ],
                        "method": "POST",
                        "body": {
                            "mode": "raw",
                            "raw": "{\n  \"user\": {\n    \"address1\": \"123 Main St.\",\n    \"address2\": \"123 Main St.\",\n    \"emailNews\": false,\n    \"emailTips\": false,\n    \"firstname\": \"Example\",\n    \"id\": 1,\n    \"lastname\": \"User\",\n    \"rxHeader\": \"anim sit amet\",\n    \"sandboxName\": \"ipsum cillum proident ea repr\",\n    \"state\": \"Any State\",\n    \"town\": \"Anytown\",\n    \"uname\": \"exampleUser\",\n    \"userId\": 48836980,\n    \"userType\": \"VOR\",\n    \"zip\": \"12345-abcd\",\n    \"email\": \"exampleUser@email.com\",\n    \"suffix\": \"DVM\",\n    \"busName\": \"testVOR Clinic\",\n    \"country\": \"USA\"\n  }\n}",
                            "options": {
                                "raw": {
                                    "language": "json"
                                }
                            }
                        }
                    },
                    "status": "Unauthorized",
                    "code": 401,
                    "header": [
                        {
                            "key": "Content-Type",
                            "value": "text/plain"
                        }
                    ],
                    "body": "",
                    "cookie": [],
                    "_postman_previewlanguage": "text"
                }
            ],
            "event": [],
            "protocolProfileBehavior": {
                "disableBodyPruning": true
            }
        }
    ],
    "event": [],
    "variable": [
        {
            "type": "string",
            "value": "https://VCPR.ORG",
            "key": "baseUrl"
        },
        {
            "disabled": false,
            "description": {
                "content": "(Required) ",
                "type": "text/plain"
            },
            "type": "any",
            "value": "-41001206",
            "key": "id"
        }
    ],
    "auth": {
        "type": "apikey",
        "apikey": [
            {
                "key": "key",
                "value": "X-Auth-Token"
            },
            {
                "key": "value",
                "value": "<API Key>"
            },
            {
                "key": "in",
                "value": "header"
            }
        ]
    },
    "info": {
        "_postman_id": "12c16772-2a56-451f-8d7e-ee81356cb3a1",
        "name": "PublicAPI",
        "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
        "description": {
            "content": "API serving the Veterinary Protocol Manager&trade; application. &copy; DairySight LLC, Argyle NY 2020\n\nContact Support:\n Name: Jim Ehrlich, DVM\n Email: jehrlich@vcpr.org",
            "type": "text/plain"
        }
    }
}